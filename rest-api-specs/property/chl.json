{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "title": "OPERA Cloud Channel Configuration API",
    "version": "23.2",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality-integrations_ww@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "basePath": "/chl/v1",
  "paths": {
    "/availability/summary": {
      "get": {
        "description": "Operation to Fetch the Regional Rate Parity. <p><strong>OperationId:</strong>getRegionalRateParity</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Availability"
        ],
        "summary": "Gets the regional rate parity",
        "operationId": "getRegionalRateParity",
        "parameters": [
          {
            "type": "string",
            "description": "Language identification.",
            "name": "language",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "numberOfDays",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channelCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "ratePlanCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channelRatePlanCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "chainCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "rateAccessCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "qualifyingProfileCategory",
            "in": "query"
          },
          {
            "type": "string",
            "name": "qualifyingProfileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to fetch regional rate parity.",
            "schema": {
              "$ref": "#/definitions/regionalRateParity"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RegionalRateParity not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels": {
      "get": {
        "description": "Use this API to get list of channels from OPERA. <p><strong>OperationId:</strong>getChannels</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets list of channels",
        "operationId": "getChannels",
        "parameters": [
          {
            "type": "boolean",
            "description": "Indicates whether searching for active or inactive codes.",
            "name": "inactive",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system code to be searched. This is also known as Booking Channel Code for CHANNEL external system type.",
            "name": "channelCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system type to be searched. Possible values are CHANNEL, OXI, etc.",
            "name": "systemType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system sub type to be searched. Possible values are GDS, WEB, etc.",
            "name": "systemSubType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system rate type to be searched. Possible values are DAILY, MAX_WEEKLY, etc.",
            "name": "systemRateType",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag whether to include inactive channel or not.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching channels.",
            "schema": {
              "$ref": "#/definitions/channels"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Channels not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update channel configuration <p><strong>OperationId:</strong>putChannels</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Update channel configuration",
        "operationId": "putChannels",
        "parameters": [
          {
            "description": "Request object for changing details of channels.",
            "name": "channels",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channels"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add new channel code in OPERA <p><strong>OperationId:</strong>postChannels</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds new channel",
        "operationId": "postChannels",
        "parameters": [
          {
            "description": "Request object for creating channels.",
            "name": "channels",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channels"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/account/contracts": {
      "delete": {
        "description": "This API deletes channel account contracts. <p><strong>OperationId:</strong>deleteChannelAccountContracts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes channel account contracts.",
        "operationId": "deleteChannelAccountContracts",
        "parameters": [
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id1",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension1",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext1",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type1",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/account/contracts/copy": {
      "put": {
        "description": "This API creates copy of channel account contracts. <p><strong>OperationId:</strong>copyChannelAccountContracts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Creates copy of channel account contracts",
        "operationId": "copyChannelAccountContracts",
        "parameters": [
          {
            "description": "Request object to copy the channel account contract and create a new contract.",
            "name": "channelAccountContractsCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelAccountContractsCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object of the Channel account contract copy request.",
            "schema": {
              "$ref": "#/definitions/channelAccountContractsDetailsCopy"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/accounts": {
      "get": {
        "description": "This API retrieves channel accounts. <p><strong>OperationId:</strong>getChannelAccounts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "This API retrieves channel accounts.",
        "operationId": "getChannelAccounts",
        "parameters": [
          {
            "type": "boolean",
            "description": "Indicator that tells whether to include inactive channel accounts or not.",
            "name": "excludeInactive",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelId",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Property",
              "Chain",
              "Dealer",
              "Subsidiary",
              "Routing",
              "Template"
            ],
            "type": "string",
            "description": "Represents channel account TEMPLATE type.",
            "name": "accountType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Account Name for which details need to be fetched.",
            "name": "accountName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Account Code/No for which details need to be fetched.",
            "name": "accountCode",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "To fetch channel accounts which expires in no., of days.",
            "name": "contractExpInDays",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "attributeName",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Asc",
                "Desc"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "orderType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object of the Channel accounts fetch request.",
            "schema": {
              "$ref": "#/definitions/channelAccountsSummary"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelAccounts not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update existing channel account for a given OPERA profile id <p><strong>OperationId:</strong>putChannelAccounts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel accounts",
        "operationId": "putChannelAccounts",
        "parameters": [
          {
            "description": "Channel account information to create a new channel account.",
            "name": "channelAccountsToChange",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelAccountsToChange"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "This API adds channel accounts. <p><strong>OperationId:</strong>postChannelAccounts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds channel accounts.",
        "operationId": "postChannelAccounts",
        "parameters": [
          {
            "description": "Request object to create the channel accounts.",
            "name": "channelAccounts",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelAccounts"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/accounts/{accountProfileId}": {
      "get": {
        "description": "Use this API to get existing channel account for a given OPERA profile id. <p><strong>OperationId:</strong>getChannelAccount</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets channel accounts",
        "operationId": "getChannelAccount",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies an account profile.",
            "name": "accountProfileId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Providing this flag marks the billing account as recently accessed.",
            "name": "markAsRecentlyAccessed",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "PrimaryDetails",
                "Communication",
                "Contact",
                "Notes",
                "Contracts",
                "Statements",
                "Indicators"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Channel account indicators information.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object of the Channel account fetch request. Contains detailed information for the channel account.",
            "schema": {
              "$ref": "#/definitions/channelAccount"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelAccount not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/accounts/{accountProfileId}/contracts": {
      "put": {
        "description": "Use this API to update existing cannel account contract for a given OPERA profile id <p><strong>OperationId:</strong>putChannelAccountContracts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel account contracts for given profile Id.",
        "operationId": "putChannelAccountContracts",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies an account profile.",
            "name": "accountProfileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to change the channel account contracts.",
            "name": "channelAccountContracts",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelAccountContracts"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "This API adds channel account contracts for given profile Id. <p><strong>OperationId:</strong>postChannelAccountContracts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds channel account contracts for given profile Id.",
        "operationId": "postChannelAccountContracts",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies an account profile.",
            "name": "accountProfileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to create the channel account contracts.",
            "name": "channelAccountContracts",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelAccountContracts"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/accounts/{accountProfileId}/contracts/{contractId}": {
      "get": {
        "description": "Use this API to get existing cannel account contract for a given OPERA profile id. <p><strong>OperationId:</strong>getChannelAccountContractElements</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets channel account contracts for given profile Id.",
        "operationId": "getChannelAccountContractElements",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Contract Id.",
            "name": "contractId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies an account profile.",
            "name": "accountProfileId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "attributeName",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Asc",
                "Desc"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "orderType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object of the channel account contract elements fetch request. Contains detailed information for the channel contract elements.",
            "schema": {
              "$ref": "#/definitions/channelAccountContractElements"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelAccountContractElements not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/amenities": {
      "put": {
        "description": "Use this API to update channel amenities mapping <p><strong>OperationId:</strong>putAmenitiesMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel amenities configuration",
        "operationId": "putAmenitiesMapping",
        "parameters": [
          {
            "description": "Request object for changing external system amenities.",
            "name": "amenities",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/amenities"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add channel amenities mapping <p><strong>OperationId:</strong>postAmenitiesMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds channel amenities configuration",
        "operationId": "postAmenitiesMapping",
        "parameters": [
          {
            "description": "Request object for creating new external system amenities.",
            "name": "amenities",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/amenities"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete channel amenities mapping <p><strong>OperationId:</strong>deleteAmenitiesMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes channel amenities configuration",
        "operationId": "deleteAmenitiesMapping",
        "parameters": [
          {
            "type": "boolean",
            "description": "Indicates whether code is inactive or not.",
            "name": "inactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system code such as TRAVELOCITY, EXPEDIA, etc.",
            "name": "systemCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system subtype such as GDS, WEB, etc.",
            "name": "systemSubType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system type such as CHANNEL, OXI, etc.",
            "name": "systemType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system name.",
            "name": "systemName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cannel Website URL",
            "name": "websiteURL",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Channel Icon URL",
            "name": "iconURL",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Code used inside the OPERA System",
            "name": "localSystemCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Code used in the External System",
            "name": "externalSystemCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Detailed Description of the given entity.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "PropertyFeatures",
                "RoomFeatures",
                "ProductsFeatures",
                "BedCodes"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "User defined logical group name for the amenities.",
            "name": "amenityGroup",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/amenities/mapping": {
      "get": {
        "description": "Use this API to get channel amenities mapping. <p><strong>OperationId:</strong>getAmenitiesMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets channel amenities configuration",
        "operationId": "getAmenitiesMapping",
        "parameters": [
          {
            "type": "boolean",
            "description": "Indicates whether searching for active or inactive codes.",
            "name": "inactive",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system code to be searched. This is also known as Booking Channel Code for CHANNEL external system type.",
            "name": "systemCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system type to be searched. Possible values are CHANNEL, OXI, etc.",
            "name": "systemType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system sub type to be searched. Possible values are GDS, WEB, etc.",
            "name": "systemSubType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system rate type to be searched. Possible values are DAILY, MAX_WEEKLY, etc.",
            "name": "systemRateType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "localSystemCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching external system amenities.",
            "schema": {
              "$ref": "#/definitions/amenitiesMapping"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AmenitiesMapping not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/availability/publish": {
      "put": {
        "description": "This API changes publishes channel availability. <p><strong>OperationId:</strong>publishChannelAvailability</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Publishes channel availability.",
        "operationId": "publishChannelAvailability",
        "parameters": [
          {
            "description": "Request object for publishing rate availability to channels.",
            "name": "channelAvailability",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelAvailability"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/billingStatements": {
      "get": {
        "description": "This API retrieves channel billing statements. <p><strong>OperationId:</strong>getChannelBillingStatements</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Retrieves channel billing statements.",
        "operationId": "getChannelBillingStatements",
        "parameters": [
          {
            "type": "boolean",
            "description": "Indicates whether search results should include locked statements or not. By default, locked statements will be included.",
            "name": "includeLocked",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "statementId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "statementIdType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Begin date of the statement.",
            "name": "beginDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "End date of the statement.",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "profileIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object of the channel billing statements fetch request.",
            "schema": {
              "$ref": "#/definitions/channelBillingStatementSummaries"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelBillingStatements not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update channels billing statements for a given OPERA statement id <p><strong>OperationId:</strong>putChannelBillingStatements</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel billing statement details",
        "operationId": "putChannelBillingStatements",
        "parameters": [
          {
            "description": "Request object to Change channel billing statements.",
            "name": "channelBillingStatements",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelBillingStatements"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "This API adds channel billing statements. <p><strong>OperationId:</strong>postChannelBillingStatements</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds channel billing statements.",
        "operationId": "postChannelBillingStatements",
        "parameters": [
          {
            "description": "Request object to create channel billing statements.",
            "name": "channelBillingStatements",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelBillingStatements"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "This API deletes channel billing statements. <p><strong>OperationId:</strong>deleteChannelBillingStatements</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes channel billing statements.",
        "operationId": "deleteChannelBillingStatements",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/billingStatements/generate": {
      "post": {
        "description": "This API generates channel billing statements. <p><strong>OperationId:</strong>generateChannelBillingStatements</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "This API generates channel billing statements.",
        "operationId": "generateChannelBillingStatements",
        "parameters": [
          {
            "description": "Request object to Generate channel billing statements.",
            "name": "channelBillingStatements",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelBillingStatements"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/billingStatements/{statementId}": {
      "get": {
        "description": "This API retrieves channel billing statement for a given statement Id. <p><strong>OperationId:</strong>getChannelBillingStatement</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Retrieves channel billing statement for a given statement Id",
        "operationId": "getChannelBillingStatement",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Statement Id.",
            "name": "statementId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": "OPERA",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "default": "Statement",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "idType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object of the channel billing statement fetch request.",
            "schema": {
              "$ref": "#/definitions/channelBillingStatement"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelBillingStatement not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/billingStatements/{statementId}/details": {
      "get": {
        "description": "This API retrieves channel billing statement details for a given statement Id. <p><strong>OperationId:</strong>getChannelBillingStatementDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Retrieves channel billing statement details for a given statement Id",
        "operationId": "getChannelBillingStatementDetails",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Statement Id.",
            "name": "statementId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "contractId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "contractIdType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "attributeName",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Asc",
                "Desc"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "orderType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object of the channel account statement details fetch request.",
            "schema": {
              "$ref": "#/definitions/channelBillingStatementDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelBillingStatementDetails not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/billingStatements/{statementId}/statistics": {
      "get": {
        "description": "This API retrieves billing statement details statistics. <p><strong>OperationId:</strong>getStatementDetailsStatistics</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Retrieves billing statement details statistics.",
        "operationId": "getStatementDetailsStatistics",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Statement Id.",
            "name": "statementId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "contractId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "contractIdType",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "ByResort",
                "ByChannel",
                "ByChannelType",
                "ByFeeType"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Type for statement details statistics instructions that can be used in requests for partial operations.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object of the channel account statement details statistics fetch request.",
            "schema": {
              "$ref": "#/definitions/statementDetailsStatistics"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "StatementDetailsStatistics not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/cardType/mappings": {
      "get": {
        "description": "Use this API to get channel mapping for OPERA credit cards to channel for a given hotel id. <p><strong>OperationId:</strong>getChannelCardTypeMappings</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets channel credit card mapping for a hotel",
        "operationId": "getChannelCardTypeMappings",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "bookingChannelCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "cardTypes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channelCardTypes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether search includes inactive mapping.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether unmapped channel-hotel card types should be fetched.",
            "name": "fetchUnmapped",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether mapped channel-hotel card types should be fetched.",
            "name": "fetchMapped",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching channel-hotel card type mappings.",
            "schema": {
              "$ref": "#/definitions/channelCardTypeMappingDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelCardTypeMappings not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/cardTypes": {
      "put": {
        "description": "Use this API to update channel credit card code mapping to OPERA credit card code <p><strong>OperationId:</strong>putCreditCardsMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel credit card mapping",
        "operationId": "putCreditCardsMapping",
        "parameters": [
          {
            "description": "Request object for changing existing external system credit cards.",
            "name": "creditCards",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/creditCards"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add channel mapping for OPERA Credit cards <p><strong>OperationId:</strong>postCreditCardsMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds channel credit card mapping",
        "operationId": "postCreditCardsMapping",
        "parameters": [
          {
            "description": "Request object for creating external system credit cards.",
            "name": "creditCards",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/creditCards"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete channel credit card code mapping to OPERA credit card code. <p><strong>OperationId:</strong>deleteCreditCardsMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes channel credit card mapping",
        "operationId": "deleteCreditCardsMapping",
        "parameters": [
          {
            "type": "boolean",
            "description": "Indicates whether code is inactive or not.",
            "name": "inactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system code such as TRAVELOCITY, EXPEDIA, etc.",
            "name": "systemCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system subtype such as GDS, WEB, etc.",
            "name": "systemSubType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system type such as CHANNEL, OXI, etc.",
            "name": "systemType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system name.",
            "name": "systemName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cannel Website URL",
            "name": "websiteURL",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Channel Icon URL",
            "name": "iconURL",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Code used inside the OPERA System",
            "name": "localSystemCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Code used in the External System",
            "name": "externalSystemCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Detailed Description of the given entity.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/cardTypes/mapping": {
      "get": {
        "description": "Use this API to get channel credit card code mapping to OPERA credit card code. <p><strong>OperationId:</strong>getCreditCardsMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets channel credit card mapping",
        "operationId": "getCreditCardsMapping",
        "parameters": [
          {
            "type": "boolean",
            "description": "Indicates whether searching for active or inactive codes.",
            "name": "inactive",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system code to be searched. This is also known as Booking Channel Code for CHANNEL external system type.",
            "name": "systemCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system type to be searched. Possible values are CHANNEL, OXI, etc.",
            "name": "systemType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system sub type to be searched. Possible values are GDS, WEB, etc.",
            "name": "systemSubType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system rate type to be searched. Possible values are DAILY, MAX_WEEKLY, etc.",
            "name": "systemRateType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "localSystemCodes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether to include inactive guarantees or not.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching external system credit cards.",
            "schema": {
              "$ref": "#/definitions/creditCardsMapping"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CreditCardsMapping not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/confirmationLetters": {
      "get": {
        "description": "Use this API to get channel property confirmation letter configuration <p><strong>OperationId:</strong>getChannelHotelLetters</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets channel property confirmation letter mapping",
        "operationId": "getChannelHotelLetters",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channelCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Language code associated with the hotel letters.",
            "name": "language",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Confirmation",
              "Cancellation",
              "BanquetEventOrder",
              "Contract",
              "Inquiry"
            ],
            "type": "string",
            "description": "Represents Inquiry Letter Type.",
            "name": "letterType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object after fetch Hotel Letters associated with the Booking Channels",
            "schema": {
              "$ref": "#/definitions/fetchedChannelHotelLetters"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelHotelLetters not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update channel property confirmation letter configuration <p><strong>OperationId:</strong>putChannelHotelLetters</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel property confirmation letter mapping",
        "operationId": "putChannelHotelLetters",
        "parameters": [
          {
            "description": "Request object to update existing Hotel Letters associated with the Booking Channels",
            "name": "channelHotelLettersToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelHotelLettersToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add channel property confirmation letter configuration <p><strong>OperationId:</strong>postChannelHotelLetters</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds channel property confirmation letter mapping",
        "operationId": "postChannelHotelLetters",
        "parameters": [
          {
            "description": "Request object to create new Hotel Letters associated with the Channels",
            "name": "channelHotelLettersToBeCreated",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelHotelLettersToBeCreated"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete channel property confirmation letter configuration. <p><strong>OperationId:</strong>deleteChannelHotelLetters</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes channel property confirmation letter mapping",
        "operationId": "deleteChannelHotelLetters",
        "parameters": [
          {
            "type": "string",
            "description": "Code.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "description.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code which the hotel letters belong to.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code.",
            "name": "code1",
            "in": "query"
          },
          {
            "type": "string",
            "description": "description.",
            "name": "description1",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Confirmation",
                "Cancellation",
                "BanquetEventOrder",
                "Contract",
                "Inquiry"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Represents Inquiry Letter Type.",
            "name": "letterType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/currencies": {
      "put": {
        "description": "Use this API to update channel mapping to OPERA currency codes <p><strong>OperationId:</strong>putCurrenciesMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel currency code mapping",
        "operationId": "putCurrenciesMapping",
        "parameters": [
          {
            "description": "Request object for changing existing external system currencies.",
            "name": "currencies",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/currencies"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add channel currency code mapping to OPERA currency codes. <p><strong>OperationId:</strong>postCurrenciesMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds channel currency code mapping",
        "operationId": "postCurrenciesMapping",
        "parameters": [
          {
            "description": "Request object for creating external system currencies.",
            "name": "currencies",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/currencies"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete channel mapping to OPERA currency codes. <p><strong>OperationId:</strong>deleteCurrenciesMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes channel currency code mapping",
        "operationId": "deleteCurrenciesMapping",
        "parameters": [
          {
            "type": "boolean",
            "description": "Indicates whether code is inactive or not.",
            "name": "inactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system code such as TRAVELOCITY, EXPEDIA, etc.",
            "name": "systemCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system subtype such as GDS, WEB, etc.",
            "name": "systemSubType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system type such as CHANNEL, OXI, etc.",
            "name": "systemType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system name.",
            "name": "systemName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cannel Website URL",
            "name": "websiteURL",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Channel Icon URL",
            "name": "iconURL",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Code used inside the OPERA System",
            "name": "localSystemCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Code used in the External System",
            "name": "externalSystemCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Detailed Description of the given entity.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Number of decimal positions used by the currency.",
            "name": "lanyonDecimalPosition",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Number of decimal positions used by the currency as per the channel.",
            "name": "channelDecimalPosition",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/currencies/mapping": {
      "get": {
        "description": "Use this API to update channel mapping to OPERA currency codes. <p><strong>OperationId:</strong>getCurrenciesMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets channel currency code mapping",
        "operationId": "getCurrenciesMapping",
        "parameters": [
          {
            "type": "boolean",
            "description": "Indicates whether searching for active or inactive codes.",
            "name": "inactive",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system code to be searched. This is also known as Booking Channel Code for CHANNEL external system type.",
            "name": "systemCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system type to be searched. Possible values are CHANNEL, OXI, etc.",
            "name": "systemType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system sub type to be searched. Possible values are GDS, WEB, etc.",
            "name": "systemSubType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system rate type to be searched. Possible values are DAILY, MAX_WEEKLY, etc.",
            "name": "systemRateType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "localSystemCodes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether to include inactive guarantees or not.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching external system currencies.",
            "schema": {
              "$ref": "#/definitions/currenciesMapping"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CurrenciesMapping not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/distributionTemplates": {
      "get": {
        "description": "This API retrieves distribution templates. <p><strong>OperationId:</strong>getDistributionTemplates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Retrieves distribution templates",
        "operationId": "getDistributionTemplates",
        "parameters": [
          {
            "type": "boolean",
            "default": "false",
            "description": "Filter chain level distribution templates by chain.",
            "name": "isChain",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "types",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether search includes inactive distribution templates.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching distribution templates based on search criteria.",
            "schema": {
              "$ref": "#/definitions/distributionTemplates"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "DistributionTemplates not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update existing distribution rate template <p><strong>OperationId:</strong>putDistributionTemplates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates rate templates configurations",
        "operationId": "putDistributionTemplates",
        "parameters": [
          {
            "description": "Request object for modifying chain or property level distribution templates.",
            "name": "distributionTemplates",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/distributionTemplates"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add a distribution rate template. <p><strong>OperationId:</strong>postDistributionTemplates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds rate templates configurations",
        "operationId": "postDistributionTemplates",
        "parameters": [
          {
            "description": "Request object for creating chain or property level distribution templates.",
            "name": "distributionTemplates",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/distributionTemplates"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete existing distribution rate template. <p><strong>OperationId:</strong>deleteDistributionTemplates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes rate templates configurations",
        "operationId": "deleteDistributionTemplates",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/errorCodes": {
      "delete": {
        "description": "Use this API to delete channel error code mapping configurations. <p><strong>OperationId:</strong>deleteChannelErrors</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes channel error codes",
        "operationId": "deleteChannelErrors",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Booking channel code of error.",
            "name": "bookingChannelCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Code of error.",
            "name": "error",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/guarantees": {
      "put": {
        "description": "Use this API to update channel's guarantee codes mapping to OPERA guarantee codes <p><strong>OperationId:</strong>putGuaranteesMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel guarantee code mapping",
        "operationId": "putGuaranteesMapping",
        "parameters": [
          {
            "description": "Request object for changing external system guarantees.",
            "name": "guarantees",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/guarantees"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add channel's guarantee codes mapping to OPERA guarantee codes. <p><strong>OperationId:</strong>postGuaranteesMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds channel guarantee code mapping",
        "operationId": "postGuaranteesMapping",
        "parameters": [
          {
            "description": "Request object for creating new external system guarantees.",
            "name": "guarantees",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/guarantees"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete channel's guarantee codes mapping to OPERA guarantee codes. <p><strong>OperationId:</strong>deleteGuaranteesMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes channel guarantee code mapping",
        "operationId": "deleteGuaranteesMapping",
        "parameters": [
          {
            "type": "boolean",
            "description": "Indicates whether code is inactive or not.",
            "name": "inactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system code such as TRAVELOCITY, EXPEDIA, etc.",
            "name": "systemCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system subtype such as GDS, WEB, etc.",
            "name": "systemSubType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system type such as CHANNEL, OXI, etc.",
            "name": "systemType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system name.",
            "name": "systemName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cannel Website URL",
            "name": "websiteURL",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Channel Icon URL",
            "name": "iconURL",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Code used inside the OPERA System",
            "name": "localSystemCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Code used in the External System",
            "name": "externalSystemCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Detailed Description of the given entity.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Requirement code of guarantee.",
            "name": "requirementCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/guarantees/mapping": {
      "get": {
        "description": "Use this API to get channel guarantee code mapping to OPERA guarantee code for a given hotel. <p><strong>OperationId:</strong>getGuaranteesMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets channel guarantee code mapping for a hotel",
        "operationId": "getGuaranteesMapping",
        "parameters": [
          {
            "type": "boolean",
            "description": "Indicates whether searching for active or inactive codes.",
            "name": "inactive",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system code to be searched. This is also known as Booking Channel Code for CHANNEL external system type.",
            "name": "systemCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system type to be searched. Possible values are CHANNEL, OXI, etc.",
            "name": "systemType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system sub type to be searched. Possible values are GDS, WEB, etc.",
            "name": "systemSubType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system rate type to be searched. Possible values are DAILY, MAX_WEEKLY, etc.",
            "name": "systemRateType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "localSystemCodes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether to include inactive guarantees or not.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching external system guarantees.",
            "schema": {
              "$ref": "#/definitions/guaranteesMapping"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "GuaranteesMapping not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/hotels": {
      "put": {
        "description": "Use this API to update channel mapping to OPERA hotel id including channel hotel code, room sell limit per reservation, city code, end date <p><strong>OperationId:</strong>putHotelsMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel hotel mapping",
        "operationId": "putHotelsMapping",
        "parameters": [
          {
            "description": "Request object for changing existing external system properties.",
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/properties"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add channel mapping to OPERA hotel id including channel hotel code, room sell limit per reservation, city code, end date. <p><strong>OperationId:</strong>postHotelsMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds channel hotel mapping",
        "operationId": "postHotelsMapping",
        "parameters": [
          {
            "description": "Request object for creating external system properties.",
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/properties"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete channel mapping to OPERA hotel id including channel hotel code, room sell limit per reservation, city code, end date. <p><strong>OperationId:</strong>deleteHotelsMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes channel hotel mapping",
        "operationId": "deleteHotelsMapping",
        "parameters": [
          {
            "type": "boolean",
            "description": "Indicates whether code is inactive or not.",
            "name": "inactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system code such as TRAVELOCITY, EXPEDIA, etc.",
            "name": "systemCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system subtype such as GDS, WEB, etc.",
            "name": "systemSubType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system type such as CHANNEL, OXI, etc.",
            "name": "systemType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system name.",
            "name": "systemName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cannel Website URL",
            "name": "websiteURL",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Channel Icon URL",
            "name": "iconURL",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Code used inside the OPERA System",
            "name": "localSystemCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Code used in the External System",
            "name": "externalSystemCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Detailed Description of the given entity.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "City code of the channel hotel.",
            "name": "city",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Maximum room limit for the channel hotel reservation.",
            "name": "roomLimit",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Booking limit used by ADS interface for booking limit upload. Available if channel type is ADS and ADS ARI is enabled.",
            "name": "bookingLimit",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel chain ID of channel-hotel mapping. Only available for UA channel. It may not be modified if in myfidelio environment, and user is for a specific hotel.",
            "name": "hotelChainId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Chain code for the channel-hotel mapping.",
            "name": "chainCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Prevailing rates flag of channel-hotel mapping. Available if PREVAILING_RATE_BY_LOS parameter is on.",
            "name": "prevailingRates",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "ADS ARI enabled flag of channel-hotel mapping. Available only if channel type is ADS.",
            "name": "aRIEnabled",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "External system Add-on license. This is mandatory when Channel Type is ADS.",
            "name": "addOnLicense",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag indicating if channel resort mapping is available.",
            "name": "available",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Default rate code to be used to calculate the total revenue.",
            "name": "defaultRateCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Default rate code of channel hotel.",
            "name": "defaultRateCode1",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Low revenue threshold.",
            "name": "lowRevenueThreshold",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "High revenue threshold.",
            "name": "highRevenueThreshold",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/hotels/mapping": {
      "get": {
        "description": "Use this API to get channel mapping to OPERA hotel id including channel hotel code, room sell limit per reservation, city code, end date. <p><strong>OperationId:</strong>getHotelsMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets channel hotel mapping",
        "operationId": "getHotelsMapping",
        "parameters": [
          {
            "type": "boolean",
            "description": "Indicates whether searching for active or inactive codes.",
            "name": "inactive",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system code to be searched. This is also known as Booking Channel Code for CHANNEL external system type.",
            "name": "systemCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system type to be searched. Possible values are CHANNEL, OXI, etc.",
            "name": "systemType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system sub type to be searched. Possible values are GDS, WEB, etc.",
            "name": "systemSubType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "External system rate type to be searched. Possible values are DAILY, MAX_WEEKLY, etc.",
            "name": "systemRateType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "localSystemCodes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether to include inactive guarantees or not.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching external system properties.",
            "schema": {
              "$ref": "#/definitions/propertiesMapping"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "HotelsMapping not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/marketingText": {
      "get": {
        "description": "Use this API to get channel mapping for marketing messages. <p><strong>OperationId:</strong>getChannelMarketingText</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets channel marketing messages",
        "operationId": "getChannelMarketingText",
        "parameters": [
          {
            "type": "string",
            "name": "transactionType",
            "in": "query"
          },
          {
            "type": "string",
            "name": "policyType",
            "in": "query"
          },
          {
            "type": "string",
            "name": "policyDetail",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "beginDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "filterHotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "bookingChannelCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transactionTypes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "policyTypesPolicyType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "policyDetailPolicyDetail",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "showGlobal",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Include or not include inactive channel marketing text.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Marketingtext",
                "Amenity",
                "Carrier",
                "Currency",
                "Error",
                "Guarantee",
                "Ratecategory"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for channel fetch instruction.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channelCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching channel marketing texts.",
            "schema": {
              "$ref": "#/definitions/channelMarketingTextsInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelMarketingText not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update channel mapping for marketing messages <p><strong>OperationId:</strong>putChannelMarketingText</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel marketing messages",
        "operationId": "putChannelMarketingText",
        "parameters": [
          {
            "description": "Request object for changing channel marketing texts.",
            "name": "channelMarketingTextToChange",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelMarketingTextToChange"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add channel mapping for marketing messages <p><strong>OperationId:</strong>postChannelMarketingText</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds channel marketing messages",
        "operationId": "postChannelMarketingText",
        "parameters": [
          {
            "description": "Request object for creating channel marketing texts.",
            "name": "channelMarketingText",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelMarketingText"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete channel mapping for marketing messages. <p><strong>OperationId:</strong>deleteChannelMarketingText</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes channel marketing messages",
        "operationId": "deleteChannelMarketingText",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "name": "beginDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The code that identifies a Booking Channel.",
            "name": "bookingChannelCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "name": "globalTextYN",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The code that identifies a Hotel.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "marketingText",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "policyDetail",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "policyType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transactionType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "newHotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "newTransactionType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "newPolicyType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "newPolicyDetail",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "name": "newBeginDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/marketingText/copy": {
      "post": {
        "description": "Use this API to copy one channel's mapping for marketing messages to another channel and hotel mapping. <p><strong>OperationId:</strong>copyChannelMarketingText</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Allows to copy marketing message to another channel and hotel",
        "operationId": "copyChannelMarketingText",
        "parameters": [
          {
            "description": "Request object to copy channel marketing texts.",
            "name": "channelMarketingTextCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelMarketingTextCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/negotiatedRates": {
      "get": {
        "description": "Use this API to update channel's negotiated rate code mapping including negotiated profile, negotiate rate access code, start date, end date, and sequence. <p><strong>OperationId:</strong>getChannelNegotiatedRate</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets channel negotiate rate",
        "operationId": "getChannelNegotiatedRate",
        "parameters": [
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "bookingChannelCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "channelRatePlanCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "accessCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "uniqueId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "uniqueIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Negotiated channel rates.",
            "schema": {
              "$ref": "#/definitions/channelNegotiatedRateDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelNegotiatedRate not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update channel's negotiated rate code mapping including negotiated profile, negotiate rate access code, start date, end date, and sequence. <p><strong>OperationId:</strong>putChannelNegotiatedRate</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel negotiate rate",
        "operationId": "putChannelNegotiatedRate",
        "parameters": [
          {
            "description": "Request object for changing Negotiated channel rates.",
            "name": "channelNegotiatedRates",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelNegotiatedRates"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add channel's negotiated rate code mapping with an OPERA profile for a given hotel id <p><strong>OperationId:</strong>postChannelNegotiatedRate</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds channel negotiate rate",
        "operationId": "postChannelNegotiatedRate",
        "parameters": [
          {
            "description": "Request object for creating Negotiated channel rates.",
            "name": "channelNegotiatedRates",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelNegotiatedRates"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to update channel's negotiated rate code mapping including negotiated profile, negotiate rate access code, start date, end date, and sequence. <p><strong>OperationId:</strong>deleteChannelNegotiatedRate</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes channel negotiate rate",
        "operationId": "deleteChannelNegotiatedRate",
        "parameters": [
          {
            "type": "string",
            "description": "Booking Channel Code.",
            "name": "bookingChannelCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Channel Room Type.",
            "name": "channelRatePlanCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hotel Code.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "When name type is external, indicates the external system the name belongs to.",
            "name": "externalSystem",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Language code associated with an alternate name.",
            "name": "language",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Primary",
              "Alternate",
              "Incognito",
              "External",
              "Phonetic"
            ],
            "type": "string",
            "description": "Person's name in an external system.",
            "name": "nameType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
            "name": "namePrefix",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names.",
            "name": "givenName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The middle name of the person name.",
            "name": "middleName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
            "name": "surname",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
            "name": "nameSuffix",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Degree or honors (e.g., Ph.D., M.D.)",
            "name": "nameTitle",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Title Suffix. Must be populated if ADVANCED_TITLE is on.",
            "name": "nameTitleSuffix",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Envelope Greeting of the profile",
            "name": "envelopeGreeting",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Salutation of the profile",
            "name": "salutation",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "accessCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "The ending value of the date range.",
            "name": "end",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "The starting value of the date range.",
            "name": "start",
            "in": "query"
          },
          {
            "type": "string",
            "name": "newAccessCode",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "channelRatePlanCodeOrder",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/rateCategories": {
      "delete": {
        "description": "Use this API to delete channel rate categories for a given channel. <p><strong>OperationId:</strong>deleteChannelRateCategories</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes given channel's rate categories",
        "operationId": "deleteChannelRateCategories",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Booking channel code of rate category.",
            "name": "bookingChannelCodes",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Code of rate category.",
            "name": "rateCategories",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/rateLevels": {
      "delete": {
        "description": "Use this API to delete channel rate level code's description. <p><strong>OperationId:</strong>deleteChannelRateLevels</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes channel rate level",
        "operationId": "deleteChannelRateLevels",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Booking channel code of rate level.",
            "name": "bookingChannelCodes",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Code of rate level.",
            "name": "rateLevels",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/rates": {
      "get": {
        "description": "Use this API to get channel property rate mapping including channel rate code, start date, end date, rate level, channel rate description. <p><strong>OperationId:</strong>getChannelRateMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets channel property rate mapping",
        "operationId": "getChannelRateMapping",
        "parameters": [
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channelCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "ratePlanCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channelRatePlanCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "ratePlanCategories",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channelRatePlanCategories",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag whether to include unmapped rate codes.",
            "name": "includeUnmappedRatePlans",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag whether to include unmapped rate codes only.",
            "name": "onlyUnmappedRatePlans",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag whether to include inactive mappings.",
            "name": "includeInactiveMappings",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag whether to include negotiated rate mappings only.",
            "name": "onlyNegotiatedRates",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching hotel-channel rate code mappings given search criteria including hotel codes, booking channel codes, rate codes, channel rate codes, etc.",
            "schema": {
              "$ref": "#/definitions/channelRateMappings"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelRateMapping not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update channel property rate mapping including channel rate code, start date, end date, rate level, channel rate description. <p><strong>OperationId:</strong>putChannelRateMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel property rate mapping",
        "operationId": "putChannelRateMapping",
        "parameters": [
          {
            "description": "Request object for changing channel rate mappings.",
            "name": "channelRateMapping",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRateMapping"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add channel property rate mapping with OPERA hotel rate <p><strong>OperationId:</strong>postChannelRateMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds channel property rate mapping",
        "operationId": "postChannelRateMapping",
        "parameters": [
          {
            "description": "Request object for creating channel rate mappings.",
            "name": "channelRateMapping",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRateMapping"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete channel property rate mapping including channel rate code, start date, end date, rate level, channel rate description. <p><strong>OperationId:</strong>deleteChannelRateMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes channel property rate mapping",
        "operationId": "deleteChannelRateMapping",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Booking Channel Code.",
            "name": "bookingChannelCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Channel Room Type.",
            "name": "channelRatePlanCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "True if the mapping has channel negotiated rates, otherwise false.",
            "name": "hasChannelNegotiatedRates",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "True if this channel rate plan code has negotiated rates, otherwise false",
            "name": "hasNegotiatedRates",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel Code.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Type.",
            "name": "ratePlanCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/rates/globalDescriptions": {
      "get": {
        "description": "Use this API to get global rate description for given hotel id. <p><strong>OperationId:</strong>getChannelRatesGlobalDescriptions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets global rate descriptions",
        "operationId": "getChannelRatesGlobalDescriptions",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "ratePlanCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomTypes",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "RoomType",
              "RatePlan"
            ],
            "type": "string",
            "description": "Either Room Type or Rate Plan Code",
            "name": "globalDescriptionType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object after fetch Global Descriptions of the GDS Channels",
            "schema": {
              "$ref": "#/definitions/channelGlobalDescriptions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelRatesGlobalDescriptions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update global rate description for given hotel id and rate code <p><strong>OperationId:</strong>putChannelRatesGlobalDescriptions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates global rate descriptions",
        "operationId": "putChannelRatesGlobalDescriptions",
        "parameters": [
          {
            "description": "Request object to update existing Global Descriptions of the GDS Channels",
            "name": "channelGlobalDescriptions",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelGlobalDescriptions"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to adds global room description for given hotel id and room type code <p><strong>OperationId:</strong>postChannelRatesGlobalDescriptions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds global room descriptions",
        "operationId": "postChannelRatesGlobalDescriptions",
        "parameters": [
          {
            "description": "Request object to create new Global Descriptions of the GDS Channels",
            "name": "channelGlobalDescriptions",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelGlobalDescriptions"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete global rate description for given hotel id and rate code. <p><strong>OperationId:</strong>deleteChannelRatesGlobalDescriptions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes global rate descriptions",
        "operationId": "deleteChannelRatesGlobalDescriptions",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Property mapping with Rate plan code or Room type",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "description.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code.",
            "name": "code1",
            "in": "query"
          },
          {
            "type": "string",
            "description": "description.",
            "name": "description1",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "RoomType",
                "RatePlan"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Either Room Type or Rate Plan Code",
            "name": "globalDescType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/rates/roomSequence": {
      "put": {
        "description": "Use this API to update sequence for given channel property rate room mapping  <p><strong>OperationId:</strong>putChannelRateRoomSeq</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel property rateroom sequence",
        "operationId": "putChannelRateRoomSeq",
        "parameters": [
          {
            "description": "Request object for changing sequence for channel rate rooms.",
            "name": "channelRateRoomSequence",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRateRoomSequence"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/restrictions/publish": {
      "put": {
        "description": "This API changes the channel restrictions. <p><strong>OperationId:</strong>publishChannelRestrictions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Publishes channel restrictions",
        "operationId": "publishChannelRestrictions",
        "parameters": [
          {
            "description": "Request object for publishing rate restrictions to channels.",
            "name": "channelRestrictions",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRestrictions"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/roomTypes": {
      "delete": {
        "description": "Use this API to delete channel configuration. <p><strong>OperationId:</strong>deleteChannelRoomTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Delete channel configuration",
        "operationId": "deleteChannelRoomTypes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Booking channel code of room type.",
            "name": "bookingChannelCodes",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Code of room type.",
            "name": "roomTypes",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/rooms": {
      "put": {
        "description": "Use this API to update channel room description <p><strong>OperationId:</strong>manageChannelRoomMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel room configuration",
        "operationId": "manageChannelRoomMapping",
        "parameters": [
          {
            "description": "Request object to create, edit or delete channel room type mapping.",
            "name": "channelRoomMappings",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRoomMappings"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add channel room mapping to OPERA hotel's room. <p><strong>OperationId:</strong>postChannelRoomMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds channel property room mapping",
        "operationId": "postChannelRoomMapping",
        "parameters": [
          {
            "description": "Request object for Channel Room Mapping creation.",
            "name": "channelRoomMappings",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRoomMappings"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/rooms/globalDescription": {
      "put": {
        "description": "Use this API to update OPERA room's global description for global distribution type channels <p><strong>OperationId:</strong>putRoomDescription</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Update global descriptions for a room",
        "operationId": "putRoomDescription",
        "parameters": [
          {
            "description": "Request object for changing Room Mapping description.",
            "name": "channelGlobalDescription",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelGlobalDescription"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/rooms/globalDescriptions": {
      "get": {
        "description": "Use this API to get global room description for given hotel id and room type code. <p><strong>OperationId:</strong>getChannelRoomsGlobalDescriptions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets global room descriptions",
        "operationId": "getChannelRoomsGlobalDescriptions",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "ratePlanCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomTypes",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "RoomType",
              "RatePlan"
            ],
            "type": "string",
            "description": "Either Room Type or Rate Plan Code",
            "name": "globalDescriptionType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object after fetch Global Descriptions of the GDS Channels",
            "schema": {
              "$ref": "#/definitions/channelGlobalDescriptions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelRoomsGlobalDescriptions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update global room description for given hotel id and room type code <p><strong>OperationId:</strong>putChannelRoomsGlobalDescriptions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates global room descriptions",
        "operationId": "putChannelRoomsGlobalDescriptions",
        "parameters": [
          {
            "description": "Request object to update existing Global Descriptions of the GDS Channels",
            "name": "channelGlobalDescriptions",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelGlobalDescriptions"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add global rate description for given hotel id and rate code <p><strong>OperationId:</strong>postChannelRoomsGlobalDescriptions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds global rate descriptions",
        "operationId": "postChannelRoomsGlobalDescriptions",
        "parameters": [
          {
            "description": "Request object to create new Global Descriptions of the GDS Channels",
            "name": "channelGlobalDescriptions",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelGlobalDescriptions"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete global room description for given hotel id and room type code. <p><strong>OperationId:</strong>deleteChannelRoomsGlobalDescriptions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes global room descriptions",
        "operationId": "deleteChannelRoomsGlobalDescriptions",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Property mapping with Rate plan code or Room type",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "description.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code.",
            "name": "code1",
            "in": "query"
          },
          {
            "type": "string",
            "description": "description.",
            "name": "description1",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "RoomType",
                "RatePlan"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Either Room Type or Rate Plan Code",
            "name": "globalDescType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/subChannels": {
      "delete": {
        "description": "Use this API to delete sub-channel (carrier) configuration for a given channel code. <p><strong>OperationId:</strong>deleteChannelCarriers</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes sub channel configuration",
        "operationId": "deleteChannelCarriers",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Booking channel code of carrier.",
            "name": "bookingChannelCodes",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Code of carrier.",
            "name": "carriers",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/{channelCode}": {
      "get": {
        "description": "This API retrieves channel information for the given channel code. <p><strong>OperationId:</strong>getChannel</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets channel detail",
        "operationId": "getChannel",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Indicates whether fetch should include inactive codes or not.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "RateLevel",
                "Error",
                "RoomType",
                "Carrier",
                "RateCategory"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for external system instructions that can be used in requests for partial operations.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching details of channel.",
            "schema": {
              "$ref": "#/definitions/channel"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Channel not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/{channelCode}/errorCodes": {
      "put": {
        "description": "Use this API to update channel error code mapping configurations <p><strong>OperationId:</strong>putChannelErrors</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel error codes",
        "operationId": "putChannelErrors",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing details of channel errors.",
            "name": "channelErrors",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelErrors"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add channel error code mapping configurations <p><strong>OperationId:</strong>postChannelErrors</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds channel error codes",
        "operationId": "postChannelErrors",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating channel errors.",
            "name": "channelErrors",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelErrors"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/{channelCode}/hotels": {
      "get": {
        "description": "Use this API to get the channel mappings to the OPERA hotel id, including hotel details for channel hotel code, room sell limit per reservation, city code and end date. <p><strong>OperationId:</strong>getChannelHotelCodeMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Get channel hotel mappings",
        "operationId": "getChannelHotelCodeMapping",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "OPERA hotel code for which mapped channel hotel code should be fetched.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Channel hotel code for which mapped OPERA hotel code should be fetched.",
            "name": "channelHotelCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response giving OPERA hotel code mapped to channel hotel code for a booking channel and vice versa.",
            "schema": {
              "$ref": "#/definitions/channelHotelCodeMapping"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelHotelCodeMapping not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/{channelCode}/parameters": {
      "put": {
        "description": "Use this API to active/inactive channel controls. It also allows to update channel control settings. <p><strong>OperationId:</strong>putChannelParameters</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel control settings",
        "operationId": "putChannelParameters",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for modifying channel parameter(s).",
            "name": "changeChannelParameters",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeChannelParameters"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/{channelCode}/rateCategories": {
      "put": {
        "description": "Use this API to update channel rate categories for a given channel. <p><strong>OperationId:</strong>putChannelRateCategories</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates given channel's rate categories",
        "operationId": "putChannelRateCategories",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing details of channel rate categories.",
            "name": "channelRateCategories",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRateCategories"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add channel rate categories for a given channel. <p><strong>OperationId:</strong>postChannelRateCategories</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds given channel's rate categories",
        "operationId": "postChannelRateCategories",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating channel rate categories.",
            "name": "channelRateCategories",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRateCategories"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/{channelCode}/rateLevels": {
      "put": {
        "description": "Use this API to update channel rate level code's description <p><strong>OperationId:</strong>putChannelRateLevels</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel rate level",
        "operationId": "putChannelRateLevels",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing details of channel rate levels.",
            "name": "channelRateLevels",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRateLevels"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add channel rate level configurations <p><strong>OperationId:</strong>postChannelRateLevels</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds channel rate level",
        "operationId": "postChannelRateLevels",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating channel rate levels.",
            "name": "channelRateLevels",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRateLevels"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/{channelCode}/ratePlans": {
      "put": {
        "description": "This API changes the channel rate plans for given channel code. <p><strong>OperationId:</strong>publishChannelRatePlans</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Publishes channel rate plan codes",
        "operationId": "publishChannelRatePlans",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for publishing rate codes to GDS.",
            "name": "channelRatePlans",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRatePlans"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/{channelCode}/rateRoomSequences": {
      "get": {
        "description": "Use this API to get sequence for given channel property rate room mapping. <p><strong>OperationId:</strong>getChannelRateRoomSeq</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets channel property rateroom sequence",
        "operationId": "getChannelRateRoomSeq",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hotel Rate Plan Code.",
            "name": "ratePlanCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hotel Room Type.",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Channel Rate Plan Code.",
            "name": "channelRatePlanCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Channel Room Type.",
            "name": "channelRoomType",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "ShowInactive"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Enumaration of the different parameters Channel Rate Room accepts.",
            "name": "channelRateRoomParameterName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channelRateRoomParameterValue",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for channel rate rooms sequence based on a criteria.",
            "schema": {
              "$ref": "#/definitions/channelRateRoomSequenceDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelRateRoomSeq not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/{channelCode}/rates/{channelRateCode}/globalDescription": {
      "put": {
        "description": "Use this API to update OPERA rate's global description for global distribution type channels <p><strong>OperationId:</strong>putRateGlobalDescription</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates global descriptions for a rate",
        "operationId": "putRateGlobalDescription",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Channel Rate Code.",
            "name": "channelRateCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing channel rate codes global description.",
            "name": "channelGlobalDescription",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelGlobalDescription"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/{channelCode}/roomTypes": {
      "put": {
        "description": "Use this API to update channel room description <p><strong>OperationId:</strong>putChannelRoomTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel room",
        "operationId": "putChannelRoomTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing details of channel room types.",
            "name": "channelRoomTypes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRoomTypes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add channel room configuration <p><strong>OperationId:</strong>postChannelRoomTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds channel room",
        "operationId": "postChannelRoomTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating channel room types.",
            "name": "channelRoomTypes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRoomTypes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/{channelCode}/subChannels": {
      "put": {
        "description": "Use this API to update sub-channel (carrier) configuration for a given channel code <p><strong>OperationId:</strong>putChannelCarriers</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates sub channel configuration",
        "operationId": "putChannelCarriers",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing details of channel carriers.",
            "name": "channelCarriers",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelCarriers"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add sub-channel (carrier) configuration for a given channel code <p><strong>OperationId:</strong>postChannelCarriers</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds sub channel configuration",
        "operationId": "postChannelCarriers",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating channel carriers.",
            "name": "channelCarriers",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelCarriers"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/{channelCode}/tenants": {
      "post": {
        "description": "This API adds channel tenants. <p><strong>OperationId:</strong>postChannelOrgMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds channel tenants.",
        "operationId": "postChannelOrgMapping",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for Create Channel to ORG and CRO Mapping.",
            "name": "channelOrgMapping",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelOrgMapping"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/channels/{channelCode}/tenants/{tenantCode}": {
      "get": {
        "description": "This API retrieves channel tenants mapping. <p><strong>OperationId:</strong>getChannelOrgMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Retrieves channel tenants mapping.",
        "operationId": "getChannelOrgMapping",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Tenant Code.",
            "name": "tenantCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain code for which channel code and org code are mapped.",
            "name": "chainCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for Fetch Channel to ORG and CRO Mapping.",
            "schema": {
              "$ref": "#/definitions/channelOrgMappingsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelOrgMapping not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "This API changes channel tenants mapping. <p><strong>OperationId:</strong>putChannelOrgMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel tenants mapping.",
        "operationId": "putChannelOrgMapping",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Tenant Code.",
            "name": "tenantCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for Change Channel to ORG and CRO Mapping.",
            "name": "channelOrgMapping",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelOrgMapping"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "This API deletes channel tenants mapping. <p><strong>OperationId:</strong>deleteChannelOrgMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes channel tenants mapping.",
        "operationId": "deleteChannelOrgMapping",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Tenant Code.",
            "name": "tenantCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain code for which channel code and org code are mapped.",
            "name": "chainCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/totalPricing": {
      "put": {
        "description": "Use this API to update global distribution channels tax and fee configurations <p><strong>OperationId:</strong>putTotalPricingElements</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates total pricing tax and fee types",
        "operationId": "putTotalPricingElements",
        "parameters": [
          {
            "description": "Request object to change the total pricing elements of GDS channel.",
            "name": "totalPricingElements",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/totalPricingElements"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add global distribution channels tax and fee configurations. <p><strong>OperationId:</strong>postTotalPricingElements</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds total pricing tax and fee types",
        "operationId": "postTotalPricingElements",
        "parameters": [
          {
            "description": "Request object to create the total pricing elements of GDS channel.",
            "name": "totalPricingElements",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/totalPricingElements"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete global distribution channels tax and fee configurations. <p><strong>OperationId:</strong>deleteTotalPricingElements</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes total pricing tax and fee types",
        "operationId": "deleteTotalPricingElements",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel Code that associated with Transaction Code and Total Pricing Element",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "description.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/totalPricing/copy": {
      "put": {
        "description": "Use this API to copy global distribution system's fee and tax configurations from one hotel to another hotel within same chain/tenant <p><strong>OperationId:</strong>copyTotalPricingElements</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Allows to copy total pricing tax and fees to another hotel id",
        "operationId": "copyTotalPricingElements",
        "parameters": [
          {
            "description": "Request object to copy the total pricing elements into the target properties.",
            "name": "totalPricingElementsCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/totalPricingElementsCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/channel/sellLimits": {
      "get": {
        "description": "Use this API to retrieve channel sell limit detail to get or review daily sell limits for a given hotel-channel combination. <p><strong>OperationId:</strong>getChannelSellLimits</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Inventory"
        ],
        "summary": "Gets sell limit detail for a given channel hotel combination",
        "operationId": "getChannelSellLimits",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where channel sell limits is searched.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "Sell limits which exist at or beyond this date will be fetched.",
            "name": "fromDate",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Channel for which the sell limits are to be fetched.",
            "name": "bookingChannelCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Channel room type for which the sell limits are to be fetched.",
            "name": "channelRoomType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object containing sell limit schedules set for the channel or channel room type.",
            "schema": {
              "$ref": "#/definitions/channelSellLimits"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelSellLimits not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/channelSellLimits": {
      "put": {
        "description": "Use this API to update channel property sell limit mapping by given dates. <p><strong>OperationId:</strong>changeChannelSellLimitsByDate</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Inventory"
        ],
        "summary": "Updates channel sell limits by date",
        "operationId": "changeChannelSellLimitsByDate",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where channel sell limits are updated by date.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to create or update sell limits for the channel or channel room type by day. Advanced logic is implemented to combine consecutive blocks of sell limits into a single schedule which have the same limits configured. Existing schedules can also be split as needed to account for overlapping schedules.",
            "name": "channelSellLimitsByDate",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelSellLimitsByDate"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/channelSellLimits/{Id}": {
      "delete": {
        "description": "Use this API to delete channel property sell limit mapping. <p><strong>OperationId:</strong>deleteChannelSellLimits</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Inventory"
        ],
        "summary": "Deletes channel sell limits",
        "operationId": "deleteChannelSellLimits",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the channel sell limit to be deleted.",
            "name": "Id",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where channel sell limits is deleted.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/channels/guarantees": {
      "get": {
        "description": "Use this API  to get the list of the channel guarantee code mappings to the OPERA guarantee codes. <p><strong>OperationId:</strong>getChannelGuaranteeCodeMappings</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets channel guarantee code mappings",
        "operationId": "getChannelGuaranteeCodeMappings",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "bookingChannelCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "guaranteeCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channelGuaranteeCode",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether search includes inactive mapping.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether unmapped channel-hotel guarantee code should be fetched.",
            "name": "fetchUnmapped",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether mapped channel-hotel guarantee code should be fetched.",
            "name": "fetchMapped",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching channel-hotel guarantee code mappings.",
            "schema": {
              "$ref": "#/definitions/channelGuaranteeCodeMappingDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelGuaranteeCodeMappings not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/channels/ratePlans": {
      "put": {
        "description": "This API changes the channel rate plans for given Hotel Id. <p><strong>OperationId:</strong>publishHotelChannelRatePlans</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Publishes channel hotel rate plan codes",
        "operationId": "publishHotelChannelRatePlans",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for publishing rate codes to GDS.",
            "name": "channelRatePlans",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRatePlans"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/channels/rates": {
      "post": {
        "description": "Use this API to link (distribute) channel a rate code to channel room types. <p><strong>OperationId:</strong>postChannelRates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Distributes channel rate mappings to channel room types",
        "operationId": "postChannelRates",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for distributing channel rates.",
            "name": "channelRates",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRates"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/channels/totalPricing": {
      "get": {
        "description": "Use this API to get global distribution channels tax and fee configurations. <p><strong>OperationId:</strong>getTotalPricingElements</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets total pricing tax and fee types",
        "operationId": "getTotalPricingElements",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "elementCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transactionCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to populate total pricing elements of the GDS channel.",
            "schema": {
              "$ref": "#/definitions/totalPricingElements"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TotalPricingElements not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/channels/{channelCode}/cardType/{cardTypeCode}": {
      "put": {
        "description": "Use this API to update channel mapping for OPERA credit cards to channel for a given hotel id <p><strong>OperationId:</strong>putChannelCardTypeMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel credit card mapping for a hotel",
        "operationId": "putChannelCardTypeMapping",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "cardTypeCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing information of an existing channel-hotel card type mapping.",
            "name": "channelCardTypeMappings",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelCardTypeMappings"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add channel mapping for OPERA credit cards to channel for a given hotel id <p><strong>OperationId:</strong>postChannelCardTypeMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds channel credit card mapping for a hotel",
        "operationId": "postChannelCardTypeMapping",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "cardTypeCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating a new channel-hotel card type mapping.",
            "name": "channelCardTypeMappings",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelCardTypeMappings"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete channel mapping for OPERA credit cards to channel for a given hotel id. <p><strong>OperationId:</strong>deleteChannelCardTypeMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes channel credit card mapping for a hotel",
        "operationId": "deleteChannelCardTypeMapping",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "cardTypeCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "channelCardType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/channels/{channelCode}/guarantees/{guaranteeCode}": {
      "put": {
        "description": "Use this API to update channel guarantee code mapping to OPERA guarantee code for a given hotel <p><strong>OperationId:</strong>putChannelGuaranteeCodeMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel guarantee code mapping for a hotel",
        "operationId": "putChannelGuaranteeCodeMapping",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Guarantee Code.",
            "name": "guaranteeCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing information of an existing channel-hotel guarantee code mapping.",
            "name": "channelGuaranteeCodeMappings",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelGuaranteeCodeMappings"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add channel guarantee code mapping to OPERA guarantee code for a given hotel <p><strong>OperationId:</strong>postChannelGuaranteeCodeMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Adds channel guarantee code mapping for a hotel",
        "operationId": "postChannelGuaranteeCodeMapping",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Guarantee Code.",
            "name": "guaranteeCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating a new channel-hotel guarantee code mapping.",
            "name": "channelGuaranteeCodeMappings",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelGuaranteeCodeMappings"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete channel guarantee code mapping to OPERA guarantee code for a given property. <p><strong>OperationId:</strong>deleteChannelGuaranteeCodeMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes channel guarantee code mapping for a hotel",
        "operationId": "deleteChannelGuaranteeCodeMapping",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Guarantee Code.",
            "name": "guaranteeCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/channels/{channelCode}/parameters": {
      "get": {
        "description": "Use this API to get list of channel parameters and their settings. <p><strong>OperationId:</strong>getChannelParameters</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Retrieves channel parameters.",
        "operationId": "getChannelParameters",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parameter for wild card search on channel parameters.",
            "name": "parameterNameWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for channel parameter(s) based on search criteria.",
            "schema": {
              "$ref": "#/definitions/channelParameterMapping"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelParameters not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/channels/{channelCode}/policies": {
      "get": {
        "description": "Use this API to retrieve channel policies mapping. <p><strong>OperationId:</strong>getChannelPolicies</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Retrieves the channel policies",
        "operationId": "getChannelPolicies",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "requestType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channelRatePlanCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channelRoomTypeCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "ratePlanCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomTypeCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "corporateId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "corporateIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Request object for fetching Policies, guarantee, and deposit Details.",
            "schema": {
              "$ref": "#/definitions/channelPolicies"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelPolicies not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/channels/{channelCode}/rooms/{channelRoomType}/rates": {
      "post": {
        "description": "Use this API to link (distribute) channel a room type to channel rate codes. <p><strong>OperationId:</strong>postChannelRoomTypeRate</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Distributes channel room rate mappings.",
        "operationId": "postChannelRoomTypeRate",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Channel Room Type.",
            "name": "channelRoomType",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for distributing channel rates.",
            "name": "channelRates",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRates"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/channels/{channelCode}/rooms/{roomTypeCode}": {
      "get": {
        "description": "This API retrieves channel room mapping by room type. <p><strong>OperationId:</strong>getChannelRoomMappingById</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets channel room mapping by room type",
        "operationId": "getChannelRoomMappingById",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Room Type Code.",
            "name": "roomTypeCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "Begin Date.",
            "name": "beginDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Channel Room Type.",
            "name": "channelRoomType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for Channel Room Mappings by ID.",
            "schema": {
              "$ref": "#/definitions/channelRoomMapping"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelRoomMappingById not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update channel room mapping to OPERA hotel's room mapping including channel room type code, start date, end date, room order. <p><strong>OperationId:</strong>putChannelRoomMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel property room mapping",
        "operationId": "putChannelRoomMapping",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Room Type Code.",
            "name": "roomTypeCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Channel Room Mapping.",
            "name": "channelRoomMapping",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRoomMapping"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete channel room mapping to OPERA hotel's room mapping including channel room type code, start date, end date, room order. <p><strong>OperationId:</strong>deleteChannelRoomMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Deletes channel property room mapping",
        "operationId": "deleteChannelRoomMapping",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Room Type Code.",
            "name": "roomTypeCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a channel.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "Begin Date.",
            "name": "beginDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Channel Room Type.",
            "name": "channelRoomType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "End date of the hotel-channel room type mapping.",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/channels/{channelCode}/rooms/{roomTypeCode}/inventorySnapshot": {
      "get": {
        "description": "Operation to fetch the room availability and restrictions for a given property and room type in relation to channels. <p><strong>OperationId:</strong>getChannelInventorySnapshotByRoomType</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Availability"
        ],
        "summary": "Gets hotel room's restrictions and channel availability",
        "operationId": "getChannelInventorySnapshotByRoomType",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Room Type Code.",
            "name": "roomTypeCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Channel Code.",
            "name": "channelCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "name": "fromDate",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "default": "false",
            "name": "friday",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "false",
            "name": "monday",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "false",
            "name": "saturday",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "false",
            "name": "sunday",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "false",
            "name": "thursday",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "false",
            "name": "tuesday",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "false",
            "name": "wednesday",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "BookingChannel",
              "ChannelRoomType"
            ],
            "type": "string",
            "description": "Indicates to evaluate statistics for house, channel, and room type level. Must include the specific booking channel in the search criteria.",
            "name": "snapshotLevel",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object containing the room availability and restrictions for a hotel in relation to booking channels.",
            "schema": {
              "$ref": "#/definitions/channelInventorySnapshot"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelInventorySnapshotByRoomType not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/channels/{channelId}/channelSellLimitsByDateRange": {
      "put": {
        "description": "Use this API to update channel property sell limit mapping by given date range. <p><strong>OperationId:</strong>changeChannelSellLimitsByDateRange</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Inventory"
        ],
        "summary": "Updates channel sell limits by daterange",
        "operationId": "changeChannelSellLimitsByDateRange",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the channel for which sell limits are updated by date range.",
            "name": "channelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where channel sell limits are updated by date range.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to create or update sell limit schedules for the channel or channel room type within a date range. Existing schedules can be split as needed to account for overlapping schedules.",
            "name": "channelSellLimitsByDateRange",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelSellLimitsByDateRange"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/generalAvailabilitySimulator": {
      "get": {
        "description": "Use this API to fetch the General Availability Simulator. <p><strong>OperationId:</strong>getGeneralAvailabilitySimulator</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Availability"
        ],
        "summary": "Gets the General Availability",
        "operationId": "getGeneralAvailabilitySimulator",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "name": "bookingChannelCode",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "arrival",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "adults",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "nights",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "children",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "noOfRooms",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channelRatePlanCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "rateAccessCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "corpIdIATA",
            "in": "query"
          },
          {
            "type": "string",
            "name": "inventoryBlockCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "promotionCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "language",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to simulate general availability.",
            "schema": {
              "$ref": "#/definitions/generalAvailabilitySimulator"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "GeneralAvailabilitySimulator not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/inventorySnapshot": {
      "get": {
        "description": "Operation to fetch the room availability and restrictions for a given property in relation to channels. <p><strong>OperationId:</strong>getChannelInventorySnapshot</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Availability"
        ],
        "summary": "Gets hotel's rooms and restrictions channel availability",
        "operationId": "getChannelInventorySnapshot",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "name": "fromDate",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "default": "false",
            "name": "friday",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "false",
            "name": "monday",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "false",
            "name": "saturday",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "false",
            "name": "sunday",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "false",
            "name": "thursday",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "false",
            "name": "tuesday",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "false",
            "name": "wednesday",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "bookingChannelCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channelRoomTypes",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "BookingChannel",
              "ChannelRoomType"
            ],
            "type": "string",
            "description": "Indicates to evaluate statistics for house, channel, and room type level. Must include the specific booking channel in the search criteria.",
            "name": "snapshotLevel",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object containing the room availability and restrictions for a hotel in relation to booking channels.",
            "schema": {
              "$ref": "#/definitions/channelInventorySnapshot"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelInventorySnapshot not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rateParity": {
      "get": {
        "description": "Operation to Fetch the Rate Parity. The rate parity search criteria can include room types, rate plans, promotion code, rate access code or chain codes. <p><strong>OperationId:</strong>getRateParity</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Availability"
        ],
        "summary": "Gets channel's rate configuration",
        "operationId": "getRateParity",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "An enumerated type defining the Parity Comparison type. Values: FIRST_RATES, CHANNEL_RATES. CHANNEL_RATES requires HotelCode and BookingChannelCode as part of request.",
            "name": "comparisonType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Language identification.",
            "name": "language",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "numberOfDays",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channelCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "ratePlanCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channelRoomType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channelRatePlanCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "chainCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "rateAccessCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "inventoryBlockCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "promotionCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "qualifyingProfileCategory",
            "in": "query"
          },
          {
            "type": "string",
            "name": "qualifyingProfileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to fetch Rate Parity.",
            "schema": {
              "$ref": "#/definitions/rateParity"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RateParity not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rates/{ratePlanCode}/globalDescription": {
      "get": {
        "description": "Use this API to get global rate description for given hotel id and rate code. <p><strong>OperationId:</strong>getChannelRateCodeGlobalDesc</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets global rate descriptions",
        "operationId": "getChannelRateCodeGlobalDesc",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Rate Plan Code.",
            "name": "ratePlanCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for information regarding global descriptions of hotel rate codes.",
            "schema": {
              "$ref": "#/definitions/channelEnhancedGlobalDescription"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelRateCodeGlobalDesc not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rooms/mapping": {
      "get": {
        "description": "Use this API to get channel room mapping to OPERA hotel's room mapping including channel room type code, start date, end date, room order. <p><strong>OperationId:</strong>getChannelRoomMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets channel property room mapping",
        "operationId": "getChannelRoomMapping",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "bookingChannelCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomTypes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channelRoomTypes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag whether to include inactive mappings or not.",
            "name": "includeInactiveMappings",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag whether to include unmapped room types or not.",
            "name": "includeUnmappedRoomTypes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag whether to include mapped room types only.",
            "name": "onlyUnmappedRoomTypes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation to fetch hotel-channel room type mappings.",
            "schema": {
              "$ref": "#/definitions/channelRoomMappingsSummary"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelRoomMapping not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rooms/{roomType}/globalDescription": {
      "get": {
        "description": "Use this API to get global room description for given hotel id and room type code. <p><strong>OperationId:</strong>getChannelRoomTypeGlobalDesc</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Gets global room descriptions",
        "operationId": "getChannelRoomTypeGlobalDesc",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Room type.",
            "name": "roomType",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID that identifies a single hotel property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for information regarding global descriptions of hotel room types.",
            "schema": {
              "$ref": "#/definitions/channelEnhancedGlobalDescription"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ChannelRoomTypeGlobalDesc not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    }
  },
  "definitions": {
    "additionalAmountListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/additionalAmountType"
      }
    },
    "additionalAmountType": {
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "amountType": {
          "type": "string",
          "enum": [
            "AdditionalAdult",
            "AdditionalChild",
            "AdditionalRollawayBed",
            "AdditionalCrib",
            "AdditionalRollawayCrib"
          ]
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        }
      }
    },
    "additionalDetailListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/additionalDetailType"
      }
    },
    "additionalDetailType": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "detailType": {
          "type": "string",
          "enum": [
            "CancelPolicy",
            "CommissionPolicy",
            "GuaranteePolicy",
            "DepositPolicy",
            "PenaltyPolicy",
            "MarketingInformation",
            "Promotion",
            "TaxInformation",
            "Other"
          ]
        },
        "otherDetailType": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "addressInfoType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "addressType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "maxLength": 80,
            "minLength": 0
          }
        },
        "barCode": {
          "description": "The postal barcode for the address.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        },
        "updateReservations": {
          "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
          "type": "boolean"
        }
      }
    },
    "amenities": {
      "description": "Request object for changing external system amenities.",
      "type": "object",
      "properties": {
        "amenities": {
          "description": "External system amenities to be changed.",
          "$ref": "#/definitions/amenitiesMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "amenitiesMapping": {
      "description": "Response object for fetching external system amenities.",
      "type": "object",
      "properties": {
        "amenitiesMapping": {
          "description": "Collection of external system amenities based on the request criteria.",
          "$ref": "#/definitions/amenitiesMappingType"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "amenitiesMappingType": {
      "description": "Information about an external system amenity mapping.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/amenityMappingType"
      }
    },
    "amenityGroupType": {
      "description": "User defined logical group name for the amenities.",
      "type": "string",
      "enum": [
        "PropertyFeatures",
        "RoomFeatures",
        "ProductsFeatures",
        "BedCodes"
      ]
    },
    "amenityMappingType": {
      "description": "Base external system mapping info.",
      "type": "object",
      "properties": {
        "amenityGroup": {
          "description": "User defined logical group name for the amenities.",
          "$ref": "#/definitions/amenityGroupType"
        },
        "dateRange": {
          "description": "Start and End Date of the mapping validity. If value is not supplied that mapping will be valid forever.",
          "$ref": "#/definitions/timeSpanType"
        },
        "description": {
          "description": "Detailed Description of the given entity.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "externalSystemCode": {
          "description": "Code used in the External System",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "localSystemCode": {
          "description": "Code used inside the OPERA System",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "systemInfo": {
          "description": "Identify details of External System",
          "$ref": "#/definitions/systemInfoType"
        }
      }
    },
    "availableRatePlanType": {
      "description": "Room Type and Room Rate combination.",
      "type": "object",
      "properties": {
        "availableRooms": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/availableRoomType"
          }
        },
        "currency": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketingInfo": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "ratePlanCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanDesc": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "taxInfo": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "availableRoomType": {
      "description": "Room Type and Room Rate combination.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "channelRoomType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "rateChangedYN": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "baseChannelParameterType": {
      "description": "Parameters details for the Channel.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel code identifying the parameters related to the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "parameterDescription": {
          "description": "The Description for the parameter.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "parameterDisplay": {
          "description": "The display name for the parameter in the channel.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "parameterName": {
          "description": "Name of the parameter in the channel.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "parameterType": {
          "description": "The type of the parameter, the possible types are P (Parameter), Setting (S).",
          "type": "string",
          "enum": [
            "P",
            "S"
          ]
        },
        "parameterValue": {
          "description": "The Value of the parameter.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "scope": {
          "description": "Whether this is a global or property level parameter.",
          "type": "string",
          "enum": [
            "H",
            "P"
          ]
        },
        "sequence": {
          "description": "Sequence number for displaying the parameter in the channel.",
          "type": "integer"
        },
        "shortDescription": {
          "description": "Short description for the parameter.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "valueType": {
          "$ref": "#/definitions/channelParameterValueType"
        }
      }
    },
    "baseType": {
      "description": "Simple type for base type, flat or differential.",
      "type": "string",
      "enum": [
        "Flat",
        "Differential"
      ]
    },
    "bookingChannelInfoType": {
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bookingChannelType": {
          "type": "string",
          "maxLength": 240,
          "minLength": 0
        },
        "configurationParameters": {
          "$ref": "#/definitions/parametersType"
        },
        "hotelMappings": {
          "description": "Hotel Code mapping for the Booking Channel.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelMappingType"
          }
        },
        "name": {
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "bookingChannelMappingType": {
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "code": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "bookingChannelsInfoType": {
      "description": "Additional detail about booking channel.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/bookingChannelInfoType"
      }
    },
    "cancelPenaltyType": {
      "description": "The CancelPenalty class defines the cancellation policy of the hotel facility.",
      "type": "object",
      "properties": {
        "amountPercent": {
          "description": "Cancellation fee expressed as a fixed amount, or percentage of/or room nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "deadline": {
          "description": "Cancellation deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the Cancellation Penalty.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        },
        "nonRefundable": {
          "description": "Indicates if the amount is refundable if booking is canceled.",
          "type": "boolean"
        },
        "offsetUnit": {
          "$ref": "#/definitions/offsetUnitType"
        },
        "penaltyDescription": {
          "description": "Text description of the Penalty in a given language.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "policyCode": {
          "description": "Policy Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "carrierInfoType": {
      "description": "Carrier Information Type.",
      "type": "object",
      "properties": {
        "carrierCode": {
          "description": "Use the SGA(Signature Airline Code) to filter rate codes for specific sources of business. This field can also be used to exclude specific sources of availability and bookings from the selection of rates.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "returnToSGA": {
          "description": "Return to SGA.",
          "type": "boolean"
        }
      }
    },
    "changeChannelParameters": {
      "description": "Request object for modifying channel parameter(s).",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Collection of channel parameter(s) to be modified.",
          "$ref": "#/definitions/changeChannelParametersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeChannelParametersType": {
      "type": "object",
      "properties": {
        "channelParameters": {
          "description": "Collection of channel parameters whose value needs to be modified.",
          "$ref": "#/definitions/channelParametersSimpleType"
        },
        "systemCode": {
          "description": "External system code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "channel": {
      "description": "Response object for fetching details of channel.",
      "type": "object",
      "properties": {
        "channel": {
          "description": "Details of a channel.",
          "$ref": "#/definitions/channelType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelAccount": {
      "description": "Response object of the Channel account fetch request. Contains detailed information for the channel account.",
      "type": "object",
      "properties": {
        "channelAccount": {
          "description": "Channel account detailed information type to contain details of channel account including account information, setup details, communication information.",
          "$ref": "#/definitions/channelAccountType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelAccountCommunicationType": {
      "description": "Holds channel account communication information.",
      "type": "object",
      "properties": {
        "addresses": {
          "description": "List of customer addresses.",
          "type": "object",
          "properties": {
            "addressInfo": {
              "description": "Collection of Detailed information on an address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/addressInfoType"
              }
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        }
      }
    },
    "channelAccountContactType": {
      "description": "Holds channel account contact information.",
      "type": "object",
      "properties": {
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        }
      }
    },
    "channelAccountContractCopyDetailsType": {
      "description": "Channel account contract type to hold account and contract details to copy.",
      "type": "object",
      "properties": {
        "beginDate": {
          "description": "Holds begin date of the new contract.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "contractNo": {
          "description": "Holds contract No of the new contract to create.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "endDate": {
          "description": "Holds end date of the new contract.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "note": {
          "description": "Holds Note for the new contract.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "retainContractNo": {
          "description": "Flag to retain contract No or generate new one.",
          "type": "boolean"
        },
        "sourceContractId": {
          "description": "Holds contract Id of the contract to be copied.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "sourceProfileId": {
          "description": "Holds channel account profile identifier of the contract to be copied.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "channelAccountContractCopyResponseType": {
      "description": "Channel account contract type to hold account and contract details to copy.",
      "type": "object",
      "properties": {
        "accountCode": {
          "description": "Target Account code to which contract is copied.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "accountId": {
          "description": "Target account Id to which contract copied.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "contractResponseInformation": {
          "description": "Holds contract Id of the contract copied.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "contractId": {
                "description": "Holds contract Id of the contract copied.",
                "$ref": "#/definitions/uniqueID_Type"
              },
              "errorMessage": {
                "description": "Error message if failed to copy the contract.",
                "$ref": "#/definitions/errorType"
              },
              "sourceContractNo": {
                "description": "Holds contract No of the contract which is copied.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "success": {
                "description": "Flag to identify contract is copied successfully.",
                "type": "boolean"
              },
              "targetContractNo": {
                "description": "Holds contract No of the new contract created.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              }
            }
          }
        },
        "errorMessage": {
          "description": "Error message if failed to copy all the contracts from account.",
          "$ref": "#/definitions/errorType"
        }
      }
    },
    "channelAccountContractCopyType": {
      "description": "Channel account contract type to hold account and contract details to copy.",
      "type": "object",
      "properties": {
        "channelAccountContractCopyDetails": {
          "description": "Contract details to copy.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelAccountContractCopyDetailsType"
          }
        },
        "targetAccountCode": {
          "description": "Target Account code to which contract to be copied. This is utilised to find account when TargetProfileID is not provided.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetProfileId": {
          "description": "Target Profile Id to which contract to be copied. User can populate either Profile ID or AccountCode.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "channelAccountContractElements": {
      "description": "Response object of the channel account contract elements fetch request. Contains detailed information for the channel contract elements.",
      "type": "object",
      "properties": {
        "contractElements": {
          "description": "Holds list of contract elements detail.",
          "$ref": "#/definitions/channelAccountContractElementsType"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelAccountContractElementsType": {
      "description": "Channel account contract elements information object to hold details of contract elements.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/contractElementInformationType"
      }
    },
    "channelAccountContractInformationType": {
      "description": "To hold channel account contract detailed information.",
      "type": "object",
      "properties": {
        "beginDate": {
          "description": "Holds begin date of the contract.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "channelAccountContractElements": {
          "description": "Holds contract elements information.",
          "$ref": "#/definitions/channelAccountContractElementsType"
        },
        "contractId": {
          "description": "Holds contract Id of the contract.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "contractNo": {
          "description": "Holds contract No of the contract.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "endDate": {
          "description": "Holds end date of the contract.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "markStatementsToRegenerate": {
          "description": "Flag to mark respective statements which were generated on these contracts to be regenerated.",
          "type": "boolean"
        },
        "note": {
          "description": "Holds Note for the account contract.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        }
      }
    },
    "channelAccountContracts": {
      "description": "Request object to create the channel account contracts.",
      "type": "object",
      "properties": {
        "channelAccountContracts": {
          "description": "Channel account information to create a new channel account contracts.",
          "$ref": "#/definitions/channelAccountContractsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelAccountContractsCopy": {
      "description": "Request object to copy the channel account contract and create a new contract.",
      "type": "object",
      "properties": {
        "channelAccountContractsCopy": {
          "description": "Channel account information to create a copy.",
          "$ref": "#/definitions/channelAccountContractsCopyType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelAccountContractsCopyResponseType": {
      "description": "List of channel account contracts information to create a copy of.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelAccountContractCopyResponseType"
      }
    },
    "channelAccountContractsCopyType": {
      "description": "List of channel account contracts information to create a copy of.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelAccountContractCopyType"
      }
    },
    "channelAccountContractsDetailsCopy": {
      "description": "Response object of the Channel account contract copy request.",
      "type": "object",
      "properties": {
        "channelAccountContractsCopyResponse": {
          "description": "Response details of the contracts sent for copy.",
          "$ref": "#/definitions/channelAccountContractsCopyResponseType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelAccountContractsInformationType": {
      "description": "Channel account contract information object to hold details of channel account contract.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelAccountContractInformationType"
      }
    },
    "channelAccountContractsType": {
      "description": "Channel account contracts type to hold account and contract details.",
      "type": "object",
      "properties": {
        "accountCode": {
          "description": "Holds Account code of the channel account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "accountName": {
          "description": "Holds Account Name of the channel account.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "channelAccountContractsInformation": {
          "description": "Provides detailed information regarding Channel Account contract.",
          "$ref": "#/definitions/channelAccountContractsInformationType"
        },
        "profileId": {
          "description": "Unique channel account profile identifier.",
          "$ref": "#/definitions/profileId"
        }
      }
    },
    "channelAccountDetailsType": {
      "description": "To hold channel account detailed information.",
      "type": "object",
      "properties": {
        "accountCode": {
          "description": "Holds Account code for which details are fetched.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "accountName": {
          "description": "Holds Account Name for which details are fetched.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "accountType": {
          "description": "Holds Account type for which details are fetched.",
          "$ref": "#/definitions/channelAccountTypeType"
        },
        "contactName": {
          "description": "Account contact name information.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "eCUNo": {
          "description": "Holds ECU No alias AR_No.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "templateAccountCode": {
          "description": "Holds Template Account code on which current account is based on.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "channelAccountInformationType": {
      "description": "To hold channel account detailed information.",
      "type": "object",
      "properties": {
        "accountDetails": {
          "description": "Detailed Account information.",
          "$ref": "#/definitions/channelAccountDetailsType"
        },
        "accountSetupDetails": {
          "description": "Detailed Account setup information.",
          "$ref": "#/definitions/channelAccountSetupDetailsType"
        },
        "channelAccountIndicators": {
          "description": "Indicators of additional information attached to the profile",
          "$ref": "#/definitions/indicatorsType"
        },
        "channelAccountNotes": {
          "description": "Account notes information.",
          "$ref": "#/definitions/channelAccountNotesType"
        },
        "communicationDetails": {
          "description": "Communication details assigned to account.",
          "$ref": "#/definitions/channelAccountCommunicationType"
        },
        "contactInformation": {
          "description": "Account contact information.",
          "$ref": "#/definitions/channelAccountContactType"
        },
        "contractInformation": {
          "description": "Communication details assigned to account.",
          "$ref": "#/definitions/channelAccountContractsInformationType"
        }
      }
    },
    "channelAccountNotesType": {
      "description": "Holds channel account notes information.",
      "type": "object",
      "properties": {
        "note": {
          "description": "Holds Note for the account.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        }
      }
    },
    "channelAccountSetupDetailsType": {
      "description": "To hold channel account detailed setup information.",
      "type": "object",
      "properties": {
        "chainCode": {
          "description": "Chain information where current account is configured with.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "contractEndsOn": {
          "description": "Contract End date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "currencyCode": {
          "description": "Holds Currency code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelCodes": {
          "description": "Hotels information where channel account is associated/active with.",
          "$ref": "#/definitions/codeListType"
        },
        "inactiveDate": {
          "description": "The date that account was marked as inactive.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "instances": {
          "description": "Hold list of account codes whose template account is current account.",
          "$ref": "#/definitions/codeListType"
        },
        "rebateDate": {
          "description": "The rebate date for the account.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "registeredHotel": {
          "description": "Property which registered this channel account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "channelAccountSummaryType": {
      "description": "To hold channel account detailed information.",
      "type": "object",
      "properties": {
        "accountDetails": {
          "description": "Detailed Account information.",
          "$ref": "#/definitions/channelAccountDetailsType"
        },
        "addressInfo": {
          "description": "Detailed information on an address for the Billing Account contact.",
          "$ref": "#/definitions/addressInfoType"
        },
        "channelAccountIndicators": {
          "description": "Indicators of additional information attached to the profile",
          "$ref": "#/definitions/indicatorsType"
        },
        "contractEndsOn": {
          "description": "Channel account contract ends on date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "emailInfo": {
          "description": "Detailed information on an eMail address for the customer contact.",
          "$ref": "#/definitions/emailInfoType"
        },
        "hotelId": {
          "description": "Property of the Billing Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotels": {
          "description": "List of all the hotels where channel account is associated.",
          "$ref": "#/definitions/codeListType"
        },
        "inactive": {
          "description": "Indicates whether the account is inactive or not.",
          "type": "boolean"
        },
        "profileIdList": {
          "description": "Billing Account profile Id details.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "telephoneInfo": {
          "description": "Detailed information on telephone/ fax for the Billing Account contact.",
          "$ref": "#/definitions/telephoneInfoType"
        }
      }
    },
    "channelAccountType": {
      "description": "A collection of Channel Account Profile Id and account details information.",
      "type": "object",
      "properties": {
        "channelAccountInformation": {
          "description": "Provides detailed information regarding Channel Account.",
          "$ref": "#/definitions/channelAccountInformationType"
        },
        "profileId": {
          "description": "Unique Billing account profile identifier fetched.",
          "$ref": "#/definitions/profileId"
        }
      }
    },
    "channelAccountTypeType": {
      "description": "Represents channel account TEMPLATE type.",
      "type": "string",
      "enum": [
        "Property",
        "Chain",
        "Dealer",
        "Subsidiary",
        "Routing",
        "Template"
      ]
    },
    "channelAccounts": {
      "description": "Request object to create the channel accounts.",
      "type": "object",
      "properties": {
        "channelAccounts": {
          "description": "Channel account information to create a new channel account.",
          "$ref": "#/definitions/channelAccountsInformationType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelAccountsInformationType": {
      "description": "Channel account information object to hold details of channel account.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelAccountInformationType"
      }
    },
    "channelAccountsSummary": {
      "description": "Response object of the Channel accounts fetch request.",
      "type": "object",
      "properties": {
        "channelAccounts": {
          "description": "Type to contain summary details of the channel account.",
          "$ref": "#/definitions/channelAccountsSummaryType"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelAccountsSummaryType": {
      "description": "This type holds collection of channel accounts summary information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelAccountSummaryType"
      }
    },
    "channelAccountsToChange": {
      "description": "Channel account information to create a new channel account.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/channelAccountType"
      }
    },
    "channelAvailability": {
      "description": "Request object for publishing rate availability to channels.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "publishAvailability": {
          "description": "Availability information to be published.",
          "$ref": "#/definitions/publishRatePlanType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelBillingStatement": {
      "description": "Response object of the channel billing statement fetch request.",
      "type": "object",
      "properties": {
        "channelBillingStatement": {
          "description": "Detailed information of channel billing statement.",
          "$ref": "#/definitions/channelBillingStatementType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelBillingStatementDetails": {
      "description": "Response object of the channel account statement details fetch request.",
      "type": "object",
      "properties": {
        "channelStatementDetails": {
          "description": "Holds list of channel statement details.",
          "$ref": "#/definitions/channelStatementDetailsType"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelBillingStatementSummaries": {
      "description": "Response object of the channel billing statements fetch request.",
      "type": "object",
      "properties": {
        "channelBillingStatementsSummary": {
          "description": "Summary information of channel billing statements.",
          "$ref": "#/definitions/channelBillingStatementSummariesType"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelBillingStatementSummariesType": {
      "description": "Holds summary of channel billing statement.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelBillingStatementSummaryType"
      }
    },
    "channelBillingStatementSummaryType": {
      "description": "To hold channel account statement detailed information.",
      "type": "object",
      "properties": {
        "accountCodeList": {
          "description": "List of Billing Account profile code's.",
          "$ref": "#/definitions/codeListType"
        },
        "beginDate": {
          "description": "Holds begin date of the statement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "dirty": {
          "description": "Flag to identify Statements generated were dirty or not.",
          "type": "boolean"
        },
        "endDate": {
          "description": "Holds end date of the statement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "generated": {
          "description": "Flag to identify Statements were generated or not.",
          "type": "boolean"
        },
        "lockDate": {
          "description": "Holds date on which statement is locked.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "note": {
          "description": "Holds Note for the statement.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "statementDate": {
          "description": "Holds date on which statement is created.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "statementId": {
          "description": "Holds statement Id.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "totalAmount": {
          "description": "Holds Total amount information from statement accounts generated.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "channelBillingStatementType": {
      "description": "To hold channel account statement detailed information.",
      "type": "object",
      "properties": {
        "accountCodeList": {
          "description": "List of Billing Account profile code's.",
          "$ref": "#/definitions/codeListType"
        },
        "beginDate": {
          "description": "Holds begin date of the statement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "channelAccountStatements": {
          "description": "Holds Channel account statements information.",
          "$ref": "#/definitions/channelStatementAccountsType"
        },
        "dirty": {
          "description": "Flag to identify Statements generated were dirty or not.",
          "type": "boolean"
        },
        "endDate": {
          "description": "Holds end date of the statement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "generated": {
          "description": "Flag to identify Statements were generated or not.",
          "type": "boolean"
        },
        "lockDate": {
          "description": "Holds date on which statement is locked.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "note": {
          "description": "Holds Note for the statement.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "statementDate": {
          "description": "Holds date on which statement is created.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "statementId": {
          "description": "Holds statement Id.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "totalAmount": {
          "description": "Holds Total amount information from statement accounts generated.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "channelBillingStatements": {
      "description": "Request object to Change channel billing statements.",
      "type": "object",
      "properties": {
        "channelBillingStatements": {
          "description": "Channel billing statements information to Change.",
          "$ref": "#/definitions/channelBillingStatementsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelBillingStatementsType": {
      "description": "Provides detailed information regarding channel billing statement.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelBillingStatementType"
      }
    },
    "channelCardTypeMappingDetails": {
      "description": "Response object for fetching channel-hotel card type mappings.",
      "type": "object",
      "properties": {
        "channelCardTypeMappings": {
          "description": "Paging information and collection of channel-hotel card type mappings.",
          "type": "object",
          "properties": {
            "channelCardTypeMapping": {
              "description": "Channel-hotel card type mapping and its details.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/channelCardTypeMappingType"
              }
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelCardTypeMappingType": {
      "description": "Channel-hotel card type mapping information.",
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "description": "Booking channel code of card type mapping.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cardType": {
          "description": "Card type of card type mapping.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelCardType": {
          "description": "Channel card type of card type mapping.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel code of card type mapping.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactiveDate": {
          "description": "Inactive date of card type mapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "newChannelCardType": {
          "description": "New channel card type for the existing card type mapping.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "channelCardTypeMappings": {
      "description": "Request object for creating a new channel-hotel card type mapping.",
      "type": "object",
      "properties": {
        "channelCardTypeMapping": {
          "description": "Channel-hotel card type mapping information to be created.",
          "$ref": "#/definitions/channelCardTypeMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelCarriers": {
      "description": "Request object for creating channel carriers.",
      "type": "object",
      "properties": {
        "carriers": {
          "description": "Channel carriers to be created.",
          "type": "object",
          "properties": {
            "bookingChannelCode": {
              "description": "Channel code.",
              "$ref": "#/definitions/codeType"
            },
            "carrier": {
              "description": "Channel carrier details.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/systemCarrierType"
              }
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelEnhancedGlobalDescription": {
      "description": "Response object for information regarding global descriptions of hotel room types.",
      "type": "object",
      "properties": {
        "globalDescription": {
          "description": "Contains the global descriptions of hotel room types.",
          "$ref": "#/definitions/enhancedDescriptionType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelErrors": {
      "description": "Request object for creating channel errors.",
      "type": "object",
      "properties": {
        "errors": {
          "description": "channel errors to be created.",
          "type": "object",
          "properties": {
            "bookingChannelCode": {
              "description": "Channel code.",
              "$ref": "#/definitions/codeType"
            },
            "error": {
              "description": "Channel error details.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/systemErrorType"
              }
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelGlobalDescription": {
      "description": "Request object for changing channel rate codes global description.",
      "type": "object",
      "properties": {
        "channelRoomDescription": {
          "description": "Channel Rate code mapping global description details.",
          "$ref": "#/definitions/channelGlobalDescriptionType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelGlobalDescriptionType": {
      "description": "This type holds enhanced room/rate description.",
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "$ref": "#/definitions/translationTextType2000"
        },
        "enhancedDesc1": {
          "$ref": "#/definitions/translationTextType50"
        },
        "enhancedDesc2": {
          "$ref": "#/definitions/translationTextType50"
        },
        "enhancedDesc3": {
          "$ref": "#/definitions/translationTextType50"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "shortDescription": {
          "$ref": "#/definitions/translationTextType2000"
        },
        "source": {
          "type": "string"
        }
      }
    },
    "channelGlobalDescriptions": {
      "description": "Request object to create new Global Descriptions of the GDS Channels",
      "type": "object",
      "properties": {
        "channelGlobalDescriptions": {
          "$ref": "#/definitions/channelGlobalDescriptionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelGlobalDescriptionsType": {
      "description": "Collection of GDS channel Global description types",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/genericGlobalDescriptionType"
      }
    },
    "channelGuaranteeCodeMappingDetails": {
      "description": "Response object for fetching channel-hotel guarantee code mappings.",
      "type": "object",
      "properties": {
        "channelGuaranteeCodeMappings": {
          "description": "Paging information and collection of channel-hotel guarantee code mappings.",
          "type": "object",
          "properties": {
            "channelGuaranteeCodeMapping": {
              "description": "Channel-hotel guarantee code mapping and its details.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/channelGuaranteeCodeMappingType"
              }
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelGuaranteeCodeMappingType": {
      "description": "Channel-hotel guarantee code mapping information.",
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "description": "Booking channel code of guarantee code mapping.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelGuaranteeCode": {
          "description": "Channel guarantee code of guarantee code mapping.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "guaranteeCode": {
          "description": "Guarantee code of guarantee code mapping.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel code of guarantee code mapping.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactiveDate": {
          "description": "Inactive date of guarantee code mapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "newChannelGuaranteeCode": {
          "description": "New channel guarantee code for the existing guarantee code mapping.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "paymentType": {
          "description": "Payment type of guarantee code mapping.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "channelGuaranteeCodeMappings": {
      "description": "Request object for creating a new channel-hotel guarantee code mapping.",
      "type": "object",
      "properties": {
        "channelGuaranteeCodeMapping": {
          "description": "Channel-hotel guarantee code mapping information to be created.",
          "$ref": "#/definitions/channelGuaranteeCodeMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelHotelCodeMapping": {
      "description": "Response giving OPERA hotel code mapped to channel hotel code for a booking channel and vice versa.",
      "type": "object",
      "properties": {
        "channelCode": {
          "description": "Channel code for which the hotel code mapping information is needed.",
          "type": "string",
          "maxLength": 2000
        },
        "hotelInfo": {
          "description": "OPERA or Channel hotel code information.",
          "$ref": "#/definitions/hotelCodeMappingInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelHotelCodeMappingBucketType": {
      "description": "Channel-hotel mapping bucket information.",
      "type": "object",
      "properties": {
        "defaultRateCode": {
          "description": "Default rate code of channel hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "highRevenueThreshold": {
          "description": "High revenue threshold.",
          "type": "integer"
        },
        "lowRevenueThreshold": {
          "description": "Low revenue threshold.",
          "type": "integer"
        }
      }
    },
    "channelHotelCodeMappingBucketsType": {
      "description": "Channel-hotel mapping buckets information.",
      "type": "object",
      "properties": {
        "available": {
          "description": "Flag indicating if channel resort mapping is available.",
          "type": "boolean"
        },
        "channelHotelCodeMappingBucket": {
          "description": "Default rate code revenue thresholds.",
          "type": "array",
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/channelHotelCodeMappingBucketType"
          }
        },
        "defaultRateCode": {
          "description": "Default rate code to be used to calculate the total revenue.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "channelHotelLetterType": {
      "description": "Provide unique identification of Hotel Letter associated with a Booking Channel.",
      "type": "object",
      "properties": {
        "bookingChannel": {
          "description": "Booking channel code associated to the hotel letters.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "hotelId": {
          "description": "Hotel code which the hotel letters belong to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "languageCode": {
          "description": "Language code associated with the hotel letters.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "letterName": {
          "description": "Name of the letter that associated to Hotel Letter.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "letterType": {
          "description": "Letter Type associated to hotel letters.",
          "$ref": "#/definitions/letterTypeType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelHotelLettersToBeChanged": {
      "description": "Request object to update existing Hotel Letters associated with the Booking Channels",
      "type": "object",
      "properties": {
        "channelHotelLetters": {
          "description": "Hotel Letters associated with a booking channel to be changed.",
          "$ref": "#/definitions/channelHotelLettersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelHotelLettersToBeCreated": {
      "description": "Request object to create new Hotel Letters associated with the Channels",
      "type": "object",
      "properties": {
        "channelHotelLetters": {
          "description": "Hotel Letters associated with the Booking Channel to be created.",
          "$ref": "#/definitions/channelHotelLettersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelHotelLettersType": {
      "description": "Collection of Hotel Letters Type",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelHotelLetterType"
      }
    },
    "channelInventorySnapshot": {
      "description": "Response object containing the room availability and restrictions for a hotel in relation to booking channels.",
      "type": "object",
      "properties": {
        "channelInventorySnapshot": {
          "description": "Channel inventory snapshot containing room availability and restrictions for a hotel in relation to booking channels.",
          "$ref": "#/definitions/channelInventorySnapshotType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelInventorySnapshotInventoriesType": {
      "description": "Collection of inventory statistics and restrictions for a hotel in relation to booking channels.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel that the inventory belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inventory": {
          "description": "Details of inventory statistics and restrictions.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelInventoryType"
          }
        }
      }
    },
    "channelInventorySnapshotMasterInfoType": {
      "description": "Details about the booking channels and room types contained in the channel inventory snapshot.",
      "type": "object",
      "properties": {
        "bookingChannel": {
          "description": "Collection of booking channels returned in the channel inventory snapshot and the details about those channels.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "bookingChannelType": {
                "description": "The type of channel. I.E. GDS, ADS, ODS, WEB.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "channelInventoryActive": {
                "description": "Flag to indicate if the channel and hotel combination have the Channel Inventory parameter active. This parameter allows sell limits to be set for the channel or channel room type.",
                "type": "boolean"
              },
              "channelRoomTypes": {
                "description": "Details about a specific channel room type.",
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "type": "object",
                  "properties": {
                    "channelRoomTypeCode": {
                      "description": "The channel room type's identifying code.",
                      "type": "string",
                      "maxLength": 20,
                      "minLength": 0
                    },
                    "description": {
                      "description": "If the ENHANCED_ROOM_RATE_DESCRIPTION function is off, this element will contain the simple channel room type description.",
                      "type": "string",
                      "maxLength": 200,
                      "minLength": 0
                    },
                    "roomDescriptionLine1": {
                      "description": "If the ENHANCED_ROOM_RATE_DESCRIPTION function is on, this element will contain the first line of the enhanced channel room type description.",
                      "type": "string",
                      "maxLength": 200,
                      "minLength": 0
                    },
                    "roomDescriptionLine2": {
                      "description": "If the ENHANCED_ROOM_RATE_DESCRIPTION function is on, this element will contain the second line of the enhanced channel room type description.",
                      "type": "string",
                      "maxLength": 200,
                      "minLength": 0
                    },
                    "roomDescriptionLine3": {
                      "description": "If the ENHANCED_ROOM_RATE_DESCRIPTION function is on, this element will contain the third line of the enhanced channel room type description.",
                      "type": "string",
                      "maxLength": 200,
                      "minLength": 0
                    },
                    "roomTypeCode": {
                      "description": "The internal room type label which is mapped to the channel room type.",
                      "type": "string",
                      "maxLength": 20,
                      "minLength": 0
                    },
                    "sellSequence": {
                      "description": "The order in which the channel room type is to be displayed.",
                      "type": "integer"
                    }
                  }
                }
              },
              "code": {
                "description": "The booking channel's identifying code.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "description": {
                "description": "The name or description of the booking channel.",
                "type": "string",
                "maxLength": 40,
                "minLength": 0
              }
            }
          }
        },
        "hotelId": {
          "description": "The internal hotel code that the given booking channel info is mapped under.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "channelInventorySnapshotType": {
      "description": "The evaluated channel inventory snapshot statistics based on the search criteria given.",
      "type": "object",
      "properties": {
        "inventories": {
          "description": "The main statistics for the channel inventory snapshot.",
          "$ref": "#/definitions/channelInventorySnapshotInventoriesType"
        },
        "masterInfo": {
          "description": "Additional information about the records returned in the snapshot.",
          "$ref": "#/definitions/channelInventorySnapshotMasterInfoType"
        }
      }
    },
    "channelInventoryType": {
      "description": "Inventory statistics and restrictions. This can have no code (House level), BookingChannelCode, or ChannelRoomType to represent the different levels.",
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "description": "Booking channel code that the snapshot belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelRoomType": {
          "description": "Booking channel room type that the snapshot belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "snapshot": {
          "description": "Inventory statistics and restriction details.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelSnapshotType"
          }
        }
      }
    },
    "channelMappingEnhancedDescriptionType": {
      "description": "Enhanced descriptions of hotel-channel room type or rate code mapping.",
      "type": "object",
      "properties": {
        "enhancedDescriptionLine1": {
          "description": "Enhanced Description Line 1.",
          "$ref": "#/definitions/translationTextType50"
        },
        "enhancedDescriptionLine2": {
          "description": "Enhanced Description Line 2.",
          "$ref": "#/definitions/translationTextType50"
        },
        "enhancedDescriptionLine3": {
          "description": "Enhanced Description Line 3.",
          "$ref": "#/definitions/translationTextType50"
        }
      }
    },
    "channelMarketingInfoType": {
      "description": "Marketing Text like cancel policy, deposit policy etc.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "description": {
            "description": "Marketing Text like cancel policy, deposit policy etc.",
            "type": "string",
            "maxLength": 4000,
            "minLength": 0
          },
          "policyType": {
            "description": "Indicates the policy type like cancel,deposit etc.",
            "$ref": "#/definitions/marketingPolicyType"
          },
          "ratePlanCode": {
            "description": "Indicates the rate code for which the policy is associated with.",
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        }
      }
    },
    "channelMarketingText": {
      "description": "Request object for creating channel marketing texts.",
      "type": "object",
      "properties": {
        "createChannelMarketingTexts": {
          "description": "List of channel marketing texts to be created.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/marketingTextType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelMarketingTextCopy": {
      "description": "Request object to copy channel marketing texts.",
      "type": "object",
      "properties": {
        "copyChannelMarketingTexts": {
          "description": "List of channel marketing texts to be copied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/copyMarketingTextType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelMarketingTextToChange": {
      "description": "Request object for changing channel marketing texts.",
      "type": "object",
      "properties": {
        "changeChannelMarketingTexts": {
          "description": "List of channel marketing texts to be changed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/marketingTextType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelMarketingTextsInfo": {
      "description": "Response object for fetching channel marketing texts.",
      "type": "object",
      "properties": {
        "bookingChannelsInfo": {
          "description": "Reference booking channel info for booking channels in the result set.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/bookingChannelInfoType"
          }
        },
        "hotelsInfo": {
          "description": "Reference hotel info for the hotels in the result set.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hotelChannelInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "marketingTexts": {
          "description": "List of channel marketing texts based on the request criteria.",
          "$ref": "#/definitions/marketingTextsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelNegProfileType": {
      "description": "A negotiated rate type",
      "type": "object",
      "properties": {
        "accessInfoList": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelNegRateAccessType"
          }
        },
        "formerName": {
          "$ref": "#/definitions/personNameType"
        },
        "uniqueId": {
          "$ref": "#/definitions/uniqueIDListType"
        }
      }
    },
    "channelNegRateAccessDetailType": {
      "type": "object",
      "properties": {
        "channelRatePlanCodeOrder": {
          "type": "integer"
        },
        "newAccessCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "newTimeSpan": {
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "channelNegRateAccessType": {
      "type": "object",
      "properties": {
        "accessCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "accessInfoDetail": {
          "$ref": "#/definitions/channelNegRateAccessDetailType"
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "channelNegRateType": {
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "description": "Booking Channel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelRatePlanCode": {
          "description": "Channel Room Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "negProfile": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelNegProfileType"
          }
        }
      }
    },
    "channelNegotiatedRateDetails": {
      "description": "Response object for fetching Negotiated channel rates.",
      "type": "object",
      "properties": {
        "channelNegRates": {
          "description": "List of negotiated channel rates based on search criteria.",
          "type": "object",
          "properties": {
            "channelNegRate": {
              "description": "List of negotiated channel rates based on search criteria.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/channelNegRateType"
              }
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelNegotiatedRates": {
      "description": "Request object for changing Negotiated channel rates.",
      "type": "object",
      "properties": {
        "channelNegRates": {
          "description": "Negotiated channel rate details to be modified.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/channelNegRateType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelOrgMapping": {
      "description": "Request object for Create Channel to ORG and CRO Mapping.",
      "type": "object",
      "properties": {
        "channelOrgMappingDetails": {
          "$ref": "#/definitions/channelOrgMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelOrgMappingType": {
      "description": "Respresents information of the Channel Code, OrgCode and Default Login Resort used for mapping.",
      "type": "object",
      "properties": {
        "channelCode": {
          "description": "Channel code for which OrgCode mapping needs to be done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "defaultLoginResort": {
          "description": "Default Login Resort value used while mapping Channel Code and OrgCode.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "orgCode": {
          "description": "OrgCode for which Channel code mapping needs to be done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "channelOrgMappingsDetails": {
      "description": "Response object for Fetch Channel to ORG and CRO Mapping.",
      "type": "object",
      "properties": {
        "channelOrgMappingsDetails": {
          "$ref": "#/definitions/channelOrgMappingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelOrgMappingsType": {
      "description": "Respresents information of the Channel Code, OrgCode and Default Login Resort used for mapping.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelOrgMappingType"
      }
    },
    "channelParameterGroupType": {
      "type": "object",
      "properties": {
        "channelParameters": {
          "$ref": "#/definitions/channelParametersType"
        },
        "groupDisplayName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "groupName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "channelParameterLevelType": {
      "type": "string",
      "enum": [
        "Global",
        "Hotel"
      ]
    },
    "channelParameterMapping": {
      "description": "Response object for channel parameter(s) based on search criteria.",
      "type": "object",
      "properties": {
        "channelParameterMapping": {
          "description": "Collection of channel parameter(s) result based on the search criteria.",
          "$ref": "#/definitions/channelParameterMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelParameterMappingType": {
      "description": "Includes information about the parametersTypes and system Information for the Channel/Hotel.",
      "type": "object",
      "properties": {
        "groups": {
          "description": "Collection of channel parameters organized into groups.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelParameterGroupType"
          }
        },
        "systemInfo": {
          "description": "Identify details of External System",
          "$ref": "#/definitions/systemInfoType"
        }
      }
    },
    "channelParameterSimpleType": {
      "description": "Basic channel parameter info used in changing channel parameter values.",
      "type": "object",
      "properties": {
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "parameterName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "parameterValue": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "parameterValueType": {
          "$ref": "#/definitions/channelParameterValueType"
        }
      }
    },
    "channelParameterType": {
      "description": "Parameters details for the Channel.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel code identifying the parameters related to the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "levelCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "levelType": {
          "$ref": "#/definitions/channelParameterLevelType"
        },
        "parameterDescription": {
          "description": "The Description for the parameter.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "parameterDisplay": {
          "description": "The display name for the parameter in the channel.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "parameterName": {
          "description": "Name of the parameter in the channel.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "parameterType": {
          "description": "The type of the parameter, the possible types are P (Parameter), Setting (S).",
          "type": "string",
          "enum": [
            "P",
            "S"
          ]
        },
        "parameterValue": {
          "description": "The Value of the parameter.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "parameters": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/baseChannelParameterType"
          }
        },
        "scope": {
          "description": "Whether this is a global or property level parameter.",
          "type": "string",
          "enum": [
            "H",
            "P"
          ]
        },
        "sequence": {
          "description": "Sequence number for displaying the parameter in the channel.",
          "type": "integer"
        },
        "shortDescription": {
          "description": "Short description for the parameter.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "valueType": {
          "$ref": "#/definitions/channelParameterValueType"
        }
      }
    },
    "channelParameterValueType": {
      "description": "The value types of parameter, possible types are Boolean, String, Date, and Number.",
      "type": "string",
      "enum": [
        "Boolean",
        "String",
        "Date",
        "Time",
        "Number",
        "SingleSelectLOV",
        "MultiSelectLOV"
      ]
    },
    "channelParametersSimpleType": {
      "description": "Collection of channel parameters simple information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelParameterSimpleType"
      }
    },
    "channelParametersType": {
      "description": "parameters details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelParameterType"
      }
    },
    "channelPolicies": {
      "description": "Request object for fetching Policies, guarantee, and deposit Details.",
      "type": "object",
      "properties": {
        "channelPoliciesInfo": {
          "description": "Reservation Rules and Policies related Information",
          "$ref": "#/definitions/channelPoliciesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelPoliciesInfoType": {
      "description": "To list down all the policies associated with the relevant input request.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelPolicyType"
      }
    },
    "channelPolicyType": {
      "description": "Policy details including guaranteeInfo, cancellation information etc.",
      "type": "object",
      "properties": {
        "cancelPenalty": {
          "description": "Cancellation details.",
          "$ref": "#/definitions/cancelPenaltyType"
        },
        "channelMarketingInfo": {
          "description": "Channel Marketing Text like cancel,deposit,tax,commission policy etc.",
          "$ref": "#/definitions/channelMarketingInfoType"
        },
        "channelRatePlanCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "commissionCode": {
          "type": "string"
        },
        "deposit": {
          "type": "boolean"
        },
        "depositPolicy": {
          "description": "DepositPolicy details.",
          "$ref": "#/definitions/depositPolicyType"
        },
        "guarantees": {
          "description": "Guarantee details to be fetched",
          "$ref": "#/definitions/guaranteesInfoType"
        },
        "hold": {
          "type": "boolean"
        },
        "ratePlanCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "channelRateCategories": {
      "description": "Request object for creating channel rate categories.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "rateCategories": {
          "description": "channel rate categories to be created.",
          "type": "object",
          "properties": {
            "bookingChannelCode": {
              "description": "Channel code.",
              "$ref": "#/definitions/codeType"
            },
            "rateCategory": {
              "description": "Channel rate category details.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/systemRateCategoryType"
              }
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRateLevels": {
      "description": "Request object for creating channel rate levels.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "rateLevels": {
          "description": "channel rate levels to be created.",
          "type": "object",
          "properties": {
            "bookingChannelCode": {
              "description": "Channel code.",
              "$ref": "#/definitions/codeType"
            },
            "rateLevel": {
              "description": "Channel rate level details.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/systemRateLevelType"
              }
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRateMapping": {
      "description": "Request object for changing channel rate mappings.",
      "type": "object",
      "properties": {
        "channelRateMappings": {
          "description": "Information about the Rate mapping to be updated.",
          "type": "object",
          "properties": {
            "channelRateMapping": {
              "description": "Information about the Rate mapping to be updated.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/channelRateMappingType"
              }
            },
            "ignoreChannelRateWarning": {
              "description": "'Y' if warnings like \"Channel Rate Code already exists in Channel\" should be ignored and should proceed with creating a new mapping; otherwise, value is 'N'",
              "type": "boolean"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRateMappingDescriptionDetailsType": {
      "description": "Descriptions of hotel-channel rate code mapping which may be enhanced descriptions, HTML supported description or a simple string description.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Plain text description.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "enhancedDescription": {
          "description": "Enhanced descriptions which allow defining line 1 to 3 descriptions.",
          "$ref": "#/definitions/channelRateMappingEnhancedDescriptionType"
        },
        "hTMLSupportedDescription": {
          "description": "HTML supported description.",
          "$ref": "#/definitions/translationTextType2000"
        }
      }
    },
    "channelRateMappingDescriptionType": {
      "description": "This type holds descriptions of hotel-channel rate code mapping. Description may be from Hotel rate code description, Global description or custom user defined description. Global description only supports enhanced description.",
      "type": "object",
      "properties": {
        "customDescription": {
          "description": "Custom or user-defined description of hotel-channel rate code mapping.",
          "$ref": "#/definitions/channelRateMappingDescriptionDetailsType"
        },
        "globalDescription": {
          "description": "Description of hotel-channel rate code mapping from global description.",
          "$ref": "#/definitions/channelRateMappingEnhancedDescriptionType"
        },
        "rateCodeDescription": {
          "description": "Description of hotel-channel rate code mapping from hotel rate code configuration.",
          "$ref": "#/definitions/channelRateMappingDescriptionDetailsType"
        },
        "shortDescription": {
          "description": "Channel rate code short description for Channel AA or Channel with HTML support.",
          "$ref": "#/definitions/translationTextType80"
        }
      }
    },
    "channelRateMappingEnhancedDescriptionType": {
      "description": "Enhanced descriptions of hotel-channel room type or rate code mapping.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Rate code description in addition to enhanced description line 1 to 3.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "enhancedDescriptionLine1": {
          "description": "Enhanced Description Line 1.",
          "$ref": "#/definitions/translationTextType50"
        },
        "enhancedDescriptionLine2": {
          "description": "Enhanced Description Line 2.",
          "$ref": "#/definitions/translationTextType50"
        },
        "enhancedDescriptionLine3": {
          "description": "Enhanced Description Line 3.",
          "$ref": "#/definitions/translationTextType50"
        }
      }
    },
    "channelRateMappingMasterInfoType": {
      "description": "Additional details about the booking channels and source descriptions for a hotel rate code referenced within the fetched results.",
      "type": "object",
      "properties": {
        "bookingChannelsInfo": {
          "description": "Additional details about booking channels.",
          "$ref": "#/definitions/bookingChannelsInfoType"
        },
        "sourceDescriptions": {
          "description": "Hotel-channel rate code mappings source descriptions.",
          "$ref": "#/definitions/channelRateMappingsSourceDescriptionsType"
        }
      }
    },
    "channelRateMappingSourceDescriptionsType": {
      "description": "Source descriptions of a hotel-channel rate code mapping.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description from hotel rate code configuration.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "globalDescription": {
          "description": "Global descriptions of a hotel rate code.",
          "$ref": "#/definitions/channelRateMappingEnhancedDescriptionType"
        },
        "hotelId": {
          "description": "Hotel code where the descriptions belong to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateCode": {
          "description": "Rate code where the descriptions belong to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "channelRateMappingType": {
      "description": "Basic details of a hotel-channel rate code mapping.",
      "type": "object",
      "properties": {
        "allowRateUpdate": {
          "description": "Indicates if Rate updates to Channel are allowed.",
          "type": "boolean"
        },
        "allowRestrictionUpdate": {
          "description": "Indicates if Rate Restrictions are sent to an ADS, GDS, or ODS partner, such as Expedia, via the AVH messaging functionality.",
          "type": "boolean"
        },
        "beginDate": {
          "description": "Begin date of the channel rate code mapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "blockRateIndicator": {
          "description": "Block Rate Indicator.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "bookingChannelCode": {
          "description": "Booking Channel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "carrierInfo": {
          "description": "Carrier attached to the Channel Rate Plan.",
          "$ref": "#/definitions/carrierInfoType"
        },
        "channelRatePlanCategory": {
          "description": "Channel rate category of hotel-channel rate code mapping.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelRatePlanCode": {
          "description": "Channel Room Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelRatePlanOrder": {
          "description": "Order of the channel rate type mapping.",
          "type": "number"
        },
        "channelRatePlanWebName": {
          "description": "Name of channel rate plan code to display on web.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "description": {
          "description": "Description of channel rate plan code.",
          "$ref": "#/definitions/channelRateMappingDescriptionType"
        },
        "endDate": {
          "description": "End date of the channel rate code mapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hasChannelNegotiatedRates": {
          "description": "True if the mapping has channel negotiated rates, otherwise false.",
          "type": "boolean"
        },
        "hasNegotiatedRates": {
          "description": "True if this channel rate plan code has negotiated rates, otherwise false",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "newChannelRatePlanCode": {
          "description": "New Channel Rate Plan Code of the mapping. Used only to change the Channel Rate Plan Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "promotionCode": {
          "description": "Promotion Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateLevel": {
          "description": "Rate Level.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "Room Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanInfo": {
          "description": "Rate plan information including description and sell dates.",
          "$ref": "#/definitions/ratePlanPrimaryDetailsType"
        },
        "rateTierAttr": {
          "description": "Rate Tier.",
          "type": "object",
          "properties": {
            "rateTier": {
              "type": "integer"
            }
          }
        },
        "regionalAvailAttr": {
          "description": "Indicates if rate participates in Regional Availability.",
          "type": "object",
          "properties": {
            "allowRegionalAvail": {
              "type": "boolean"
            },
            "inclInRegionalAvail": {
              "type": "boolean"
            }
          }
        },
        "roomTypes": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        }
      }
    },
    "channelRateMappings": {
      "description": "Response object for fetching hotel-channel rate code mappings given search criteria including hotel codes, booking channel codes, rate codes, channel rate codes, etc.",
      "type": "object",
      "properties": {
        "channelRateMappings": {
          "description": "Hotel-channel rate code mappings fetch results based on the search criteria.",
          "$ref": "#/definitions/channelRateMappingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "masterInfo": {
          "description": "Additional details about the booking channels and source descriptions for a hotel rate code referenced within the fetched results.",
          "$ref": "#/definitions/channelRateMappingMasterInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRateMappingsSourceDescriptionsType": {
      "description": "Source descriptions of a hotel-channel rate code mapping.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelRateMappingSourceDescriptionsType"
      }
    },
    "channelRateMappingsType": {
      "description": "Collection of hotel-channel rate code mappings.",
      "type": "object",
      "properties": {
        "channelRateMapping": {
          "description": "Information about hotel-channel rate code mapping.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelRateMappingType"
          }
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "channelRatePlans": {
      "description": "Request object for publishing rate codes to GDS.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "publishRatePlan": {
          "description": "Rate code information to be published.",
          "$ref": "#/definitions/publishRatePlanType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRateRoomDetailType": {
      "description": "This type holds data for channel Rate room.",
      "type": "object",
      "properties": {
        "rateOrder": {
          "description": "Rate order for rate room combination. It will be used if RateOrderFromRateMapping is not set.",
          "type": "number"
        },
        "rateOrderFromRateMapping": {
          "description": "Rate order from the booking channel rate mapping.",
          "type": "number"
        },
        "roomOrder": {
          "description": "Room order for rate room combination.It will be used if RoomOrderFromRoomMapping is not set.",
          "type": "number"
        },
        "roomOrderFromRoomMapping": {
          "description": "Room order from the booking channel room mapping.",
          "type": "number"
        }
      }
    },
    "channelRateRoomListType": {
      "description": "This type holds collection of channel Rate Room details.",
      "type": "object",
      "properties": {
        "channelRateRoom": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelRateRoomType"
          }
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "channelRateRoomSequence": {
      "description": "Request object for changing sequence for channel rate rooms.",
      "type": "object",
      "properties": {
        "channelRateRoomList": {
          "description": "Booking channel rate room List.",
          "$ref": "#/definitions/channelRateRoomListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRateRoomSequenceDetails": {
      "description": "Response object for channel rate rooms sequence based on a criteria.",
      "type": "object",
      "properties": {
        "channelRateRoomList": {
          "description": "Booking channel rate room List.",
          "$ref": "#/definitions/channelRateRoomListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRateRoomType": {
      "description": "This type holds data for channel Rate room.",
      "type": "object",
      "properties": {
        "beginDate": {
          "description": "Begin Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "bookingChannelCode": {
          "description": "Booking Channel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelRatePlanCode": {
          "description": "Channel Rate Plan code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelRateRoomDetail": {
          "$ref": "#/definitions/channelRateRoomDetailType"
        },
        "channelRoomType": {
          "description": "Channel Room Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "endDate": {
          "description": "End Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Channel Rate Room Type is invalid.",
          "type": "boolean"
        },
        "ratePlanCode": {
          "description": "Rate Plan code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "Room Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "channelRates": {
      "description": "Request object for distributing channel rates.",
      "type": "object",
      "properties": {
        "distributeChannelRates": {
          "description": "Information about rate code to be distributed to channels.",
          "$ref": "#/definitions/distributeChannelRatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRestrictions": {
      "description": "Request object for publishing rate restrictions to channels.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "publishRestriction": {
          "description": "Restriction information to be published.",
          "$ref": "#/definitions/publishRatePlanType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRoomMapping": {
      "description": "Request object for changing Channel Room Mapping.",
      "type": "object",
      "properties": {
        "channelRoomMapping": {
          "description": "Channel Room Type mapping details to be changed.",
          "$ref": "#/definitions/channelRoomMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRoomMappingDescriptionDetailsType": {
      "description": "This type holds descriptions of hotel-channel room type mapping. Descriptions may be enhanced descriptions, HTML supported description or a simple string description.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "enhancedDescription": {
          "description": "Enhanced descriptions which allow defining line 1 to 3 descriptions.",
          "$ref": "#/definitions/channelMappingEnhancedDescriptionType"
        },
        "hTMLSupportedDescription": {
          "description": "HTML supported description with addition of channel room type short description.",
          "$ref": "#/definitions/channelRoomMappingHTMLSupportedDescriptionType"
        }
      }
    },
    "channelRoomMappingDescriptionType": {
      "description": "This type holds descriptions of hotel-channel room type mapping. Description may be from Hotel Room Type description, Global description or custom user defined description. Global description only supports enhanced description.",
      "type": "object",
      "properties": {
        "customDescription": {
          "description": "Custom or user-defined description of hotel-channel room type mapping.",
          "$ref": "#/definitions/channelRoomMappingDescriptionDetailsType"
        },
        "globalDescription": {
          "description": "Description of hotel-channel room type mapping from Global description.",
          "$ref": "#/definitions/channelMappingEnhancedDescriptionType"
        },
        "roomTypeDescription": {
          "description": "Description of hotel-channel room type mapping from Hotel Room Type configuration.",
          "$ref": "#/definitions/channelRoomMappingDescriptionDetailsType"
        }
      }
    },
    "channelRoomMappingDetailsType": {
      "description": "Basic details of hotel-channel room type mapping.",
      "type": "object",
      "properties": {
        "active": {
          "description": "Flag that indicates whether hotel-channel room type mapping is active or not.",
          "type": "boolean"
        },
        "alternateChannelRoomType": {
          "description": "Alternate channel room type name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "baseAllocation": {
          "description": "Channel base allocation.",
          "type": "integer"
        },
        "bedTypeCode": {
          "description": "Channel bed type code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bookingChannelInfo": {
          "description": "Additional details about the booking channel.",
          "$ref": "#/definitions/bookingChannelInfoType"
        },
        "channelRateCodes": {
          "description": "Channel rate codes where hotel-channel room mappings belong to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "channelRoomTypeOrder": {
          "description": "Channel room type order of the hotel-channel room type mapping.",
          "type": "number"
        },
        "description": {
          "description": "Hotel-channel room type mapping description.",
          "$ref": "#/definitions/channelRoomMappingDescriptionType"
        },
        "endDate": {
          "description": "End date of the hotel-channel room type mapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "globalDescription": {
          "description": "Global descriptions for the hotel room type.",
          "$ref": "#/definitions/channelMappingEnhancedDescriptionType"
        },
        "newBeginDate": {
          "description": "Begin date of the channel room type mapping. This element is used for sending modified Begin date value for operation ChangeChannelRoomMapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "newChannelRoomType": {
          "description": "Channel Room Type. This element is used for sending modified Channel room type value for operation ChangeChannelRoomMapping.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateCodes": {
          "description": "Rate codes where hotel-channel room type mappings belong to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "sellSequence": {
          "description": "Sell sequence for hotel-channel room type mapping.",
          "type": "number"
        }
      }
    },
    "channelRoomMappingHTMLSupportedDescriptionType": {
      "description": "This type holds HTML description of hotel-channel room type with additional channel room type short description.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "shortDescription": {
          "description": "Channel room type or rate code short description.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "channelRoomMappingMasterInfoType": {
      "description": "Additional details about the booking channels and source descriptions for a hotel room type referenced within the fetched results.",
      "type": "object",
      "properties": {
        "bookingChannelsInfo": {
          "description": "Additional details about booking channels.",
          "$ref": "#/definitions/bookingChannelsInfoType"
        },
        "sourceDescriptions": {
          "description": "hotel-channel room type mapping source descriptions.",
          "$ref": "#/definitions/channelRoomMappingsSourceDescriptionsType"
        }
      }
    },
    "channelRoomMappingSourceDescriptionsType": {
      "description": "Hotel-channel room type mapping source descriptions.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Hotel room type description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "globalDescription": {
          "description": "Hotel room type global description.",
          "$ref": "#/definitions/channelMappingEnhancedDescriptionType"
        },
        "hotelId": {
          "description": "Hotel code the descriptions belong to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "Room type the descriptions belong to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "channelRoomMappingSummaryType": {
      "description": "Basic details of hotel-channel room type mapping.",
      "type": "object",
      "properties": {
        "active": {
          "description": "Flag that indicates whether hotel-channel room type mapping is active or not.",
          "type": "boolean"
        },
        "alternateChannelRoomType": {
          "description": "Alternate channel room type name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "baseAllocation": {
          "description": "Channel base allocation.",
          "type": "integer"
        },
        "bedTypeCode": {
          "description": "Channel bed type code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "beginDate": {
          "description": "Begin Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "bookingChannelCode": {
          "description": "Booking Channel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelRateCodes": {
          "description": "Channel rate codes where hotel-channel room mappings belong to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "channelRoomType": {
          "description": "Channel Room Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelRoomTypeOrder": {
          "description": "Channel room type order of the hotel-channel room type mapping.",
          "type": "number"
        },
        "defaultOccupancy": {
          "description": "Default occupancy for the room type.",
          "type": "integer"
        },
        "description": {
          "description": "Hotel-channel room type mapping description.",
          "$ref": "#/definitions/channelRoomMappingDescriptionType"
        },
        "endDate": {
          "description": "End date of the hotel-channel room type mapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "maximumOccupancy": {
          "description": "The maximum occupancy for this room category.",
          "type": "integer"
        },
        "noOfRateRoomsMapped": {
          "description": "Number of active rate room mappings for the channel room type.",
          "type": "integer"
        },
        "physicalRoomsCount": {
          "description": "The physical number of rooms in this room category at this property.",
          "type": "integer"
        },
        "rateCodes": {
          "description": "Rate codes where hotel-channel room type mappings belong to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "roomType": {
          "description": "Room Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sellSequence": {
          "description": "Sell sequence for hotel-channel room type mapping.",
          "type": "number"
        }
      }
    },
    "channelRoomMappingType": {
      "description": "Basic details of hotel-channel room type mapping.",
      "type": "object",
      "properties": {
        "active": {
          "description": "Flag that indicates whether hotel-channel room type mapping is active or not.",
          "type": "boolean"
        },
        "alternateChannelRoomType": {
          "description": "Alternate channel room type name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "baseAllocation": {
          "description": "Channel base allocation.",
          "type": "integer"
        },
        "bedTypeCode": {
          "description": "Channel bed type code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "beginDate": {
          "description": "Begin Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "bookingChannelCode": {
          "description": "Booking Channel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bookingChannelInfo": {
          "description": "Additional details about the booking channel.",
          "$ref": "#/definitions/bookingChannelInfoType"
        },
        "channelRateCodes": {
          "description": "Channel rate codes where hotel-channel room mappings belong to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "channelRoomMappingDetails": {
          "description": "Channel Room Type. This element is used for sending modified Channel room type value for operation ChangeChannelRoomMapping.",
          "$ref": "#/definitions/channelRoomMappingDetailsType"
        },
        "channelRoomType": {
          "description": "Channel Room Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelRoomTypeOrder": {
          "description": "Channel room type order of the hotel-channel room type mapping.",
          "type": "number"
        },
        "description": {
          "description": "Hotel-channel room type mapping description.",
          "$ref": "#/definitions/channelRoomMappingDescriptionType"
        },
        "endDate": {
          "description": "End date of the hotel-channel room type mapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "globalDescription": {
          "description": "Global descriptions for the hotel room type.",
          "$ref": "#/definitions/channelMappingEnhancedDescriptionType"
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "newBeginDate": {
          "description": "Begin date of the channel room type mapping. This element is used for sending modified Begin date value for operation ChangeChannelRoomMapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "newChannelRoomType": {
          "description": "Channel Room Type. This element is used for sending modified Channel room type value for operation ChangeChannelRoomMapping.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateCodes": {
          "description": "Rate codes where hotel-channel room type mappings belong to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "roomType": {
          "description": "Room Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sellSequence": {
          "description": "Sell sequence for hotel-channel room type mapping.",
          "type": "number"
        }
      }
    },
    "channelRoomMappings": {
      "description": "Request object for Channel Room Mapping creation.",
      "type": "object",
      "properties": {
        "channelRoomMappings": {
          "description": "Channel Room Type mapping details to be defined.",
          "$ref": "#/definitions/channelRoomMappingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRoomMappingsSourceDescriptionsType": {
      "description": "This type holds hotel-channel room type mapping source descriptions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelRoomMappingSourceDescriptionsType"
      }
    },
    "channelRoomMappingsSummary": {
      "description": "Operation to fetch hotel-channel room type mappings.",
      "type": "object",
      "properties": {
        "channelRoomMappingsSummary": {
          "description": "Refer to Generic common types document.",
          "$ref": "#/definitions/channelRoomMappingsSummaryType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "masterInfo": {
          "description": "Additional details about the booking channels and source descriptions for a hotel room type referenced within the fetched results.",
          "$ref": "#/definitions/channelRoomMappingMasterInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRoomMappingsSummaryType": {
      "description": "Collection of hotel-channel room type mappings.",
      "type": "object",
      "properties": {
        "channelRoomMappingSummary": {
          "description": "Information about hotel-channel room type mapping.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelRoomMappingSummaryType"
          }
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "channelRoomMappingsType": {
      "description": "Hotel-channel room type mapping information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelRoomMappingType"
      }
    },
    "channelRoomTypes": {
      "description": "Request object for creating channel room types.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "roomTypes": {
          "description": "channel room types to be created.",
          "type": "object",
          "properties": {
            "bookingChannelCode": {
              "description": "Channel code.",
              "$ref": "#/definitions/codeType"
            },
            "roomType": {
              "description": "Channel room type details.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/systemRoomTypeType"
              }
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelSellLimitScheduleType": {
      "description": "Details about a sell limit schedule for a channel or channel room type.",
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "description": "Channel for which the sell limit schedule is applicable.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelRoomType": {
          "description": "Channel room type for which the sell limit schedule is applicable.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "dateRange": {
          "description": "Sell limit schedule begin and end dates as well as which days of the week the limit applies to.",
          "$ref": "#/definitions/timeSpanDaysOfWeekType"
        },
        "hotelId": {
          "description": "Hotel for which the sell limit schedule is applicable.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "numberOfRooms": {
          "description": "Number of rooms which can be sold under the hotel, channel, and channel room type combination for the specified date range.",
          "type": "integer"
        },
        "sellLimitId": {
          "description": "Unique identifier for the channel sell limit.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "channelSellLimitSchedulesType": {
      "description": "Details about a sell limit schedule for a channel or channel room type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelSellLimitScheduleType"
      }
    },
    "channelSellLimitType": {
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "description": "Channel for which this sell limit is applicable.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "date": {
          "description": "Date on which this sell limit is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "numberOfRooms": {
          "description": "Number of rooms that can be sold for this particular sell limit date.",
          "type": "integer"
        }
      }
    },
    "channelSellLimits": {
      "description": "Response object containing sell limit schedules set for the channel or channel room type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "sellLimits": {
          "description": "List of sell limit schedules configured for the requested channel or channel room type.",
          "$ref": "#/definitions/channelSellLimitSchedulesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelSellLimitsByDate": {
      "description": "Request object to create or update sell limits for the channel or channel room type by day. Advanced logic is implemented to combine consecutive blocks of sell limits into a single schedule which have the same limits configured. Existing schedules can also be split as needed to account for overlapping schedules.",
      "type": "object",
      "properties": {
        "adjustOverlappingSchedules": {
          "description": "Flag to indicate whether any overlapping schedules should be automatically adjusted (split, truncated, etc.) as needed.",
          "type": "boolean"
        },
        "sellLimits": {
          "description": "Collection of sell limits to be created or updated for the channel or channel room type and a particular day.",
          "$ref": "#/definitions/channelSellLimitsByDateType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelSellLimitsByDateRange": {
      "description": "Request object to create or update sell limit schedules for the channel or channel room type within a date range. Existing schedules can be split as needed to account for overlapping schedules.",
      "type": "object",
      "properties": {
        "adjustOverlappingSchedules": {
          "description": "Flag to indicate whether any overlapping schedules should be automatically adjusted (split, truncated, etc.) as needed.",
          "type": "boolean"
        },
        "sellLimits": {
          "description": "List of sell limit schedules to be created or updated for the channel or channel room type.",
          "$ref": "#/definitions/channelSellLimitSchedulesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelSellLimitsByDateType": {
      "description": "Collection of sell limits for a channel or channel room type structured by day.",
      "type": "object",
      "properties": {
        "channelRoomTypeSellLimits": {
          "description": "Details about the sell limit for this particular resort, channel, channel room type, and date.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "bookingChannelCode": {
                "description": "Channel for which this sell limit is applicable.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "channelRoomType": {
                "description": "Channel room type for which this sell limit is applicable.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "date": {
                "description": "Date on which this sell limit is applicable.",
                "type": "string",
                "format": "date",
                "maxLength": 8
              },
              "numberOfRooms": {
                "description": "Number of rooms that can be sold for this particular sell limit date.",
                "type": "integer"
              }
            }
          }
        },
        "channelSellLimits": {
          "description": "Details about the sell limit for this particular resort, channel, and date.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelSellLimitType"
          }
        },
        "hotelId": {
          "description": "Hotel under which the channel sell limits are applicable.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "channelSnapshotType": {
      "description": "Inventory statistic and restriction information for a given date.",
      "type": "object",
      "properties": {
        "availableRooms": {
          "description": "Number of available rooms.",
          "type": "number"
        },
        "date": {
          "description": "Date of the statistics and restrictions.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "inventoryRooms": {
          "description": "Number of rooms in inventory.",
          "type": "number"
        },
        "restrictionsInfo": {
          "description": "Restrictions information for the day.",
          "$ref": "#/definitions/restrictionsInfoType"
        },
        "roomsSold": {
          "description": "Number of rooms sold.",
          "type": "number"
        },
        "sellLimit": {
          "description": "Number of overbooking rooms allowed.",
          "type": "number"
        },
        "tentativeRoomsSold": {
          "description": "Number of tentative rooms sold - does not include definite reservations.",
          "type": "number"
        }
      }
    },
    "channelStatementAccountType": {
      "description": "Channel account statement type to hold statement details. WS wont update any statement account information except Note and account details information.",
      "type": "object",
      "properties": {
        "accountCode": {
          "description": "Holds Account code of the channel account statement.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "beginDate": {
          "description": "Holds begin date of the account statement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "channelAccountStatementDetails": {
          "description": "Holds Channel account statement details.",
          "$ref": "#/definitions/channelStatementDetailsType"
        },
        "contractId": {
          "description": "Contract ID of the account statement.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "endDate": {
          "description": "Holds end date of the account statement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "note": {
          "description": "Holds Note for the account statement.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "profileId": {
          "description": "Profile ID of the account statement.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "totalDetailsAmount": {
          "description": "Holds Total amount information from details in channel account currency.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "channelStatementAccountsType": {
      "description": "Provides detailed information regarding Channel Account contract.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelStatementAccountType"
      }
    },
    "channelStatementDetailType": {
      "description": "To hold channel account contract element detailed information.",
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "description": "Holds channel of the contract element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bookingChannelType": {
          "description": "Holds channel type of the contract element.",
          "type": "string",
          "maxLength": 240,
          "minLength": 0
        },
        "contractAmount": {
          "description": "Holds contract amount calculated while generating the contracts.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "contractId": {
          "description": "Contract Id of the contract.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "contractPricing": {
          "description": "Price information for this contract element.",
          "$ref": "#/definitions/contractPricingType"
        },
        "contractRangeInformation": {
          "description": "Holds Contract Range per number of Properties, Rooms or reservations information.",
          "$ref": "#/definitions/contractRangeInformationType"
        },
        "feeType": {
          "description": "Holds Fee type of the contract element. If Fee type is not populated, it will be considered to delete this contract element.",
          "$ref": "#/definitions/contractFeeTypeType"
        },
        "frequency": {
          "description": "Holds frequency of billing.",
          "$ref": "#/definitions/contractPriceFrequencyType"
        },
        "hotelId": {
          "description": "Holds the property for the statement detail.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoiceAmount": {
          "description": "Holds amount per line calculated while generating the contracts.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "note": {
          "description": "Holds Note for the contract element.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "oldHotelCode": {
          "description": "Holds the value of property that user changed from to find and update.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "orderByList": {
          "description": "Holds the default Order By value.",
          "$ref": "#/definitions/orderByListType"
        },
        "quantity": {
          "description": "Number of Units (transactions, rooms or properties).",
          "type": "integer"
        },
        "routingAccount": {
          "description": "Holds Routing account. If no value is provided, it will be defaulted to *",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sequence": {
          "description": "Sequence identifies contract element per contract.",
          "type": "integer"
        },
        "statementId": {
          "description": "Statement Id of the statement detail.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "channelStatementDetailsType": {
      "description": "Provides detailed information regarding Channel Account statements.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelStatementDetailType"
      }
    },
    "channelType": {
      "description": "Identify details of an external system.",
      "type": "object",
      "properties": {
        "addOnLicense": {
          "description": "External system Add-on license. Available for ADS only.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "carriers": {
          "description": "External system carrier details.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/systemCarrierType"
          }
        },
        "errorCodes": {
          "description": "External system error details.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/systemErrorType"
          }
        },
        "parameters": {
          "description": "Parameters of external system.",
          "$ref": "#/definitions/parametersType"
        },
        "rateCategories": {
          "description": "External system rate categories details.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/systemRateCategoryType"
          }
        },
        "rateLevels": {
          "description": "External system rate levels details.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/systemRateLevelType"
          }
        },
        "roomTypes": {
          "description": "External system room type details.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/systemRoomTypeType"
          }
        },
        "sellBy": {
          "description": "External system Sell By.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "systemInfo": {
          "description": "Identify main details of external system.",
          "$ref": "#/definitions/systemInfoType"
        }
      }
    },
    "channels": {
      "description": "Response object for fetching channels.",
      "type": "object",
      "properties": {
        "channels": {
          "description": "Collection of channels based on the request criteria.",
          "$ref": "#/definitions/channelsType"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelsType": {
      "description": "Identify details of channels.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelType"
      }
    },
    "chargeTypeType": {
      "description": "Total Pricing Element either Tax or Service Fee",
      "type": "string",
      "enum": [
        "Tax",
        "ServiceFee"
      ]
    },
    "codeDescriptionType": {
      "description": "This contains a generic code and description information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "maxLength": 20,
        "minLength": 0
      }
    },
    "codeType": {
      "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
      "type": "string",
      "maxLength": 20,
      "minLength": 0
    },
    "contractElementInformationType": {
      "description": "To hold channel account contract element detailed information.",
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "description": "Holds channel of the contract element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bookingChannelType": {
          "description": "Holds channel type of the contract element.",
          "type": "string",
          "maxLength": 240,
          "minLength": 0
        },
        "contractId": {
          "description": "Contract Id of the contract.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "contractPricing": {
          "description": "Price information for this contract element.",
          "$ref": "#/definitions/contractPricingType"
        },
        "contractRangeInformation": {
          "description": "Holds Contract Range per number of Properties, Rooms or reservations information.",
          "$ref": "#/definitions/contractRangeInformationType"
        },
        "feeType": {
          "description": "Holds Fee type of the contract element. If Fee type is not populated, it will be considered to delete this contract element.",
          "$ref": "#/definitions/contractFeeTypeType"
        },
        "frequency": {
          "description": "Holds frequency of billing.",
          "$ref": "#/definitions/contractPriceFrequencyType"
        },
        "note": {
          "description": "Holds Note for the contract element.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "sequence": {
          "description": "Sequence identifies contract element per contract.",
          "type": "integer"
        }
      }
    },
    "contractFeeTypeType": {
      "description": "To specify contract element is for Miscellaneous fee.",
      "type": "string",
      "enum": [
        "Setup",
        "Maintenance",
        "Transaction",
        "Fax",
        "MinimumFee",
        "Miscellaneous"
      ]
    },
    "contractPriceFrequencyType": {
      "description": "To specify bills will be generated on Yearly basis.",
      "type": "string",
      "enum": [
        "Monthly",
        "Quarterly",
        "HalfYearly",
        "Yearly"
      ]
    },
    "contractPriceType": {
      "description": "To specify price will be billed per reservation. This is allowed only if Fee type is Transaction or Fax.",
      "type": "string",
      "enum": [
        "FlatFee",
        "Property",
        "Room",
        "Reservation"
      ]
    },
    "contractPricingType": {
      "description": "Price information applied as part of contract.",
      "type": "object",
      "properties": {
        "price": {
          "description": "Price that will be billed as part of this contract element.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "pricePer": {
          "description": "Identifies weather Price to be billed per Reservation, property, room or as a flat fee.",
          "$ref": "#/definitions/contractPriceType"
        }
      }
    },
    "contractRangeInformationType": {
      "description": "Holds Contract Range per number of Properties, Rooms or reservations information.",
      "type": "object",
      "properties": {
        "contractRange": {
          "description": "Holds minimum and maximum range per number of Properties/Rooms/Reservations value.",
          "$ref": "#/definitions/numberRangeType"
        },
        "contractTransaction": {
          "description": "Holds Contract Range per number of Properties, Rooms or reservations information.",
          "$ref": "#/definitions/contractTransactionType"
        },
        "months": {
          "description": "Holds No of months calculated while generating statements for Maintenance Fee type.",
          "type": "number"
        },
        "range": {
          "description": "Holds No of reservations range for Transaction Fee type.",
          "type": "integer"
        }
      }
    },
    "contractTransactionType": {
      "description": "To specify range information is considered per number of Rooms. This is allowed only if Fee type is Maintenance.",
      "type": "string",
      "enum": [
        "Properties",
        "Rooms"
      ]
    },
    "copyMarketingTextType": {
      "description": "Copy Channel Marketing Text among Channels",
      "type": "object",
      "properties": {
        "copyFrom": {
          "type": "object",
          "properties": {
            "copyFrom": {
              "$ref": "#/definitions/marketingTextType"
            }
          }
        },
        "copyTo": {
          "type": "object",
          "properties": {
            "bookingChannelCodes": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              }
            },
            "hotelCodes": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              }
            }
          }
        }
      }
    },
    "copyTotalPricingElementsType": {
      "description": "Total Pricing Elements to copy from single source property to multi target properties",
      "type": "object",
      "properties": {
        "targetHotels": {
          "description": "Target properties to copy Total Pricing Element records",
          "$ref": "#/definitions/codeListType"
        },
        "totalPricingElements": {
          "description": "Total Pricing Element Type record details to copy",
          "$ref": "#/definitions/totalPricingElementsType"
        }
      }
    },
    "countryNameType": {
      "description": "Code for a country or a nationality.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Used for Character Strings, length 0 to 200.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "creditCardMappingType": {
      "description": "Base external system mapping info.",
      "type": "object",
      "properties": {
        "dateRange": {
          "description": "Start and End Date of the mapping validity. If value is not supplied that mapping will be valid forever.",
          "$ref": "#/definitions/timeSpanType"
        },
        "description": {
          "description": "Detailed Description of the given entity.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "externalSystemCode": {
          "description": "Code used in the External System",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "localSystemCode": {
          "description": "Code used inside the OPERA System",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "systemInfo": {
          "description": "Identify details of External System",
          "$ref": "#/definitions/systemInfoType"
        }
      }
    },
    "creditCards": {
      "description": "Request object for changing existing external system credit cards.",
      "type": "object",
      "properties": {
        "creditCards": {
          "description": "External system credit cards to be changed.",
          "$ref": "#/definitions/creditCardsMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardsMapping": {
      "description": "Response object for fetching external system credit cards.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "creditCardsMapping": {
          "description": "Collection of external system credit cards based on the request criteria.",
          "$ref": "#/definitions/creditCardsMappingType"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardsMappingType": {
      "description": "Information about an external system credit card mapping.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/creditCardMappingType"
      }
    },
    "currencies": {
      "description": "Request object for changing existing external system currencies.",
      "type": "object",
      "properties": {
        "currencies": {
          "description": "External system currencies to be changed.",
          "$ref": "#/definitions/currenciesMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "currenciesMapping": {
      "description": "Response object for fetching external system currencies.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "currenciesMapping": {
          "description": "Collection of external system currencies based on the request criteria.",
          "$ref": "#/definitions/currenciesMappingType"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "currenciesMappingType": {
      "description": "Information about an external currency mapping.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/currencyMappingType"
      }
    },
    "currencyAmountType": {
      "description": "A monetary value expressed with a currency code.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        }
      }
    },
    "currencyMappingType": {
      "description": "Base external system mapping info.",
      "type": "object",
      "properties": {
        "channelDecimalPosition": {
          "description": "Number of decimal positions used by the currency as per the channel.",
          "type": "integer"
        },
        "dateRange": {
          "description": "Start and End Date of the mapping validity. If value is not supplied that mapping will be valid forever.",
          "$ref": "#/definitions/timeSpanType"
        },
        "description": {
          "description": "Detailed Description of the given entity.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "externalSystemCode": {
          "description": "Code used in the External System",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "lanyonDecimalPosition": {
          "description": "Number of decimal positions used by the currency.",
          "type": "integer"
        },
        "localSystemCode": {
          "description": "Code used inside the OPERA System",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "systemInfo": {
          "description": "Identify details of External System",
          "$ref": "#/definitions/systemInfoType"
        }
      }
    },
    "depositCancelRevenueType": {
      "description": "The type to indicate what revenue is to be used for calculating deposit/cancellation amounts.",
      "type": "string",
      "enum": [
        "Rooms",
        "Catering",
        "All"
      ]
    },
    "depositPolicyType": {
      "description": "Used to define the deposit policy, guarantees policy, and/or accepted forms of payment.",
      "type": "object",
      "properties": {
        "amountPercent": {
          "description": "Payment expressed as a fixed amount, or a percentage of/or room nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "deadline": {
          "description": "Payment deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "depositReceiptNo": {
          "description": "Receipt number associated with the deposit policy",
          "type": "integer"
        },
        "depositReqReversed": {
          "description": "Flag to indicate if deposit policy is reversed",
          "type": "boolean"
        },
        "description": {
          "description": "Text description of the Payment in a given language.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the deposit policy.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        },
        "policyCode": {
          "description": "Deposit Policy Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date associated with the deposit policy",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "typeOfCharges": {
          "description": "Defines if the deposit amount is calculated based on Room Charges, Catering Charges or both",
          "$ref": "#/definitions/depositCancelRevenueType"
        }
      }
    },
    "distributeChannelRateMappingType": {
      "description": "Basic details of a hotel-channel rate code mapping.",
      "type": "object",
      "properties": {
        "allowRateUpdate": {
          "description": "Indicates if Rate updates to Channel are allowed.",
          "type": "boolean"
        },
        "allowRestrictionUpdate": {
          "description": "Indicates if Rate Restrictions are sent to an ADS, GDS, or ODS partner, such as Expedia, via the AVH messaging functionality.",
          "type": "boolean"
        },
        "beginDate": {
          "description": "Begin date of the channel rate code mapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "blockRateIndicator": {
          "description": "Block Rate Indicator.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "carrierInfo": {
          "description": "Carrier attached to the Channel Rate Plan.",
          "$ref": "#/definitions/carrierInfoType"
        },
        "channelRatePlanCategory": {
          "description": "Channel rate category of hotel-channel rate code mapping.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelRatePlanOrder": {
          "description": "Order of the channel rate type mapping.",
          "type": "number"
        },
        "channelRatePlanWebName": {
          "description": "Name of channel rate plan code to display on web.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "description": {
          "description": "Description of channel rate plan code.",
          "$ref": "#/definitions/channelRateMappingDescriptionType"
        },
        "endDate": {
          "description": "End date of the channel rate code mapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hasChannelNegotiatedRates": {
          "description": "True if the mapping has channel negotiated rates, otherwise false.",
          "type": "boolean"
        },
        "hasNegotiatedRates": {
          "description": "True if this channel rate plan code has negotiated rates, otherwise false",
          "type": "boolean"
        },
        "newChannelRatePlanCode": {
          "description": "New Channel Rate Plan Code of the mapping. Used only to change the Channel Rate Plan Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "promotionCode": {
          "description": "Promotion Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateLevel": {
          "description": "Rate Level.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "Rate Plan Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanInfo": {
          "description": "Rate plan information including description and sell dates.",
          "$ref": "#/definitions/ratePlanPrimaryDetailsType"
        },
        "rateTierAttr": {
          "description": "Rate Tier.",
          "type": "object",
          "properties": {
            "rateTier": {
              "type": "integer"
            }
          }
        },
        "regionalAvailAttr": {
          "description": "Indicates if rate participates in Regional Availability.",
          "type": "object",
          "properties": {
            "allowRegionalAvail": {
              "type": "boolean"
            },
            "inclInRegionalAvail": {
              "type": "boolean"
            }
          }
        },
        "roomTypes": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        }
      }
    },
    "distributeChannelRateType": {
      "description": "Information about rate codes to be distributed to a channel.",
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "description": "Channel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelRatePlanCode": {
          "description": "Channel Rate Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "distributeChannelRateMappings": {
          "description": "Information about rate codes to be distributed to a channel.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/distributeChannelRateMappingType"
          }
        },
        "negotiatedProfiles": {
          "description": "Negotiated channel rate details to be modified.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelNegProfileType"
          }
        }
      }
    },
    "distributeChannelRatesType": {
      "description": "Information about rate codes to be distributed to channels.",
      "type": "object",
      "properties": {
        "distributeChannelRate": {
          "description": "Information about rate codes to be distributed to a channel.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/distributeChannelRateType"
          }
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "distributionTemplateChannelRateType": {
      "description": "Information about channel rates of a distribution template.",
      "type": "object",
      "properties": {
        "channelRateCategory": {
          "description": "Channel Rate Category where distribution template will be distributed to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelRateCode": {
          "description": "Channel Rate Code where distribution template will be distributed to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelRateLevel": {
          "description": "Channel Rate Level where distribution template will be distributed to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateUpdate": {
          "description": "Rate update flag which will be the default value when rate code is distributed to channels.",
          "type": "boolean"
        },
        "regionalAvailability": {
          "description": "Regional Availability flag which will be the default value when rate code is distributed to channels.",
          "type": "boolean"
        },
        "restrictionUpdate": {
          "description": "Restriction update flag which will be the default value when rate code is distributed to channels.",
          "type": "boolean"
        },
        "returnSGA": {
          "description": "Return SGA flag which will be the default value when rate code is distributed to channels.",
          "type": "boolean"
        },
        "systemInfo": {
          "description": "Main details of external system.",
          "$ref": "#/definitions/systemInfoType"
        }
      }
    },
    "distributionTemplateChannelRatesType": {
      "description": "Information about channel rate where distribution template will be distributed to.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/distributionTemplateChannelRateType"
      }
    },
    "distributionTemplateType": {
      "description": "Information about a distribution template.",
      "type": "object",
      "properties": {
        "channelRates": {
          "description": "Information about channel rates where distribution template will be distributed to.",
          "$ref": "#/definitions/distributionTemplateChannelRatesType"
        },
        "code": {
          "description": "Uniquely identifies the distribution template.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the distribution template.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "displaySequence": {
          "description": "Display sequence of the distribution template.",
          "type": "integer"
        },
        "inactive": {
          "description": "Flag that indicates whether distribution template is inactive or not.",
          "type": "boolean"
        },
        "negotiatedRate": {
          "description": "Overrides availability of configuring negotiated rates given Channel is flagged as negotiated.",
          "type": "boolean"
        },
        "type": {
          "description": "Classification or grouping of the distribution template.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "distributionTemplates": {
      "description": "Response object for fetching distribution templates based on search criteria.",
      "type": "object",
      "properties": {
        "distributionTemplates": {
          "description": "Collection of chain level distribution templates.",
          "$ref": "#/definitions/distributionTemplatesType"
        },
        "hotelsDistributionTemplates": {
          "description": "Collection of hotel level distribution templates.",
          "$ref": "#/definitions/hotelsDistributionTemplatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "distributionTemplatesType": {
      "description": "Information about a distribution template.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/distributionTemplateType"
      }
    },
    "emailInfoType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "emailType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "enhancedDescriptionType": {
      "description": "This type holds enhanced room/rate description.",
      "type": "object",
      "properties": {
        "description": {
          "$ref": "#/definitions/translationTextType2000"
        },
        "enhancedDesc1": {
          "$ref": "#/definitions/translationTextType50"
        },
        "enhancedDesc2": {
          "$ref": "#/definitions/translationTextType50"
        },
        "enhancedDesc3": {
          "$ref": "#/definitions/translationTextType50"
        },
        "shortDescription": {
          "$ref": "#/definitions/translationTextType2000"
        },
        "source": {
          "type": "string"
        }
      }
    },
    "errorInstance": {
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "title": "Error Instance Details",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "errorType": {
      "description": "Standard way to indicate that an error occurred during the processing of an message. If the message successfully processes, but there are business errors, those errors should be passed in the warning element.",
      "type": "object",
      "properties": {
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nodeList": {
          "description": "An XPath expression that selects all the nodes whose data caused this error. Further, this expression should have an additional contraint which contains the data of the node. This will provide the offending data back to systems that cannot maintain the original message.",
          "type": "string"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string"
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string"
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string"
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "exceptionDetailType": {
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "title": "Error Detail",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "fetchedChannelHotelLetters": {
      "description": "Response object after fetch Hotel Letters associated with the Booking Channels",
      "type": "object",
      "properties": {
        "channelHotelLetters": {
          "description": "Retrieve the collection detail of Hotel Letters associated with the booking channel based on the search criteria",
          "$ref": "#/definitions/channelHotelLettersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "generalAvailSimulatorType": {
      "description": "Room Type and Room Rate combination.",
      "type": "object",
      "properties": {
        "availableRatePlans": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/availableRatePlanType"
          }
        },
        "bookingChannelCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketingInfo": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "sellOrder": {
          "description": "Sell by room, rate or rate room.",
          "$ref": "#/definitions/sellOrderType"
        },
        "supportsHTMLEditor": {
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "generalAvailabilitySimulator": {
      "description": "Response object to simulate general availability.",
      "type": "object",
      "properties": {
        "generalAvailability": {
          "description": "Room Type and room rate combination.",
          "$ref": "#/definitions/generalAvailSimulatorType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "genericGlobalDescriptionType": {
      "description": "This type holds enhanced room/rate description.",
      "type": "object",
      "properties": {
        "globalDescType": {
          "description": "Global description type to differentiate the type",
          "$ref": "#/definitions/globalDescTypeType"
        },
        "hotelId": {
          "description": "Property mapping with Rate plan code or Room type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "Global description type holds Rate plan code.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "ratePlanGlobalDescription": {
          "description": "Generic global description holds rate plan enhanced description details",
          "$ref": "#/definitions/channelRateMappingEnhancedDescriptionType"
        },
        "roomType": {
          "description": "Global description type holds Room Type.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "roomTypeGlobalDescription": {
          "description": "Generic global description Room Type enhanced description details",
          "$ref": "#/definitions/channelMappingEnhancedDescriptionType"
        }
      }
    },
    "globalDescTypeType": {
      "description": "Either Room Type or Rate Plan Code",
      "type": "string",
      "enum": [
        "RoomType",
        "RatePlan"
      ]
    },
    "guaranteeMappingType": {
      "description": "Base external system mapping info.",
      "type": "object",
      "properties": {
        "dateRange": {
          "description": "Start and End Date of the mapping validity. If value is not supplied that mapping will be valid forever.",
          "$ref": "#/definitions/timeSpanType"
        },
        "description": {
          "description": "Detailed Description of the given entity.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "externalSystemCode": {
          "description": "Code used in the External System",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "localSystemCode": {
          "description": "Code used inside the OPERA System",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "requirementCode": {
          "description": "Requirement code of guarantee.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "systemInfo": {
          "description": "Identify details of External System",
          "$ref": "#/definitions/systemInfoType"
        }
      }
    },
    "guaranteeRequirementsType": {
      "description": "Specifies various requirement for the guarantee code.",
      "type": "object",
      "properties": {
        "address": {
          "description": "When true indicates address on the reservation is required for this guarantee code.",
          "type": "boolean"
        },
        "arrivalTime": {
          "description": "When true indicates arrival Time on the reservation is required for this guarantee code.",
          "type": "boolean"
        },
        "cancellation": {
          "description": "When true indicates cancellation on the reservation is required for this guarantee code.",
          "type": "boolean"
        },
        "creditCard": {
          "description": "When true indicates Credit Card on the reservation is required for this guarantee code.",
          "type": "boolean"
        },
        "deposit": {
          "description": "When true indicates deposit is required for this guarantee code.",
          "type": "boolean"
        },
        "phoneNumber": {
          "description": "When true indicates phone number on the reservation is required for this guarantee code.",
          "type": "boolean"
        },
        "requirementCode": {
          "description": "Requirement Code.",
          "type": "string"
        }
      }
    },
    "guaranteeType": {
      "description": "Specifies Guarantee Code attributes.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the Guarantee Code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "guaranteeCode": {
          "description": "Code assigned to the Guarantee.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "lateArrival": {
          "description": "Represents the late arrival time.",
          "type": "string"
        },
        "onHold": {
          "description": "If true indicates this Guarantee Code is used only to hold the inventory during reservation process.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "paymentTypes": {
          "description": "Specifies various payment types for the guarantee code.",
          "$ref": "#/definitions/paymentTypesType"
        },
        "requirements": {
          "description": "Specifies various requirements for the guarantee code.",
          "$ref": "#/definitions/guaranteeRequirementsType"
        },
        "reserveInventory": {
          "description": "If true indicates inventory will be reserved/deducted when reservation uses this Guarantee Code.",
          "type": "boolean"
        },
        "shortDescription": {
          "description": "Brief description of the Guarantee Code.",
          "$ref": "#/definitions/translationTextType80"
        }
      }
    },
    "guarantees": {
      "description": "Request object for changing external system guarantees.",
      "type": "object",
      "properties": {
        "guarantees": {
          "description": "External system guarantees to be changed.",
          "$ref": "#/definitions/guaranteesMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "guaranteesInfoType": {
      "description": "Guarantee details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/guaranteeType"
      }
    },
    "guaranteesMapping": {
      "description": "Response object for fetching external system guarantees.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "guaranteesMapping": {
          "description": "Collection of external system guarantees based on the request criteria.",
          "$ref": "#/definitions/guaranteesMappingType"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "guaranteesMappingType": {
      "description": "Information about an external system guarantee mapping.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/guaranteeMappingType"
      }
    },
    "hotelChannelInfoType": {
      "type": "object",
      "properties": {
        "bookingChannelMappings": {
          "description": "Booking Channels mapping for the Hotel Code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/bookingChannelMappingType"
          }
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "name": {
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "hotelCodeMappingInfoType": {
      "description": "Generic information of the OPERA hotel code, channel hotelcode for the requested booking channel code.",
      "type": "object",
      "properties": {
        "channelHotelCode": {
          "description": "Channel hotel code for the requested OPERA hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "OPERA hotel code for the requested channel hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "hotelDistributionTemplatesType": {
      "description": "Collection of distribution templates.",
      "type": "object",
      "properties": {
        "distributionTemplate": {
          "description": "Information about a distribution template.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/distributionTemplateType"
          }
        },
        "hotelId": {
          "description": "Hotel code where distribute templates belong to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "hotelMappingType": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "name": {
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "hotelsDistributionTemplatesType": {
      "description": "Information about a hotel level distribution template.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelDistributionTemplatesType"
      }
    },
    "indicatorType": {
      "description": "Lamp indicator Type.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        },
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "indicatorsType": {
      "description": "Collection of lamp indicators.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "instanceLink": {
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "type": "object",
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ],
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "letterTypeType": {
      "description": "Represents Inquiry Letter Type.",
      "type": "string",
      "enum": [
        "Confirmation",
        "Cancellation",
        "BanquetEventOrder",
        "Contract",
        "Inquiry"
      ]
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "marketingPolicyType": {
      "description": "Indicates the channel policy type like deposit,cancel etc.",
      "type": "string",
      "enum": [
        "Deposit",
        "Commission",
        "Cancel",
        "Guarantee",
        "General",
        "Penalty",
        "Tax",
        "Promotion"
      ]
    },
    "marketingTextType": {
      "description": "Information about the the Marketing text for the Channel",
      "type": "object",
      "properties": {
        "beginDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "bookingChannelCode": {
          "description": "The code that identifies a Booking Channel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "globalTextYN": {
          "type": "boolean"
        },
        "hotelId": {
          "description": "The code that identifies a Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketingText": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "newBeginDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "newHotelCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "newPolicyDetail": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "newPolicyType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "newTransactionType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "policyDetail": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "policyType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "marketingTextsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/marketingTextType"
      }
    },
    "numberRangeType": {
      "description": "Date Range with Start and End dates.",
      "type": "object",
      "properties": {
        "from": {
          "description": "The starting value of the range of number",
          "type": "integer"
        },
        "to": {
          "description": "The ending value of the range of number",
          "type": "integer"
        }
      }
    },
    "offsetUnitType": {
      "description": "Indicates deadline offset unit type.",
      "type": "string",
      "enum": [
        "Year",
        "Month",
        "Day",
        "Hour"
      ]
    },
    "operaVersionNumberType": {
      "description": "Current Opera Version Number",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "orderByAscDescType": {
      "type": "string",
      "enum": [
        "Asc",
        "Desc"
      ]
    },
    "orderByListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string",
            "maxLength": 2000
          },
          "orderType": {
            "$ref": "#/definitions/orderByAscDescType"
          }
        }
      }
    },
    "parameterType": {
      "description": "Name value pair type that will hold generic parameter information. Only use this type when the parameters being passed are too dynamic to be defined.",
      "type": "object",
      "properties": {
        "parameterName": {
          "description": "Name of the parameter.",
          "type": "string"
        },
        "parameterValue": {
          "description": "Value of the parameter.",
          "type": "string"
        }
      }
    },
    "parametersType": {
      "description": "Collection of generic Name-Value-Pair parameters.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/parameterType"
      }
    },
    "parityGroupType": {
      "description": "Channels and Property Group wise Rates for Room Type and Rate Plan combination.",
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "description": "The code that identifies a Booking Channel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bookingChannelIconURL": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "bookingChannelURL": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "The code that identifies a Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "parityRoomRates": {
          "description": "Room Type and Rate Plan combination.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/parityRoomRateType"
          }
        }
      }
    },
    "parityRateType": {
      "description": "Minimum and Maximum Rate on specific arrival date.",
      "type": "object",
      "properties": {
        "additionalAmounts": {
          "$ref": "#/definitions/additionalAmountListType"
        },
        "additionalDetailList": {
          "$ref": "#/definitions/additionalDetailListType"
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "arrivalDate": {
          "description": "Arrival Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "availableRooms": {
          "type": "integer"
        },
        "channelRatePlanCategory": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "closed": {
          "type": "boolean"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "rateAmounts": {
          "type": "object",
          "properties": {
            "cancellationAmount": {
              "$ref": "#/definitions/currencyAmountType"
            },
            "commissionAmount": {
              "$ref": "#/definitions/currencyAmountType"
            },
            "depositAmount": {
              "$ref": "#/definitions/currencyAmountType"
            },
            "taxAmount": {
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalAmount": {
              "$ref": "#/definitions/currencyAmountType"
            }
          }
        },
        "rateChangesOverDays": {
          "type": "boolean"
        },
        "rateDescription": {
          "$ref": "#/definitions/enhancedDescriptionType"
        },
        "rateFrequency": {
          "type": "string"
        },
        "ratePlanDescription": {
          "type": "string"
        },
        "roomTypeDescription": {
          "$ref": "#/definitions/enhancedDescriptionType"
        },
        "statusCode": {
          "description": "Status Code related to functionality.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "statusDescription": {
          "description": "Description of Status Code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "totalPricingAmounts": {
          "type": "object",
          "properties": {
            "totalRateIncl": {
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalSurcharge": {
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalTax": {
              "$ref": "#/definitions/currencyAmountType"
            }
          }
        },
        "weekendDay": {
          "type": "boolean"
        }
      }
    },
    "parityRoomRateType": {
      "description": "Rate for Room Type and Rate Plan combination.",
      "type": "object",
      "properties": {
        "channelRatePlanCode": {
          "description": "The code that identifies a Booking Channel Rate Plan Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelRoomType": {
          "description": "The code that identifies a Booking Channel Room Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "parityRates": {
          "description": "Rate on specific arrival date.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/parityRateType"
          }
        },
        "ratePlanCode": {
          "description": "The code that identifies a Rate Plan Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "The code that identifies a Room Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "paymentTypesType": {
      "description": "Payment card code like AX,VI etc.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "maxLength": 20,
        "minLength": 0
      }
    },
    "personNameType": {
      "description": "This provides name information for a person.",
      "type": "object",
      "properties": {
        "envelopeGreeting": {
          "description": "Envelope Greeting of the profile",
          "type": "string"
        },
        "externalSystem": {
          "description": "When name type is external, indicates the external system the name belongs to.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "nameTitleSuffix": {
          "description": "Title Suffix. Must be populated if ADVANCED_TITLE is on.",
          "type": "integer"
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        },
        "salutation": {
          "description": "Salutation of the profile",
          "type": "string"
        },
        "surname": {
          "description": "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "personNameTypeType": {
      "description": "Person's name in an external system.",
      "type": "string",
      "enum": [
        "Primary",
        "Alternate",
        "Incognito",
        "External",
        "Phonetic"
      ]
    },
    "policyAmountPercentType": {
      "description": "Defines the percentage basis for calculating the fee amount or the amount.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "basisType": {
          "description": "Provides the basis for how the amount of the guarantee is calculated.",
          "$ref": "#/definitions/policyBasisTypeType"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "nights": {
          "description": "The number of nights of the hotel stay that are used to calculate the fee amount.",
          "type": "integer"
        },
        "percent": {
          "description": "The percentage used to calculate the amount.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        }
      }
    },
    "policyBasisTypeType": {
      "description": "Full Amount.",
      "type": "string",
      "enum": [
        "FlatAmount",
        "Percentage",
        "Nights",
        "NightPercentage",
        "FullAmount"
      ]
    },
    "policyDeadlineType": {
      "description": "Cancellation deadline, absolute or relative.",
      "type": "object",
      "properties": {
        "absoluteDeadline": {
          "description": "Defines the absolute deadline. Either this or the offset attributes may be used.",
          "type": "string",
          "format": "date-time"
        },
        "offsetDropTime": {
          "description": "Time on offset day the cancellation penalties applies.",
          "type": "string",
          "format": "date-time"
        },
        "offsetFromArrival": {
          "description": "The number of days before arrival that allows cancellation without penalties.",
          "type": "integer"
        },
        "offsetFromBookingDate": {
          "description": "The number of days after booking deposit must be paid.",
          "type": "integer"
        }
      }
    },
    "profileId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "properties": {
      "description": "Request object for changing existing external system properties.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "properties": {
          "description": "External system properties to be changed.",
          "$ref": "#/definitions/propertiesMappingType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "propertiesMapping": {
      "description": "Response object for fetching external system properties.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "propertiesMapping": {
          "description": "Collection of external system properties based on the request criteria.",
          "$ref": "#/definitions/propertiesMappingType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "propertiesMappingType": {
      "description": "Information about an external property mapping.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/propertyMappingType"
      }
    },
    "propertyMappingType": {
      "description": "Base external system mapping info.",
      "type": "object",
      "properties": {
        "aRIEnabled": {
          "description": "ADS ARI enabled flag of channel-hotel mapping. Available only if channel type is ADS.",
          "type": "boolean"
        },
        "addOnLicense": {
          "description": "External system Add-on license. This is mandatory when Channel Type is ADS.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bookingLimit": {
          "description": "Booking limit used by ADS interface for booking limit upload. Available if channel type is ADS and ADS ARI is enabled.",
          "type": "integer"
        },
        "chainCode": {
          "description": "Chain code for the channel-hotel mapping.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelHotelCodeMappingBuckets": {
          "description": "Rate code revenue thresholds information.",
          "$ref": "#/definitions/channelHotelCodeMappingBucketsType"
        },
        "city": {
          "description": "City code of the channel hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "dateRange": {
          "description": "Start and End Date of the mapping validity. If value is not supplied that mapping will be valid forever.",
          "$ref": "#/definitions/timeSpanType"
        },
        "description": {
          "description": "Detailed Description of the given entity.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "externalSystemCode": {
          "description": "Code used in the External System",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelChainId": {
          "description": "Hotel chain ID of channel-hotel mapping. Only available for UA channel. It may not be modified if in myfidelio environment, and user is for a specific hotel.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "initialUpload": {
          "description": "Initial Upload or not.",
          "type": "boolean"
        },
        "localSystemCode": {
          "description": "Code used inside the OPERA System",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "prevailingRates": {
          "description": "Prevailing rates flag of channel-hotel mapping. Available if PREVAILING_RATE_BY_LOS parameter is on.",
          "type": "boolean"
        },
        "roomLimit": {
          "description": "Maximum room limit for the channel hotel reservation.",
          "type": "integer"
        },
        "systemInfo": {
          "description": "Identify details of External System",
          "$ref": "#/definitions/systemInfoType"
        }
      }
    },
    "publishRatePlanType": {
      "description": "Information to publish a new rate code.",
      "type": "object",
      "properties": {
        "beginDate": {
          "description": "Date from which rate code will be effective on the channel.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "channel": {
          "description": "The target channel to send the updated rate information to the external channel.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "channelCodes": {
          "description": "The selected Channel Rate Codes for update.",
          "type": "object",
          "properties": {
            "channelRatePlanCodes": {
              "description": "The selected Channel Rate Codes for update.",
              "$ref": "#/definitions/codeListType"
            },
            "channelRoomTypes": {
              "description": "The selected Channel Rate Codes for update.",
              "$ref": "#/definitions/codeListType"
            }
          }
        },
        "endDate": {
          "description": "Date on which rate code will cease to be effective.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotelCodes": {
          "description": "The selected property Rate Codes for update.",
          "type": "object",
          "properties": {
            "ratePlanCodes": {
              "description": "The selected property Rate Codes for update.",
              "$ref": "#/definitions/codeListType"
            },
            "roomTypes": {
              "description": "The selected property Rate Codes for update.",
              "$ref": "#/definitions/codeListType"
            }
          }
        },
        "hotelId": {
          "description": "The source Property to send the updated rate information to the external channel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "rateCodeLockStatusType": {
      "description": "Indicates that the rate code is locked by the central system and cannot be edited at the property level.",
      "type": "string",
      "enum": [
        "Unlocked",
        "External",
        "Property",
        "Central"
      ]
    },
    "rateParity": {
      "description": "Response object to fetch Rate Parity.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "rateParity": {
          "description": "Rate parity.",
          "$ref": "#/definitions/rateParityType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "rateParityType": {
      "description": "Information on Room Rate Parity among Channels/Property",
      "type": "object",
      "properties": {
        "bookingChannelsInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/bookingChannelInfoType"
          }
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "hotelsInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelChannelInfoType"
          }
        },
        "parityGroups": {
          "description": "Channels and Property combination.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/parityGroupType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "ratePlanApprovalStatusType": {
      "description": "Indicates that the Rate Plan is approved for selling.",
      "type": "string",
      "enum": [
        "NewUnapproved",
        "ChangedUnapproved",
        "Rejected",
        "Approved"
      ]
    },
    "ratePlanPrimaryDetailsType": {
      "type": "object",
      "properties": {
        "approvalStatus": {
          "description": "Approval Status of the Rate Plan.",
          "$ref": "#/definitions/ratePlanApprovalStatusType"
        },
        "baseType": {
          "description": "In Advanced Dynamic Base Rates, specifies how the rate code rates are defined, either as FLAT (defined by amounts) or DIFFERENTIAL (defined by offset).",
          "$ref": "#/definitions/baseType"
        },
        "description": {
          "description": "Description of the rate plan.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "endSellDate": {
          "description": "End sell date of the rate plan.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lockStatus": {
          "description": "Specifies the lock status of the rate code. Rates can be Unlocked, Externally locked, locked at Property level, or locked at Central level.",
          "$ref": "#/definitions/rateCodeLockStatusType"
        },
        "privilegedRate": {
          "description": "The particular rate code is marked as privileged making it restrictive on who can update information.",
          "type": "boolean"
        },
        "privilegedRateRestriction": {
          "description": "The restrictions marked on the rate code are marked as privileged making it restrictive on who can update information.",
          "type": "boolean"
        },
        "sellSequence": {
          "description": "Sell Sequence for the rate plan.",
          "type": "number"
        },
        "startSellDate": {
          "description": "Start sell date of the rate plan.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "regionalParityGroupType": {
      "description": "Channels and Property Group wise Rates for Room Type and Rate Plan combination.",
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "description": "The code that identifies a Booking Channel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bookingChannelIconURL": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "bookingChannelURL": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "The code that identifies a Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "regionalParityRates": {
          "description": "Minimum and Maximum Rate on specific arrival date.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/regionalParityRateType"
          }
        }
      }
    },
    "regionalParityRateType": {
      "description": "Rate on specific arrival date.",
      "type": "object",
      "properties": {
        "arrivalDate": {
          "description": "Arrival Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "currencyCode": {
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "maximumRate": {
          "type": "number"
        },
        "minimumRate": {
          "type": "number"
        },
        "statusCode": {
          "description": "Status Code related to functionality.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "statusDescription": {
          "description": "Description of Status Code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "weekendDay": {
          "type": "boolean"
        }
      }
    },
    "regionalRateParity": {
      "description": "Response object to fetch regional rate parity.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "regionalRateParity": {
          "description": "Information on Room rate parity among channels or hotels",
          "$ref": "#/definitions/regionalRateParityType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "regionalRateParityType": {
      "description": "Information on Room Rate Parity among Channels/Property",
      "type": "object",
      "properties": {
        "bookingChannelsInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/bookingChannelInfoType"
          }
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "hotelsInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelChannelInfoType"
          }
        },
        "regionalParityGroups": {
          "description": "Channels and Property combination.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/regionalParityGroupType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "restrictionInfoStatusType": {
      "description": "The RestrictionStatusType is used to indicate the type of restriction applied. An enumerated restriction type is defined in the attribute group.",
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "description": "Booking channel code of actual restriction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "code": {
          "description": "Identifies the type of restriction. I.E. Closed, ClosedForArrival, etc.",
          "$ref": "#/definitions/restrictionStatusesType"
        },
        "lOS1": {
          "description": "Indicates Length of Stay 1 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS2": {
          "description": "Indicates Length of Stay 2 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS3": {
          "description": "Indicates Length of Stay 3 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS4": {
          "description": "Indicates Length of Stay 4 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS5": {
          "description": "Indicates Length of Stay 5 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS6": {
          "description": "Indicates Length of Stay 6 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS7": {
          "description": "Indicates Length of Stay 7 or more is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "rateCategory": {
          "description": "Rate Category of actual restriction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateCode": {
          "description": "Rate Code of actual restriction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomClass": {
          "description": "Room Class of actual restriction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "Room Type of actual restriction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "unit": {
          "description": "Defines restriction in conjunction with Restriction Code. Value must be specified for Restriction Codes MinimumStayThrough, MaximumStayThrough, MinimumLengthOfStay, MaximumLengthOfStay, MinimumAdvanceBooking, MaximumAdvanceBooking.",
          "type": "integer"
        }
      }
    },
    "restrictionInfoType": {
      "type": "object",
      "properties": {
        "restrictionStatus": {
          "description": "Indicates the type of the restriction.",
          "$ref": "#/definitions/restrictionInfoStatusType"
        }
      }
    },
    "restrictionStatusesType": {
      "type": "string",
      "enum": [
        "Closed",
        "ClosedForArrival",
        "ClosedForDeparture",
        "MinimumStayThrough",
        "MaximumStayThrough",
        "MinimumLengthOfStay",
        "MaximumLengthOfStay",
        "LOSNotAvailable",
        "MinimumAdvanceBooking",
        "MaximumAdvanceBooking",
        "Open",
        "OpenForArrival",
        "OpenForDeparture"
      ]
    },
    "restrictionsInfoType": {
      "description": "Provides the basic Restriction type details, specifically used in snapshot operations for efficiency.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/restrictionInfoType"
      }
    },
    "sellOrderType": {
      "description": "Channel Sell By which may be RATEROOM, RATE or ROOM.",
      "type": "string",
      "enum": [
        "RateRoom",
        "Rate",
        "Room"
      ]
    },
    "statementDetailsStatisticType": {
      "description": "Channel statement details statistics.",
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "description": "Holds channel of the statement details statistic By Channel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bookingChannelType": {
          "description": "Holds channel type of the statement details statistic By Channel Type.",
          "type": "string",
          "maxLength": 240,
          "minLength": 0
        },
        "contractAmount": {
          "description": "Holds total contract amount for all the statement details grouped by Resort/Channel/Channel Type/Fee Type.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "detailsCount": {
          "description": "Channel billing statement details record count grouped by Resort/Channel/Channel Type/Fee Type.",
          "type": "integer"
        },
        "feeType": {
          "description": "Holds Fee type of the statement details statistic By Fee Type.",
          "$ref": "#/definitions/contractFeeTypeType"
        },
        "hotelId": {
          "description": "Holds the property for the statement detail statistic By resort.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoiceAmount": {
          "description": "Holds invoice amount for all the statement details grouped by Resort/Channel/Channel Type/Fee Type.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "statementDetailsStatistics": {
      "description": "Response object of the channel account statement details statistics fetch request.",
      "type": "object",
      "properties": {
        "channelStatementDetails": {
          "description": "Holds statement details statistics.",
          "$ref": "#/definitions/statementDetailsStatisticsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "statementDetailsStatisticsType": {
      "description": "Channel statement details statistics .",
      "type": "object",
      "properties": {
        "detailsByChannel": {
          "description": "Channel billing statement details statistics by Channel.",
          "$ref": "#/definitions/statisticDetailsType"
        },
        "detailsByChannelType": {
          "description": "Channel billing statement details statistics by Channel type.",
          "$ref": "#/definitions/statisticDetailsType"
        },
        "detailsByFeeType": {
          "description": "Channel billing statement details statistics by Fee type.",
          "$ref": "#/definitions/statisticDetailsType"
        },
        "detailsByResort": {
          "description": "Channel billing statement details statistics by Resort.",
          "$ref": "#/definitions/statisticDetailsType"
        }
      }
    },
    "statisticDetailsType": {
      "description": "Holds the statistic details for the statement details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/statementDetailsStatisticType"
      }
    },
    "status": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "systemCarrierType": {
      "description": "Identify carrier details of external system.",
      "type": "object",
      "properties": {
        "carrierCode": {
          "description": "Code and description of carrier.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "inactive": {
          "description": "Indicates whether external system carrier is active or not.",
          "type": "boolean"
        },
        "merchant": {
          "description": "Indicates whether external system carrier is merchant or not.",
          "type": "boolean"
        }
      }
    },
    "systemErrorBookingResponseType": {
      "description": "Simple type for external system booking response.",
      "type": "string",
      "enum": [
        "PendingNeeded",
        "Unconfirmed",
        "Cancelled"
      ]
    },
    "systemErrorType": {
      "description": "Identify error details of external system.",
      "type": "object",
      "properties": {
        "bookingResponse": {
          "description": "Booking response of system error code.",
          "$ref": "#/definitions/systemErrorBookingResponseType"
        },
        "dateRange": {
          "description": "Validity date of system error code.",
          "$ref": "#/definitions/timeSpanType"
        },
        "errorCode": {
          "description": "Code and description of error.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "errorDescription": {
          "description": "description of error.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "errorPrefix": {
          "description": "Prefix of system error code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "errorSuffix": {
          "description": "Suffix of system error code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "manualProcess": {
          "description": "Indicates whether system error code is manual process or not",
          "type": "boolean"
        }
      }
    },
    "systemInfoType": {
      "description": "External system attributes.",
      "type": "object",
      "properties": {
        "iconURL": {
          "description": "Channel Icon URL",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates whether code is inactive or not.",
          "type": "boolean"
        },
        "systemCode": {
          "description": "External system code such as TRAVELOCITY, EXPEDIA, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "systemName": {
          "description": "External system name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "systemSubType": {
          "description": "External system subtype such as GDS, WEB, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "systemType": {
          "description": "External system type such as CHANNEL, OXI, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "websiteURL": {
          "description": "Cannel Website URL",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "systemRateCategoryType": {
      "description": "Identify rate category details of external system.",
      "type": "object",
      "properties": {
        "inactive": {
          "description": "Indicates whether external system rate category is active or not.",
          "type": "boolean"
        },
        "negotiated": {
          "description": "Indicates whether external system rate category is negotiated or not.",
          "type": "boolean"
        },
        "rateCategoryCode": {
          "description": "Code and description of rate category.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "shoppingCategory": {
          "description": "Shopping category of rate category external system.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        }
      }
    },
    "systemRateLevelType": {
      "description": "Identify rate level details of external system.",
      "type": "object",
      "properties": {
        "rateLevelCode": {
          "description": "Code and description of rate level.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "systemRoomTypeType": {
      "description": "Identify room type details of external system.",
      "type": "object",
      "properties": {
        "inactiveDate": {
          "description": "Inactive date of room type external system.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "roomTypeCode": {
          "description": "Code and description of room type.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "telephoneInfoType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "telephoneType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "extension": {
          "description": "Extension to reach a specific party at the phone number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "timeSpanDaysOfWeekType": {
      "description": "Container for Time span with days of week.",
      "type": "object",
      "properties": {
        "friday": {
          "type": "boolean"
        },
        "monday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        },
        "sunday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        }
      }
    },
    "timeSpanType": {
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "type": "object",
      "properties": {
        "duration": {
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "totalPricingElementIDType": {
      "description": "Total Pricing Element ID type used to identify the record",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code that associated with Transaction Code and Total Pricing Element",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transaction": {
          "description": "Transaction Code with Total Pricing Element of the GDS channel",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "totalPricingElementType": {
      "description": "Total Pricing Element ID type used to identify the record",
      "type": "object",
      "properties": {
        "chargeType": {
          "description": "The mapped Total Pricing Element Charge Type of the GDS channel",
          "$ref": "#/definitions/chargeTypeType"
        },
        "editPricingElementId": {
          "description": "Combination of primary attributes of Total Pricing Element to update the primary attribute field",
          "$ref": "#/definitions/totalPricingElementIDType"
        },
        "elementCode": {
          "description": "The mapped Total Pricing Element code of the GDS channel",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "hotelId": {
          "description": "Hotel Code that associated with Transaction Code and Total Pricing Element",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transaction": {
          "description": "Transaction Code with Total Pricing Element of the GDS channel",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "totalPricingElements": {
      "description": "Response object to populate total pricing elements of the GDS channel.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalPricingElements": {
          "$ref": "#/definitions/totalPricingElementsType"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "totalPricingElementsCopy": {
      "description": "Request object to copy the total pricing elements into the target properties.",
      "type": "object",
      "properties": {
        "copyInstructions": {
          "$ref": "#/definitions/copyTotalPricingElementsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "totalPricingElementsType": {
      "description": "List of Total Pricing Element Type",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/totalPricingElementType"
      }
    },
    "translationTextType2000": {
      "description": "Contains Multiple translated texts and language codes.",
      "type": "object",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 2000.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationTextType50": {
      "description": "Contains Multiple translated texts and language codes.",
      "type": "object",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 50.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationTextType80": {
      "description": "Contains Multiple translated texts and language codes.",
      "type": "object",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 80.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType": {
      "description": "Language code for the translation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "description": "Language code for the translation.",
        "type": "object",
        "properties": {
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          },
          "value": {
            "description": "Used for Character Strings, length 0 to 2000.",
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          }
        }
      }
    },
    "uniqueIDListType": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "uniqueID_Type": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "warningType": {
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "type": "object",
      "properties": {
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "maxLength": 8,
          "minLength": 1
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "description": "Used in conjunction with the Success element to define a business error.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    }
  },
  "tags": [
    {
      "description": "The Availability APIs allow you to manage a properties room-rate availability, which is configured for a channel. This also includes operations to manage restrictions and hurdles.",
      "name": "Availability"
    },
    {
      "description": "The Inventory APIs allow you to manage a properties room inventory, as well as manage overbooking/sell limits at different levels. It also contains operations to get Item Inventory.",
      "name": "Inventory"
    },
    {
      "description": "The Channel APIs allows you to view, configure and manage the mappings for your channel rate codes, negotiated rates, room types, global descriptions, letters, credit card types and channel codes.",
      "name": "Channel"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}