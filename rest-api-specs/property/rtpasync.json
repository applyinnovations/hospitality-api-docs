{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "APIs catering to the Rate Plan asynchronous related functionality in a hotel.  This includes adding/updating daily rates&apos; pricing schedules and best available rates by day or length of stay. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "title": "Opera Cloud Rate Plan Asynchronous Service API",
    "version": "23.2",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality-integrations_ww@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "basePath": "/rtp/async/v1",
  "paths": {
    "/externalSystems/{extSystemCode}/hotels/{hotelId}/ratePlans/bestAvailableLOS": {
      "post": {
        "description": "Use this API to start the process of adding and updating best available rate plans by day or by length of stay. Returns a header parameter Location that can be used in the getBestAvailableRatePlansProcessStatus operation. <p><strong>OperationId:</strong>startSetBestAvailableRatePlansProcess</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlanAsync"
        ],
        "summary": "API to initiate setting best available rate plans process.",
        "operationId": "startSetBestAvailableRatePlansProcess",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "extSystemCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for configuring best available rate plans.",
            "name": "bestAvailableRatePlans",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bestAvailableRatePlans"
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "202": {
            "description": "Location of process status resource",
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of process status resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "x-interaction": [
          "async-polling"
        ]
      }
    },
    "/externalSystems/{extSystemCode}/hotels/{hotelId}/ratePlans/bestAvailableLOS/{requestId}": {
      "get": {
        "description": "Use this API to get the result of the process to set best available rate plans, which will include details of any data that has been failed to process. You can get the value of the summaryId from the Location header returned by the getBestAvailableRatePlansProcessStatus operation after the process is completed. <p><strong>OperationId:</strong>getBestAvailableRatePlans</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlanAsync"
        ],
        "summary": "Get results of a daily rate plan schedule process",
        "operationId": "getBestAvailableRatePlans",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "extSystemCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "This asynchronous callback base type is used as a base for an extension for Opera Web Services Callback Requests to provide uniform implementation.",
            "schema": {
              "$ref": "#/definitions/bestAvailableRatePlansStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "BestAvailableRatePlans not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "head": {
        "description": "Use this API to check whether the setting of best available rate plans process is completed. You can get value of summaryId from the Location header returned by the startSetBestAvailableRatePlansProcess operation.<p><strong>OperationId:</strong>getBestAvailableRatePlansProcessStatus</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlanAsync"
        ],
        "summary": "Check status of setting best available rate plans process",
        "operationId": "getBestAvailableRatePlansProcessStatus",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "extSystemCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for status of scheduled asynchronous process.",
            "headers": {
              "Cache-Control": {
                "type": "string",
                "description": "number of seconds to wait before polling again."
              },
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Status": {
                "enum": [
                  "Processing",
                  "Invalid"
                ],
                "type": "string",
                "description": "Status of the requested process."
              }
            }
          },
          "201": {
            "description": "Response for status of scheduled asynchronous process.",
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource once the status of process run is Complete."
              },
              "Status": {
                "enum": [
                  "Completed"
                ],
                "type": "string",
                "description": "Status of the requested process."
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "500": {
            "description": "System Error"
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/externalSystems/{extSystemCode}/hotels/{hotelId}/ratePlans/dailySchedules": {
      "post": {
        "description": "Use this API to start the process to add and update daily rate plans&apos; pricing schedule. Returns a header parameter Location that can be used in the getDailyRatePlanSchedulesProcessStatus operation. <p><strong>OperationId:</strong>startSetDailyRatePlanSchedulesProcess</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlanAsync"
        ],
        "summary": "API to initiate rate plans&apos; price update process",
        "operationId": "startSetDailyRatePlanSchedulesProcess",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "extSystemCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for configuring daily rate plan schedules.",
            "name": "dailyRatePlanSchedules",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dailyRatePlanSchedules"
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "202": {
            "description": "Location of process status resource",
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of process status resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "x-interaction": [
          "async-polling"
        ]
      }
    },
    "/externalSystems/{extSystemCode}/hotels/{hotelId}/ratePlans/dailySchedules/{requestId}": {
      "get": {
        "description": "Use this API to get the result of the daily rate plans schedule process, which will include details of any data that has failed to process. You can get the value of the summaryId from the Location header returned by the getDailyRatePlanSchedulesProcessStatus operation after the process is completed. <p><strong>OperationId:</strong>getDailyRatePlanSchedules</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlanAsync"
        ],
        "summary": "Get results of a daily rate plan schedule process",
        "operationId": "getDailyRatePlanSchedules",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "extSystemCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for configured daily rate plan schedules",
            "schema": {
              "$ref": "#/definitions/dailyRatePlanSchedulesStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "DailyRatePlanSchedules not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "head": {
        "description": "Use this API to check whether the rate plan pricing schedule process is completed. You can get value of summaryId from the Location header returned by the startSetDailyRatePlanSchedulesProcess operation.<p><strong>OperationId:</strong>getDailyRatePlanSchedulesProcessStatus</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlanAsync"
        ],
        "summary": "Check status of setting daily rate plan schedule process",
        "operationId": "getDailyRatePlanSchedulesProcessStatus",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "extSystemCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for status of scheduled asynchronous process.",
            "headers": {
              "Cache-Control": {
                "type": "string",
                "description": "number of seconds to wait before polling again."
              },
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Status": {
                "enum": [
                  "Processing",
                  "Invalid"
                ],
                "type": "string",
                "description": "Status of the requested process."
              }
            }
          },
          "201": {
            "description": "Response for status of scheduled asynchronous process.",
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource once the status of process run is Complete."
              },
              "Status": {
                "enum": [
                  "Completed"
                ],
                "type": "string",
                "description": "Status of the requested process."
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "500": {
            "description": "System Error"
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/externalSystems/{extSystemCode}/hotels/{hotelId}/ratePlans/headers": {
      "post": {
        "description": " <p><strong>OperationId:</strong>startSetRatePlansHeadersProcess</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlanAsync"
        ],
        "summary": "Operation to start the update of rate header flags. Recommendation is not to exceed 250 rate codes in one request.",
        "operationId": "startSetRatePlansHeadersProcess",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique code of the external system",
            "name": "extSystemCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to change rate plan.",
            "name": "ratePlan",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ratePlans"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "202": {
            "description": "Location of process status resource",
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of process status resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "x-interaction": [
          "async-polling"
        ]
      }
    },
    "/externalSystems/{extSystemCode}/hotels/{hotelId}/ratePlans/headers/{requestId}": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getRatePlansHeaders</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlanAsync"
        ],
        "summary": "This API facilitates fetching of status for configured rate plans.",
        "operationId": "getRatePlansHeaders",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Hotel in OPERA.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique code of the external system.",
            "name": "extSystemCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID to fetch status of configured rate plans.",
            "name": "requestId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/hurdleRatesStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Hurdle Rates not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "head": {
        "description": " <p><strong>OperationId:</strong>getRatePlansHeadersProcessStatus</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlanAsync"
        ],
        "summary": "This API returns the status of asynchronous process scheduled for given id.",
        "operationId": "getRatePlansHeadersProcessStatus",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID to fetch status of configured rate plans.",
            "name": "requestId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique code of the external system.",
            "name": "extSystemCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Hotel in OPERA.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for status of scheduled asynchronous process.",
            "headers": {
              "Cache-Control": {
                "type": "string",
                "description": "number of seconds to wait before polling again."
              },
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Status": {
                "enum": [
                  "Processing",
                  "Invalid"
                ],
                "type": "string",
                "description": "Status of the requested process."
              }
            }
          },
          "201": {
            "description": "Response for status of scheduled asynchronous process.",
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource once the status of process run is Complete."
              },
              "Status": {
                "enum": [
                  "Completed"
                ],
                "type": "string",
                "description": "Status of the requested process."
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "500": {
            "description": "System Error"
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/externalSystems/{extSystemCode}/hotels/{hotelId}/rates/hurdles": {
      "post": {
        "description": " <p><strong>OperationId:</strong>startHurdleRatesProcess</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlanAsync"
        ],
        "summary": "Operation to configure hurdle rates.",
        "operationId": "startHurdleRatesProcess",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique code of the external system",
            "name": "extSystemCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for configuring hurdle rates.",
            "name": "hurdleRates",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hurdleRates"
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "202": {
            "description": "Location of process status resource",
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of process status resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "x-interaction": [
          "async-polling"
        ]
      }
    },
    "/externalSystems/{extSystemCode}/hotels/{hotelId}/rates/hurdles/{requestId}": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getHurdleRates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlanAsync"
        ],
        "summary": "This API facilitates fetching of status for configured hurdle rates.",
        "operationId": "getHurdleRates",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Hotel in OPERA.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique code of the external system.",
            "name": "extSystemCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID to fetch status of configured hurdle rates.",
            "name": "requestId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/hurdleRatesStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Hurdle Rates not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "head": {
        "description": " <p><strong>OperationId:</strong>getHurdleRatesProcessStatus</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlanAsync"
        ],
        "summary": "This API returns the status of asynchronous process scheduled for given id.",
        "operationId": "getHurdleRatesProcessStatus",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID to fetch status of configured hurdle rates.",
            "name": "requestId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique code of the external system.",
            "name": "extSystemCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Hotel in OPERA.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for status of scheduled asynchronous process.",
            "headers": {
              "Cache-Control": {
                "type": "string",
                "description": "number of seconds to wait before polling again."
              },
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Status": {
                "enum": [
                  "Processing",
                  "Invalid"
                ],
                "type": "string",
                "description": "Status of the requested process."
              }
            }
          },
          "201": {
            "description": "Response for status of scheduled asynchronous process.",
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource once the status of process run is Complete."
              },
              "Status": {
                "enum": [
                  "Completed"
                ],
                "type": "string",
                "description": "Status of the requested process."
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "500": {
            "description": "System Error"
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    }
  },
  "definitions": {
    "bestAvailableRateCodesType": {
      "description": "Collection of best available rate codes.",
      "type": "array",
      "maxItems": 25,
      "items": {
        "type": "string",
        "maxLength": 20,
        "minLength": 0
      }
    },
    "bestAvailableRatePlanType": {
      "description": "Defines best available rate plans.",
      "type": "object",
      "properties": {
        "los1": {
          "description": "Indicates Length of Stay 1 configuration.",
          "type": "boolean"
        },
        "los2": {
          "description": "Indicates Length of Stay 2 configuration.",
          "type": "boolean"
        },
        "los3": {
          "description": "Indicates Length of Stay 3 configuration.",
          "type": "boolean"
        },
        "los4": {
          "description": "Indicates Length of Stay 4 configuration.",
          "type": "boolean"
        },
        "los5": {
          "description": "Indicates Length of Stay 5 configuration.",
          "type": "boolean"
        },
        "los6": {
          "description": "Indicates Length of Stay 6 configuration.",
          "type": "boolean"
        },
        "los7": {
          "description": "Indicates Length of Stay 7 configuration.",
          "type": "boolean"
        },
        "los8": {
          "description": "Indicates Length of Stay 8 configuration.",
          "type": "boolean"
        },
        "rateDate": {
          "description": "Validity of best available rate plan.",
          "type": "string",
          "format": "date"
        },
        "ratePlanCodes": {
          "description": "Collection of best available rate plan codes.",
          "$ref": "#/definitions/bestAvailableRateCodesType"
        }
      }
    },
    "bestAvailableRatePlans": {
      "description": "Request for configuring best available rate plans.",
      "type": "object",
      "properties": {
        "bestAvailableRatePlans": {
          "description": "Best available rate plans to be configured.",
          "$ref": "#/definitions/bestAvailableRatePlansType"
        }
      }
    },
    "bestAvailableRatePlansStatus": {
      "description": "Response for configured best available rate plans status.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "description": "List of warnings that occurred.",
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bestAvailableRatePlansType": {
      "description": "Collection of best available rate plans.",
      "type": "array",
      "maxItems": 1000,
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/bestAvailableRatePlanType"
      }
    },
    "dailyRatePlanScheduleType": {
      "description": "Daily rate plan schedule details.",
      "type": "object",
      "properties": {
        "rateAmounts": {
          "description": "Daily rate amounts to be applied.",
          "$ref": "#/definitions/scheduleRateAmountsType"
        },
        "rateDate": {
          "description": "The rate date for which the daily rate amounts will be applied.",
          "type": "string",
          "format": "date"
        },
        "ratePlanCode": {
          "description": "The rate code for which the daily rate amounts will be applied.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "The room type label for which the daily rate amounts will be applied.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "dailyRatePlanSchedules": {
      "description": "Daily rate plan schedules.",
      "type": "object",
      "properties": {
        "dailyRatePlanSchedule": {
          "description": "Collection of daily rate plan schedules.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/dailyRatePlanScheduleType"
          }
        }
      }
    },
    "dailyRatePlanSchedulesStatus": {
      "description": "Response for configured best available rate plans status.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "description": "List of warnings that occurred.",
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "errorInstance": {
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "title": "Error Instance Details",
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "exceptionDetailType": {
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "title": "Error Detail",
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "hurdleRateType": {
      "description": "Unique identifier for hurdle rate.",
      "type": "object",
      "properties": {
        "ceiling": {
          "description": "Maximum number of rooms to sell for which the delta is applicable to be aded to hurdle rate.",
          "type": "number"
        },
        "delta": {
          "description": "Defines the amount to be added to hurdle rate for each additional rooms sold up to the ceiling.",
          "type": "number"
        },
        "hurdle": {
          "description": "Defines the amount to be reached before rate code or room type is made available.",
          "type": "number"
        },
        "hurdleDate": {
          "description": "Hurdle date for which the hurdle rate is scheduled.",
          "type": "string",
          "format": "date"
        },
        "lengthOfStay": {
          "description": "Length of stay for which the hurdle rate applies to.",
          "type": "number"
        },
        "maximumSolds": {
          "description": "Maximum number of rooms to sell.",
          "type": "number"
        },
        "override": {
          "description": "Specifies whether to override hurdle rate or not.",
          "type": "boolean"
        },
        "roomCategory": {
          "description": "Internal room category of the room type for which the hurdle rate applies to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "Room type for which the hurdle rate applies to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomsSold": {
          "description": "Defines the actual number of rooms sold.",
          "type": "number"
        },
        "yieldCategory": {
          "description": "Yield category for which the hurdle rate applies to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "yieldMarketCode": {
          "description": "Yield market code for which the hurdle rate applies to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "hurdleRates": {
      "description": "Hurdle rates to be configured.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hurdleRateType"
      }
    },
    "hurdleRatesStatus": {
      "description": "Response for configured hurdle rates.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "description": "List of warnings that occurred.",
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "instanceLink": {
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "type": "object",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "rateByAgeBucketType": {
      "description": "Rate amount by age bucket.",
      "type": "object",
      "properties": {
        "maximumAge": {
          "description": "Maximum age for age bucket.",
          "type": "integer"
        },
        "minimumAge": {
          "description": "Minimum age for age bucket.",
          "type": "integer"
        },
        "rateAmount": {
          "description": "Rate amount by age bucket.",
          "type": "number"
        }
      }
    },
    "rateByAgeBucketsType": {
      "description": "Rate amount by age bucket.",
      "type": "array",
      "maxItems": 3,
      "items": {
        "$ref": "#/definitions/rateByAgeBucketType"
      }
    },
    "ratePlanDistributionType": {
      "type": "object",
      "properties": {
        "channelAllowed": {
          "description": "Rate plan Code is available for channels.",
          "type": "boolean"
        },
        "myFidelioUploadAllowed": {
          "description": "Rate plan to be uploaded to MyFidleio and published.",
          "type": "boolean"
        },
        "rateUpdate": {
          "description": "Rate updates for the rate plan to be sent to channels?",
          "type": "boolean"
        },
        "restrictionUpdate": {
          "description": "Restriction updates for the rate plan to be sent to channels?",
          "type": "boolean"
        }
      }
    },
    "ratePlanType": {
      "description": "The Rate plan code Details.",
      "type": "object",
      "properties": {
        "advancedDailyBase": {
          "description": "Flag to identify if Rate Code is Advanced Daily Base Rate Code",
          "type": "boolean"
        },
        "advancedDailyRate": {
          "description": "Flag to identify if Rate Code is Advanced Daily Rate",
          "type": "boolean"
        },
        "barRate": {
          "description": "Is rate plan code of BAR Rate type?",
          "type": "boolean"
        },
        "complimentary": {
          "description": "Is rate plan code complimentary?",
          "type": "boolean"
        },
        "daily": {
          "description": "Is rate plan code a daily rate?",
          "type": "boolean"
        },
        "dayType": {
          "description": "Indicates if rate Calendar factors such as adder/multiplier should be used for price calculation.",
          "type": "boolean"
        },
        "dayUse": {
          "description": "Is rate plan code for day use?",
          "type": "boolean"
        },
        "discountAllowed": {
          "description": "Is rate plan code discounted?",
          "type": "boolean"
        },
        "distribution": {
          "description": "Distribution setup for the rate code.",
          "$ref": "#/definitions/ratePlanDistributionType"
        },
        "houseUse": {
          "description": "Is rate plan code for house use?",
          "type": "boolean"
        },
        "membershipEligible": {
          "description": "Is rate plan code flagged as eligible for memberships? This flag controls whether the guest stay, which this rate plan is attached to, qualifies for point calculations for Frequent Flyer or Frequent Guest programs. If the rate plan associated to the reservation has not been flagged for Membership then the guest will not earn any points/miles for their stay.",
          "type": "boolean"
        },
        "mobileCheckinAllowed": {
          "description": "This is a placeholder element for future use. Functionality may not be available for the current implementation.",
          "type": "boolean"
        },
        "mobileCheckoutAllowed": {
          "description": "This is a placeholder element for future use. Functionality may not be available for the current implementation.",
          "type": "boolean"
        },
        "negotiated": {
          "description": "Is rate plan code only available as a negotiated rate that must be associated with a guest, company, or travel agent profile ?",
          "type": "boolean"
        },
        "ownerRate": {
          "description": "Is rate plan code flagged as an owner rate plan? Owner rate plans have special functionality for no-shows depending on the Rolling Noshow Preference application setting.",
          "type": "boolean"
        },
        "printRate": {
          "description": "Is Rate amount printed on the reports for the rate plan?",
          "type": "boolean"
        },
        "ratePlanCode": {
          "description": "Rate plan Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "redemption": {
          "description": "Is redemption allowed on the rate code?",
          "type": "boolean"
        },
        "supressRate": {
          "description": "Is rate amount suppressed for the rate plan?",
          "type": "boolean"
        },
        "tiered": {
          "description": "Is rate plan code a tiered rate?",
          "type": "boolean"
        }
      }
    },
    "ratePlans": {
      "description": "Request object to create rate plan.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "ratePlans": {
          "description": "Rate plan code details to be created.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ratePlanType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "scheduleRateAmountsType": {
      "type": "object",
      "properties": {
        "extraChildRate": {
          "description": "Rate amount for each extra Child.",
          "type": "number"
        },
        "extraPersonRate": {
          "description": "Rate amount for each extra person.",
          "type": "number"
        },
        "fivePersonRate": {
          "description": "Rate amount for five persons.",
          "type": "number"
        },
        "fourChildrenRate": {
          "description": "Rate amount for four Children.",
          "type": "number"
        },
        "fourPersonRate": {
          "description": "Rate amount for four persons.",
          "type": "number"
        },
        "minimumChildrenForFreeStay": {
          "description": "Minimum number of children needed to get free stay.",
          "type": "integer"
        },
        "oneChildRate": {
          "description": "Rate amount for one Child.",
          "type": "number"
        },
        "onePersonRate": {
          "description": "Rate amount for one person.",
          "type": "number"
        },
        "overrideFloorAmount": {
          "description": "true if floor amount needs to be override",
          "type": "boolean"
        },
        "pointsRequired": {
          "description": "The number of award points required for applying this rate plan schedule.",
          "type": "number"
        },
        "rateByAgeBuckets": {
          "description": "Collection of rate amount by age bracket.",
          "$ref": "#/definitions/rateByAgeBucketsType"
        },
        "threeChildrenRate": {
          "description": "Rate amount for three Children.",
          "type": "number"
        },
        "threePersonRate": {
          "description": "Rate amount for three persons.",
          "type": "number"
        },
        "twoChildrenRate": {
          "description": "Rate amount for two Children.",
          "type": "number"
        },
        "twoPersonRate": {
          "description": "Rate amount for two persons.",
          "type": "number"
        }
      }
    },
    "warningType": {
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "type": "object",
      "properties": {
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "maxLength": 8,
          "minLength": 1
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "description": "Used in conjunction with the Success element to define a business error.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    }
  },
  "tags": [
    {
      "name": "RatePlanAsync"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}