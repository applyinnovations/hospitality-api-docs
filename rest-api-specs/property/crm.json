{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "title": "OPERA Cloud Customer Relationship Management API",
    "version": "23.2",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality-integrations_ww@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "basePath": "/crm/v1",
  "paths": {
    "/address": {
      "get": {
        "description": "This API will get city and states. <p><strong>OperationId:</strong>getAddress</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get city states",
        "operationId": "getAddress",
        "parameters": [
          {
            "type": "boolean",
            "description": "When true indicates that only profiles with city will be fetched.",
            "name": "excludeNoCity",
            "in": "query"
          },
          {
            "type": "string",
            "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
            "name": "cityName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Post Office Code number.",
            "name": "postalCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "State or Province name (e.g., Texas).",
            "name": "state",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code for a country or a nationality.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "First Line of Street Address. For profile search it matches the first Address line.",
            "name": "streetAddress",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching City and State based on search criteria. This object contains address information,Success,Warnings and Errors related to this operation.",
            "schema": {
              "$ref": "#/definitions/cityState"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Address not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/airline/transactions": {
      "get": {
        "description": "Request for fetching membership transactions processed by the airline. <p><strong>OperationId:</strong>getAirlineTransactionsStatus</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Get airline transactions status",
        "operationId": "getAirlineTransactionsStatus",
        "parameters": [
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "batchId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "batchIdType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The date when this batch was imported into OPERA",
            "name": "importDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Request object for fetching membership transactions processed by the airline.",
            "schema": {
              "$ref": "#/definitions/airlineTransactionsStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AirlineTransactionsStatus not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/availableAwardsBasedOnType": {
      "get": {
        "description": "Get available awards based on type of award selected like Rates, products or services, room type upgrades, and other gifts. <p><strong>OperationId:</strong>getAvailableAwardsBasedOnType</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Get Available Awards",
        "operationId": "getAvailableAwardsBasedOnType",
        "parameters": [
          {
            "uniqueItems": true,
            "enum": [
              "Rate",
              "Product",
              "Upgrade",
              "Other",
              "Ft"
            ],
            "type": "string",
            "description": "This award allows a guest to apply available membership points towards the balance of his or her bill.",
            "name": "awardBasedOn",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Membership type for which awards are defined.",
            "name": "membershipType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hotel name where the award will be consumed.",
            "name": "rateCriteriaHotelId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Arrival date of the reservation associated with the award.",
            "name": "arrivalDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Departure date of the reservation associated with the award.",
            "name": "departureDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Booking date of the reservation associated with the award.",
            "name": "bookingDate",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Minimum number of points the member is willing to redeem.",
            "name": "pointsBelow",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Maximum number of points the member is willing to redeem.",
            "name": "pointsAbove",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates rate code for the room type.",
            "name": "rateCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates which room category it belongs.",
            "name": "roomCategory",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Number of rooms that the member will be using.",
            "name": "rooms",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates the award type or code.",
            "name": "awardType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Membership type for which awards are defined.",
            "name": "productCriteriaMembershipType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hotel name where the award will be consumed.",
            "name": "productCriteriaHotelId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Arrival date of the reservation associated with the award.",
            "name": "productCriteriaArrivalDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Departure date of the reservation associated with the award.",
            "name": "productCriteriaDepartureDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Booking date of the reservation associated with the award.",
            "name": "productCriteriaBookingDate",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Minimum number of points the member is willing to redeem.",
            "name": "productCriteriaPointsBelow",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Maximum number of points the member is willing to redeem.",
            "name": "productCriteriaPointsAbove",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Package/Product code for the award to check availability.",
            "name": "packageCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Membership type for which awards are defined.",
            "name": "upgradeCriteriaMembershipType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hotel name where the award will be consumed.",
            "name": "upgradeCriteriaHotelId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Arrival date of the reservation associated with the award.",
            "name": "upgradeCriteriaArrivalDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Departure date of the reservation associated with the award.",
            "name": "upgradeCriteriaDepartureDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Booking date of the reservation associated with the award.",
            "name": "upgradeCriteriaBookingDate",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Minimum number of points the member is willing to redeem.",
            "name": "upgradeCriteriaPointsBelow",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Maximum number of points the member is willing to redeem.",
            "name": "upgradeCriteriaPointsAbove",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates availability of upgrade awards based on the room type(range of room types )",
            "name": "fromRoomCategory",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates availability of upgrade awards based on the room type(range of room types )",
            "name": "toRoomCategory",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Number of rooms that the member will be using.",
            "name": "upgradeCriteriaRooms",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates the award type or code.",
            "name": "upgradeCriteriaAwardType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Unique code identifying the Award.",
            "name": "awardCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Total amount for the bill.",
            "name": "totalBillingAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The currency code for the member.",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Minimum number of points the member is willing to redeem.",
            "name": "fTPaymentCriteriaPointsBelow",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Maximum number of points the member is willing to redeem.",
            "name": "fTPaymentCriteriaPointsAbove",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Unique code identifying the award.",
            "name": "otherCriteriaAwardCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Membership type for which awards are defined.",
            "name": "otherCriteriaMembershipType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Level of this Membership Type.",
            "name": "membershipLevel",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Name or code identifying the award.",
            "name": "shortDescription",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Amount of currency of the worth of the other award,below or actual value.",
            "name": "valueBelow",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Amount of currency of the worth of the other award,above or actual value.",
            "name": "valueAbove",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Minimum number of points the member is willing to redeem.",
            "name": "otherCriteriaPointsBelow",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Maximum number of points the member is willing to redeem.",
            "name": "otherCriteriaPointsAbove",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to fetch member available awards based on the type being passed.",
            "schema": {
              "$ref": "#/definitions/availableAwardsBasedOnType"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AvailableAwardsBasedOnType not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/awards": {
      "delete": {
        "description": "Operation to cancel an award already been granted to a member. <p><strong>OperationId:</strong>deleteAwards</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Delete Awards",
        "operationId": "deleteAwards",
        "parameters": [
          {
            "type": "number",
            "description": "An identifying number of the award, assigned by the system when the award was issued.",
            "name": "awardNumber",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Identifies reservation cancellation number.",
            "name": "reservationCancellationNumber",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The amount of points that will be deducted for cancelling the award, from the total guest award points.",
            "name": "actualCancelPoints",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/awardsToGrant": {
      "get": {
        "description": "Fetch awards list to be able to grant the award to a member <p><strong>OperationId:</strong>getAwardsToGrant</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Get Awards to Grant",
        "operationId": "getAwardsToGrant",
        "parameters": [
          {
            "uniqueItems": true,
            "enum": [
              "Rate",
              "Product",
              "Upgrade",
              "Other",
              "Ft"
            ],
            "type": "string",
            "description": "This award allows a guest to apply available membership points towards the balance of his or her bill.",
            "name": "awardBasedOn",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The number of points that must be redeemed for this award.",
            "name": "totalPointsRequired",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Number of rooms that the member will be using.",
            "name": "rooms",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Unique Membership ID to get award info.",
            "name": "membershipId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Membership type for which awards are defined.",
            "name": "membershipType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates the award type or code.",
            "name": "awardType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "HotelCode where the award will be consumed.",
            "name": "grantAwardInfoHotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Rate code associated with the award.",
            "name": "rateCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates which room category it belongs.",
            "name": "roomCategory",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates room type code for the room prior to the upgrade.",
            "name": "fromRoom",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates room type code of the upgrade room.",
            "name": "toRoom",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to fetch award details to grant an award.",
            "schema": {
              "$ref": "#/definitions/awardsToGrant"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AwardsToGrant not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/certificates": {
      "delete": {
        "description": "This API will allow you to delete a certificate. <p><strong>OperationId:</strong>deleteCertificate</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Delete certificate",
        "operationId": "deleteCertificate",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/companies": {
      "post": {
        "description": "When a profile doesn't already exist for a guest, use this to create a new profile.  The response will provide the newly created profile's OPERA ID. There are many fields in postProfile defined by ListOfValues; ensure you have reviewed ListOfValues APIs in order successfully to use postProfile. <p><strong>OperationId:</strong>postCompanyProfile</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "This API facilitates creation of a company/agent/group/source profile in OPERA.",
        "operationId": "postCompanyProfile",
        "parameters": [
          {
            "description": "Request object for creation of company profile. This object contains profile details with unique identifiers of a profile. The standard optional Opera Context element is also included.",
            "name": "company",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/company"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/companies/{corporateID}": {
      "get": {
        "description": "Use this to retrieve a specific Company, Travel Agent, Group or Source profile. You must know the corporate ID of the profile for the request API. <p><strong>OperationId:</strong>getCompanyProfile</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get company profile by corporate ID",
        "operationId": "getCompanyProfile",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA Corporate ID used to find company/agent/group/source profile in OPERA.",
            "name": "corporateID",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Address",
                "Communication",
                "Comment",
                "Membership",
                "Preference",
                "Keyword",
                "Correspondence",
                "Profile",
                "Indicators",
                "SalesInfo",
                "Relationship"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Ownership information associated with the profile.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching unique company profile.",
            "schema": {
              "$ref": "#/definitions/company"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "companyDetails": {
                  "company": {
                    "companyName": "Example Corporation, Ltd.",
                    "iATAInfo": {}
                  },
                  "createDateTime": "2019-06-26 16:14:41.0",
                  "creatorId": "BEN@HOTEL1",
                  "lastModifierId": "BEN@HOTEL1",
                  "lastModifyDateTime": "2019-06-26 16:14:41.0",
                  "markForHistory": false,
                  "profileAccessType": {
                    "hotelId": "HOTEL1",
                    "sharedLevel": "Property"
                  },
                  "profileRestrictions": {
                    "restricted": false
                  },
                  "profileType": "Company",
                  "registeredProperty": "HOTEL1",
                  "statusCode": "Active"
                },
                "companyIdList": [
                  {
                    "id": "329620",
                    "type": "Profile"
                  },
                  {
                    "id": "222572",
                    "type": "CorporateId"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "CompanyProfile not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/duplicateExternalSubscriptions": {
      "get": {
        "description": "Fetch profile subscriptions where the same OPERA Cloud profile is linked to multiple external profiles, within the same external system. <p><strong>OperationId:</strong>getDuplicateExternalSubscriptions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get profiles with duplicate external subscriptions ",
        "operationId": "getDuplicateExternalSubscriptions",
        "parameters": [
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code identifying the external database record which is linked to external systems.",
            "name": "databaseId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "profileType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching subscriptions where the same OPERA profile is linked to multiple external profiles within the same external system.",
            "schema": {
              "$ref": "#/definitions/duplicateExternalSubscriptions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "DuplicateExternalSubscriptions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/duplicateOPERASubscriptions": {
      "get": {
        "description": "Fetch subscriptions where an external profile within a particular external system is linked to multiple OPERA Cloud profiles. <p><strong>OperationId:</strong>getDuplicateOPERASubscriptions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get profiles with duplicate OPERA Cloud subscriptions",
        "operationId": "getDuplicateOPERASubscriptions",
        "parameters": [
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code identifying the external database record which is linked to external systems.",
            "name": "databaseId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "profileType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching subscriptions where an external profile within a particular external system is linked to multiple OPERA profiles.",
            "schema": {
              "$ref": "#/definitions/duplicateOPERASubscriptions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "DuplicateOPERASubscriptions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/ecertificates": {
      "get": {
        "description": "This API allows you to retrieve eCertificates which exist on a profile in OPERA Cloud. <p><strong>OperationId:</strong>getECertificates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get e-certificate",
        "operationId": "getECertificates",
        "parameters": [
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "profileType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Property for which preferences are to be fetched.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Ecertificates search criteria",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Ecertificates search criteria",
            "name": "groupCode",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Cancelled",
                "Consumed",
                "Deleted",
                "Expired",
                "Issued",
                "Reserved"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Indicates that OPERA E-Certificate is reserved.",
            "name": "status",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Include or not include inactive E-certificate.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "System generated unique voucher number.",
            "name": "voucherNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of System generated unique voucher numbers to be excluded.",
            "name": "excludeVoucherNumbers",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Search criteria to limit Ecertificates that are available for reservation consumption.",
            "name": "availableECertificates",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetch ECertificates. This object contains collection of ECertificates,Success,Warnings and Errors related to this operation.",
            "schema": {
              "$ref": "#/definitions/eCertificates"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ECertificates not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "This API allows you to create a new eCertificates onto a profile in OPERA Cloud. <p><strong>OperationId:</strong>postECertificate</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Create e-certificate",
        "operationId": "postECertificate",
        "parameters": [
          {
            "description": "Request object to issue E-Certificate.",
            "name": "eCertificateGeneration",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/eCertificateGeneration"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/ecertificates/{certificateId}": {
      "put": {
        "description": "Use this API to consume (use) an E-Certificate.  <p><strong>OperationId:</strong>consumeECertificate</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Consume an E-Certificate",
        "operationId": "consumeECertificate",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "certificateId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to Consume an E-Certificate.",
            "name": "eCertificateToConsume",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/eCertificateToConsume"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "This API allows you to delete an eCertificates which exist on a profile in OPERA Cloud. <p><strong>OperationId:</strong>deleteECertificate</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Delete e-certificate",
        "operationId": "deleteECertificate",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "certificateId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/ecertificates/{certificateId}/action/validate": {
      "put": {
        "description": "Use this API to verify an ng E-Certificate Number. <p><strong>OperationId:</strong>verifyECertificate</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Verify E-Certificate Number",
        "operationId": "verifyECertificate",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "certificateId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to Verify an E-Certificate Number.",
            "name": "eCertificateToVerify",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/eCertificateToVerify"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to Verify E-Certificate and will return the profile information.",
            "schema": {
              "$ref": "#/definitions/verifiedECertificate"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/ecertificates/{certificateId}/extensions": {
      "post": {
        "description": "Use this API to extend the date of an existing E-Certificate. <p><strong>OperationId:</strong>extendECertificate</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Extend E-Certificate Expiry date",
        "operationId": "extendECertificate",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "certificateId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to Consume an E-Certificate.",
            "name": "eCertificateToExtend",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/eCertificateToExtend"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/enrollments": {
      "post": {
        "description": "Use this API when you have a guest profile and you want to enroll that guest profile into a membership program in an external system. <p><strong>OperationId:</strong>postEnrollment</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Create an Enrollment",
        "operationId": "postEnrollment",
        "parameters": [
          {
            "description": "Request object to create profile enrollment.",
            "name": "enrollment",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/enrollment"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/externalSystems/{extSystemCode}/profiles/{profileExternalId}": {
      "get": {
        "description": "When a reservation is booked via an external system, you would use this API to retrieve a reservation using the external ID in the request <p><strong>OperationId:</strong>getProfileByExtId</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get profile by external ID",
        "operationId": "getProfileByExtId",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "External System's ID used to get the profile.",
            "name": "profileExternalId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Code to identify the external system from which the request is coming. This is the ExternalSystem ID used to exchange information between OPERA and the external system.",
            "name": "extSystemCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Hotel Code used to filter hotel specific information regarding the profile.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This element tells when the view profile should be logged.",
            "name": "logViewProfile",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to show inactive Room Owners.",
            "name": "showInactiveRoomOwners",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Address",
                "Communication",
                "Comment",
                "Membership",
                "Preference",
                "Keyword",
                "Correspondence",
                "Profile",
                "Indicators",
                "SalesInfo",
                "Relationship",
                "Subscriptions",
                "DeliveryMethods",
                "GdsNegotiatedRate",
                "NegotiatedRate",
                "HistoryReservation",
                "FutureReservation",
                "WebUserAccount"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Ownership information associated with the profile.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "NegotiatedRateShowInactive",
                "NegotiatedRateResort",
                "NegotiatedRateMaxFetchCount",
                "NegotiatedRateCode",
                "GdsNegotiatedRateShowInactive",
                "PreferencesShowInactive",
                "ResortForRoutingInstructions",
                "RelationshipPrimaryProfile",
                "AddressPrimaryOnly",
                "CommunicationPrimaryOnly",
                "DeliveryMethodsHotelCode"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type enumerating the different parameters accepted by a profile Instructions. Parameter names have the name of the instruction expecting it, and the parameter name itself.",
            "name": "instructionParameterType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Value of Profile Instruction Parameter",
            "name": "value",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "NameChange",
                "TaxIDChange",
                "EnrollToPrimaryMembership"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Flag indicating whether Profile is Enrolled to Primary Membership Program.",
            "name": "allowedAction",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching profile.",
            "schema": {
              "$ref": "#/definitions/profile"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "links": [
                  {
                    "href": "",
                    "method": "GET",
                    "operationId": "",
                    "rel": "",
                    "targetSchema": "",
                    "templated": false,
                    "title": ""
                  }
                ],
                "profiles": {
                  "profileInfo": [
                    {
                      "profile": {
                        "addresses": {
                          "addressInfo": [
                            {
                              "address": {
                                "addressLine": [
                                  "500 Oracle Parkway"
                                ],
                                "barCode": "a",
                                "cityExtension": "a",
                                "cityName": "Redwood Shores",
                                "country": {
                                  "code": "US",
                                  "name": "United States of America"
                                },
                                "county": "a",
                                "createDateTime": "2019-09-03T14:56:18.227Z",
                                "creatorId": "a",
                                "language": "E",
                                "lastModifierId": "a",
                                "lastModifyDateTime": "2019-09-03T14:56:18.228Z",
                                "postalCode": "94065",
                                "primaryInd": false,
                                "state": "CA",
                                "type": "",
                                "typeDescription": ""
                              },
                              "uniqueId": {
                                "id": "a",
                                "idContext": "a",
                                "type": ""
                              }
                            }
                          ]
                        },
                        "comments": {
                          "commentInfo": [
                            {
                              "comment": {
                                "actionDate": "0101-01-01",
                                "actionType": "",
                                "commentTitle": "a",
                                "confidential": false,
                                "createDateTime": "2019-09-03T14:56:18.239Z",
                                "creatorId": "a",
                                "hotelCode": "",
                                "internal": false,
                                "lastModifierId": "a",
                                "lastModifyDateTime": "2019-09-03T14:56:18.239Z",
                                "notificationLocation": "",
                                "overrideInternal": false,
                                "protectDescription": false,
                                "text": {
                                  "language": "",
                                  "value": ""
                                },
                                "type": "",
                                "typeDescription": "a"
                              },
                              "uniqueId": {
                                "id": "a",
                                "idContext": "a",
                                "type": ""
                              }
                            }
                          ]
                        },
                        "company": {
                          "alternateLanguage": "E",
                          "alternateName": "a",
                          "blacklist": false,
                          "businessLocale": "a",
                          "businessTitle": "a",
                          "commissionCode": "",
                          "companyName": "Example Corporation, Ltd.",
                          "companyName2": "a",
                          "companyName3": "a",
                          "corporateIdType": "",
                          "creditRating": "",
                          "currencyCode": "USD",
                          "currencySymbol": "a",
                          "decimalPlaces": -100000000,
                          "iATAInfo": {
                            "iATACompany": "a",
                            "iATAConsortia": "a"
                          },
                          "language": "",
                          "nationality": "US",
                          "nationalityDescription": "United States of America",
                          "vipDescription": "Gold VIP",
                          "vipStatus": "2"
                        },
                        "createDateTime": "2000-09-03T14:56:18.259Z",
                        "creatorId": "1200",
                        "customer": {
                          "alienInfo": {
                            "alienRegistrationNo": "",
                            "immigrationStatus": "a",
                            "visaValidityType": "a"
                          },
                          "anonymization": {
                            "anonymizationDate": "2019-09-03T14:56:18.21Z",
                            "anonymizationStatus": "REQUESTED"
                          },
                          "birthCountry": {
                            "code": "US",
                            "name": "United States of America"
                          },
                          "birthDate": "2000-01-01",
                          "birthDateMasked": "",
                          "birthPlace": "New York",
                          "blacklist": false,
                          "businessTitle": "Dr",
                          "citizenCountry": {
                            "code": "US",
                            "name": "United States of America"
                          },
                          "creditRating": "",
                          "customerValue": "a",
                          "gender": "MALE",
                          "identifications": {
                            "identificationInfo": [
                              {
                                "identification": {
                                  "expirationDate": "2019-11-29",
                                  "idNumber": "C03005988",
                                  "idNumberMasked": "C030059XX",
                                  "idType": "PASSPORT",
                                  "issuedCountry": "USA",
                                  "issuedDate": "2009-11-30",
                                  "issuedPlace": "New York",
                                  "orderSequence": -100000000,
                                  "primaryInd": false,
                                  "registeredProperty": ""
                                }
                              }
                            ]
                          },
                          "language": "EN",
                          "nationality": "US",
                          "nationalityDescription": "a",
                          "personName": [
                            {
                              "envelopeGreeting": "",
                              "givenName": "Thomas",
                              "language": "E",
                              "middleName": "B",
                              "namePrefix": "a",
                              "nameSuffix": "a",
                              "nameTitle": "Mr",
                              "nameTitleSuffix": -100000000,
                              "nameType": "PRIMARY",
                              "salutation": "",
                              "surname": "Smith"
                            }
                          ],
                          "privateProfile": false,
                          "profession": "Engineer",
                          "vipDescription": "Gold",
                          "vipStatus": "2"
                        },
                        "emails": {
                          "emailInfo": [
                            {
                              "email": {
                                "createDateTime": "2019-09-03T14:56:18.234Z",
                                "creatorId": "1232",
                                "emailAddress": "eg@example.com",
                                "emailFormat": "HTML",
                                "lastModifierId": "1232",
                                "lastModifyDateTime": "2019-09-03T14:56:18.234Z",
                                "orderSequence": -100000000,
                                "primaryInd": false,
                                "type": "BUSINESSEMAIL",
                                "typeDescription": "Business Email Address"
                              },
                              "uniqueId": {
                                "id": "a",
                                "idContext": "a",
                                "type": ""
                              }
                            }
                          ]
                        },
                        "hasCommission": false,
                        "keywords": {
                          "keyword": [
                            {
                              "keyword": "a",
                              "keywordDetail": {
                                "newKeyword": "a"
                              },
                              "type": ""
                            }
                          ]
                        },
                        "lastModifierId": "1200",
                        "lastModifyDateTime": "2000-09-03T14:56:18.259Z",
                        "lastStayInfo": {
                          "lastRate": {
                            "amount": -100000000,
                            "currencyCode": "aaa"
                          },
                          "lastRoom": "",
                          "lastVisit": "0101-01-01",
                          "totalStay": -100000000
                        },
                        "localizationGuestType": "a",
                        "mailingActions": {
                          "active": false,
                          "mailingAction": [
                            {
                              "code": "",
                              "description": "a"
                            }
                          ],
                          "totalRows": -100000000
                        },
                        "markAsRecentlyAccessed": false,
                        "markForHistory": false,
                        "preferenceCollection": {
                          "preferenceType": [
                            {
                              "availableQuantity": -100000000,
                              "createDateTime": "2019-09-03T14:56:18.249Z",
                              "creatorId": "a",
                              "lastModifierId": "a",
                              "lastModifyDateTime": "2019-09-03T14:56:18.249Z",
                              "maxQuantity": -100000000,
                              "maxResortUsedQuantity": -100000000,
                              "preference": [
                                {}
                              ],
                              "preferenceType": "",
                              "preferenceTypeDescription": "",
                              "reservationPreference": false,
                              "sequence": ""
                            }
                          ]
                        },
                        "privacyInfo": {
                          "allowEmail": false,
                          "allowPhone": false,
                          "allowSMS": false,
                          "autoEnrollLoyaltyProgram": false,
                          "infoFromThirdParty": false,
                          "lastPrivacyPromptDate": "2000-01-01",
                          "marketResearchParticipation": false,
                          "optInAutoEnrollmentMember": false,
                          "optInEmail": false,
                          "optInMailingList": false,
                          "optInMarketResearch": false,
                          "optInPhone": false,
                          "optInSms": false,
                          "optInThirdParty": false
                        },
                        "profileAccessType": {
                          "chainCode": "a",
                          "croCode": "a",
                          "hotelCode": "a",
                          "sharedLevel": "GLOBAL"
                        },
                        "profileImage": {
                          "description": "a",
                          "hotelCode": "",
                          "imageOrder": -100000000,
                          "imageSet": "a",
                          "imageStyle": "FULL",
                          "imageType": "a",
                          "imageURL": "a",
                          "language": "",
                          "sequenceId": -100000000,
                          "website": "a"
                        },
                        "profileIndicators": [
                          {
                            "count": -100000000,
                            "indicatorName": "a"
                          }
                        ],
                        "profileMemberships": {
                          "profileMembership": [
                            {
                              "benefits": [
                                {
                                  "code": "",
                                  "inactive": false,
                                  "message": "a"
                                }
                              ],
                              "centralSetup": false,
                              "comment": {
                                "text": {
                                  "language": "",
                                  "value": ""
                                }
                              },
                              "createDateTime": "2019-09-03T14:56:18.247Z",
                              "creatorId": "a",
                              "currentPoints": -100000000,
                              "downgrade": "GRACE",
                              "downgradeDescription": "a",
                              "earningPreference": "POINTS",
                              "effectiveDate": "0101-01-01",
                              "enrollmentResort": "",
                              "enrollmentSource": "",
                              "excludeFromBatch": false,
                              "expireDate": "0101-01-01",
                              "expireDateExclusiveIndicator": false,
                              "inactive": false,
                              "lastModifierId": "a",
                              "lastModifyDateTime": "2019-09-03T14:56:18.248Z",
                              "memberStatus": "",
                              "membershipClass": "MEM",
                              "membershipEnrollmentCode": "",
                              "membershipId": "",
                              "membershipIdNo": -100000000,
                              "membershipLevel": "Gold",
                              "membershipLevelDescription": "Gold Level",
                              "membershipType": "",
                              "nameOnCard": "Thomas Smith",
                              "newMembershipId": "",
                              "orderSequence": -100000000,
                              "pointsLabel": "a",
                              "preferredCard": false,
                              "primaryMembershipYn": "a",
                              "programDescription": "Hotel Plus Membership",
                              "rating": "",
                              "reIssueNewCard": "PENDING",
                              "signupDate": "0101-01-01",
                              "tierAdministration": "DISABLED",
                              "upgradeDescription": "a"
                            }
                          ]
                        },
                        "profileRestrictions": {
                          "reason": "",
                          "reasonDescription": "a",
                          "restricted": false
                        },
                        "profileType": "GUEST",
                        "protectedBy": "a",
                        "registeredProperty": "",
                        "requestForHotel": "",
                        "statusCode": "ACTIVE",
                        "telephones": {
                          "telephoneInfo": [
                            {
                              "telephone": {
                                "createDateTime": "2019-09-03T14:56:18.23Z",
                                "creatorId": "1234",
                                "extension": "2",
                                "lastModifierId": "1234",
                                "lastModifyDateTime": "2019-09-03T14:56:18.231Z",
                                "orderSequence": -100000000,
                                "phoneNumber": "+1 415 555 0100",
                                "phoneTechType": "PHONE",
                                "phoneUseType": "MOBILE",
                                "phoneUseTypeDescription": "Mobile Phone Number",
                                "primaryInd": false
                              },
                              "uniqueId": {
                                "id": "a",
                                "idContext": "a",
                                "type": ""
                              }
                            }
                          ]
                        },
                        "userDefinedFields": {
                          "characterUDFs": [
                            {
                              "altname": "a",
                              "name": "a",
                              "value": "a"
                            }
                          ],
                          "dateUDFs": [
                            {
                              "altname": "a",
                              "name": "a",
                              "value": "0101-01-01"
                            }
                          ],
                          "numericUDFs": [
                            {
                              "altname": "a",
                              "name": "a",
                              "value": -100000000
                            }
                          ]
                        }
                      },
                      "profileIdList": [
                        {
                          "id": "a",
                          "idContext": "a",
                          "type": ""
                        }
                      ]
                    }
                  ],
                  "totalRows": -100000000
                }
              }
            }
          },
          "204": {
            "description": "ProfileByExtId not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/guests": {
      "post": {
        "description": "When a profile doesn't already exist for a guest, use this to create a new profile.  The response will provide the newly created profile's OPERA ID. There are many fields in postProfile defined by ListOfValues; ensure you have reviewed ListOfValues APIs in order successfully to use postProfile. <p><strong>OperationId:</strong>postGuestProfile</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Create a guest, contact or employee profile in OPERA",
        "operationId": "postGuestProfile",
        "parameters": [
          {
            "description": "Request object for creation of guest profile. This object contains profile details with unique identifiers of a profile. The standard optional Opera Context element is also included.",
            "name": "guest",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/guest"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/guests/{guestId}": {
      "get": {
        "description": "Use this API to retrieve all data stored for a guest Profile, such as their address, phone number, preferences. You must already know the guests Profile ID. If you don't know the profile ID, first use the API getGuests to find the profile ID. <p><strong>OperationId:</strong>getGuestProfile</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get guest profile by guest ID",
        "operationId": "getGuestProfile",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA internal ID used to find guest/contact/employee profile in OPERA.",
            "name": "guestId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Hotel Code used to filter hotel specific information regarding the profile.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Address",
                "Communication",
                "Comment",
                "Membership",
                "Preference",
                "Keyword",
                "Correspondence",
                "Profile",
                "Indicators",
                "SalesInfo",
                "Relationship",
                "WebUserAccount"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Ownership information associated with the profile.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching unique guest profile.",
            "schema": {
              "$ref": "#/definitions/guest"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "links": [
                  {
                    "href": "",
                    "method": "GET",
                    "operationId": "",
                    "rel": "",
                    "targetSchema": "",
                    "templated": false,
                    "title": ""
                  }
                ],
                "profiles": {
                  "profileInfo": [
                    {
                      "profile": {
                        "addresses": {
                          "addressInfo": [
                            {
                              "address": {
                                "addressLine": [
                                  "500 Oracle Parkway"
                                ],
                                "barCode": "a",
                                "cityExtension": "a",
                                "cityName": "Redwood Shores",
                                "country": {
                                  "code": "US",
                                  "name": "United States of America"
                                },
                                "county": "a",
                                "createDateTime": "2019-09-03T14:56:18.227Z",
                                "creatorId": "a",
                                "language": "E",
                                "lastModifierId": "a",
                                "lastModifyDateTime": "2019-09-03T14:56:18.228Z",
                                "postalCode": "94065",
                                "primaryInd": false,
                                "state": "CA",
                                "type": "",
                                "typeDescription": ""
                              },
                              "uniqueId": {
                                "id": "a",
                                "idContext": "a",
                                "type": ""
                              }
                            }
                          ]
                        },
                        "comments": {
                          "commentInfo": [
                            {
                              "comment": {
                                "actionDate": "0101-01-01",
                                "actionType": "",
                                "commentTitle": "a",
                                "confidential": false,
                                "createDateTime": "2019-09-03T14:56:18.239Z",
                                "creatorId": "a",
                                "hotelCode": "",
                                "internal": false,
                                "lastModifierId": "a",
                                "lastModifyDateTime": "2019-09-03T14:56:18.239Z",
                                "notificationLocation": "",
                                "overrideInternal": false,
                                "protectDescription": false,
                                "text": {
                                  "language": "",
                                  "value": ""
                                },
                                "type": "",
                                "typeDescription": "a"
                              },
                              "uniqueId": {
                                "id": "a",
                                "idContext": "a",
                                "type": ""
                              }
                            }
                          ]
                        },
                        "company": {
                          "alternateLanguage": "E",
                          "alternateName": "a",
                          "blacklist": false,
                          "businessLocale": "a",
                          "businessTitle": "a",
                          "commissionCode": "",
                          "companyName": "Example Corporation, Ltd.",
                          "companyName2": "a",
                          "companyName3": "a",
                          "corporateIdType": "",
                          "creditRating": "",
                          "currencyCode": "USD",
                          "currencySymbol": "a",
                          "decimalPlaces": -100000000,
                          "iATAInfo": {
                            "iATACompany": "a",
                            "iATAConsortia": "a"
                          },
                          "language": "",
                          "nationality": "US",
                          "nationalityDescription": "United States of America",
                          "vipDescription": "Gold VIP",
                          "vipStatus": "2"
                        },
                        "createDateTime": "2000-09-03T14:56:18.259Z",
                        "creatorId": "1200",
                        "customer": {
                          "alienInfo": {
                            "alienRegistrationNo": "",
                            "immigrationStatus": "a",
                            "visaValidityType": "a"
                          },
                          "anonymization": {
                            "anonymizationDate": "2019-09-03T14:56:18.21Z",
                            "anonymizationStatus": "REQUESTED"
                          },
                          "birthCountry": {
                            "code": "US",
                            "name": "United States of America"
                          },
                          "birthDate": "2000-01-01",
                          "birthDateMasked": "",
                          "birthPlace": "New York",
                          "blacklist": false,
                          "businessTitle": "Dr",
                          "citizenCountry": {
                            "code": "US",
                            "name": "United States of America"
                          },
                          "creditRating": "",
                          "customerValue": "a",
                          "gender": "MALE",
                          "identifications": {
                            "identificationInfo": [
                              {
                                "identification": {
                                  "expirationDate": "2019-11-29",
                                  "idNumber": "C03005988",
                                  "idNumberMasked": "C030059XX",
                                  "idType": "PASSPORT",
                                  "issuedCountry": "USA",
                                  "issuedDate": "2009-11-30",
                                  "issuedPlace": "New York",
                                  "orderSequence": -100000000,
                                  "primaryInd": false,
                                  "registeredProperty": ""
                                }
                              }
                            ]
                          },
                          "language": "EN",
                          "nationality": "US",
                          "nationalityDescription": "a",
                          "personName": [
                            {
                              "envelopeGreeting": "",
                              "givenName": "Thomas",
                              "language": "E",
                              "middleName": "B",
                              "namePrefix": "a",
                              "nameSuffix": "a",
                              "nameTitle": "Mr",
                              "nameTitleSuffix": -100000000,
                              "nameType": "PRIMARY",
                              "salutation": "",
                              "surname": "Smith"
                            }
                          ],
                          "privateProfile": false,
                          "profession": "Engineer",
                          "vipDescription": "Gold",
                          "vipStatus": "2"
                        },
                        "emails": {
                          "emailInfo": [
                            {
                              "email": {
                                "createDateTime": "2019-09-03T14:56:18.234Z",
                                "creatorId": "1232",
                                "emailAddress": "eg@example.com",
                                "emailFormat": "HTML",
                                "lastModifierId": "1232",
                                "lastModifyDateTime": "2019-09-03T14:56:18.234Z",
                                "orderSequence": -100000000,
                                "primaryInd": false,
                                "type": "BUSINESSEMAIL",
                                "typeDescription": "Business Email Address"
                              },
                              "uniqueId": {
                                "id": "a",
                                "idContext": "a",
                                "type": ""
                              }
                            }
                          ]
                        },
                        "hasCommission": false,
                        "keywords": {
                          "keyword": [
                            {
                              "keyword": "a",
                              "keywordDetail": {
                                "newKeyword": "a"
                              },
                              "type": ""
                            }
                          ]
                        },
                        "lastModifierId": "1200",
                        "lastModifyDateTime": "2000-09-03T14:56:18.259Z",
                        "lastStayInfo": {
                          "lastRate": {
                            "amount": -100000000,
                            "currencyCode": "aaa"
                          },
                          "lastRoom": "",
                          "lastVisit": "0101-01-01",
                          "totalStay": -100000000
                        },
                        "localizationGuestType": "a",
                        "mailingActions": {
                          "active": false,
                          "mailingAction": [
                            {
                              "code": "",
                              "description": "a"
                            }
                          ],
                          "totalRows": -100000000
                        },
                        "markAsRecentlyAccessed": false,
                        "markForHistory": false,
                        "preferenceCollection": {
                          "preferenceType": [
                            {
                              "availableQuantity": -100000000,
                              "createDateTime": "2019-09-03T14:56:18.249Z",
                              "creatorId": "a",
                              "lastModifierId": "a",
                              "lastModifyDateTime": "2019-09-03T14:56:18.249Z",
                              "maxQuantity": -100000000,
                              "maxResortUsedQuantity": -100000000,
                              "preference": [
                                {}
                              ],
                              "preferenceType": "",
                              "preferenceTypeDescription": "",
                              "reservationPreference": false,
                              "sequence": ""
                            }
                          ]
                        },
                        "privacyInfo": {
                          "allowEmail": false,
                          "allowPhone": false,
                          "allowSMS": false,
                          "autoEnrollLoyaltyProgram": false,
                          "infoFromThirdParty": false,
                          "lastPrivacyPromptDate": "2000-01-01",
                          "marketResearchParticipation": false,
                          "optInAutoEnrollmentMember": false,
                          "optInEmail": false,
                          "optInMailingList": false,
                          "optInMarketResearch": false,
                          "optInPhone": false,
                          "optInSms": false,
                          "optInThirdParty": false
                        },
                        "profileAccessType": {
                          "chainCode": "a",
                          "croCode": "a",
                          "hotelCode": "a",
                          "sharedLevel": "GLOBAL"
                        },
                        "profileImage": {
                          "description": "a",
                          "hotelCode": "",
                          "imageOrder": -100000000,
                          "imageSet": "a",
                          "imageStyle": "FULL",
                          "imageType": "a",
                          "imageURL": "a",
                          "language": "",
                          "sequenceId": -100000000,
                          "website": "a"
                        },
                        "profileIndicators": [
                          {
                            "count": -100000000,
                            "indicatorName": "a"
                          }
                        ],
                        "profileMemberships": {
                          "profileMembership": [
                            {
                              "benefits": [
                                {
                                  "code": "",
                                  "inactive": false,
                                  "message": "a"
                                }
                              ],
                              "centralSetup": false,
                              "comment": {
                                "text": {
                                  "language": "",
                                  "value": ""
                                }
                              },
                              "createDateTime": "2019-09-03T14:56:18.247Z",
                              "creatorId": "a",
                              "currentPoints": -100000000,
                              "downgrade": "GRACE",
                              "downgradeDescription": "a",
                              "earningPreference": "POINTS",
                              "effectiveDate": "0101-01-01",
                              "enrollmentResort": "",
                              "enrollmentSource": "",
                              "excludeFromBatch": false,
                              "expireDate": "0101-01-01",
                              "expireDateExclusiveIndicator": false,
                              "inactive": false,
                              "lastModifierId": "a",
                              "lastModifyDateTime": "2019-09-03T14:56:18.248Z",
                              "memberStatus": "",
                              "membershipClass": "MEM",
                              "membershipEnrollmentCode": "",
                              "membershipId": "",
                              "membershipIdNo": -100000000,
                              "membershipLevel": "Gold",
                              "membershipLevelDescription": "Gold Level",
                              "membershipType": "",
                              "nameOnCard": "Thomas Smith",
                              "newMembershipId": "",
                              "orderSequence": -100000000,
                              "pointsLabel": "a",
                              "preferredCard": false,
                              "primaryMembershipYn": "a",
                              "programDescription": "Hotel Plus Membership",
                              "rating": "",
                              "reIssueNewCard": "PENDING",
                              "signupDate": "0101-01-01",
                              "tierAdministration": "DISABLED",
                              "upgradeDescription": "a"
                            }
                          ]
                        },
                        "profileRestrictions": {
                          "reason": "",
                          "reasonDescription": "a",
                          "restricted": false
                        },
                        "profileType": "GUEST",
                        "protectedBy": "a",
                        "registeredProperty": "",
                        "requestForHotel": "",
                        "statusCode": "ACTIVE",
                        "telephones": {
                          "telephoneInfo": [
                            {
                              "telephone": {
                                "createDateTime": "2019-09-03T14:56:18.23Z",
                                "creatorId": "1234",
                                "extension": "2",
                                "lastModifierId": "1234",
                                "lastModifyDateTime": "2019-09-03T14:56:18.231Z",
                                "orderSequence": -100000000,
                                "phoneNumber": "+1 415 555 0100",
                                "phoneTechType": "PHONE",
                                "phoneUseType": "MOBILE",
                                "phoneUseTypeDescription": "Mobile Phone Number",
                                "primaryInd": false
                              },
                              "uniqueId": {
                                "id": "a",
                                "idContext": "a",
                                "type": ""
                              }
                            }
                          ]
                        },
                        "userDefinedFields": {
                          "characterUDFs": [
                            {
                              "altname": "a",
                              "name": "a",
                              "value": "a"
                            }
                          ],
                          "dateUDFs": [
                            {
                              "altname": "a",
                              "name": "a",
                              "value": "0101-01-01"
                            }
                          ],
                          "numericUDFs": [
                            {
                              "altname": "a",
                              "name": "a",
                              "value": -100000000
                            }
                          ]
                        }
                      },
                      "profileIdList": [
                        {
                          "id": "a",
                          "idContext": "a",
                          "type": ""
                        }
                      ]
                    }
                  ],
                  "totalRows": -100000000
                }
              }
            }
          },
          "204": {
            "description": "GuestProfile not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/memberships/{membershipId}": {
      "get": {
        "description": "Get a memberships issued awards points per property. <p><strong>OperationId:</strong>getMembershipAwardPointsByHotel</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Get Membership Issued awards points ",
        "operationId": "getMembershipAwardPointsByHotel",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "membershipId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching member award points by Hotel.",
            "schema": {
              "$ref": "#/definitions/membershipAwardPointsByHotel"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MembershipAwardPointsByHotel not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/profiles/{profileId}/commissionAccount": {
      "put": {
        "description": "You can use this API to copy the commission account on a profile <p><strong>OperationId:</strong>copyProfileCommissionAccount</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Copy profile commission account",
        "operationId": "copyProfileCommissionAccount",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for copying transaction groups configuration.",
            "name": "profileCommissionAccountCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/profileCommissionAccountCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/membershipClaims": {
      "get": {
        "description": "Retrieve available membership claims without specifying the membership ID. <p><strong>OperationId:</strong>getAllMembershipClaims</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Get membership claims",
        "operationId": "getAllMembershipClaims",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Id to get the claims.",
            "name": "membershipId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "profileIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Family name, last name or Company Name.",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names.",
            "name": "givenName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Membership Type code.",
            "name": "membershipType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Type of user-definable claim to be searched.",
            "name": "claimType",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Ocis",
              "Opms",
              "Web"
            ],
            "type": "string",
            "description": "Source of the membership claim.",
            "name": "source",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Unique application user ID of the person responsible for handling the claim.",
            "name": "owner",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "claimNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "claimNoContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "claimNoType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Property where the stay took place.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Reservation confirmation or booking reference number.",
            "name": "confirmationNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Application user ID of the user who entered the claim.",
            "name": "submitter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Status of the claim.(Open, Waiting for Manager, etc.)",
            "name": "claimStatus",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "closeDateEnd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "closeDateStart",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "claimDateEnd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "claimDateStart",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "replyByEnd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "replyByStart",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "arrivalEnd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "arrivalStart",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "departureEnd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "departureStart",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Approved",
              "Rejected",
              "Pending"
            ],
            "type": "string",
            "description": "Claim approve or reject status.",
            "name": "approvalStatus",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching membership claims.",
            "schema": {
              "$ref": "#/definitions/membershipClaims"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MembershipClaims not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "This will create membership claim details based on the claim number and instructions provided in the request. <p><strong>OperationId:</strong>postMembershipClaim</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Create membership Claim",
        "operationId": "postMembershipClaim",
        "parameters": [
          {
            "description": "Request object for creating membership claim.",
            "name": "membershipClaim",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/membershipClaim"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/membershipClaims/{claimId}": {
      "get": {
        "description": "Get membership claim details based on the claim number and instructions provided in the request. <p><strong>OperationId:</strong>getMembershipClaim</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Get membership claim ",
        "operationId": "getMembershipClaim",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "claimId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "ClaimDetail",
                "ClaimActivityLog"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for membership claim instructions that can be used in requests for partial operations.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching membership claim.",
            "schema": {
              "$ref": "#/definitions/membershipClaim"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MembershipClaim not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Change membership claim details based on the claim number and instructions provided in the request. <p><strong>OperationId:</strong>changeMembershipClaim</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Change membership Claim",
        "operationId": "changeMembershipClaim",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "claimId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing membership claim information.",
            "name": "membershipClaim",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/membershipClaim"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/membershipPoints/calculations": {
      "post": {
        "description": "Start Membership Points Calculation process <p><strong>OperationId:</strong>calculateMembershipPoints</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Calculate Membership Points",
        "operationId": "calculateMembershipPoints",
        "parameters": [
          {
            "description": "Request to run membership points calculation job.",
            "name": "membershipPointsToCalculate",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/membershipPointsToCalculate"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/membershipTierProjections": {
      "get": {
        "description": "Retrieve a list of membership Tier Projection such as upgrades and downgrades. <p><strong>OperationId:</strong>getMembershipTierProjections</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get Membership Tier Projection",
        "operationId": "getMembershipTierProjections",
        "parameters": [
          {
            "type": "string",
            "description": "Membership Card Number.",
            "name": "membershipId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Type of the Membership.",
            "name": "membershipType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date for which Tier projections is fetched.",
            "name": "projectionDate",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Upgrade",
              "Downgrade",
              "UpgradeAndDowngrade"
            ],
            "type": "string",
            "description": "Upgrade And Downgrade",
            "name": "projectionType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Membership Tier Process Text.",
            "schema": {
              "$ref": "#/definitions/membershipTierProjections"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MembershipTierProjections not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/membershipTransaction/{membershipTransactionId}/awardPoints": {
      "get": {
        "description": "Retrieves the validated rule used to generate award points, the type of points, number of points, cost per point, rule code for the award points, billing group the points belong. <p><strong>OperationId:</strong>getMembershipTransactionAwardPoints</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Fetch the Award Points Accrued for the current points transaction.",
        "operationId": "getMembershipTransactionAwardPoints",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "membershipTransactionId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching membership transaction points information.",
            "schema": {
              "$ref": "#/definitions/calculatedPoints"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MembershipTransactionAwardPoints not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/membershipTransaction/{membershipTransactionId}/pointRejectionReasons": {
      "get": {
        "description": "Retrieves the rule used to generate points and the reason the points were not awarded (validation failure, for e.g.'Membership level requirements not met'). <p><strong>OperationId:</strong>getMembershipTransactionPointsRejectionReasons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Fetch the reason points were not awarded for a given points transaction.",
        "operationId": "getMembershipTransactionPointsRejectionReasons",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "membershipTransactionId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching member transactions points rejection reasons information.",
            "schema": {
              "$ref": "#/definitions/pointsRejectionReasons"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MembershipTransactionPointsRejectionReasons not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/membershipTransaction/{membershipTransactionId}/rates": {
      "get": {
        "description": "Retrieves the dates of the stay, the rate code, the PMS rate amount, the central rate amount, the central currency and the market code associated with the stay. <p><strong>OperationId:</strong>getMembershipTransactionRates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Fetch the rate details associated to current points transaction.",
        "operationId": "getMembershipTransactionRates",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "membershipTransactionId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Membership Transaction Rates information.",
            "schema": {
              "$ref": "#/definitions/rates"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MembershipTransactionRates not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/membershipTransaction/{membershipTransactionId}/revenue": {
      "get": {
        "description": "Retrieves the date the revenue was recognized, the revenue type (PMS revenue buckets are seen as revenue types in ORS), PMS revenue and central <p><strong>OperationId:</strong>getMembershipTransactionRevenue</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Fetch the revenue details for the stay associated with current point transaction.",
        "operationId": "getMembershipTransactionRevenue",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "membershipTransactionId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Membership Transaction Revenue.",
            "schema": {
              "$ref": "#/definitions/revenues"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MembershipTransactionRevenue not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/membershipTransaction/{membershipTransactionId}/tierPoints": {
      "get": {
        "description": "Retrieves the validated rule used to generate tier points, the type of points, number of points, cost per point, rule code for the award points, billing group the points belong. <p><strong>OperationId:</strong>getMembershipTransactionTierPoints</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Fetch the Tier Points Accrued for the current points transaction",
        "operationId": "getMembershipTransactionTierPoints",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "membershipTransactionId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching membership transaction points information.",
            "schema": {
              "$ref": "#/definitions/calculatedPoints"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MembershipTransactionTierPoints not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/membershipTransactions/{membershipTransactionId}": {
      "get": {
        "description": "Retrieve membership transactions. <p><strong>OperationId:</strong>getMembershipTransaction</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Get a membership transaction",
        "operationId": "getMembershipTransaction",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "membershipTransactionId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching a membership transaction.",
            "schema": {
              "$ref": "#/definitions/membershipTransaction"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MembershipTransaction not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/memberships/{membershipId}/award": {
      "get": {
        "description": "Export members information for Fulfillment house processing <p><strong>OperationId:</strong>exportMembershipAward</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Export Membership Award",
        "operationId": "exportMembershipAward",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "membershipId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "HotelCode where the award will be consumed.",
            "name": "rateInfoHotelId",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Total award points available for redemption.",
            "name": "totalAvailablePoints",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The number of points that must be redeemed for this award.",
            "name": "pointsRequired",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The award points that will be forfeited if the cancel penalty charge is applied.",
            "name": "cancelPenaltyPoints",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Number of days before arrival when a reservation may be cancelled without an award points penalty.",
            "name": "cancelPenaltyDays",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The cancel penalty charge.",
            "name": "cancelPenaltyCharge",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The penalty charge is either a percentage or a flat number of points.",
            "name": "cancelPenaltyType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Issue key in format of Raw data.",
            "name": "rawIssueKey",
            "in": "query"
          },
          {
            "type": "number",
            "description": "An identifying number of the award, assigned by the system when the award was issued.",
            "name": "awardNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Rate code associated with the award.",
            "name": "rateCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Rate code description associated with the award.",
            "name": "rateDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code for the room type in which the award was issued.",
            "name": "roomLabel",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the Room.",
            "name": "roomDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates which room category it belongs.",
            "name": "roomCategory",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The date of the reservation associated with the award. There may be more than one date (multiple nights) associated with award.",
            "name": "stayDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Unique code that identifies this award.",
            "name": "awardType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "HotelCode where the award will be consumed.",
            "name": "productInfoHotelId",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Total award points available for redemption.",
            "name": "productInfoTotalAvailablePoints",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The number of points that must be redeemed for this award.",
            "name": "productInfoPointsRequired",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The award points that will be forfeited if the cancel penalty charge is applied.",
            "name": "productInfoCancelPenaltyPoints",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Number of days before arrival when a reservation may be cancelled without an award points penalty.",
            "name": "productInfoCancelPenaltyDays",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The cancel penalty charge.",
            "name": "productInfoCancelPenaltyCharge",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The penalty charge is either a percentage or a flat number of points.",
            "name": "productInfoCancelPenaltyType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Issue key in format of Raw data.",
            "name": "productInfoRawIssueKey",
            "in": "query"
          },
          {
            "type": "number",
            "description": "An identifying number of the award, assigned by the system when the award was issued.",
            "name": "productInfoAwardNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Package/Product code for the award .",
            "name": "packageCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the product.",
            "name": "packageDescription",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The valid time period from when the award can be issued.",
            "name": "awardValidFrom",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The valid time to an issued award.",
            "name": "awardValidTo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Unique code that identifies this award.",
            "name": "upgradeInfoAwardType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "HotelCode where the award will be consumed.",
            "name": "upgradeInfoHotelId",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Total award points available for redemption.",
            "name": "upgradeInfoTotalAvailablePoints",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The number of points that must be redeemed for this award.",
            "name": "upgradeInfoPointsRequired",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The award points that will be forfeited if the cancel penalty charge is applied.",
            "name": "upgradeInfoCancelPenaltyPoints",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Number of days before arrival when a reservation may be cancelled without an award points penalty.",
            "name": "upgradeInfoCancelPenaltyDays",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The cancel penalty charge.",
            "name": "upgradeInfoCancelPenaltyCharge",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The penalty charge is either a percentage or a flat number of points.",
            "name": "upgradeInfoCancelPenaltyType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Issue key in format of Raw data.",
            "name": "upgradeInfoRawIssueKey",
            "in": "query"
          },
          {
            "type": "number",
            "description": "An identifying number of the award, assigned by the system when the award was issued.",
            "name": "upgradeInfoAwardNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates room type code for the room prior to the upgrade.",
            "name": "fromRoomCategory",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates room type code of the upgrade room.",
            "name": "toRoomCategory",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates room type Description for the room prior to the upgrade.",
            "name": "fromRoomDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates room type Description of the upgrade room.",
            "name": "toRoomDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates room type code for the room prior to the upgrade.",
            "name": "fromRoom",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates room type code of the upgrade room.",
            "name": "toRoom",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The date of the reservation associated with the award. There may be more than one date (multiple nights) associated with award.",
            "name": "upgradeInfoStayDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Unique code that identifies this award.",
            "name": "otherInfoAwardType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Beginning date of the award.",
            "name": "sellBeginDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "End date that the award will be available.",
            "name": "sellEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Descriptive name of the award.",
            "name": "shortDescription",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The actual value of the award, in the amount of currency.",
            "name": "awardValue",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Total award points available for redemption.",
            "name": "otherInfoTotalAvailablePoints",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The number of points that must be redeemed for this award.",
            "name": "otherInfoPointsRequired",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Detail description of the award.",
            "name": "longDescription",
            "in": "query"
          },
          {
            "type": "number",
            "description": "An identifying number of the award, assigned by the system when the award was issued.",
            "name": "otherInfoAwardNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "HotelCode where the award will be consumed.",
            "name": "issueAwardsHotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "PMS Reservation number.",
            "name": "externalReservationNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "ORS Booking number.",
            "name": "confirmationBookingNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The source for the reservation associated with the award.",
            "name": "awardSource",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Arrival date of the reservation associated with the award.",
            "name": "arrivalDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Departure date of the reservation associated with the award.",
            "name": "departureDate",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Award Number to identify member's information.",
            "name": "exportInfoAwardNumber",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Primary",
              "Alternate",
              "Incognito",
              "External",
              "Phonetic"
            ],
            "type": "string",
            "description": "Person's name in an external system.",
            "name": "nameType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Family name, last name or Company Name.",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Full display Name.",
            "name": "fullName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
            "name": "namePrefix",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names.",
            "name": "givenName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The middle name of the person name.",
            "name": "middleName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
            "name": "nameSuffix",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Degree or honors (e.g., Ph.D., M.D.)",
            "name": "nameTitle",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Phone number",
            "name": "phoneNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "It returns a Company Name,If the member is associated with a company.",
            "name": "companyName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "idType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The postal barcode for the address.",
            "name": "barCode",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of the creation.",
            "name": "createDateTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
            "name": "creatorId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Identifies the last software system or person to modify a record.",
            "name": "lastModifierId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of last modification.",
            "name": "lastModifyDateTime",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true, indicates a primary information.",
            "name": "primaryInd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
            "name": "purgeDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the type of address (e.g. home, business, other).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Describes the type code",
            "name": "typeDescription",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
            "name": "updateReservations",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
            "name": "addressLine",
            "in": "query"
          },
          {
            "type": "string",
            "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
            "name": "cityName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Post Office Code number.",
            "name": "postalCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
            "name": "cityExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "County or District Name (e.g., Fairfax). This is read only.",
            "name": "county",
            "in": "query"
          },
          {
            "type": "string",
            "description": "State or Province name (e.g., Texas).",
            "name": "state",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code for a country or a nationality.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Language code associated with the address",
            "name": "language",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Label of user defined field used by vendors or customers.",
            "name": "characterUDFsAltName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to hold user defined field of Character Type. It is highly recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
            "name": "characterUDFsName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Value of user defined field.",
            "name": "characterUDFsValue",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Label of user defined field used by vendors or customers.",
            "name": "NumericUDFsAltName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Name of user defined field.",
            "name": "NumericUDFsName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Value of user defined field.",
            "name": "NumericUDFsValue",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Label of user defined field used by vendors or customers.",
            "name": "DateUDFsAltname",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to hold user defined field of Date Type. It is highly recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
            "name": "DateUDFsName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Value of user defined field.",
            "name": "DateUDFsValue",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "exportMembershipAward not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/memberships/{membershipId}/awardExports": {
      "get": {
        "description": "Get members information for Fulfillment house processing <p><strong>OperationId:</strong>getMembershipAwardExportInfo</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Get Membership Award Export Information",
        "operationId": "getMembershipAwardExportInfo",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "membershipId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "Award Number to identify member's information.",
            "name": "awardNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to fetch members information for Fulfillment house processing.",
            "schema": {
              "$ref": "#/definitions/membershipAwardExportInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MembershipAwardExportInfo not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/memberships/{membershipId}/awards": {
      "get": {
        "description": "Retrieve a list of member issued awards. <p><strong>OperationId:</strong>getMembershipIssueAwardsList</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Get Membership Award list",
        "operationId": "getMembershipIssueAwardsList",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "membershipId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "membershipType",
            "in": "query"
          },
          {
            "maximum": 100,
            "type": "integer",
            "default": 20,
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 1,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching member issued award list.",
            "schema": {
              "$ref": "#/definitions/membershipIssueAwards"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MembershipIssueAwardsList not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/memberships/{membershipId}/claims": {
      "get": {
        "description": "Retrieve available membership claims by specifying the membership ID. <p><strong>OperationId:</strong>getMembershipClaims</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Get membership claims",
        "operationId": "getMembershipClaims",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Id to get the claims.",
            "name": "membershipId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "profileIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Family name, last name or Company Name.",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names.",
            "name": "givenName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Membership Type code.",
            "name": "membershipType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Type of user-definable claim to be searched.",
            "name": "claimType",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Ocis",
              "Opms",
              "Web"
            ],
            "type": "string",
            "description": "Source of the membership claim.",
            "name": "source",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Unique application user ID of the person responsible for handling the claim.",
            "name": "owner",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "claimNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "claimNoContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "claimNoType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Property where the stay took place.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Reservation confirmation or booking reference number.",
            "name": "confirmationNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Application user ID of the user who entered the claim.",
            "name": "submitter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Status of the claim.(Open, Waiting for Manager, etc.)",
            "name": "claimStatus",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "closeDateEnd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "closeDateStart",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "claimDateEnd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "claimDateStart",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "replyByEnd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "replyByStart",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "arrivalEnd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "arrivalStart",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "departureEnd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "departureStart",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Approved",
              "Rejected",
              "Pending"
            ],
            "type": "string",
            "description": "Claim approve or reject status.",
            "name": "approvalStatus",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching membership claims.",
            "schema": {
              "$ref": "#/definitions/membershipClaims"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MembershipClaims not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/memberships/{membershipId}/fullfillmentExportLogs": {
      "get": {
        "description": "Use this API to Get Fulfillment Export Logs. <p><strong>OperationId:</strong>getFulfillmentExportLogs</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get Fulfillment Export Logs",
        "operationId": "getFulfillmentExportLogs",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "membershipId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "idType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "membershipType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object which has list of membership fulfillment export logs and membership extract information(Exclude Extract -Y/N).",
            "schema": {
              "$ref": "#/definitions/fulfillmentExportedLogs"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FulfillmentExportLogs not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/memberships/{membershipId}/pointsToExpire": {
      "get": {
        "description": "Use this API to retrieve your Points To Expire by membershipId. <p><strong>OperationId:</strong>getMemberPointsToExpire</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Get  membership points to expire ",
        "operationId": "getMemberPointsToExpire",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "membershipId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching member points to expire information.",
            "schema": {
              "$ref": "#/definitions/memberPointsToExpire"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MemberPointsToExpire not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "This will allow you to extend the expiration date based on the rule defined in the Grace Period in months. <p><strong>OperationId:</strong>extendMemberPointsToExpire</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Extend Member Points set to Expire",
        "operationId": "extendMemberPointsToExpire",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "membershipId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to extend a member points to expire.",
            "name": "extendMemberPointsToExpire",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/extendMemberPointsToExpire"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/memberships/{membershipId}/transactions": {
      "get": {
        "description": "Get membership transactions summary information by specifying membership ID <p><strong>OperationId:</strong>getMembershipTransactionsSummary</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Get membership transactions ",
        "operationId": "getMembershipTransactionsSummary",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "membershipId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching member point totals information.",
            "schema": {
              "$ref": "#/definitions/membershipTransactionsSummary"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MembershipTransactionsSummary not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Create a new membership transaction . <p><strong>OperationId:</strong>postMembershipTransaction</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Post a membership transaction",
        "operationId": "postMembershipTransaction",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "membershipId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating a membership transaction.",
            "name": "membershipTransaction",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/membershipTransaction"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/memberships/{membershipType}/membershipNumbers": {
      "post": {
        "description": "This API will generate a new membership number. <p><strong>OperationId:</strong>postMembershipNumber</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Generate membership number",
        "operationId": "postMembershipNumber",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "membershipType",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for generating membership number.",
            "name": "membershipNumber",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/membershipNumber"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profileForEnrollment": {
      "get": {
        "description": "Get detailed information regarding match profiles <p><strong>OperationId:</strong>getEnrollmentMatchProfiles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Get Profiles for Enrollment",
        "operationId": "getEnrollmentMatchProfiles",
        "parameters": [
          {
            "type": "string",
            "description": "Enrollment details will be fetched from this External database.",
            "name": "externalDatabaseID",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Guest",
              "Agent",
              "Company",
              "Group",
              "Source",
              "Employee",
              "Hotel",
              "Vendor",
              "Contact",
              "Purge",
              "BusinessHeader",
              "BillingAccount",
              "Activity",
              "Potential",
              "Account"
            ],
            "type": "string",
            "description": "The types of Profile handled by the web service.",
            "name": "matchedProfileType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Language code associated with an alternate name.",
            "name": "language",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names.",
            "name": "givenName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
            "name": "surname",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Degree or honors (e.g., Ph.D., M.D.)",
            "name": "nameTitle",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "addressId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "addressIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "addressIdType",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true, indicates a primary information.",
            "name": "primaryInd",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the type of address (e.g. home, business, other).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
            "name": "addressLine",
            "in": "query"
          },
          {
            "type": "string",
            "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
            "name": "cityName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Post Office Code number.",
            "name": "postalCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "County or District Name (e.g., Fairfax). This is read only.",
            "name": "county",
            "in": "query"
          },
          {
            "type": "string",
            "description": "State or Province name (e.g., Texas).",
            "name": "state",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code for a country or a nationality.",
            "name": "countryCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Language code associated with the address",
            "name": "languageCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Business/Market Segment associated to the profile.",
            "name": "businessSegment",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Territory associated to the profile.",
            "name": "territory",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Trace Code associated to the profile.",
            "name": "traceCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Owner Code associated to the profile.",
            "name": "ownerCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Influence Code associated to the profile.",
            "name": "influenceCode",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
            "name": "hasMore",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Total number of rows queried",
            "name": "totalResults",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "telephoneId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "telephoneIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "telephoneIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Telephone number assigned to a single location.",
            "name": "phoneNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
            "name": "phoneTechType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
            "name": "phoneUseType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the PhoneUseType code",
            "name": "phoneUseTypeDescription",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true, indicates a primary information.",
            "name": "telephonePrimaryInd",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "emailInfoId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "emailInfoIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "emailInfoIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the e-mail address.",
            "name": "emailAddress",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true, indicates a primary information.",
            "name": "emailPrimaryInd",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
            "name": "emailType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "urlId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "urlIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "urlIdType",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true, indicates a primary information.",
            "name": "urlPrimaryInd",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the purpose of the URL address, such as personal, business, public, etc.",
            "name": "urlType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Card Number of the membership.",
            "name": "membershipId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Name to be displayed on the membership card.",
            "name": "nameOnCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates the membership level.",
            "name": "membershipLevel",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "profileType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code.",
            "name": "paymentMethodCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Amount/Fee to enroll to membership Program.",
            "name": "amount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code.",
            "name": "amountCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Payment Comments.",
            "name": "comments",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to fetch match profiles for enrollment.",
            "schema": {
              "$ref": "#/definitions/enrollmentMatchProfiles"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "EnrollmentMatchProfiles not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profileListOfValues/availableARAddresses": {
      "get": {
        "description": "Use this API to fetch the available AR Addresses List Of Values for profiles <p><strong>OperationId:</strong>getAvailableARAddresses</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileLOV"
        ],
        "summary": "Get available AR Addresses ",
        "operationId": "getAvailableARAddresses",
        "parameters": [
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "The property where the AR Account exists or is being created.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "accountId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "accountIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "accountType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Account Number of the AR Account of the Profile.",
            "name": "accountNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the request to fetch the available Accounts Receivables(AR) Addresses for a Profile.",
            "schema": {
              "$ref": "#/definitions/availableARAddresses"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AvailableARAddresses not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profileListOfValues/availablePreferences": {
      "get": {
        "description": "Use this API to fetch the available preferences List Of Values for profiles <p><strong>OperationId:</strong>getAvailablePreferences</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileLOV"
        ],
        "summary": "Get available preferences",
        "operationId": "getAvailablePreferences",
        "parameters": [
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Property for which preferences are to be fetched.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Maximum records to be fetched.",
            "name": "maxFetchSize",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of preferences",
            "schema": {
              "$ref": "#/definitions/availablePreferences"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AvailablePreferences not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profileMembershipStatistics": {
      "get": {
        "description": "Retrieve the summary statistics and/or the details of each of the membership transactions and its points.  You can filter by membership Type, or Membership Number. <p><strong>OperationId:</strong>getProfileMembershipStatistics</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileStatistics"
        ],
        "summary": "Get Membership statistics ",
        "operationId": "getProfileMembershipStatistics",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Number of the membership card.",
            "name": "membershipCardNo",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Type of membership.",
            "name": "membershipType",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "description": "Flag indicating whether to fetch detailed membership points information or just a summary of the total of the points.",
            "name": "transactionDetail",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response of the WS operation FetchProfileMembershipPoints. It contains the summary statistics and/or the details of each of the membership transactions and its points.",
            "schema": {
              "$ref": "#/definitions/profileMembershipStatistics"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ProfileMembershipStatistics not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profileStatistics": {
      "get": {
        "description": "This API provides summary/detail/revenue statistics information <p><strong>OperationId:</strong>getProfileStatistics</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileStatistics"
        ],
        "summary": "Get Profile Statistics",
        "operationId": "getProfileStatistics",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "uniqueItems": true,
            "enum": [
              "Reservation",
              "Revenue",
              "ProfileStayRecords",
              "DetailStayRecordsRevenue"
            ],
            "type": "string",
            "description": "Indicate to get revenue of Stay Records.",
            "name": "reportType",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "Stay from date for report",
            "name": "stayFrom",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Stay to date for report",
            "name": "stayTo",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indicate whether summary/detail report is requested.",
            "name": "summary",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to include passerBy records.",
            "name": "passerBy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "AccountContact",
              "AgentContact",
              "ReservationContact",
              "ReservationBillingContact",
              "All"
            ],
            "type": "string",
            "description": "Profile Role Type All.",
            "name": "contactProfileRoleType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "stayRecordId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "stayRecordIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "stayRecordIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching profile stay/reservation/revenue statistics. This object contains collection of summary or detail,Success,Warnings and Errors related to this operation.",
            "schema": {
              "$ref": "#/definitions/profileStatistics"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ProfileStatistics not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles": {
      "get": {
        "description": "Use this API when you want to search for a profile as part of a booking process or to manage a profile data. The response will include a list of profiles that exist in OPERA, based on your search criteria.  For example, you want to see if a profile for Mr David Smith exists - you can search by various criteria, such as first name, last name, email.  The response will include a list of any profiles that exist for Mr David Smith.  If a profile matches the criteria, and you want to get more details of that profile, proceed to use getProfile with the profileId in the request. Maximum response data limit is 1000 records, so use more query parameters to narrow your results. This API is not designed to support sync between two systems or initial upload of data.<p><strong>OperationId:</strong>getProfiles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Search for profile(s)",
        "operationId": "getProfiles",
        "parameters": [
          {
            "type": "boolean",
            "description": "Indicates whether to exclude Inactive Profiles, when true indicates that only profiles with active status will be displayed.",
            "name": "excludeInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hotel Code, It is used to filter hotel specific children to this specific hotel code.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Include profiles that have one or more relationships in the search.",
            "name": "includeHasHierarchyOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Include primary owners in the search.",
            "name": "includePrimaryOwnersOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Include purged profiles in the search.",
            "name": "includePurgeProfiles",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "PurgeableProfiles",
              "Any",
              "PatronTrackingSystemMemberProfiles"
            ],
            "type": "string",
            "description": "When search type is PatronTrackingSystemMemberProfiles, the FetchProfiles will return the Membership Number of the searched Membership Type regardless of primary flag or sequence of the profile memberships.",
            "name": "searchType",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true response will return summary information otherwise detailed information.",
            "name": "summaryInfo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search string to be used for super search.",
            "name": "searchString",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether to include Anonymized Profiles.",
            "name": "includeAnonymized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Guest",
                "Agent",
                "Company",
                "Group",
                "Source",
                "Employee",
                "Hotel",
                "Vendor",
                "Contact",
                "Purge",
                "BusinessHeader",
                "BillingAccount",
                "Activity",
                "Potential",
                "Account"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The types of Profile handled by the web service.",
            "name": "profileType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "externalReferenceIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "externalSystemCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "corporateIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Family name, last name or Company Name.",
            "name": "profileName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names.",
            "name": "givenName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Family name, last name or Company Name.",
            "name": "incognitoName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names.",
            "name": "incognitoGivenName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
            "name": "city",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Post Office Code number.",
            "name": "postalCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "State or Province name (e.g., Texas).",
            "name": "state",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code for a country or a nationality.",
            "name": "countryCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "First Line of Street Address. For profile search it matches the first Address line.",
            "name": "streetAddress",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Keyword associated to the profile.",
            "name": "keyword",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Any communication method associated to the profile such as phone, fax, eMail id.",
            "name": "communication",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Membership number associated to the profile.",
            "name": "membership",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Member Type of searching profile.",
            "name": "membershipType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "ownerCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Membership level associated to the profile.",
            "name": "membershipLevel",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Account Receivable associated to the profile.",
            "name": "aRNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Tax ID associated to the profile",
            "name": "taxID",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Business/Market Segment associated to the profile.",
            "name": "businessSegment",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true indicates that only profiles with AR account fetched.",
            "name": "accountsReceivables",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true indicates that only profiles with client id are searched for.",
            "name": "corporateProfiles",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true indicates that only profiles with an Address Line 1 and Country or at least one Communications Type will be displayed.",
            "name": "excludeIncompleteProfiles",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true indicates that this option has to be included in advanced search.",
            "name": "negotiatedRates",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether to exclude Inactive Profiles, when true indicates that only profiles with active status will be displayed.",
            "name": "relatedProfileExcludeInactive",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Include profiles that have one or more relationships in the search.",
            "name": "realtedProfileIncludeHasHierarchyOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true indicates that this option has to be included in advanced search.",
            "name": "relatedProfileNegotiatedRates",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Guest",
              "Agent",
              "Company",
              "Group",
              "Source",
              "Employee",
              "Hotel",
              "Vendor",
              "Contact",
              "Purge",
              "BusinessHeader",
              "BillingAccount",
              "Activity",
              "Potential",
              "Account"
            ],
            "type": "string",
            "description": "The types of Profile handled by the web service.",
            "name": "relatedProfileType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Family name, last name or Company Name.",
            "name": "relatedProfileName",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether to exclude Protected Profiles.",
            "name": "protectedProfiles",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "excludedProfilesId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "excludedProfilesIdContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "excludedProfilesIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Any identification number associated with the profile such as Passport Number, StateID.",
            "name": "identificationNo",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Address",
                "Communication",
                "NegotiatedRate",
                "GdsNegotiatedRate",
                "Comment",
                "Membership",
                "Preference",
                "Keyword",
                "HistoryReservation",
                "FutureReservation",
                "Relationship",
                "Correspondence",
                "Routing",
                "Indicators",
                "Profile",
                "WebUserAccount",
                "SalesInfo",
                "ECertificate",
                "Subscriptions",
                "PrimaryAccountInfo",
                "DeliveryMethods",
                "RoomOwnership"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Ownership information associated with the profile.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "NameChange",
                "TaxIDChange",
                "EnrollToPrimaryMembership"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Flag indicating whether Profile is Enrolled to Primary Membership Program.",
            "name": "allowedAction",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "vipCodes",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Unique ID of the Filter used to filter profiles.",
            "name": "predefinedFilterId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter code.",
            "name": "predefinedFilterCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "prioritieCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching profiles. This object contains profile primary details,profile summary details,master info list containing code and description used as lookup for description.",
            "schema": {
              "$ref": "#/definitions/profileSummaries"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Profiles not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "When a profile doesn&apos;t already exist in OPERA, use this to create a new profile. The response will provide the newly created profile&apos;s OPERA ID in the Location header. There are many fields in postProfile defined by ListOfValues; ensure you have reviewed ListOfValues APIs in order successfully to use postProfile.<p><strong>OperationId:</strong>postProfile</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Create a profile",
        "operationId": "postProfile",
        "parameters": [
          {
            "description": "Request object for creation of profiles. This object contains profile details with unique identifiers for each profile. The standard optional Opera Context element is also included.",
            "name": "profile",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/profile"
                },
                {
                  "example": {
                    "links": [
                      {
                        "href": "http://hotelCompany.example.com/operarest/opera/crm/v2/guests",
                        "method": "POST",
                        "operationId": "postGuestProfile",
                        "rel": "guestProfile",
                        "templated": false
                      }
                    ],
                    "profileDetails": {
                      "addresses": {
                        "addressInfo": [
                          {
                            "address": {
                              "addressLine": [
                                "500 Oracle Parkway"
                              ],
                              "barCode": "",
                              "cityExtension": "a",
                              "cityName": "Redwood Shores",
                              "country": {
                                "code": "US",
                                "value": "USA"
                              },
                              "county": "a",
                              "createDateTime": "2019-09-18T21:09:36.498Z",
                              "creatorId": "12883",
                              "language": "E",
                              "lastModifierId": "12000",
                              "lastModifyDateTime": "2019-09-18T21:09:36.498Z",
                              "postalCode": "94065",
                              "primaryInd": false,
                              "state": "CA",
                              "type": "Office",
                              "typeDescription": "Office address use"
                            }
                          }
                        ]
                      },
                      "comments": {
                        "commentInfo": [
                          {
                            "comment": {
                              "commentTitle": "Discount",
                              "confidential": false,
                              "internal": false,
                              "overrideInternal": false,
                              "text": {
                                "language": "E",
                                "value": "Please provide discount."
                              },
                              "type": "GEN",
                              "typeDescription": "Comments for discount."
                            }
                          }
                        ]
                      },
                      "company": {
                        "blacklist": false,
                        "businessTitle": "Developer",
                        "commissionCode": "",
                        "companyName": "Oracle America Inc",
                        "companyName2": "Oracle Group Companies",
                        "corporateIdType": "",
                        "creditRating": "",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                        "decimalPlaces": -100000000,
                        "language": "E",
                        "nationality": "USA",
                        "nationalityDescription": "United States",
                        "vipDescription": "Important",
                        "vipStatus": "006"
                      },
                      "createDateTime": "2019-09-17 08:10:28.0",
                      "creatorId": "12883",
                      "customer": {
                        "citizenCountry": {
                          "code": "USA",
                          "value": "United States of America"
                        },
                        "identifications": {
                          "identificationInfo": [
                            {
                              "identification": {
                                "expirationDate": "2019-11-29",
                                "idNumber": "C03005988",
                                "idNumberMasked": "C030059XX",
                                "idType": "PASSPORT",
                                "issuedCountry": "USA",
                                "issuedDate": "2009-11-30",
                                "issuedPlace": "New York",
                                "primaryInd": true,
                                "registeredProperty": "HOTEL1"
                              }
                            }
                          ]
                        },
                        "language": "E",
                        "nationality": "US",
                        "nationalityDescription": "USA",
                        "personName": [
                          {
                            "envelopeGreeting": "Hello Mr. Smith",
                            "givenName": "William",
                            "language": "E",
                            "middleName": "D",
                            "nameSuffix": "10",
                            "nameTitle": "Mr.....",
                            "nameType": "PRIMARY",
                            "salutation": "Mr. Smith",
                            "surname": "Smith"
                          }
                        ],
                        "privateProfile": false,
                        "vipDescription": "VVIP: Important person (Corporate office only)",
                        "vipStatus": "006"
                      },
                      "emails": {
                        "emailInfo": [
                          {
                            "email": {
                              "createDateTime": "2019-09-17T18:18:32.415Z",
                              "creatorId": "12883",
                              "emailAddress": "eg@example.com",
                              "emailFormat": "EMAIL",
                              "lastModifierId": "12883",
                              "lastModifyDateTime": "2019-09-17T18:18:32.416Z",
                              "orderSequence": -100000000,
                              "primaryInd": false,
                              "type": "EMAIL",
                              "typeDescription": "Email Address"
                            }
                          }
                        ]
                      },
                      "lastModifierId": "12883",
                      "lastModifyDateTime": "2019-09-17 08:23:05.0",
                      "markForHistory": false,
                      "profileAccessType": {
                        "croCode": "HOTEL1",
                        "sharedLevel": "CRO"
                      },
                      "profileRestrictions": {
                        "restricted": false
                      },
                      "registeredProperty": "HOTEL1",
                      "statusCode": "ACTIVE",
                      "telephones": {
                        "telephoneInfo": [
                          {
                            "telephone": {
                              "createDateTime": "2019-09-18T21:09:36.499Z",
                              "creatorId": "12883",
                              "extension": "x25",
                              "lastModifierId": "12883",
                              "lastModifyDateTime": "2019-09-18T21:09:36.499Z",
                              "orderSequence": -100000000,
                              "phoneNumber": "+1 415 555 0100",
                              "phoneTechType": "PHONE",
                              "phoneUseTypeDescription": "office",
                              "primaryInd": false
                            }
                          }
                        ]
                      },
                      "territory": "North America"
                    },
                    "profileIdList": [
                      {
                        "id": "3149001",
                        "idContext": "OPERA",
                        "type": "Profile"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/action/validate": {
      "get": {
        "description": "This API validates/checks allowed actions, the existence of attached records and/or indicators of a profile. <p><strong>OperationId:</strong>checkProfileType</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Validate and check profiles",
        "operationId": "checkProfileType",
        "parameters": [
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "idType",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "HasWebAccounts"
            ],
            "type": "string",
            "description": "Simple type that corresponds to check profile instructions.",
            "name": "checkProfileInstruction",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for checking allowed actions, existence of attached records, or indicators of a profile.",
            "schema": {
              "$ref": "#/definitions/checkedProfiles"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "checkProfileType not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/activityLog": {
      "get": {
        "description": "Use this API to fetch the activity log for a specific profile.  This will allow you to see the changes that have occurred on this profile. <p><strong>OperationId:</strong>getProfileActivityLog</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Fetch profile activity log",
        "operationId": "getProfileActivityLog",
        "parameters": [
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hotel code.",
            "name": "activityParamsHotelId",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Reservation",
              "Contract",
              "Allotment",
              "Outlookview",
              "Profile",
              "Accountreceivables",
              "GdsConvRateCodes",
              "RateCode",
              "Billing",
              "Activity"
            ],
            "type": "string",
            "description": "Activity module.",
            "name": "module",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Name of the parameter.",
            "name": "parameterName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Value of the parameter.",
            "name": "parameterValue",
            "in": "query"
          },
          {
            "type": "string",
            "name": "activityGroup",
            "in": "query"
          },
          {
            "type": "string",
            "name": "activityType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Search from date for the user activity log.",
            "name": "fromDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Search to date for the user activity log.",
            "name": "toDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search text for the user activity log.",
            "name": "searchText",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "integer"
            },
            "collectionFormat": "multi",
            "name": "userByIDs",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "integer"
            },
            "collectionFormat": "multi",
            "name": "userForIDs",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching profile activity log. This object contains collection of user activity log for the profile,Success,Warnings and Errors related to this operation",
            "schema": {
              "$ref": "#/definitions/profileActivityLog"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ProfileActivityLog not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}": {
      "get": {
        "description": "Use this API to retrieve a specific profile&apos;s detail information using OPERA&apos;s profileId. You can retrieve any type of profile including guest, travel agent, company, source, group, or contact. If you do not know OPERA profileID, use getProfiles or getProfileByExtId API first to get OPERA profileId.<p><strong>OperationId:</strong>getProfile</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get profile by ID",
        "operationId": "getProfile",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA internal profile ID which is used to find any type of profile from OPERA. This ID is a primary identification of a profile in OPERA.",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Hotel Code used to filter hotel specific information regarding the profile.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This element tells when the view profile should be logged.",
            "name": "logViewProfile",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to show inactive Room Owners.",
            "name": "showInactiveRoomOwners",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Providing this flag marks the profile as recently accessed.",
            "name": "markAsRecentlyAccessed",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Address",
                "Communication",
                "Comment",
                "Membership",
                "Preference",
                "Keyword",
                "Correspondence",
                "Profile",
                "Indicators",
                "SalesInfo",
                "Relationship",
                "Subscriptions",
                "DeliveryMethods",
                "GdsNegotiatedRate",
                "NegotiatedRate",
                "HistoryReservation",
                "FutureReservation",
                "WebUserAccount"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Ownership information associated with the profile.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "NegotiatedRateShowInactive",
                "NegotiatedRateResort",
                "NegotiatedRateMaxFetchCount",
                "NegotiatedRateCode",
                "GdsNegotiatedRateShowInactive",
                "PreferencesShowInactive",
                "ResortForRoutingInstructions",
                "RelationshipPrimaryProfile",
                "AddressPrimaryOnly",
                "CommunicationPrimaryOnly",
                "DeliveryMethodsHotelCode"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type enumerating the different parameters accepted by a profile Instructions. Parameter names have the name of the instruction expecting it, and the parameter name itself.",
            "name": "instructionParameterType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Value of Profile Instruction Parameter",
            "name": "value",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "NameChange",
                "TaxIDChange",
                "EnrollToPrimaryMembership"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Flag indicating whether Profile is Enrolled to Primary Membership Program.",
            "name": "allowedAction",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching profile.",
            "schema": {
              "$ref": "#/definitions/profile"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "links": [
                  {
                    "href": "",
                    "method": "GET",
                    "operationId": "",
                    "rel": "",
                    "targetSchema": "",
                    "templated": false,
                    "title": ""
                  }
                ],
                "profiles": {
                  "profileInfo": [
                    {
                      "profile": {
                        "addresses": {
                          "addressInfo": [
                            {
                              "address": {
                                "addressLine": [
                                  "500 Oracle Parkway"
                                ],
                                "barCode": "a",
                                "cityExtension": "a",
                                "cityName": "Redwood Shores",
                                "country": {
                                  "code": "US",
                                  "name": "United States of America"
                                },
                                "county": "a",
                                "createDateTime": "2019-09-03T14:56:18.227Z",
                                "creatorId": "a",
                                "language": "E",
                                "lastModifierId": "a",
                                "lastModifyDateTime": "2019-09-03T14:56:18.228Z",
                                "postalCode": "94065",
                                "primaryInd": false,
                                "state": "CA",
                                "type": "",
                                "typeDescription": ""
                              },
                              "uniqueId": {
                                "id": "a",
                                "idContext": "a",
                                "type": ""
                              }
                            }
                          ]
                        },
                        "comments": {
                          "commentInfo": [
                            {
                              "comment": {
                                "actionDate": "0101-01-01",
                                "actionType": "",
                                "commentTitle": "a",
                                "confidential": false,
                                "createDateTime": "2019-09-03T14:56:18.239Z",
                                "creatorId": "a",
                                "hotelCode": "",
                                "internal": false,
                                "lastModifierId": "a",
                                "lastModifyDateTime": "2019-09-03T14:56:18.239Z",
                                "notificationLocation": "",
                                "overrideInternal": false,
                                "protectDescription": false,
                                "text": {
                                  "language": "",
                                  "value": ""
                                },
                                "type": "",
                                "typeDescription": "a"
                              },
                              "uniqueId": {
                                "id": "a",
                                "idContext": "a",
                                "type": ""
                              }
                            }
                          ]
                        },
                        "company": {
                          "alternateLanguage": "E",
                          "alternateName": "a",
                          "blacklist": false,
                          "businessLocale": "a",
                          "businessTitle": "a",
                          "commissionCode": "",
                          "companyName": "Example Corporation, Ltd.",
                          "companyName2": "a",
                          "companyName3": "a",
                          "corporateIdType": "",
                          "creditRating": "",
                          "currencyCode": "USD",
                          "currencySymbol": "a",
                          "decimalPlaces": -100000000,
                          "iATAInfo": {
                            "iATACompany": "a",
                            "iATAConsortia": "a"
                          },
                          "language": "",
                          "nationality": "US",
                          "nationalityDescription": "United States of America",
                          "vipDescription": "Gold VIP",
                          "vipStatus": "2"
                        },
                        "createDateTime": "2000-09-03T14:56:18.259Z",
                        "creatorId": "1200",
                        "customer": {
                          "alienInfo": {
                            "alienRegistrationNo": "",
                            "immigrationStatus": "a",
                            "visaValidityType": "a"
                          },
                          "anonymization": {
                            "anonymizationDate": "2019-09-03T14:56:18.21Z",
                            "anonymizationStatus": "REQUESTED"
                          },
                          "birthCountry": {
                            "code": "US",
                            "name": "United States of America"
                          },
                          "birthDate": "2000-01-01",
                          "birthDateMasked": "",
                          "birthPlace": "New York",
                          "blacklist": false,
                          "businessTitle": "Dr",
                          "citizenCountry": {
                            "code": "US",
                            "name": "United States of America"
                          },
                          "creditRating": "",
                          "customerValue": "a",
                          "gender": "MALE",
                          "identifications": {
                            "identificationInfo": [
                              {
                                "identification": {
                                  "expirationDate": "2019-11-29",
                                  "idNumber": "C03005988",
                                  "idNumberMasked": "C030059XX",
                                  "idType": "PASSPORT",
                                  "issuedCountry": "USA",
                                  "issuedDate": "2009-11-30",
                                  "issuedPlace": "New York",
                                  "orderSequence": -100000000,
                                  "primaryInd": false,
                                  "registeredProperty": ""
                                }
                              }
                            ]
                          },
                          "language": "EN",
                          "nationality": "US",
                          "nationalityDescription": "a",
                          "personName": [
                            {
                              "envelopeGreeting": "",
                              "givenName": "Thomas",
                              "language": "E",
                              "middleName": "B",
                              "namePrefix": "a",
                              "nameSuffix": "a",
                              "nameTitle": "Mr",
                              "nameTitleSuffix": -100000000,
                              "nameType": "PRIMARY",
                              "salutation": "",
                              "surname": "Smith"
                            }
                          ],
                          "privateProfile": false,
                          "profession": "Engineer",
                          "vipDescription": "Gold",
                          "vipStatus": "2"
                        },
                        "emails": {
                          "emailInfo": [
                            {
                              "email": {
                                "createDateTime": "2019-09-03T14:56:18.234Z",
                                "creatorId": "1232",
                                "emailAddress": "eg@example.com",
                                "emailFormat": "HTML",
                                "lastModifierId": "1232",
                                "lastModifyDateTime": "2019-09-03T14:56:18.234Z",
                                "orderSequence": -100000000,
                                "primaryInd": false,
                                "type": "BUSINESSEMAIL",
                                "typeDescription": "Business Email Address"
                              },
                              "uniqueId": {
                                "id": "a",
                                "idContext": "a",
                                "type": ""
                              }
                            }
                          ]
                        },
                        "hasCommission": false,
                        "keywords": {
                          "keyword": [
                            {
                              "keyword": "a",
                              "keywordDetail": {
                                "newKeyword": "a"
                              },
                              "type": ""
                            }
                          ]
                        },
                        "lastModifierId": "1200",
                        "lastModifyDateTime": "2000-09-03T14:56:18.259Z",
                        "lastStayInfo": {
                          "lastRate": {
                            "amount": -100000000,
                            "currencyCode": "aaa"
                          },
                          "lastRoom": "",
                          "lastVisit": "0101-01-01",
                          "totalStay": -100000000
                        },
                        "localizationGuestType": "a",
                        "mailingActions": {
                          "active": false,
                          "mailingAction": [
                            {
                              "code": "",
                              "description": "a"
                            }
                          ],
                          "totalRows": -100000000
                        },
                        "markAsRecentlyAccessed": false,
                        "markForHistory": false,
                        "preferenceCollection": {
                          "preferenceType": [
                            {
                              "availableQuantity": -100000000,
                              "createDateTime": "2019-09-03T14:56:18.249Z",
                              "creatorId": "a",
                              "lastModifierId": "a",
                              "lastModifyDateTime": "2019-09-03T14:56:18.249Z",
                              "maxQuantity": -100000000,
                              "maxResortUsedQuantity": -100000000,
                              "preference": [
                                {}
                              ],
                              "preferenceType": "",
                              "preferenceTypeDescription": "",
                              "reservationPreference": false,
                              "sequence": ""
                            }
                          ]
                        },
                        "privacyInfo": {
                          "allowEmail": false,
                          "allowPhone": false,
                          "allowSMS": false,
                          "autoEnrollLoyaltyProgram": false,
                          "infoFromThirdParty": false,
                          "lastPrivacyPromptDate": "2000-01-01",
                          "marketResearchParticipation": false,
                          "optInAutoEnrollmentMember": false,
                          "optInEmail": false,
                          "optInMailingList": false,
                          "optInMarketResearch": false,
                          "optInPhone": false,
                          "optInSms": false,
                          "optInThirdParty": false
                        },
                        "profileAccessType": {
                          "chainCode": "a",
                          "croCode": "a",
                          "hotelCode": "a",
                          "sharedLevel": "GLOBAL"
                        },
                        "profileImage": {
                          "description": "a",
                          "hotelCode": "",
                          "imageOrder": -100000000,
                          "imageSet": "a",
                          "imageStyle": "FULL",
                          "imageType": "a",
                          "imageURL": "a",
                          "language": "",
                          "sequenceId": -100000000,
                          "website": "a"
                        },
                        "profileIndicators": [
                          {
                            "count": -100000000,
                            "indicatorName": "a"
                          }
                        ],
                        "profileMemberships": {
                          "profileMembership": [
                            {
                              "benefits": [
                                {
                                  "code": "",
                                  "inactive": false,
                                  "message": "a"
                                }
                              ],
                              "centralSetup": false,
                              "comment": {
                                "text": {
                                  "language": "",
                                  "value": ""
                                }
                              },
                              "createDateTime": "2019-09-03T14:56:18.247Z",
                              "creatorId": "a",
                              "currentPoints": -100000000,
                              "downgrade": "GRACE",
                              "downgradeDescription": "a",
                              "earningPreference": "POINTS",
                              "effectiveDate": "0101-01-01",
                              "enrollmentResort": "",
                              "enrollmentSource": "",
                              "excludeFromBatch": false,
                              "expireDate": "0101-01-01",
                              "expireDateExclusiveIndicator": false,
                              "inactive": false,
                              "lastModifierId": "a",
                              "lastModifyDateTime": "2019-09-03T14:56:18.248Z",
                              "memberStatus": "",
                              "membershipClass": "MEM",
                              "membershipEnrollmentCode": "",
                              "membershipId": "",
                              "membershipIdNo": -100000000,
                              "membershipLevel": "Gold",
                              "membershipLevelDescription": "Gold Level",
                              "membershipType": "",
                              "nameOnCard": "Thomas Smith",
                              "newMembershipId": "",
                              "orderSequence": -100000000,
                              "pointsLabel": "a",
                              "preferredCard": false,
                              "primaryMembershipYn": "a",
                              "programDescription": "Hotel Plus Membership",
                              "rating": "",
                              "reIssueNewCard": "PENDING",
                              "signupDate": "0101-01-01",
                              "tierAdministration": "DISABLED",
                              "upgradeDescription": "a"
                            }
                          ]
                        },
                        "profileRestrictions": {
                          "reason": "",
                          "reasonDescription": "a",
                          "restricted": false
                        },
                        "profileType": "GUEST",
                        "protectedBy": "a",
                        "registeredProperty": "",
                        "requestForHotel": "",
                        "statusCode": "ACTIVE",
                        "telephones": {
                          "telephoneInfo": [
                            {
                              "telephone": {
                                "createDateTime": "2019-09-03T14:56:18.23Z",
                                "creatorId": "1234",
                                "extension": "2",
                                "lastModifierId": "1234",
                                "lastModifyDateTime": "2019-09-03T14:56:18.231Z",
                                "orderSequence": -100000000,
                                "phoneNumber": "+1 415 555 0100",
                                "phoneTechType": "PHONE",
                                "phoneUseType": "MOBILE",
                                "phoneUseTypeDescription": "Mobile Phone Number",
                                "primaryInd": false
                              },
                              "uniqueId": {
                                "id": "a",
                                "idContext": "a",
                                "type": ""
                              }
                            }
                          ]
                        },
                        "userDefinedFields": {
                          "characterUDFs": [
                            {
                              "altname": "a",
                              "name": "a",
                              "value": "a"
                            }
                          ],
                          "dateUDFs": [
                            {
                              "altname": "a",
                              "name": "a",
                              "value": "0101-01-01"
                            }
                          ],
                          "numericUDFs": [
                            {
                              "altname": "a",
                              "name": "a",
                              "value": -100000000
                            }
                          ]
                        }
                      },
                      "profileIdList": [
                        {
                          "id": "a",
                          "idContext": "a",
                          "type": ""
                        }
                      ]
                    }
                  ],
                  "totalRows": -100000000
                }
              }
            }
          },
          "204": {
            "description": "Profile not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this to update a guests details on their profile.  You will need to know the OPERA Profile ID to use this API, and you will also need to know the List of Values for profile fields, such as AddressType, PhoneType, Title.  <p><strong>OperationId:</strong>putProfile</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Update a profile by ID",
        "operationId": "putProfile",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "OPERA internal profile ID which is used to uniquely identify the profile in OPERA. This ID is a primary identification of a profile in OPERA.",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for change/modification of profile details. This object contains modified profile details with unique identifiers for each profile. The standard optional Opera Context element is also included.",
            "name": "profile",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/profile"
                },
                {
                  "example": {
                    "links": [
                      {
                        "href": "http://hotelCompany.example.com/operarest/opera/crm/v2/guests",
                        "method": "POST",
                        "operationId": "postGuestProfile",
                        "rel": "guestProfile",
                        "templated": false
                      }
                    ],
                    "profileDetails": {
                      "addresses": {
                        "addressInfo": [
                          {
                            "address": {
                              "addressLine": [
                                "500 Oracle Parkway"
                              ],
                              "barCode": "",
                              "cityExtension": "a",
                              "cityName": "Redwood Shores",
                              "country": {
                                "code": "US",
                                "value": "USA"
                              },
                              "county": "a",
                              "createDateTime": "2019-09-18T21:09:36.498Z",
                              "creatorId": "12883",
                              "language": "E",
                              "lastModifierId": "12883",
                              "lastModifyDateTime": "2019-09-18T21:09:36.498Z",
                              "postalCode": "94065",
                              "primaryInd": false,
                              "state": "CA",
                              "type": "Office",
                              "typeDescription": "This is office address."
                            }
                          }
                        ]
                      },
                      "comments": {
                        "commentInfo": [
                          {
                            "comment": {
                              "commentTitle": "Discount",
                              "confidential": false,
                              "internal": false,
                              "overrideInternal": false,
                              "text": {
                                "language": "E",
                                "value": "Please add comments here."
                              },
                              "type": "GEN",
                              "typeDescription": "Comments for discount."
                            }
                          }
                        ]
                      },
                      "company": {
                        "blacklist": false,
                        "businessTitle": "Developer",
                        "commissionCode": "",
                        "companyName": "Oracle America Inc",
                        "companyName2": "Oracle Group Companies",
                        "corporateIdType": "",
                        "creditRating": "",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                        "decimalPlaces": -100000000,
                        "language": "E",
                        "nationality": "USA",
                        "nationalityDescription": "United States",
                        "vipDescription": "Important",
                        "vipStatus": "006"
                      },
                      "createDateTime": "2019-09-17 08:10:28.0",
                      "creatorId": "12883",
                      "customer": {
                        "citizenCountry": {
                          "code": "USA",
                          "value": "United States of America"
                        },
                        "identifications": {
                          "identificationInfo": [
                            {
                              "identification": {
                                "expirationDate": "2019-11-29",
                                "idNumber": "C03005988",
                                "idNumberMasked": "C030059XX",
                                "idType": "PASSPORT",
                                "issuedCountry": "USA",
                                "issuedDate": "2009-11-30",
                                "issuedPlace": "New York",
                                "primaryInd": true,
                                "registeredProperty": "HOTEL1"
                              }
                            }
                          ]
                        },
                        "language": "E",
                        "nationality": "US",
                        "nationalityDescription": "USA",
                        "personName": [
                          {
                            "envelopeGreeting": "Hello Mr. Smith",
                            "givenName": "William",
                            "language": "E",
                            "middleName": "D",
                            "nameSuffix": "10",
                            "nameTitle": "Mr.....",
                            "nameType": "PRIMARY",
                            "salutation": "Mr. Smith",
                            "surname": "Smith"
                          }
                        ],
                        "privateProfile": false,
                        "vipDescription": "VVIP: VV important person",
                        "vipStatus": "006"
                      },
                      "emails": {
                        "emailInfo": [
                          {
                            "email": {
                              "createDateTime": "2019-09-17T18:18:32.415Z",
                              "creatorId": "12883",
                              "emailAddress": "eg@example.com",
                              "emailFormat": "EMAIL",
                              "lastModifierId": "12883",
                              "lastModifyDateTime": "2019-09-17T18:18:32.416Z",
                              "orderSequence": -100000000,
                              "primaryInd": false,
                              "type": "EMAIL",
                              "typeDescription": "Email Address"
                            }
                          }
                        ]
                      },
                      "lastModifierId": "12883",
                      "lastModifyDateTime": "2019-09-17 08:23:05.0",
                      "markForHistory": false,
                      "profileAccessType": {
                        "croCode": "HOTEL1",
                        "sharedLevel": "CRO"
                      },
                      "profileRestrictions": {
                        "restricted": false
                      },
                      "registeredProperty": "HOTEL1",
                      "statusCode": "ACTIVE",
                      "telephones": {
                        "telephoneInfo": [
                          {
                            "telephone": {
                              "createDateTime": "2019-09-18T21:09:36.499Z",
                              "creatorId": "12883",
                              "extension": "x25",
                              "lastModifierId": "12883",
                              "lastModifyDateTime": "2019-09-18T21:09:36.499Z",
                              "orderSequence": -100000000,
                              "phoneNumber": "+1 415 555 0100",
                              "phoneTechType": "PHONE",
                              "phoneUseTypeDescription": "office",
                              "primaryInd": false
                            }
                          }
                        ]
                      },
                      "territory": "North America"
                    },
                    "profileIdList": [
                      {
                        "id": "3149001",
                        "idContext": "OPERA",
                        "type": "Profile"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for change/modification of profile details. This object contains the profile details with unique identifiers for each profile. Also Success,Warnings and Errors related to this operation.",
            "schema": {
              "$ref": "#/definitions/profile"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use deleteProfile to inactivate and remove a profile from OPERA. The profile will stay in the Database, until a nightly purge process is run to remove profile details from the OPERA database. <p><strong>OperationId:</strong>deleteProfile</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Forget or delete a profile by ID",
        "operationId": "deleteProfile",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "OPERA internal profile ID which is used to uniquely identify the profile in OPERA. This ID is a primary identification of a profile in OPERA.",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/accounts": {
      "get": {
        "description": "You can find the accounts that are listed on a profile with this API. <p><strong>OperationId:</strong>getProfileAccounts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get profile accounts",
        "operationId": "getProfileAccounts",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response of profile accounts.",
            "schema": {
              "$ref": "#/definitions/profileAccounts"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ProfileAccounts not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/action/delete": {
      "delete": {
        "description": " <p><strong>OperationId:</strong>deleteProfilePermanently</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Delete the profile permanently.",
        "operationId": "deleteProfilePermanently",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/attachments": {
      "get": {
        "description": "This API will provide the attachments on a profile in OPERA Cloud. <p><strong>OperationId:</strong>getProfileAttachments</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get profile attachments",
        "operationId": "getProfileAttachments",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object with the details of the attachments of a profile.",
            "schema": {
              "$ref": "#/definitions/profileAttachments"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ProfileAttachments not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/attachments/{attachmentId}": {
      "delete": {
        "description": "This API will delete an attachment on a profile in OPERA Cloud. <p><strong>OperationId:</strong>deleteProfileAttachment</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Delete profile attachment",
        "operationId": "deleteProfileAttachment",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "attachmentId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": [
              "Profile"
            ],
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "uniqueIdIdExtension",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "uniqueIdIdContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": [
              "Attachment"
            ],
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "uniqueIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/awards/redeem": {
      "put": {
        "description": "Redeem an award that exists on a profile. <p><strong>OperationId:</strong>redeemAward</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Redeem an award",
        "operationId": "redeemAward",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to redeem award.",
            "name": "award",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/award"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for redeem award.",
            "schema": {
              "$ref": "#/definitions/award"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/awardsAndCertificates": {
      "get": {
        "description": "Get Profile awards and certificates that exist on a profile. <p><strong>OperationId:</strong>getAwards</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get Profile awards and certificates",
        "operationId": "getAwards",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "profileType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hotel Code for which the routing instructions are provided for a profile.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response of fetch awards request.",
            "schema": {
              "$ref": "#/definitions/awardDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Awards not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/cashieringDetails": {
      "get": {
        "description": "Retrieve any profile Financial details that exists on a profile (typically Company or Travel Agent profiles).  This includes Routing Instructions on the profile. <p><strong>OperationId:</strong>getCashieringDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get cashiering details for a profile",
        "operationId": "getCashieringDetails",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Boolean flag that indicates whether the payment method has to be fetched or not.",
            "name": "fetchPaymentMethod",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Boolean flag that indicates whether the routing instruction has to be fetched or not.",
            "name": "fetchRoutingInstruction",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "idType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of Hotel Codes.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object containing profile routing instructions.",
            "schema": {
              "$ref": "#/definitions/profileCashieringDetailsInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CashieringDetails not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Update a profiles Financial details, such as billing, routing instructions. <p><strong>OperationId:</strong>changeProfileCashieringDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Change cashiering details for a profile",
        "operationId": "changeProfileCashieringDetails",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing the profile cashiering details.",
            "name": "profileCashieringDetails",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/profileCashieringDetails"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/commissionAccount": {
      "get": {
        "description": "Retrieve Commission Account details from a specified profile. <p><strong>OperationId:</strong>getProfileCommissionAccount</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get commission account on a profile",
        "operationId": "getProfileCommissionAccount",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching profile commission detail.",
            "schema": {
              "$ref": "#/definitions/profileCommissionAccountInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ProfileCommissionAccount not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Apply a commission account to an existing profile. You can add commission accounts to Travel Agent profile types. <p><strong>OperationId:</strong>setProfileCommissionAccount</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Set profile commission account",
        "operationId": "setProfileCommissionAccount",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for updating profile commission detail.",
            "name": "profileCommissionAccount",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/profileCommissionAccount"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Add a commission account on a profile.  You can only add commission accounts onto a Travel Agent or Source Profile type in OPERA Cloud. <p><strong>OperationId:</strong>postProfileCommissionAccount</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Add a commission account on a profile",
        "operationId": "postProfileCommissionAccount",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating profile commission detail.",
            "name": "profileCommissionAccount",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/profileCommissionAccount"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Delete a Commission Account from a specified profile. <p><strong>OperationId:</strong>deleteProfileCommissionAccount</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Delete a commission account from a profile",
        "operationId": "deleteProfileCommissionAccount",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Used in CRUD operations. When set to true, proceed validating pending commissions",
            "name": "validatePending",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hotel code from which the profile bank account and code belongs to",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "profileIdExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "profileType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "bankAccountId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "bankAccountIdExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "bankAccountIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "bankAccountIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code.",
            "name": "commissionCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "description.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/emails": {
      "post": {
        "description": "Use this API to create a new Email in OPERA.  You would need to know the Profile Id such as Contact or Account. <p><strong>OperationId:</strong>storeEmail</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Create an Email.",
        "operationId": "storeEmail",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Profile ID linked to an Email.",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for storing an email.",
            "name": "emailMessageType",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/emailMessageType"
                },
                {
                  "example": {
                    "blockId": "13701",
                    "emailBody": "base 64 encoded email body should be placed here",
                    "emailReceiveDate": "2020-07-15T17:16:47.617Z",
                    "fromAddress": "eg@example.com",
                    "hasAttachment": true,
                    "messageId": "12345",
                    "subject": "First Email Subject",
                    "toAddress": [
                      "Example1@email.com"
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/hotels/{hotelId}/forecasts": {
      "get": {
        "description": "You can use this API to retrieve account forecasts for a hotel <p><strong>OperationId:</strong>getAccountForecasts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Fetch Account Forecasts by hotel",
        "operationId": "getAccountForecasts",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Hotel Code",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA internal account profile ID",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Specifies the From Fiscal or Calendar Period Code",
            "name": "fromPeriodCode",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching forecasts of an account profile.",
            "schema": {
              "$ref": "#/definitions/accountForecasts"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AccountForecasts not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use postAccountForecast to create a new account forecast for a hotel.  <p><strong>OperationId:</strong>postAccountForecast</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Create account forecast in a hotel",
        "operationId": "postAccountForecast",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA internal account profile ID",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating forecast(s) of an account profile.",
            "name": "forecastsInformation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/forecastsInformation"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete multiple account forecasts. <p><strong>OperationId:</strong>deleteMultipleAccountForecasts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Delete multiple account forecasts",
        "operationId": "deleteMultipleAccountForecasts",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA internal account profile ID",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "periodCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/hotels/{hotelId}/forecasts/periodCodes/{periodCode}": {
      "put": {
        "description": "Use this to update an existing account Forecast for a hotel.  You must know the period code for this API. <p><strong>OperationId:</strong>putAccountForecast</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Update account forecast in a hotel by period code",
        "operationId": "putAccountForecast",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Period Code",
            "name": "periodCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Account Profile ID.",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing forecast(s) of an account profile.",
            "name": "forecastsInformation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/forecastsInformation"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/changeAccountForecastsRS"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this to delete an existing account Forecast for a hotel.  You must know the period code for this API. <p><strong>OperationId:</strong>deleteAccountForecast</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Delete account forecast in a hotel by period code",
        "operationId": "deleteAccountForecast",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Period Code.",
            "name": "periodCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Account Profile ID.",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "periodCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/hotels/{hotelId}/preferenceType/{preferenceType}/preferences/{preferenceCode}": {
      "delete": {
        "description": "This will allow you to delete a preference code from a profile.  For example the guest no longer has a preference for High Floor Room, so you would go ahead and delete this preference from their profile. <p><strong>OperationId:</strong>deletePreference</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Delete a preference from a profile",
        "operationId": "deletePreference",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "preferenceCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "preferenceType",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Profiles Registered Property",
            "name": "registeredProperty",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/links": {
      "get": {
        "description": "Retrieve profiles that are linked to an existing profile in OPERA Cloud. <p><strong>OperationId:</strong>getLinkedProfiles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get linked profiles",
        "operationId": "getLinkedProfiles",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "idType",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Guest",
                "Agent",
                "Company",
                "Group",
                "Source",
                "Employee",
                "Hotel",
                "Vendor",
                "Contact",
                "Purge",
                "BusinessHeader",
                "BillingAccount",
                "Activity",
                "Potential",
                "Account"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The types of Profile handled by the web service.",
            "name": "profileTypes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true indicates that only profiles with AR account fetched.",
            "name": "accountsReceivables",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true indicates that only profiles with client id are searched for.",
            "name": "corporateProfiles",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether to exclude Inactive Profiles, when true indicates that only profiles with active status will be displayed.",
            "name": "excludeInactive",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true indicates that only profiles with an Address Line 1 and Country or at least one Communications Type will be displayed.",
            "name": "excludeIncompleteProfiles",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Include profiles that have one or more relationships in the search.",
            "name": "includeHasHierarchyOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true indicates that this option has to be included in advanced search.",
            "name": "negotiatedRates",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Guest",
              "Agent",
              "Company",
              "Group",
              "Source",
              "Employee",
              "Hotel",
              "Vendor",
              "Contact",
              "Purge",
              "BusinessHeader",
              "BillingAccount",
              "Activity",
              "Potential",
              "Account"
            ],
            "type": "string",
            "description": "The types of Profile handled by the web service.",
            "name": "linkedProfileAdditionalCriteriaProfileType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "linkedProfileid",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "linkedProfileIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "linkedProfileIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Family name, last name or Company Name.",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names.",
            "name": "givenName",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true indicates that only profiles with city will be fetched.",
            "name": "excludeNoCity",
            "in": "query"
          },
          {
            "type": "string",
            "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
            "name": "cityName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Post Office Code number.",
            "name": "postalCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "State or Province name (e.g., Texas).",
            "name": "state",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code for a country or a nationality.",
            "name": "countryCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "First Line of Street Address. For profile search it matches the first Address line.",
            "name": "streetAddress",
            "in": "query"
          },
          {
            "maxItems": 4000,
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "ownerCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Account Receivable associated to the profile.",
            "name": "aRNumber",
            "in": "query"
          },
          {
            "maxItems": 4000,
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "prioritiesCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response of fetch set of linked Profiles to the requested Profile.",
            "schema": {
              "$ref": "#/definitions/linkedProfiles"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "LinkedProfiles not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/matches": {
      "get": {
        "description": "Retrieve profiles that match another profile. <p><strong>OperationId:</strong>getMatchProfiles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get profile matches",
        "operationId": "getMatchProfiles",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Hotel Code for the profile.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "idType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for the match profiles.",
            "schema": {
              "$ref": "#/definitions/matchedProfiles"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MatchProfiles not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/membershipTransactionExceptions": {
      "get": {
        "description": "Use this API to get membership transaction exceptions on a profile. <p><strong>OperationId:</strong>getMembershipTransactionExceptions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Get membership transaction exception details",
        "operationId": "getMembershipTransactionExceptions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Membership belongs to which Hotel.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "end",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "start",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The type of the membership.",
            "name": "membershipType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The current level of the membership.",
            "name": "membershipLevel",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The card number associated with this membership.",
            "name": "membershipCardNo",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates to Include External Processing Exception",
            "name": "includeEPE",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates the type of Exception like Exception not resolved,Points Rejected on Exception etc.,",
            "name": "exceptionType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching membership transaction exceptions.",
            "schema": {
              "$ref": "#/definitions/membershipTransactionExceptions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MembershipTransactionExceptions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/membershipType/{membershipType}/membershipId/{membershipId}": {
      "put": {
        "description": "Use this API to update membership details on a profile. <p><strong>OperationId:</strong>changeMembership</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Change membership information on a profile",
        "operationId": "changeMembership",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "membershipId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "membershipType",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for change/update membership. This object contains unique identifiers for each profile and list of membership details to be updated/changed. The standard optional Opera Context element is also included.",
            "name": "membership",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/membership"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for change/update membership. This object contains collection of memberships,Success,Warnings and Errors related to this operation",
            "schema": {
              "$ref": "#/definitions/changedMembership"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete membership details on a profile. <p><strong>OperationId:</strong>deleteMembership</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Delete membership information from a profile",
        "operationId": "deleteMembership",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "membershipId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "membershipType",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/memberships": {
      "post": {
        "description": "A guest might be a member of your hotel loyalty program and/or a member of multiple airline frequent flier programs. Use this API to add membership details onto a guests profile. <p><strong>OperationId:</strong>postMembership</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Create membership on a profile",
        "operationId": "postMembership",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for create membership. This object contains unique identifiers for each profile and list of membership details to be created. The standard optional Opera Context element is also included.",
            "name": "membership",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/membership"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/memberships/info": {
      "get": {
        "description": "Use this API to retrieve membership details on a profile. <p><strong>OperationId:</strong>getMembershipDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ],
        "summary": "Get membership information on a profile",
        "operationId": "getMembershipDetails",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "idType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The type of the membership.",
            "name": "membershipType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The card number associated with this membership.",
            "name": "membershipId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Property from which the membership stay information was received.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "TransactionDate",
              "StayBeginDate",
              "StayEndDate",
              "PointsCreditDate"
            ],
            "type": "string",
            "description": "Whether member info search will pertain to transaction dates/ stay dates/ points credit dates.",
            "name": "mode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for member info.",
            "schema": {
              "$ref": "#/definitions/memberInformation"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MembershipDetails not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/owners": {
      "get": {
        "description": "Retrieve the Owners listed on a profile. <p><strong>OperationId:</strong>getProfileOwners</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get profile owners",
        "operationId": "getProfileOwners",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to fetch the owners of a profile.",
            "schema": {
              "$ref": "#/definitions/profileOwnersDetail"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ProfileOwners not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Update an Owner on a profile  <p><strong>OperationId:</strong>changeProfileOwners</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Change profile owners",
        "operationId": "changeProfileOwners",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to change profile owners.",
            "name": "profileOwners",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/profileOwners"
                },
                {
                  "example": {
                    "criteria": {
                      "owners": [
                        {
                          "hotel": {
                            "code": "HOTEL1"
                          },
                          "ownerCode": "MLW",
                          "primary": false,
                          "profileId": {
                            "id": 1017420,
                            "idContext": "OPERA",
                            "type": "Profile"
                          }
                        }
                      ],
                      "profileIdList": {
                        "id": 1017420,
                        "type": "Profile"
                      }
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Assign an Owner to a profile. <p><strong>OperationId:</strong>postProfileOwners</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Assign profile owners",
        "operationId": "postProfileOwners",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to assign profile owners.",
            "name": "profileOwners",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/profileOwners"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/preferenceType/{preferenceType}/preferences/{preferenceCode}": {
      "delete": {
        "description": "This will allow you to delete a global preference code from a profile.  For example the guest no longer has a preference for High Floor Room, so you would go ahead and delete this preference from their profile. <p><strong>OperationId:</strong>deleteGlobalPreference</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Delete a global preference from a profile",
        "operationId": "deleteGlobalPreference",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "preferenceCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "preferenceType",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Profiles Registered Property",
            "name": "registeredProperty",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/preferences": {
      "get": {
        "description": "Use this API to retrieve all preferences that a profile has stored on it.  Preferences are configured codes by a property, examples are usually High Floor, Non smoking room, Room with a View, soft pillow etc.  <p><strong>OperationId:</strong>getPreferenceForProfile</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get preferences on a profile",
        "operationId": "getPreferenceForProfile",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetch preference. This object contains collection of preferences,Success,Warnings and Errors related to this operation.",
            "schema": {
              "$ref": "#/definitions/preference"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "PreferenceForProfile not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "With this API you can distribute preferences on a profile. <p><strong>OperationId:</strong>distributePreference</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Distribute preferences on a profile",
        "operationId": "distributePreference",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for distribute Preference. This object contains unique identifiers for each profile and list of preferences to be associated with the profile. The standard optional Opera Context element is also included.",
            "name": "preference",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/preference"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "You can add new preferences to a profile to personalize or enhance your guest services.  You will need to know the profile ID, and the properties pre-configured preference codes. <p><strong>OperationId:</strong>postPreference</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Add preferences to a profile",
        "operationId": "postPreference",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for Create Preference. This object contains unique identifiers for each profile and list of preferences to be associated with the profile. The standard optional Opera Context element is also included.",
            "name": "preference",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/preference"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/relationships": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getProfileRelationships</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "FetchProfileRelationships method provides the ability to retrieve a profile relationships for a profile based on the unique internal profile ID specified.",
        "operationId": "getProfileRelationships",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Type of Profile to be fetched from OPERA.",
            "name": "relationshipPrimaryProfile",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching profile relationships.",
            "schema": {
              "$ref": "#/definitions/profileRelationships"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "links": [],
                "relationships": {
                  "relationship": [
                    {
                      "relationshipID": "144096",
                      "relationshipProfile": {
                        "address": {
                          "addressLine": [
                            "500 Oracle Parkway"
                          ],
                          "city": "Redwood Shores",
                          "country": "US",
                          "postalCode": "94065",
                          "state": "CA"
                        },
                        "customerName": "Smith",
                        "emailAddress": "example@test.com",
                        "ownerCode": "ALL",
                        "primary": true,
                        "primaryOwnerCode": true,
                        "profileIdList": [
                          {
                            "id": "291397",
                            "type": "Profile"
                          },
                          {
                            "id": "212315",
                            "type": "CorporateId"
                          }
                        ],
                        "profileStatus": "Active",
                        "profileType": "Guest",
                        "telephoneNumber": "+10409000000"
                      },
                      "sourceRelation": "FAMILY MEMBER",
                      "sourceRelationDescription": "FAMILY MEMBER",
                      "targetRelation": "FAMILY HEAD",
                      "targetRelationDescription": "FAMILY HEAD"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "ProfileRelationships not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/reservations/action/validate": {
      "put": {
        "description": "Validate if a profile has future and past bookings on a specific profile. <p><strong>OperationId:</strong>validateReservationsForProfile</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Check future past bookings",
        "operationId": "validateReservationsForProfile",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for information regarding existence of profile in future and/or past business blocks and/or reservations.",
            "name": "futurePastBookingsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/futurePastBookingsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "This is the Response Message to information regarding existence of profile in future and/or past business blocks and/or reservations.",
            "schema": {
              "$ref": "#/definitions/futurePastBookings"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/stayHistory": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getStayHistory</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "FetchStayHistory method provides stay history and future reservations of a profile based on the unique internal ID specified.",
        "operationId": "getStayHistory",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Hotel Code used to filter hotel specific information regarding the profile.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Providing this flag includes purged profiles in the result.",
            "name": "includePurgeProfiles",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Providing this flag marks the profile as recently accessed.",
            "name": "markAsRecentlyAccessed",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "HistoryReservation",
                "FutureReservation"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for instructions that can be used in requests for partial operations to fetch past and future reservation.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for showing stay history and future reservations of specific profile.",
            "schema": {
              "$ref": "#/definitions/profileStayHistory"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "links": [],
                "profileStayDetails": {
                  "reservationInfoList": {
                    "futureList": {
                      "hasMore": false,
                      "totalResults": "0"
                    },
                    "historyList": {
                      "hasMore": false,
                      "reservationInfo": [
                        {
                          "attachedProfiles": [],
                          "computedReservationStatus": "NoShow",
                          "hotelId": "HOTEL1",
                          "reservationIdList": [
                            {
                              "id": "850348",
                              "type": "Reservation"
                            },
                            {
                              "id": "1258752",
                              "type": "Confirmation"
                            }
                          ],
                          "reservationStatus": "NoShow",
                          "roomStay": {
                            "arrivalDate": "2020-07-02",
                            "departureDate": "2020-07-04",
                            "rateAmount": {
                              "amount": "100"
                            },
                            "ratePlanCode": "RACK",
                            "rateSuppressed": false,
                            "roomType": "DLXQ"
                          }
                        }
                      ],
                      "totalResults": "1"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "StayHistory not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{sourceProfileId}/relationships/{targetProfileId}": {
      "put": {
        "description": " <p><strong>OperationId:</strong>putProfileRelationship</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "ChangeProfileRelationship method provides the ability to update(delete and add) profile relationship based on the request criteria of SourceProfileID , TargetProfileID, To Be ChangedProfileID and SourceProfileRelationType specified.",
        "operationId": "putProfileRelationship",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "targetProfileId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "sourceProfileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing profile relationship.",
            "name": "profileRelationshipToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/profileRelationshipToBeChanged"
                },
                {
                  "example": {
                    "relationship": {
                      "changeRelationship": {
                        "changeProfileID": {
                          "id": "3261507",
                          "type": "Guest"
                        },
                        "sourceRelation": "FRIEND1",
                        "sourceRelationDescription": "Friends",
                        "targetRelation": "FRIEND2",
                        "targetRelationDescription": "Friends 2"
                      },
                      "primary": true,
                      "profileType": "Guest",
                      "relationshipID": "28026",
                      "sourceRelation": "EMPLOYEE",
                      "sourceRelationDescription": "EMPLOYEE",
                      "statusCode": "Active",
                      "targetProfileType": "Guest",
                      "targetRelation": "EMPLOYER",
                      "targetRelationDescription": "EMPLOYER"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": " <p><strong>OperationId:</strong>postProfileRelationship</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "CreateProfileRelationship method provides the ability to create profile relationship based on the request criteria of SourceProfileID,TargetProfileID and SourceRelationType specified.",
        "operationId": "postProfileRelationship",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "targetProfileId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "sourceProfileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating profile relationship.",
            "name": "profileRelationship",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/profileRelationship"
                },
                {
                  "example": {
                    "relationship": {
                      "primary": "true",
                      "profileType": "Guest",
                      "sourceRelation": "FAMILY MEMBER",
                      "sourceRelationDescription": "FAMILY MEMBER",
                      "statusCode": "Active",
                      "targetProfileType": "Guest",
                      "targetRelation": "FAMILY HEAD",
                      "targetRelationDescription": "FAMILY HEAD"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": " <p><strong>OperationId:</strong>removeProfileRelationship</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "DeleteProfileRelationship method provides the ability to delete profile relationship based on the request criteria of SourceProfileID,TargetProfileID and SourceRelationType specified.",
        "operationId": "removeProfileRelationship",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "targetProfileId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "sourceProfileId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
            "name": "sourceRelation",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Indicates the type of relationship the related profile(Target Profile) has with the current profile(Source Profile).",
            "name": "targetRelation",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Indicates if this relationship is the primary relationship.",
            "name": "primary",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).This needs to be passed if the attribute primary is sent as true.",
            "name": "sourceRelationDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Displays the description of relationship the related profile(Target Profile) has with the current profile(Source Profile).",
            "name": "targetRelationDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{survivorProfileId}/merges": {
      "post": {
        "description": "When you need to merge 2 guest profiles into 1 profile, use this API. <p><strong>OperationId:</strong>mergeProfiles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Merge two profiles by ID",
        "operationId": "mergeProfiles",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Original Profile ID to which profiles will be merged in OPERA.",
            "name": "survivorProfileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for merging profiles.",
            "name": "profileToBeMerged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/profileToBeMerged"
                },
                {
                  "example": {
                    "victimProfileId": {
                      "id": "1087330"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{survivorProfileId}/merges/snapshot": {
      "get": {
        "description": "This API will provide you with a snapshot of the to be merged profile. In the request you will pass the survivor profile, along with the profile ID of the profile which it to be merged into the survivor profile.  The response will provide you with the combined profile data of both profiles which are being merged. <p><strong>OperationId:</strong>getMergeProfilesSnapshot</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get merge profiles snapshot",
        "operationId": "getMergeProfilesSnapshot",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "survivorProfileId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "originalId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "originalIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "originalIdType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "toBeMergedId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "toBeMergedIdContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "toBeMergedIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching snapshot of merge profiles result.",
            "schema": {
              "$ref": "#/definitions/mergedProfilesSnapshotDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MergeProfilesSnapshot not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{survivorProfileId}/stageProfiles/snapshot": {
      "get": {
        "description": "This API will provide you with a snapshot of the to be merged profile in staging. <p><strong>OperationId:</strong>getMergeStageProfileSnapshot</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get merge stage profile snapshot",
        "operationId": "getMergeStageProfileSnapshot",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "survivorProfileId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Hotel Code for the profile.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "resortProfileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "resortProfileIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "resortProfileIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "profileIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to fetch merge profile based on stage and opera profile.",
            "schema": {
              "$ref": "#/definitions/mergedStageProfileSnapshot"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MergeStageProfileSnapshot not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profilesByIds": {
      "get": {
        "description": "Use this API when you want to search for a profile. The response will include a list of profiles that exist in OPERA, based on your search criteria.  For example, you want to see if  a profile for Mr David Smith exists - you can search by various criteria, such as first, last name, email.  The response will include a list of any profiles that exist for Mr Davis Smith.  If a profile matches the criteria, and you want to get more details of that profile, proceed to use getProfile with the profileID in the request. <p><strong>OperationId:</strong>getProfilesByIds</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Search for profile(s)",
        "operationId": "getProfilesByIds",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "corporateIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "externalReferenceIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "externalSystemCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Address",
                "Communication",
                "NegotiatedRate",
                "GdsNegotiatedRate",
                "Comment",
                "Membership",
                "Preference",
                "Keyword",
                "HistoryReservation",
                "FutureReservation",
                "Relationship",
                "Correspondence",
                "Routing",
                "Indicators",
                "Profile",
                "WebUserAccount",
                "SalesInfo",
                "ECertificate",
                "Subscriptions",
                "PrimaryAccountInfo",
                "DeliveryMethods",
                "RoomOwnership"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Ownership information associated with the profile.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "NegotiatedRateShowInactive",
                "NegotiatedRateResort",
                "NegotiatedRateMaxFetchCount",
                "NegotiatedRateCode",
                "GdsNegotiatedRateShowInactive",
                "PreferencesShowInactive",
                "ResortForRoutingInstructions",
                "RelationshipPrimaryProfile",
                "AddressPrimaryOnly",
                "CommunicationPrimaryOnly",
                "DeliveryMethodsHotelCode"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type enumerating the different parameters accepted by a profile Instructions. Parameter names have the name of the instruction expecting it, and the parameter name itself.",
            "name": "instructionParameterType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Value of Profile Instruction Parameter",
            "name": "instructionParameterValue",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hotel Code, It is used to filter hotel specific.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching multiple detailed profiles by unique identifiers..",
            "schema": {
              "$ref": "#/definitions/profileDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ProfilesByIds not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/recentlyAccessedProfiles": {
      "get": {
        "description": "Use this API to fetch the profiles that have recently been accessed by an application user. <p><strong>OperationId:</strong>getRecentlyAccessedProfiles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Fetch recently accessed profiles",
        "operationId": "getRecentlyAccessedProfiles",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response with the fetched recently accessed profiles.",
            "schema": {
              "$ref": "#/definitions/recentlyAccessedProfiles"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RecentlyAccessedProfiles not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/stagedProfile/{id}": {
      "get": {
        "description": "The system suspends / stages a profile with a point value between the upper and lower thresholds. When a profile is staged, you must review the suspended profile and determine if it should be merged with an internal profile or added as a new profile.  This API will get a specific profile that has been staged. <p><strong>OperationId:</strong>getStagedProfile</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get a staged profile",
        "operationId": "getStagedProfile",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The hotel code that the stage profile belongs to.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Profile",
                "Address",
                "Communication",
                "NegotiatedRate",
                "Membership",
                "Preference",
                "Keyword",
                "Routing",
                "UserDefinedField",
                "Identifier",
                "InvalidDetail"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "If selected, only invalid details of the staged profile will be retrieved.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for the staged profile.",
            "schema": {
              "$ref": "#/definitions/stagedProfileDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "StagedProfile not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "This API can be used to update the staged Profile. <p><strong>OperationId:</strong>changeStagedProfile</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Change a staged profile",
        "operationId": "changeStagedProfile",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing the staged profile.",
            "name": "stagedProfile",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/stagedProfile"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/stagedProfiles": {
      "get": {
        "description": "The system suspends / stages a profile with a point value between the upper and lower thresholds. When a profile is staged, you must review the suspended profile and determine if it should be merged with an internal profile or added as a new profile. <p><strong>OperationId:</strong>getStagedProfiles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get staged profiles",
        "operationId": "getStagedProfiles",
        "parameters": [
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Family name, last name or Company Name.",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names.",
            "name": "givenName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The profile region for which the staged profiles shall be fetched.",
            "name": "region",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code for a country or a nationality.",
            "name": "countryCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Profile type to be included in the search.",
            "name": "profileType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The date on which the staged profiles have been received.",
            "name": "importDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The status of the staged profiles.",
            "name": "stageStatus",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "StagedProfiles",
              "MatchingProfiles",
              "StagedAndMatchingProfiles"
            ],
            "type": "string",
            "description": "Membership filter of staged profiles.",
            "name": "applyTo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "membershipCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for the staged profiles.",
            "schema": {
              "$ref": "#/definitions/stagedProfiles"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "StagedProfiles not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/suspendedAddresses": {
      "get": {
        "description": "Fetch Suspended Profile Addresses <p><strong>OperationId:</strong>getSuspendedAddresses</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Fetch Suspended Profile Addresses",
        "operationId": "getSuspendedAddresses",
        "parameters": [
          {
            "type": "string",
            "description": "Last Name of the Profile against which the Suspended Addresses are fetched.",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hotel Code, It is used to filter hotel specific children to this specific hotel code.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "First Name of the Profile against which the Suspended Addresses are fetched.",
            "name": "firstName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "ProfileT ype of the Profile against which the Suspended Addresses are fetched..",
            "name": "profileType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Match Code of the Address Validation Performed from the batch processing",
            "name": "matchCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code for a country or a nationality.",
            "name": "countryCode",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Validate Date.",
            "name": "validateDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response list of suspended addresses based on supplied criteria",
            "schema": {
              "$ref": "#/definitions/suspendedAddresses"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "SuspendedAddresses not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/suspendedProfileErrorSummary": {
      "get": {
        "description": "Retrieve the suspended profile error summary details <p><strong>OperationId:</strong>getSuspendedProfileErrorSummary</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Get suspended profile error summary details",
        "operationId": "getSuspendedProfileErrorSummary",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetch suspended profile Errors summary. This object contains collection of profile erros and count of how many profiles encountered this error.",
            "schema": {
              "$ref": "#/definitions/suspendedProfileErrorSummaryInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "SuspendedProfileErrorSummary not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/synchronizeProfileSubscriptions": {
      "put": {
        "description": "Synchronize profile subscriptions <p><strong>OperationId:</strong>synchronizeProfileSubscriptions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Synchronize profile subscriptions",
        "operationId": "synchronizeProfileSubscriptions",
        "parameters": [
          {
            "description": "Request object for re-subscribing profile subscriptions.",
            "name": "profileSubscriptionsToSynchronize",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/profileSubscriptionsToSynchronize"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/validateForgetProfiles": {
      "put": {
        "description": "Validate forget profiles. <p><strong>OperationId:</strong>validateForgetProfiles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Validate forget profiles",
        "operationId": "validateForgetProfiles",
        "parameters": [
          {
            "description": "Operation to validate profiles for forgetting.",
            "name": "forgetProfilesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/forgetProfilesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for validating profiles for forgetting.",
            "schema": {
              "$ref": "#/definitions/validatedForgetProfiles"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    }
  },
  "definitions": {
    "aRAccountShortInfoType": {
      "description": "Accounts Receivabales Account details type charged for batched posting.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        }
      }
    },
    "aRAccountStatusType": {
      "description": "Type for the Account Status. Status can be restricted and a message/description added to the Account.",
      "type": "object",
      "properties": {
        "description": {
          "description": "User defined status message on the Account.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "restricted": {
          "description": "Flag to indicate if the Account is restricted.",
          "type": "boolean"
        },
        "restriction": {
          "description": "The Restriction Code added on the Account. This is available when the functionality for adding restriction codes is ON.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "aRAccountType": {
      "description": "Accounts Receivabales Account details type.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountIndicators": {
          "description": "Indicators of additional information attached to the Account.",
          "$ref": "#/definitions/indicatorsType"
        },
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "accountTypeDescription": {
          "description": "The description of the Account Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "address": {
          "description": "Address information for the address which is attached to this AR Account.",
          "$ref": "#/definitions/addressInfoType"
        },
        "agingInfo": {
          "description": "The Aging balance information for this account, by Aging Buckets.",
          "$ref": "#/definitions/aRAgingInfoType"
        },
        "balance": {
          "description": "Open Balance of the Account for this property.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "batchStatement": {
          "description": "Include In Batch Statement",
          "type": "boolean"
        },
        "contactName": {
          "description": "The person to contact for this Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "creditLimit": {
          "description": "The maximum credit allowed for the Account.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "email": {
          "description": "Email information for the Account. This is the Email that is attached to this AR Account.",
          "$ref": "#/definitions/emailInfoType"
        },
        "emailStatementsReminders": {
          "description": "Indicates if the Account has opted to send the statements and reminders to the Account email address by default.",
          "type": "boolean"
        },
        "fixedCharges": {
          "description": "Fixed charges attached to this AR Account.",
          "$ref": "#/definitions/fixedChargesType"
        },
        "hotelId": {
          "description": "Property where the AR Account exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoices": {
          "description": "List of all Invoices.",
          "$ref": "#/definitions/aRInvoicesType"
        },
        "lastReminderInfo": {
          "description": "Report History Type used as based type for Remiders and Statements History types.",
          "type": "object",
          "properties": {
            "age": {
              "description": "The minimum age(days) of the invoices to be included in the Reminder",
              "type": "integer"
            },
            "dateSent": {
              "description": "The Reminder Letter name which is to be used for this Reminder based on the setup on the Account Type.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "historyExists": {
              "description": "Indicates that reminders history exists.",
              "type": "boolean"
            },
            "reportFileName": {
              "description": "Report file name when exists to allow report re-printing.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "reportName": {
              "description": "Report Name.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          }
        },
        "lastStatementInfo": {
          "description": "Report History Type used as based type for Remiders and Statements History types.",
          "type": "object",
          "properties": {
            "dateSent": {
              "description": "The Reminder Letter name which is to be used for this Reminder based on the setup on the Account Type.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "historyExists": {
              "description": "Indicates that statement history exists.",
              "type": "boolean"
            },
            "reportFileName": {
              "description": "Report file name when exists to allow report re-printing.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "reportName": {
              "description": "Report Name.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "statementNo": {
              "description": "When using Statement Numbering, a unique number is associated to the Statement.",
              "type": "integer"
            }
          }
        },
        "monthEndCalcYN": {
          "description": "Month End Calculation.",
          "type": "boolean"
        },
        "notes": {
          "description": "The Note details attached to the Account.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "paymentDueDays": {
          "description": "Number of days on which person can make payment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "payments": {
          "description": "List of all Payments made.",
          "$ref": "#/definitions/aRPaymentsType"
        },
        "permanent": {
          "description": "Indicates if this is a Permanent Account. Permanent Accounts cannot be deleted.",
          "type": "boolean"
        },
        "primary": {
          "description": "Indicates if this Account is the Primary Account for this Guest/Company.",
          "type": "boolean"
        },
        "printFoliosWithStatement": {
          "description": "Indicates if associated folios should be printed by default with the statement.",
          "type": "boolean"
        },
        "profileId": {
          "description": "Internal Profile ID for the AR Account.",
          "$ref": "#/definitions/profileId"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        },
        "summary": {
          "description": "The Summary Information of the Invoices for the Account.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "telephones": {
          "description": "The Telephone and Fax details attached to the Account.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/telephoneInfoType"
          }
        },
        "traces": {
          "description": "The Trace details attached to the Account.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/traceType"
          }
        },
        "type": {
          "description": "The type of Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "yearViewInfo": {
          "description": "The Year View balance information for this account.",
          "$ref": "#/definitions/aRYearViewInfoType"
        }
      }
    },
    "aRAccountsType": {
      "description": "Information regarding the AR Account.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRAccountType"
      }
    },
    "aRAgingInfoType": {
      "description": "Information regarding the aging balances for an account.",
      "type": "object",
      "properties": {
        "aging": {
          "description": "The debit and credit balance per Aging bucket.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/aRAgingType"
          }
        },
        "totalOutstanding": {
          "description": "The total debit and credit balance of the account.",
          "$ref": "#/definitions/aRBalanceType"
        }
      }
    },
    "aRAgingType": {
      "description": "Aging information for an Aging Bucket.",
      "type": "object",
      "properties": {
        "agingBucketRange": {
          "description": "The bucket description in terms of days. Example : 0-31 days",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "agingDate": {
          "description": "The start date and end date for this Aging bucket.",
          "$ref": "#/definitions/dateRangeType"
        },
        "agingEndDay": {
          "description": "The end number of days for this Aging bucket. Example: For the range 31-60 days, this would be 60.",
          "type": "integer"
        },
        "agingStartDay": {
          "description": "The start number of days for this Aging bucket. Example: For the range 31-60 days, this would be 31.",
          "type": "integer"
        },
        "balanceInfo": {
          "description": "The balance amounts for this bucket. Contains the Debit Balance, Credit Balance and the Total Balance.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "sequence": {
          "description": "The sequence for display.",
          "type": "integer"
        }
      }
    },
    "aRBalanceType": {
      "description": "Balance information for AR.",
      "type": "object",
      "properties": {
        "credit": {
          "description": "The credit Balance amount. Any payment that is Unallocated i.e not applied against an invoice, is included in this.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debit": {
          "description": "Debit Balance amount. The amount owed by the Account.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "total": {
          "description": "The total balance i.e Debit minus Credit amounts.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "aRInvoiceCategory": {
      "type": "string",
      "enum": [
        "Normal",
        "Credit",
        "OldBalance",
        "PasserBy"
      ]
    },
    "aRInvoiceType": {
      "description": "Details of an AR Invoice.",
      "type": "object",
      "properties": {
        "addresseeInfo": {
          "description": "Addressee Information for the folio. This is available when the Addressee functionality is used and and Addressee is attached to the folio of the Invoice.",
          "$ref": "#/definitions/profileInfoType"
        },
        "adjusted": {
          "type": "boolean"
        },
        "age": {
          "description": "The Aging age of the invoice",
          "type": "integer"
        },
        "allowPartialTransferYn": {
          "description": "Flag to check Partail Transfer Allowed.",
          "type": "boolean"
        },
        "amount": {
          "description": "Current Amount of the Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Amount still open which has not been paid",
          "$ref": "#/definitions/currencyAmountType"
        },
        "canBeModified": {
          "description": "Flag to indicate if postings or adjustments can be made to the invoice.",
          "type": "boolean"
        },
        "cashierInfo": {
          "description": "Cashier information. Contains Id and Name details of the cashier.",
          "$ref": "#/definitions/cashierInfoType"
        },
        "closeDate": {
          "description": "Close date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "compressed": {
          "type": "boolean"
        },
        "compressedDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "folioSeqNo": {
          "description": "Unique sequence number. Used to identify the current folio tax record.",
          "type": "number"
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "guestName": {
          "description": "Name of the Guest who consumed these transactions.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "guestProfileId": {
          "description": "Guest Profile ID of the invoice.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Property where the invoice exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "invoiceType": {
          "description": "Invoice code of the invoice.",
          "$ref": "#/definitions/aRInvoiceCategory"
        },
        "market": {
          "description": "Invoice market code.",
          "$ref": "#/definitions/marketCodeInfoType"
        },
        "originalAmount": {
          "description": "Original Amount of the Invoice",
          "$ref": "#/definitions/currencyAmountType"
        },
        "parentInvoiceNo": {
          "type": "number"
        },
        "paymentCard": {
          "description": "Payment card details.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "payments": {
          "description": "Total Payments made to this Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingDate": {
          "description": "Posting date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "printed": {
          "description": "Flag to check Invoice Statement is Printed.",
          "type": "boolean"
        },
        "printedDate": {
          "description": "Invoice Statement Printed Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "remark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reservationId": {
          "description": "Reservation ID of the invoice.",
          "$ref": "#/definitions/reservationId"
        },
        "reservationInfo": {
          "description": "Reservation guest details.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "revenueDate": {
          "description": "Revenue date ID of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "roomClass": {
          "description": "Invoice room class code.",
          "$ref": "#/definitions/roomClassCodeInfoType"
        },
        "source": {
          "description": "Invoice source code.",
          "$ref": "#/definitions/sourceCodeInfoType"
        },
        "statementNo": {
          "description": "Statementno of the invoice.",
          "type": "integer"
        },
        "status": {
          "description": "Status of the invoice.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "storedDebitFolioId": {
          "description": "ID of the Stored Debit Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedDebitFolioName": {
          "description": "Name of the Stored Debit Folio.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "storedFolioId": {
          "description": "ID of the Stored Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedFolioName": {
          "description": "Name of the Stored Folio.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionCode": {
          "description": "Transaction code of the invoice.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionInfo": {
          "description": "Transaction information .",
          "$ref": "#/definitions/trxInfoType"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier of the Invoice.",
          "type": "number"
        },
        "transferDate": {
          "description": "Transfer date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferredIn": {
          "type": "boolean"
        },
        "transferredOut": {
          "type": "boolean"
        }
      }
    },
    "aRInvoicesType": {
      "description": "A collection of AR Invoices.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRInvoiceType"
      }
    },
    "aRPaymentType": {
      "description": "Details of an AR Payment.",
      "type": "object",
      "properties": {
        "age": {
          "description": "The Aging age of the payment.",
          "type": "integer"
        },
        "amount": {
          "description": "Amount of the Payment.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amountUsed": {
          "description": "Total amount applied against an invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Amount still open which has not been applied against any invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cashierInfo": {
          "description": "Cashier information. Contains Id and Name details of the cashier.",
          "$ref": "#/definitions/cashierInfoType"
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "paymentCard": {
          "description": "Payment card details.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "postingDate": {
          "description": "Posting date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "remark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "revenueDate": {
          "description": "Revenue date ID of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "sequenceNo": {
          "description": "When this PostingType is used to return the postings generated by a batch request, the sequence number is used to relate to the Request's sequence number.",
          "type": "integer"
        },
        "transactionCode": {
          "description": "Transaction code of the Payment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Date of the Payment.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier of the Payment.",
          "type": "number"
        },
        "transferDate": {
          "description": "Transfer of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferredIn": {
          "type": "boolean"
        },
        "transferredOut": {
          "type": "boolean"
        }
      }
    },
    "aRPaymentsType": {
      "description": "A collection of AR Payments.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRPaymentType"
      }
    },
    "aRYearViewInfoType": {
      "description": "Information regarding Year View balances for an account.",
      "type": "object",
      "properties": {
        "totalOutstanding": {
          "description": "The total debit and credit balance of the account.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "yearView": {
          "description": "The debit and credit balance per account.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/aRYearViewType"
          }
        }
      }
    },
    "aRYearViewType": {
      "description": "Year information for an Year View.",
      "type": "object",
      "properties": {
        "balanceInfo": {
          "description": "The balance amounts for this date range. Contains the Debit Balance, Credit Balance and the Total Balance.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "dateRange": {
          "description": "The period start and end date.",
          "$ref": "#/definitions/dateRangeType"
        },
        "runningTotal": {
          "description": "The running total balance for the date range.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "accountForecastType": {
      "description": "Detail Information about Account Forecast.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "Unique Account ID",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "averageRate": {
          "description": "Average Rate for the forecast",
          "$ref": "#/definitions/currencyAmountType"
        },
        "foodAndBeverageRevenue": {
          "description": "Food and Beverage revenue for the forecast",
          "$ref": "#/definitions/currencyAmountType"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "otherRevenue": {
          "description": "Other revenue (For example, function space rental, equipment rental, etc.) of forecast.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "overrideForecast": {
          "description": "This element is used for overriding any existing forecasts for a profile, Please select Default, if you want to be notified of a warning message. No Forecast is overridden or created. Please select Override, if existing forecasts are to be overridden and new forecasts are to be created. Please select DoNotOverride, if existing forecasts are not to be overridden and new forecasts are to be created.",
          "$ref": "#/definitions/overrideForecastTypeType"
        },
        "periodCode": {
          "description": "Specifies the Fiscal or Calendar Period Code for the forecast",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "periodDescription": {
          "description": "Specifies the Fiscal or Calendar Period Description for the forecast.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "periodEndDate": {
          "description": "Specifies the Period End Date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "periodStartDate": {
          "description": "Specifies the Period Start Date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "roomNights": {
          "description": "Room Nights for the forecast",
          "type": "integer"
        },
        "roomRevenue": {
          "description": "Room Revenue for the forecast",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalRevenue": {
          "description": "Total revenue for the forecast",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "accountForecasts": {
      "description": "Response object for showing forecast information of account profile.",
      "type": "object",
      "properties": {
        "accountForecastDetails": {
          "description": "Type contains forecast information of the account profile.",
          "$ref": "#/definitions/accountForecastsType"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "accountForecastsType": {
      "description": "Detail Information about Account Forecast.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/accountForecastType"
      }
    },
    "activityLogListType": {
      "type": "object",
      "properties": {
        "activityLog": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/activityLogType"
          }
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "activityLogType": {
      "type": "object",
      "properties": {
        "actionDescription": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "actionType": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "croCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "iPAddress": {
          "description": "The IP Address of the machine that performed the activity",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "logDate": {
          "type": "string",
          "format": "date-time"
        },
        "logUserId": {
          "type": "integer"
        },
        "logUserName": {
          "type": "string"
        },
        "machineStation": {
          "type": "string"
        },
        "module": {
          "type": "string"
        },
        "refActionId": {
          "type": "number"
        }
      }
    },
    "addressInfoType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "addressSearchType": {
      "description": "Address Details such as city, state, country, postal code etc.",
      "type": "object",
      "properties": {
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "excludeNoCity": {
          "description": "When true indicates that only profiles with city will be fetched.",
          "type": "boolean"
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "streetAddress": {
          "description": "First Line of Street Address. For profile search it matches the first Address line.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "addressType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "maxLength": 80,
            "minLength": 0
          }
        },
        "barCode": {
          "description": "The postal barcode for the address.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        },
        "updateReservations": {
          "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
          "type": "boolean"
        }
      }
    },
    "addtionalCodeInfoType": {
      "description": "Holds name of additional code information",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Holds name of additional code information",
            "$ref": "#/definitions/masterInfoCodeDetailType"
          },
          "value": {
            "description": "Holds value of additional code information",
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          }
        }
      }
    },
    "advanceCheckInType": {
      "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
      "type": "object",
      "properties": {
        "advanceCheckedIn": {
          "description": "Indicates if the reservation is marked as Advance Checked In",
          "type": "boolean"
        },
        "eTRComments": {
          "description": "ETR Comments",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "expectedReturnTime": {
          "description": "Expected Return Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "airlineImportStatusType": {
      "description": "List of possible import statuses of a membership airline processing record.",
      "type": "string",
      "enum": [
        "New",
        "Uploaded",
        "Error"
      ]
    },
    "airlineTransactionImportInfoType": {
      "description": "Contains details of the membership transaction processing status, provided by the airline.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the error that caused the import to fail",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "importDate": {
          "description": "The date when this batch was imported into OPERA",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "status": {
          "description": "Status identifying the outcome of import activity",
          "$ref": "#/definitions/airlineImportStatusType"
        }
      }
    },
    "airlineTransactionStatusType": {
      "description": "Contains details of the membership transaction processing status, provided by the airline.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Error Description returned by the airline",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "errorCode": {
          "description": "Error Code returned by the airline",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "airlineTransactionType": {
      "description": "Contains details of the membership transaction processing status, provided by the airline.",
      "type": "object",
      "properties": {
        "airlineHotelCode": {
          "description": "Property code provided by the airline",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "airlineStatus": {
          "description": "Processing status returned by the airlines.",
          "$ref": "#/definitions/airlineTransactionStatusType"
        },
        "batchId": {
          "description": "Identifies the batch in which this membership transaction status record was imported into OPERA",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Property code that this record corresponds to",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "importInfo": {
          "description": "Date and status of the import activity.",
          "$ref": "#/definitions/airlineTransactionImportInfoType"
        },
        "memberInfo": {
          "description": "Information relating to the member.",
          "$ref": "#/definitions/memberInfoType"
        },
        "membershipTransactionId": {
          "description": "Unique ID of the membership transaction that this record corresponds to",
          "$ref": "#/definitions/membershipTransactionId"
        },
        "miles": {
          "description": "Miles earned through this membership transaction",
          "type": "number"
        },
        "transactionId": {
          "description": "Uniquely identifies this record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "userDefinedFields": {
          "description": "Collection of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        }
      }
    },
    "airlineTransactionsStatus": {
      "description": "Request object for fetching membership transactions processed by the airline.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "transactions": {
          "description": "A collection of membership transactions processed by the airline.",
          "$ref": "#/definitions/airlineTransactionsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "airlineTransactionsType": {
      "description": "Contains details of the membership transaction processing status, provided by the airline.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/airlineTransactionType"
      }
    },
    "alienInfoType": {
      "description": "immigration/visa information of a foreign person.",
      "type": "object",
      "properties": {
        "alienRegistrationNo": {
          "description": "Alien Registration Number.",
          "type": "string"
        },
        "immigrationStatus": {
          "description": "Immigration Status on an Alien.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "visaValidityType": {
          "description": "Visa Type of an Alien.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "anonymizationStatusType": {
      "description": "Guest has been anonymized.",
      "type": "string",
      "enum": [
        "Requested",
        "Anonymized"
      ]
    },
    "anonymizationType": {
      "description": "Provides information about guest's anonymization status.",
      "type": "object",
      "properties": {
        "anonymizationDate": {
          "description": "Date and Time when the guest was anonymized.",
          "type": "string",
          "format": "date-time"
        },
        "anonymizationStatus": {
          "description": "Status of anonymization such as Requested or Anonymized.",
          "$ref": "#/definitions/anonymizationStatusType"
        }
      }
    },
    "articleInfoType": {
      "description": "Information regarding an article.",
      "type": "object",
      "properties": {
        "articleCode": {
          "description": "Unique code of the article.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the article.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel code to which the article belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates whether the article is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "postIt": {
          "description": "Post it information of the article.",
          "$ref": "#/definitions/articlePostItType"
        },
        "price": {
          "description": "Default price of the article.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionCode": {
          "description": "Transaction code to which the article belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "articlePostItType": {
      "description": "Post it information of an article.",
      "type": "object",
      "properties": {
        "availableForPostIt": {
          "description": "Indicates whether the article is available for post it.",
          "type": "boolean"
        },
        "color": {
          "description": "Color indicator which is only configurable if article is available for post it.",
          "$ref": "#/definitions/colorType"
        }
      }
    },
    "attachmentType": {
      "description": "Attached files.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description for the file.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "fileName": {
          "description": "Name of the file.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fileSize": {
          "description": "Size of the file.",
          "type": "integer"
        },
        "global": {
          "description": "Flag to say if attachment is available across properties.",
          "type": "boolean"
        },
        "history": {
          "description": "History data associated with Attachment.",
          "$ref": "#/definitions/dateTimeStampGroupType"
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "attachmentsType": {
      "description": "Attachment List.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/attachmentType"
      }
    },
    "authorizationRuleType": {
      "description": "Configured rule for computing the amount to authorize.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The amount applicable to the authorization rule.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "code": {
          "description": "The authorization rule code.",
          "type": "integer",
          "pattern": "[0-9]{1,9}"
        },
        "percent": {
          "description": "A percentage value if the authorization rule is percentage based.",
          "type": "number"
        }
      }
    },
    "availableARAddresses": {
      "description": "Response to the request to fetch the available Accounts Receivables(AR) Addresses for a Profile.",
      "type": "object",
      "properties": {
        "addresses": {
          "description": "Collection of Detailed information on an address for the customer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/addressInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "availableAwardsBasedOnType": {
      "description": "Response object to fetch member available awards based on the type being passed.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "membershipAvailableAwards": {
          "description": "Collection of member available awards.",
          "$ref": "#/definitions/membershipAwardsAvailabilityType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "availablePreferences": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "preferenceCollection": {
          "description": "A collection of preferences",
          "type": "array",
          "items": {
            "$ref": "#/definitions/preferenceTypeType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "award": {
      "description": "Request object to redeem award.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "memberAward": {
          "$ref": "#/definitions/memberAwardType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "awardDetails": {
      "description": "Response of fetch awards request.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "profileAwards": {
          "description": "Profile awards and certificates.",
          "$ref": "#/definitions/awardsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "awardId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "awardKindType": {
      "description": "Indicates that this is electronic certificate.",
      "type": "string",
      "enum": [
        "Paper",
        "ECertificate"
      ]
    },
    "awardStatusType": {
      "description": "Indicates that certificate is in use.",
      "type": "string",
      "enum": [
        "Available",
        "NotAvailable",
        "InUse"
      ]
    },
    "awardType": {
      "description": "Detailed information of the awards.",
      "type": "object",
      "properties": {
        "awardCode": {
          "description": "Award category.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "awardType": {
          "description": "Can be P (Paper) or E (E-Certificate).",
          "$ref": "#/definitions/awardKindType"
        },
        "categoryValid": {
          "description": "Indicates whether the category of certificate is valid or not for this resort.",
          "type": "boolean"
        },
        "certificateNo": {
          "description": "Certificate No.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "description": {
          "description": "Description of the award/certificate.",
          "type": "string"
        },
        "detailedCertificate": {
          "description": "Indicates if this certificate is detailed or not.",
          "type": "boolean"
        },
        "displaySequence": {
          "description": "Indicates the order in which the certificates received from MRW.",
          "type": "number"
        },
        "expirationDate": {
          "description": "Expiration Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "externalConfirmationNo": {
          "description": "Confirmation Number given by a CRS application for this reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "externalHotelCode": {
          "description": "Hotel Code of the CRS application that this certificate belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "fBAInfo": {
          "description": "FBA related fields.",
          "$ref": "#/definitions/fBAInfoType"
        },
        "gift": {
          "description": "Signifies whether award is gift or not.",
          "type": "boolean"
        },
        "hotelCategory": {
          "description": "Indicates the lowest hotel category for which the certificate is valid.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code for which the routing instructions are provided for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "instantlyRedeemable": {
          "description": "Indicates if the award is an Instant Redemption award.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "masterCertificiateNo": {
          "description": "Master Certificate No.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipNo": {
          "description": "Membership No.",
          "type": "string"
        },
        "nights": {
          "description": "Award Nights.",
          "type": "integer"
        },
        "package": {
          "description": "Signifies whether upgrade is package or not.",
          "type": "boolean"
        },
        "paidUpgrade": {
          "description": "Indicates if this certificate was ordered using the \"Paid Upgrade\" option in the E-Certs screen.",
          "type": "boolean"
        },
        "points": {
          "description": "No. of points used to order this award.",
          "type": "number"
        },
        "profileId": {
          "description": "Unique profile identifier requested to be fetched.",
          "$ref": "#/definitions/profileId"
        },
        "quantity": {
          "description": "Quantity of such awards needed to be ordered.",
          "type": "integer"
        },
        "reservationCertificateType": {
          "description": "[R]=Reward, [I]=Incentive.",
          "$ref": "#/definitions/reservationCertificateType"
        },
        "reservationId": {
          "description": "Reservation IDs will be empty if award is not attached.",
          "$ref": "#/definitions/reservationId"
        },
        "rewardCertificateType": {
          "description": "[RE]=Regular Certificate, [SA]=Stay Anytime Certificate, [PS]=Point Saver Certificate.",
          "$ref": "#/definitions/rewardCertificateType"
        },
        "sourceType": {
          "description": "MRW : From MRW MAN:Entered manually.",
          "type": "string"
        },
        "status": {
          "description": "Status of the award aka available.",
          "$ref": "#/definitions/awardStatusType"
        },
        "upgrade": {
          "description": "Signifies whether upgrade award or not.",
          "type": "boolean"
        }
      }
    },
    "awardsToGrant": {
      "description": "Response object to fetch award details to grant an award.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "membershipAwardsList": {
          "description": "Collection of member award list.",
          "$ref": "#/definitions/membershipAwardsAvailabilityType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "awardsType": {
      "description": "List of awards.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/awardType"
      }
    },
    "bankAccountType": {
      "description": "Bank account information like Account ID, Bank Name, Currency, etc.",
      "type": "object",
      "properties": {
        "bankAccountId": {
          "description": "Bank account ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "bankAccountNo": {
          "description": "Account number at the bank.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "bankCode": {
          "description": "Unique code of the bank account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bankName": {
          "description": "Name of the bank account.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "branchCode": {
          "description": "Code for the branch of the bank.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "checkFormat": {
          "description": "Type of format for Payment Method.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "currency": {
          "description": "Currency associated with the bank account.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "currentCheckNo": {
          "description": "Current check no of the bank account.",
          "type": "number"
        },
        "default": {
          "description": "Whether this bank account is to be the default in case no bank account is associated with the travel agent or source.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property of the bank account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelName": {
          "description": "Property name of the bank account.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "linkedToProfile": {
          "description": "Whether this bank account is associated with the travel agent or source.",
          "type": "boolean"
        },
        "paymentMethod": {
          "description": "Type of payment associated with the bank account.",
          "$ref": "#/definitions/commissionPaymentMethodType"
        }
      }
    },
    "basicEmailListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/basicEmailType"
      }
    },
    "basicEmailType": {
      "description": "Email address",
      "type": "string",
      "maxLength": 2000,
      "minLength": 0
    },
    "bedTaxReportingType": {
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "type": "object",
      "properties": {
        "taxRegistrationNo": {
          "description": "Tax Registration Number for Maldives Bed Tax Reporting.",
          "type": "number"
        },
        "taxableDays": {
          "description": "Number of days for which the Maldives tax is applicable.",
          "type": "integer"
        },
        "visaExpiryDate": {
          "description": "Visa Expiration Date used for Maldives Bed Tax Reporting",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaIssueDate": {
          "description": "Visa Issue Date used for Maldives Bed Tax Reporting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaNumber": {
          "description": "Visa number used for Maldives Bed Tax Reporting",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "benefitType": {
      "description": "Basic information about membership benefit.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Benefit code associated with a membership.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates whether membership benefit is active or inactive.",
          "type": "boolean"
        },
        "message": {
          "description": "Processing message for membership benefit.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        }
      }
    },
    "benefitsType": {
      "description": "Basic information about membership benefit.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/benefitType"
      }
    },
    "billingInstructionType": {
      "description": "Configured Billing Instruction which represents a set of Transaction Codes.",
      "type": "object",
      "properties": {
        "billingCode": {
          "description": "Unique identifier for the Billing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "desc": {
          "description": "Billing Instruction code description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel context of the Billing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        }
      }
    },
    "billingInstructionsType": {
      "description": "Set of Billing Instruction codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/billingInstructionType"
      }
    },
    "billingPrivilegesType": {
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "type": "object",
      "properties": {
        "allowAutoCheckin": {
          "description": "Indicated if a new reservation should be created and automatically checked in whenever the room is checked out. Available for pseudo room types only.",
          "type": "boolean"
        },
        "autoSettlement": {
          "description": "Indicates if the is a candidate for auto folio settlement.",
          "type": "boolean"
        },
        "autoSettlementFreq": {
          "description": "The interval of days between each auto folio settlement.",
          "type": "integer"
        },
        "autoSettlementType": {
          "description": "The folio settlement type for auto folio settlement.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "creditLimitAutoPay": {
          "description": "Indicates if the reservation will be included in the Automatic Credit Limit Overages process and also be listed in the Credit Limit Overages screen results.",
          "type": "boolean"
        },
        "directBillAuthorized": {
          "description": "If Direct bill is authorized this will hold User ID who authorized it.",
          "type": "boolean"
        },
        "folioCloseDate": {
          "description": "Date when folio was closed. This works with PostStayCharging flag.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postStayCharging": {
          "description": "Indicates if the reservation has charging privileges after checkout.",
          "type": "boolean"
        },
        "postingRestriction": {
          "description": "Flag used by interface program during check in.",
          "type": "boolean"
        },
        "preStayCharging": {
          "description": "Indicates if the reservation has charging privileges before arrival.",
          "type": "boolean"
        },
        "scheduledCheckout": {
          "description": "Indicates if the guest is scheduled for automatic check out.",
          "type": "boolean"
        },
        "scheduledCheckoutTime": {
          "description": "Time of automatic check out if guest is schedule for automatic check out.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "videoCheckout": {
          "description": "Indicates if the guest can do video checkout",
          "type": "boolean"
        }
      }
    },
    "blockIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "calculatedPointType": {
      "description": "Information related to a Calculated Points.",
      "type": "object",
      "properties": {
        "billingGroup": {
          "description": "Indicates the billing group the points belong to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "costPerNight": {
          "description": "Indicates the cost incurred per minght.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "points": {
          "description": "Indicates the total award/tier points generated.",
          "type": "number"
        },
        "rule": {
          "description": "Indicates the validated rules to generate points.",
          "type": "string"
        },
        "ruleCode": {
          "description": "Indicates rule code for the rule.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Indicates the type of points.",
          "$ref": "#/definitions/rulePointsTypeType"
        }
      }
    },
    "calculatedPoints": {
      "description": "Response object for fetching membership transaction points information.",
      "type": "object",
      "properties": {
        "calculatedPoint": {
          "description": "Details of Points Accrued for the current points transaction.",
          "$ref": "#/definitions/calculatedPointsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "calculatedPointsType": {
      "description": "Summary of Points Accrued for current transaction.",
      "type": "object",
      "properties": {
        "calculatedPoint": {
          "description": "Details of Points Accrued for the current points transaction.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/calculatedPointType"
          }
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "cardNumberTypeType": {
      "description": "Simple type for indicating if credit card number is tokenized.",
      "type": "string",
      "enum": [
        "CardNumber",
        "Token"
      ]
    },
    "cardProcessingType": {
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardReIssueType": {
      "description": "Request to re issue a new card.",
      "type": "string",
      "enum": [
        "Pending",
        "NotApplicable",
        "Requested"
      ]
    },
    "cardTypeType": {
      "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
      "type": "string",
      "enum": [
        "Ab",
        "Am",
        "Ax",
        "Cb",
        "Dc",
        "Ds",
        "Dt",
        "Ec",
        "Er",
        "Jc",
        "Jl",
        "Mc",
        "Nb",
        "So",
        "St",
        "Sw",
        "Va",
        "Xy",
        "Zz",
        "Cp",
        "Cu"
      ]
    },
    "cashierInfoType": {
      "description": "Cashier information. Contains Id and Name details of the cashier.",
      "type": "object",
      "properties": {
        "cashierId": {
          "description": "Cashier Id of the Cashier.",
          "type": "number"
        },
        "cashierName": {
          "description": "Cashier Name.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "changeAccountForecastsRS": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "Allow end-to-end correlation of log messages with the corresponding Web service message throughout the processing of the Web service message.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "echoToken": {
          "description": "A reference for additional message identification, assigned by the requesting host system. When a request message includes an echo token the corresponding response message MUST include an echo token with an identical value.",
          "type": "string",
          "maxLength": 128,
          "minLength": 0
        },
        "enforceAllowed": {
          "description": "Indicates if the operation supports the ability to force the retry request through OPERA services in the case where the external system continues to fail.",
          "type": "boolean"
        },
        "errors": {
          "description": "Refer to Generic common types document.",
          "$ref": "#/definitions/errorsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "retryAllowed": {
          "description": "Indicates if the operation supports the ability to retry the request.",
          "type": "boolean"
        },
        "success": {
          "description": "Refer to Generic common types document.",
          "$ref": "#/definitions/successType"
        },
        "timeStamp": {
          "description": "Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-MM-DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-20T13:59:38Z).",
          "type": "string",
          "format": "date-time"
        },
        "useLocalAllowed": {
          "description": "This attribute carries the user selected confirmation value on confirmation popup.",
          "type": "boolean"
        },
        "version": {
          "description": "For all Opera versioned messages, the version of the message is indicated by a Opera Version value.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeRelationsInfoType": {
      "description": "Detailed information regarding to be changed relationships for the profile.",
      "type": "object",
      "properties": {
        "changeProfileID": {
          "description": "Unique id of the profile to be changed to.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "boolean"
        },
        "sourceProfileType": {
          "description": "Used to specify a source profile type.",
          "$ref": "#/definitions/profileTypeType"
        },
        "sourceRelation": {
          "description": "Indicates the type of to be changed relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceRelationDescription": {
          "description": "Displays the description of to be changed relationship the current profile(Source Profile) has with the related profile(Target Profile).This needs to be passed if the attribute primary is sent as true.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "targetProfileType": {
          "description": "Used to specify a target profile type.",
          "$ref": "#/definitions/profileTypeType"
        },
        "targetRelation": {
          "description": "Indicates the type of to be changed relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetRelationDescription": {
          "description": "Displays the description of to be changed relationship the related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "changeRelationsType": {
      "description": "Detailed information regarding the changes made to relationships for the profile.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "relation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "relationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "changeRelationshipCriteriaType": {
      "description": "Information about the changes in relationship for the profile",
      "type": "object",
      "properties": {
        "changeRelationship": {
          "description": "Information about the changes in relationship for the profile",
          "$ref": "#/definitions/changeRelationsInfoType"
        },
        "relationshipID": {
          "description": "Relationship identifier.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "sourceRelation": {
          "description": "Indicates the type of existing relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceRelationDescription": {
          "description": "Displays the description of existing relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "targetRelation": {
          "description": "Indicates the type of existing relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetRelationDescription": {
          "description": "Displays the description of existing relationship the related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "changedMembership": {
      "description": "Response object for change/update membership. This object contains collection of memberships,Success,Warnings and Errors related to this operation",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "profileMemberships": {
          "description": "Detailed information of membership related to the profile",
          "type": "array",
          "items": {
            "$ref": "#/definitions/profileMembershipType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "characterUDFType": {
      "description": "Used to hold user defined field of Character/String Type.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "description": "Used to hold user defined field of Character Type. It is highly recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "characterUDFsType": {
      "description": "Used to hold collection of user defined fields of Character/String Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/characterUDFType"
      }
    },
    "checkProfileInstructionType": {
      "description": "Simple type that corresponds to check profile instructions.",
      "type": "string",
      "enum": [
        "HasWebAccounts"
      ]
    },
    "checkProfileResultType": {
      "description": "Status of allowed actions, attached records, and indicators of the profile.",
      "type": "object",
      "properties": {
        "checkProfileInstruction": {
          "description": "Indicates status of allowed actions, total number of attached records, or number of occurrences of indicator of a profile.",
          "$ref": "#/definitions/checkProfileInstructionType"
        },
        "exists": {
          "description": "Indicates status of allowed actions, total number of attached records, or number of occurrences of indicator of a profile.",
          "type": "boolean"
        }
      }
    },
    "checkProfileResultsType": {
      "description": "Collection of status of allowed actions, attached records, and indicators of the profile.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/checkProfileResultType"
      }
    },
    "checkProfileType": {
      "description": "Profile and the status of its allowed actions, attached records, and indicators.",
      "type": "object",
      "properties": {
        "profileId": {
          "description": "Unique identifier of the profile.",
          "$ref": "#/definitions/profileId"
        },
        "results": {
          "description": "Collection of status of allowed actions, attached records, and indicators of the profile.",
          "$ref": "#/definitions/checkProfileResultsType"
        }
      }
    },
    "checkProfilesType": {
      "description": "Collection of profiles and the status of its allowed actions, attached records, and indicators.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/checkProfileType"
      }
    },
    "checkedProfiles": {
      "description": "Response for checking allowed actions, existence of attached records, or indicators of a profile.",
      "type": "object",
      "properties": {
        "checkProfilesDetail": {
          "description": "Collection of profiles and the status of its allowed actions, attached records, and indicators.",
          "$ref": "#/definitions/checkProfilesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cityState": {
      "description": "Response object for fetching City and State based on search criteria. This object contains address information,Success,Warnings and Errors related to this operation.",
      "type": "object",
      "properties": {
        "addressType": {
          "description": "Contains address information.",
          "$ref": "#/definitions/addressType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "claimActivityLogListType": {
      "description": "Summary of claim activity log information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/claimActivityLogType"
      }
    },
    "claimActivityLogType": {
      "description": "Summary of claim activity log information.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "Name of the application user who created the activity record.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "sequence": {
          "description": "Sequence number for claim activity.",
          "type": "integer"
        },
        "type": {
          "description": "Claim activity type such as Reply, Call Property for Verification, Caller Called Back, and Remarks.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "claimAdjustmentPointsType": {
      "description": "Summary of membership claim award points and tier points.",
      "type": "object",
      "properties": {
        "adjustmentCode": {
          "description": "The selected adjustment code's Award, Stay, Nights, and Revenue thresholds will display.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "awardBasePoints": {
          "description": "Base award points for adjustment.",
          "type": "integer"
        },
        "awardBonusPoints": {
          "description": "Bonus award points for adjustment.",
          "type": "integer"
        },
        "awardMiscPoints": {
          "description": "Miscellaneous award points for adjustment.",
          "type": "integer"
        },
        "awardTotalPoints": {
          "description": "Total award points for adjustment.",
          "type": "integer"
        },
        "baseNightsLimits": {
          "description": "Base nights limits for adjustment.",
          "type": "string"
        },
        "baseRevenueLimits": {
          "description": "Base revenue limits for adjustment.",
          "type": "string"
        },
        "baseStayLimits": {
          "description": "Base stay limits for adjustment.",
          "type": "string"
        },
        "tierBaseNightsPoints": {
          "description": "Tier base nights points for adjustment.",
          "type": "integer"
        },
        "tierBaseRevenuePoints": {
          "description": "Tier Base revenue points for adjustment.",
          "type": "integer"
        },
        "tierBaseStayPoints": {
          "description": "Tier base stay points for adjustment.",
          "type": "integer"
        },
        "tierBonusNightsPoints": {
          "description": "Tier bonus nights points for adjustment.",
          "type": "integer"
        },
        "tierBonusRevenuePoints": {
          "description": "Tier Bonus revenue points for adjustment.",
          "type": "integer"
        },
        "tierBonusStayPoints": {
          "description": "Tier bonus stay points for adjustment.",
          "type": "integer"
        },
        "tierTotalNightsPoints": {
          "description": "Tier total nights points for adjustment.",
          "type": "integer"
        },
        "tierTotalRevenuePoints": {
          "description": "Tier Total tier revenue points for adjustment.",
          "type": "integer"
        },
        "tierTotalStayPoints": {
          "description": "Tier total stay points for adjustment.",
          "type": "integer"
        },
        "totalBasePointsLimits": {
          "description": "Total base points limits for adjustment.",
          "type": "string"
        }
      }
    },
    "claimApprovalStatusType": {
      "description": "Claim approve or reject status.",
      "type": "string",
      "enum": [
        "Approved",
        "Rejected",
        "Pending"
      ]
    },
    "claimMembershipType": {
      "description": "Summary of claim activity log information.",
      "type": "object",
      "properties": {
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "number"
        },
        "membershipLevel": {
          "description": "The current level of the membership.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipType": {
          "description": "Membership Type code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        }
      }
    },
    "claimRecordType": {
      "description": "Record Type associated with a claim.",
      "type": "string",
      "enum": [
        "Stay",
        "Other",
        "LimitedAdjustment"
      ]
    },
    "claimReservationInfoType": {
      "description": "Summary of claim activity log information.",
      "type": "object",
      "properties": {
        "arrival": {
          "description": "Arrival date for the stay associated with this claim.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "confirmationNo": {
          "description": "List of reservation confirmation or reference numbers associated with this claim. Like PMS reservation number, Central(ORS) booking number.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "departure": {
          "description": "Departure date for the stay associated with this claim.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotelId": {
          "description": "Property where the stay associated with this claim.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "claimSourceType": {
      "description": "Source of the membership claim.",
      "type": "string",
      "enum": [
        "Ocis",
        "Opms",
        "Web"
      ]
    },
    "codeDescriptionType": {
      "description": "This contains a generic code and description information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "codeInfoType": {
      "type": "object",
      "properties": {
        "addtionalCodeInfo": {
          "$ref": "#/definitions/addtionalCodeInfoType"
        },
        "code": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "maxLength": 20,
        "minLength": 0
      }
    },
    "colorType": {
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "type": "string",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "commentInfoType": {
      "description": "Comment related to the profile/reservation.",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "commentType": {
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "type": "object",
      "properties": {
        "actionDate": {
          "description": "Indicates at which date an action described in the comment must be taken.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "actionType": {
          "description": "Specifies type of action described in the comments.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "commentTitle": {
          "description": "Specifies Comment's Title.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "confidential": {
          "description": "When true, the comment may be confidential.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "If specified comment belongs to the Hotel, otherwise it is a global comment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "internal": {
          "description": "When true, the comment may not be shown to the consumer. When false, the comment may be shown to the consumer.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "notificationLocation": {
          "description": "Notification Location associated with the Note.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "overrideInternal": {
          "description": "When true, the note internal could be modified.",
          "type": "boolean"
        },
        "protectDescription": {
          "description": "When true, the note title will be populated from the note type description and couldn't be modified.",
          "type": "boolean"
        },
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "type": {
          "description": "Specifies type of the comment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Comment type Description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "commissionPaymentMethodType": {
      "description": "This contains a generic code and description information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "format": {
          "description": "Payment format if the payment method is EFT.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        }
      }
    },
    "commissionPaymentMethods": {
      "description": "Check",
      "type": "string",
      "enum": [
        "Cent",
        "Eft",
        "Chk"
      ]
    },
    "commissionPayoutToType": {
      "type": "string",
      "enum": [
        "TravelAgent",
        "Source",
        "TravelAgentSource",
        "None"
      ]
    },
    "communicationStatusType": {
      "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
      "type": "string",
      "enum": [
        "Pending",
        "Completed",
        "Failed",
        "Sent",
        "Received",
        "Cancelled",
        "PendingAvailability"
      ]
    },
    "company": {
      "description": "Request object for creation of company/agent/group/source profile. This object contains profile details with unique identifiers of a profile. The standard optional Opera Context element is also included.",
      "type": "object",
      "properties": {
        "companyDetails": {
          "description": "Provides detailed information of a company profile.",
          "$ref": "#/definitions/companyProfileType"
        },
        "companyIdList": {
          "description": "Unique identifiers of Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as ID.",
          "$ref": "#/definitions/profileIdList"
        },
        "externalReferences": {
          "description": "External Reference information for Profile.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "companyInfoType": {
      "description": "Company Information of the Profile.",
      "type": "object",
      "properties": {
        "department": {
          "description": "Department of the Profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "legalCompany": {
          "description": "Legal Company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "position": {
          "description": "Business Title or Position of the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "companyProfileType": {
      "description": "Type provides the detailed information about the profile and its children.",
      "type": "object",
      "properties": {
        "addresses": {
          "description": "List of customer addresses.",
          "type": "object",
          "properties": {
            "addressInfo": {
              "description": "Collection of Detailed information on an address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/addressInfoType"
              }
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "businessSegments": {
          "description": "Business/Market Segment associated to the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "cashiering": {
          "description": "Contains cashiering related details for the profile",
          "$ref": "#/definitions/profileCashieringType"
        },
        "comments": {
          "description": "List of Notes for the customer.",
          "type": "object",
          "properties": {
            "commentInfo": {
              "description": "Collection of Detailed information on comments for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/commentInfoType"
              }
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "commissionInfoList": {
          "description": "Contains commission related details for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/profileCommissionType"
          }
        },
        "company": {
          "description": "Detailed company information for this profile.",
          "$ref": "#/definitions/companyType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "eCertificates": {
          "description": "E-Certificate associated with the profile.",
          "$ref": "#/definitions/eCertificatesType"
        },
        "eligibleForFiscalFolio": {
          "description": "Eligible for Fiscal Folio/Payload generation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "gdsNegotiatedRates": {
          "description": "List of channel negotiated rates that this profile has been assigned to.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "gdsNegotiatedRate": {
              "description": "Collection of Detailed information on channel negotiated rates for the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/gdsNegotiatedType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "hasCommission": {
          "description": "Populates true if the profile has commission configured false otherwise.",
          "type": "boolean"
        },
        "influenceCode": {
          "description": "Influence Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "inheritedNegRates": {
          "description": "Flag to indicate if the negotiated rates are inherited from master profile. Flag is available only when the profile is linked to master profile and master profile has negotiated rate codes attached.",
          "type": "boolean"
        },
        "keywords": {
          "description": "List of customer keywords.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "keyword": {
              "description": "Collection of keywords attached to the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/keywordType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastStayInfo": {
          "description": "Information on last stay of the profile.",
          "$ref": "#/definitions/lastStayInfoType"
        },
        "localizationGuestType": {
          "description": "Localization Guest Type associated to the profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "mailingActions": {
          "description": "Contains collection of mailing action list associated with the profile",
          "$ref": "#/definitions/mailingActionsType"
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this profile as recently accessed.",
          "type": "boolean"
        },
        "markForHistory": {
          "description": "\"true\" setting marks the profile to be kept from being purged, once the profile is marked inactive.",
          "type": "boolean"
        },
        "negotiatedRates": {
          "description": "List of profile negotiated rates.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "negotiatedRate": {
              "description": "Collection of Detailed information on profile negotiated rates.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/negotiatedType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "ownerCode": {
          "description": "Owner Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "preferenceCollection": {
          "description": "List of customer preferences.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "preferenceType": {
              "description": "Collection of Detailed information on preferences of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/preferenceTypeType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "privacyInfo": {
          "description": "Contains privacy related information associated with the profile",
          "$ref": "#/definitions/privacyInfoType"
        },
        "profileAccessType": {
          "description": "Detailed information on access type associated with the profile.",
          "$ref": "#/definitions/profileAccessType"
        },
        "profileImage": {
          "description": "The profile image.",
          "$ref": "#/definitions/imageSetType"
        },
        "profileIndicators": {
          "description": "Indicators of additional information attached to the profile",
          "$ref": "#/definitions/indicatorsType"
        },
        "profileMemberships": {
          "description": "List of loyalty program(s) the profile is subscribed to.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "profileMembership": {
              "description": "Collection of Detailed information on memberships for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileMembershipType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "profileRestrictions": {
          "description": "Detailed information on restrictions associated with the profile.",
          "$ref": "#/definitions/profileRestrictions"
        },
        "profileType": {
          "description": "Type of profile such as Agent, Company, Group and Source.",
          "$ref": "#/definitions/companyProfileTypeType"
        },
        "protectedBy": {
          "description": "What level this profile is protected.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "registeredProperty": {
          "description": "Hotel which this profile is registered with. This attribute is not used for configuration.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "relationships": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "relationship": {
              "description": "A collection of the profiles that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "requestForHotel": {
          "description": "Hotel which this profile is to be registered. This attribute is only used during creation of profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "salesInfo": {
          "description": "Sales information of the profiles.",
          "$ref": "#/definitions/salesInfoType"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "subscriptions": {
          "description": "List of profile subscriptions.",
          "$ref": "#/definitions/profileSubscriptionListType"
        },
        "taxInfo": {
          "description": "Profile information about tax.",
          "$ref": "#/definitions/profileTaxInfoType"
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "territory": {
          "description": "Territory associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "traceCode": {
          "description": "Trace Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "uRLs": {
          "description": "List of Information on a URL for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "uRLInfo": {
              "description": "Collection of Detailed information on web url/address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/uRLInfoType"
              }
            }
          }
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "webUserAccounts": {
          "description": "List of Web User Accounts of the profile.",
          "$ref": "#/definitions/webUserAccountsType"
        }
      }
    },
    "companyProfileTypeType": {
      "description": "The types of Profile handled by the web service.",
      "type": "string",
      "enum": [
        "Agent",
        "Company",
        "Group",
        "Source"
      ]
    },
    "companyType": {
      "type": "object",
      "properties": {
        "alternateLanguage": {
          "description": "Alternate Language of the company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "alternateName": {
          "description": "Alternate Name of the Company. Mainly, it's the name of the company written in the Alternate Language.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "blacklist": {
          "description": "This element tells if profile is blacklisted or not.",
          "type": "boolean"
        },
        "businessLocale": {
          "description": "A jurisdiction(Territory) in which a company is authorized to do business.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "businessTitle": {
          "description": "Business Title.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "commissionCode": {
          "description": "Commission code of the company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "companyName2": {
          "description": "Second Name of the company.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "companyName3": {
          "description": "Third Name of the company.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "corporateIdType": {
          "description": "The type of corporate ID",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "creditRating": {
          "description": "Credit Rating of the company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "iATAInfo": {
          "description": "IATA Information of the profile.",
          "$ref": "#/definitions/iATAInfoType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nationalityDescription": {
          "description": "Nationality code description",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "vipStatus": {
          "description": "VIP status of the company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "copyProfileCommissionInfoType": {
      "description": "Contains base info to determine profile commission bank account and code.",
      "type": "object",
      "properties": {
        "bankAccountId": {
          "description": "Bank account ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "commissionCode": {
          "description": "Profile commission code",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "hotelId": {
          "description": "Hotel code from which the profile bank account and code belongs to",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "profileId": {
          "description": "Unique profile identifier.",
          "$ref": "#/definitions/profileId"
        },
        "targetHotelCodes": {
          "description": "Property to which configuration code type to be copied to.",
          "$ref": "#/definitions/codeListType"
        },
        "validatePending": {
          "description": "Used in CRUD operations. When set to true, proceed validating pending commissions",
          "type": "boolean"
        }
      }
    },
    "countryNameType": {
      "description": "Code for a country or a nationality.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Used for Character Strings, length 0 to 200.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "currencyAmountType": {
      "description": "A monetary value expressed with a currency code.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        }
      }
    },
    "customerType": {
      "description": "Contains basic data on the customer's identity, location, relationships, finances, memberships, etc.",
      "type": "object",
      "properties": {
        "alienInfo": {
          "description": "Immigration/visa information of a foreign person.",
          "$ref": "#/definitions/alienInfoType"
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "birthCountry": {
          "description": "Country of birth.",
          "$ref": "#/definitions/countryNameType"
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        },
        "birthPlace": {
          "description": "Place of birth.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "blacklist": {
          "description": "This element tells if profile is blacklisted or not.",
          "type": "boolean"
        },
        "businessTitle": {
          "description": "Business Title.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "citizenCountry": {
          "description": "Name of the (self-professed) country that is claimed for citizenship.",
          "$ref": "#/definitions/countryNameType"
        },
        "companyInfo": {
          "description": "Company Information of the Profile.",
          "$ref": "#/definitions/companyInfoType"
        },
        "creditRating": {
          "description": "Credit Rating of the customer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "customerValue": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "gender": {
          "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "identifications": {
          "description": "List of identification of the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "identificationInfo": {
              "description": "Collection of detailed information on the identification of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/identificationInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "legalCompany": {
          "description": "Name Of the company the individual is associated with.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nationalityDescription": {
          "description": "Nationality code description",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "personName": {
          "description": "Detailed name information for the customer.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/personNameType"
          }
        },
        "privateProfile": {
          "description": "This element tells profile is property exclusive or not.",
          "type": "boolean"
        },
        "profession": {
          "description": "Profession of a person.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "vipStatus": {
          "description": "VIP status of the customer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "databaseIDListType": {
      "description": "Code identifying the external database record which is linked to external systems.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "maxLength": 20,
        "minLength": 0
      }
    },
    "dateRangeType": {
      "description": "Date Range with Start and End dates.",
      "type": "object",
      "properties": {
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "dateTimeSpanType": {
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "type": "object",
      "properties": {
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "dateTimeStampGroupType": {
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "dateUDFType": {
      "description": "Used to hold user defined field of Date Type.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "description": "Used to hold user defined field of Date Type. It is highly recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "dateUDFsType": {
      "description": "Used to hold collection of user defined fields of Date Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dateUDFType"
      }
    },
    "directBillingType": {
      "description": "This is the preconfigured routing instruction type.",
      "type": "object",
      "properties": {
        "aRNumber": {
          "description": "Hotel Code for which the details of direct billing is provided for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code for which the details of direct billing is provided for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "downgradeType": {
      "description": "Do not downgrade membership when the next downgrade process runs. When the downgrade process runs, the membership will be automatically set to Grace.",
      "type": "string",
      "enum": [
        "Grace",
        "Never",
        "Period"
      ]
    },
    "duplicateExternalSubscriptions": {
      "description": "Response object for fetching subscriptions where the same OPERA profile is linked to multiple external profiles within the same external system.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "duplicateExternalSubscriptionsList": {
          "description": "A collection of subscriptions where the same OPERA profile is linked to multiple external profiles within the same external system.",
          "$ref": "#/definitions/duplicateExternalSubscriptionsListType"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "duplicateExternalSubscriptionsListType": {
      "description": "Details of the OPERA Profile subscription to external system",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/duplicateExternalSubscriptionsType"
      }
    },
    "duplicateExternalSubscriptionsType": {
      "description": "Contains subscription details about an OPERA Profile that is linked to multiple external profiles within the same external system.",
      "type": "object",
      "properties": {
        "databaseId": {
          "description": "Code identifying the external database record which is linked to external systems.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "profileId": {
          "description": "OPERA Profile ID",
          "$ref": "#/definitions/profileId"
        },
        "profileSubscriptions": {
          "description": "List of subscriptions where this OPERA profile is linked to multiple external profiles within the same external system",
          "$ref": "#/definitions/profileSubscriptionListType"
        }
      }
    },
    "duplicateOPERASubscriptions": {
      "description": "Response object for fetching subscriptions where an external profile within a particular external system is linked to multiple OPERA profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "duplicateOPERASubscriptionsList": {
          "description": "A collection of subscriptions where an external profile within a particular external system is linked to multiple OPERA profiles.",
          "$ref": "#/definitions/duplicateOPERASubscriptionsListType"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "duplicateOPERASubscriptionsListType": {
      "description": "Details of the OPERA Profile subscription to external system",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/duplicateOPERASubscriptionsType"
      }
    },
    "duplicateOPERASubscriptionsType": {
      "description": "Contains subscription details about an external profile within a particular external system that is linked to multiple OPERA profiles.",
      "type": "object",
      "properties": {
        "externalProfileId": {
          "description": "Profile ID within the external system",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "profileSubscriptions": {
          "description": "List of profile subscriptions to external system that are linked to the same OPERA Profile",
          "$ref": "#/definitions/profileSubscriptionListType"
        }
      }
    },
    "eCertificateConsumeSourceType": {
      "description": "Indicates that OPERA E-Certificate is consumed by hotelPMS.",
      "type": "string",
      "enum": [
        "Central",
        "Web",
        "Hotel"
      ]
    },
    "eCertificateConsumptionType": {
      "description": "E-Certificates details.",
      "type": "object",
      "properties": {
        "authorizationCode": {
          "description": "Authorization code for consumption.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "date": {
          "description": "Date the certificate was consumed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "email": {
          "description": "Email of the person who consumed the certificate.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "firstName": {
          "description": "First name of the person who consumed the certificate.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property where certificate was consumed for.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "locationType": {
          "description": "Consumption location type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "middleName": {
          "description": "Middle name of the person who consumed the certificate.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "referenceId": {
          "description": "Any reference like reservation no etc against which the certificate was consumed.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "serviceDate": {
          "description": "Date on which the service is due (arrival date in case of reservation).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "source": {
          "description": "Source of consumption.",
          "$ref": "#/definitions/eCertificateConsumeSourceType"
        },
        "surname": {
          "description": "Last name of the person who consumed the certificate..",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "userName": {
          "description": "Application user who created the consumption.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "userNotes": {
          "description": "Any notes on the certificate entered at time of consumption.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        }
      }
    },
    "eCertificateGeneration": {
      "description": "Request object to issue E-Certificate.",
      "type": "object",
      "properties": {
        "eCertificateGenerationDetails": {
          "description": "Details to issue E-Certificate.",
          "$ref": "#/definitions/eCertificateGenerationDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eCertificateGenerationDetailsType": {
      "description": "E-Certificates issue API call details.",
      "type": "object",
      "properties": {
        "certificateType": {
          "description": "User defined certificate code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotels": {
          "description": "Hotel to which certificate is attached to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "issueType": {
          "description": "Process action issued the certificate. valid values are assigned (a),opt in (o) and purchased (p).",
          "$ref": "#/definitions/eCertificateIssueType"
        },
        "profileId": {
          "description": "NameId.",
          "$ref": "#/definitions/profileId"
        },
        "source": {
          "description": "Source of e-certificate.",
          "$ref": "#/definitions/eCertificateIssueSourceType"
        }
      }
    },
    "eCertificateGenerationType": {
      "description": "E-Certificates details.",
      "type": "object",
      "properties": {
        "generationDetail": {
          "description": "Reason for which e-certificate was generated.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "referenceValue": {
          "description": "Type of value that is in the certificate.valid values are membership_level.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ruleId": {
          "description": "Key to identify the generation rule id.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "eCertificateInfoType": {
      "description": "E-Certificates details.",
      "type": "object",
      "properties": {
        "awardCode": {
          "description": "Award type to which the certificate is linked to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "benefitSummary": {
          "description": "Summary of Benefits attached to this ECertificate.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "certificateType": {
          "description": "User defined certificate code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cost": {
          "description": "Cost of certificate.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "description": "Description about the certificate.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotels": {
          "description": "Hotel to which certificate is attached to.",
          "type": "object",
          "properties": {
            "code": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              }
            },
            "scope": {
              "description": "Scope of e-cert: global,single property or multi property.",
              "$ref": "#/definitions/eCertificateScopeType"
            }
          }
        },
        "label": {
          "description": "Label for the certificate.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "longDescription": {
          "description": "Detail description about the certificate.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "maxExtensionAllowed": {
          "description": "Number of times e-certificate can be extended.",
          "type": "integer"
        },
        "membershipType": {
          "description": "Membership type to which the certificate is linked to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "promotionCode": {
          "description": "Promotion code to which certificate is attached to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "usageCriteria": {
          "$ref": "#/definitions/eCertificateUsageCriteriaType"
        },
        "value": {
          "description": "Value of the certificate for the guest.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "voucherBenefitCode": {
          "description": "Voucher benefit code attached to the certificate.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "eCertificateIssueSourceType": {
      "description": "Indicates that OPERA E-Certificate is issued by external system.",
      "type": "string",
      "enum": [
        "Opera",
        "Web",
        "Interface"
      ]
    },
    "eCertificateIssueType": {
      "description": "Indicates that guest purchased OPERA E-Certificate.",
      "type": "string",
      "enum": [
        "Assigned",
        "OptedIn",
        "Purchased"
      ]
    },
    "eCertificateScopeType": {
      "description": "Indicates that OPERA E-Certificate is available for a specific list of hotels.",
      "type": "string",
      "enum": [
        "Global",
        "Hotel",
        "MultiHotel"
      ]
    },
    "eCertificateStatusType": {
      "description": "Indicates that OPERA E-Certificate is reserved.",
      "type": "string",
      "enum": [
        "Cancelled",
        "Consumed",
        "Deleted",
        "Expired",
        "Issued",
        "Reserved"
      ]
    },
    "eCertificateToConsume": {
      "description": "Request object to Consume an E-Certificate.",
      "type": "object",
      "properties": {
        "consumeECertificates": {
          "description": "Details to consume an E-Certificate.",
          "$ref": "#/definitions/eCertificatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eCertificateToExtend": {
      "description": "Request object to Consume an E-Certificate.",
      "type": "object",
      "properties": {
        "certificateId": {
          "description": "System generated unique certificate id.",
          "type": "integer"
        },
        "expiryDate": {
          "description": "Indicates E-Certificate extended expiry date.",
          "type": "string",
          "format": "date"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eCertificateToVerify": {
      "description": "Request object to Verify an E-Certificate Number.",
      "type": "object",
      "properties": {
        "allowReservation": {
          "description": "Indicates if certificate is to be used against reservation or not.",
          "type": "boolean"
        },
        "certificateId": {
          "description": "System generated unique certificate id.",
          "type": "integer"
        },
        "certificateNo": {
          "description": "Unique Certificate Number.",
          "$ref": "#/definitions/stringLength40"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eCertificateType": {
      "description": "E-Certificates details.",
      "type": "object",
      "properties": {
        "awardId": {
          "description": "AwardID.",
          "$ref": "#/definitions/awardId"
        },
        "awardPoints": {
          "description": "Award points if any in case of certificate use membership award.",
          "type": "integer"
        },
        "cancelRequestDate": {
          "description": "Date on which the cancellation was requested.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "certificateId": {
          "description": "System generated unique certificate id.",
          "type": "integer"
        },
        "certificateNo": {
          "description": "Printed certificate no. This has to be unique.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "consumptionDetail": {
          "$ref": "#/definitions/eCertificateConsumptionType"
        },
        "databaseId": {
          "description": "External reference from which the record is created.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "eCertificateInfo": {
          "$ref": "#/definitions/eCertificateInfoType"
        },
        "expiryDate": {
          "description": "Date of expiry.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "extensionCount": {
          "description": "Number of times e-certificate is already extended.",
          "type": "integer"
        },
        "generationDetail": {
          "$ref": "#/definitions/eCertificateGenerationType"
        },
        "inLieuSequence": {
          "description": "Seq of the in lieu of certificate. 1..n. original certificate will be treated as null = 0.",
          "type": "integer"
        },
        "inactiveDate": {
          "description": "Date the record was marked as inactive.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "issueDate": {
          "description": "Date when certificate was issued.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "issueType": {
          "description": "Process action issued the certificate. valid values are assigned (a),opt in (o) and purchased (p).",
          "$ref": "#/definitions/eCertificateIssueType"
        },
        "newExpiryDate": {
          "description": "New Date of expiry to extend e-certificate.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "originalCertificateNo": {
          "description": "In case of in lieu of certificate this will contain the original certificate no.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "originalVoucherNo": {
          "description": "In case of in lieu of certificate this will contain the original voucher no.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "printed": {
          "description": "Print status of the certificate.",
          "type": "boolean"
        },
        "profileId": {
          "description": "NameId.",
          "$ref": "#/definitions/profileId"
        },
        "source": {
          "description": "Source of e-certificate.",
          "$ref": "#/definitions/eCertificateIssueSourceType"
        },
        "status": {
          "description": "Status of the certificate.",
          "$ref": "#/definitions/eCertificateStatusType"
        },
        "voucherNo": {
          "description": "System generated unique voucher number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "eCertificateUsageCriteriaType": {
      "description": "E-Certificates details.",
      "type": "object",
      "properties": {
        "benefit": {
          "description": "Indicates to attach a rate code to the e-certificate as a benefit.",
          "type": "boolean"
        },
        "cancelAllowed": {
          "description": "Identify if cancel is allowed or not.",
          "type": "boolean"
        },
        "generateInLieuCertificate": {
          "description": "Identify if in lieu of certificate can be generated or not.",
          "type": "boolean"
        },
        "hotel": {
          "description": "Indicates if web certificate can be consumed in hotel.",
          "type": "boolean"
        },
        "reservation": {
          "description": "Indicates if certificate is to be used against reservation or not.",
          "type": "boolean"
        },
        "verifyCertificateNo": {
          "description": "Specify if the certificate number verification is required at time of consumption or not.",
          "type": "boolean"
        },
        "web": {
          "description": "Indicates if web certificate can be consumed in OWS.",
          "type": "boolean"
        },
        "webAllowed": {
          "description": "Indicates if certificate consumption allowable on the web.",
          "type": "boolean"
        }
      }
    },
    "eCertificates": {
      "description": "Response object for fetch ECertificates. This object contains collection of ECertificates,Success,Warnings and Errors related to this operation.",
      "type": "object",
      "properties": {
        "eCertificatesDetail": {
          "description": "E-Certificate assosiated with the profile.",
          "$ref": "#/definitions/eCertificatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eCertificatesType": {
      "description": "List of e-certificates for the profile.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eCertificateType"
      }
    },
    "earningPreferencesType": {
      "description": "Indicates guest's rewards earning preferences.",
      "type": "object",
      "properties": {
        "airline": {
          "description": "Indicates preferred airline code and name.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "earningPreference": {
          "description": "Indicates the earning preference, Points or Miles.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "frequentFlyerNumber": {
          "description": "Indicates frequent flyer's number of the guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "emailInfoType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "emailMessageType": {
      "description": "Request object for storing an email.",
      "type": "object",
      "properties": {
        "blockId": {
          "description": "ID of the Block that is associated with the email.",
          "$ref": "#/definitions/stringLength80"
        },
        "emailBody": {
          "description": "Email in base64 binary format.",
          "type": "string",
          "format": "byte"
        },
        "emailReceiveDate": {
          "description": "The date the email was received.",
          "type": "string",
          "format": "date-time"
        },
        "fromAddress": {
          "description": "The address that originated the email.",
          "$ref": "#/definitions/basicEmailType"
        },
        "hasAttachment": {
          "description": "Indicates whether the email was sent with an attachment (true) or not (false).",
          "type": "boolean"
        },
        "messageId": {
          "description": "Global ID of the email message from the external system.",
          "$ref": "#/definitions/stringLength100"
        },
        "subject": {
          "description": "The subject line of the email.",
          "$ref": "#/definitions/stringLength200"
        },
        "toAddress": {
          "description": "A collection of email addresses for recipients who were sent the email message",
          "$ref": "#/definitions/basicEmailListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "emailType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "enrollment": {
      "description": "Response object for fetching profile enrollment from external system.",
      "type": "object",
      "properties": {
        "enrollmentInfo": {
          "description": "Type contains profile enrollment information.",
          "$ref": "#/definitions/profileEnrollmentType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "enrollmentMatchProfiles": {
      "description": "Response object to fetch match profiles for enrollment.",
      "type": "object",
      "properties": {
        "enrollmentMatchProfilesDetail": {
          "description": "Type contains detail information regarding match profiles.",
          "$ref": "#/definitions/enrollmentMatchProfilesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "enrollmentMatchProfilesType": {
      "description": "Provide match profile details for enrollment.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/profileEnrollmentType"
      }
    },
    "enrollmentPaymentDetailsType": {
      "description": "Payment details to enrolll profile to the membership program.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Amount/Fee to enroll to membership Program.",
          "type": "number"
        },
        "amountCode": {
          "description": "Code of Amount/Fee to enroll to membership Program.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "comments": {
          "description": "Payment Comments.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "paymentDate": {
          "description": "The date of Payment for enrollment to membership program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "paymentMethod": {
          "description": "Indicate which method of payment will be used for enrollment to membership program.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "enrollmentTypeType": {
      "description": "The type of external system that the guest is enrolling in, such as Loyalty, Gaming or Activities.",
      "type": "string",
      "enum": [
        "Gaming",
        "Loyalty",
        "Activities"
      ]
    },
    "errorInstance": {
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "title": "Error Instance Details",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "errorType": {
      "description": "Standard way to indicate that an error occurred during the processing of an message. If the message successfully processes, but there are business errors, those errors should be passed in the warning element.",
      "type": "object",
      "properties": {
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nodeList": {
          "description": "An XPath expression that selects all the nodes whose data caused this error. Further, this expression should have an additional contraint which contains the data of the node. This will provide the offending data back to systems that cannot maintain the original message.",
          "type": "string"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string"
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string"
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string"
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "errorsType": {
      "description": "An error that occurred during the processing of a message.",
      "type": "array",
      "maxItems": 99,
      "items": {
        "$ref": "#/definitions/errorType"
      }
    },
    "exceptionDetailType": {
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "title": "Error Detail",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "exportLogsDeliveryStatusType": {
      "description": "Delivery Status for export logs - Not Delivered.",
      "type": "string",
      "enum": [
        "Unknown",
        "Delivered",
        "Notdelivered"
      ]
    },
    "extendMemberPointsToExpire": {
      "description": "Request object to extend a member points to expire.",
      "type": "object",
      "properties": {
        "expirationDate": {
          "description": "Expiration date to be extended.",
          "type": "string",
          "format": "date"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "membershipId": {
          "description": "Unique Membership ID.",
          "type": "number"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "externalReferenceType": {
      "description": "This type contains unique information of external reference.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique ID of external reference.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "ID context for external reference.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "externalReferencesType": {
      "description": "This type contains unique information of external reference.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/externalReferenceType"
      }
    },
    "fBAInfoType": {
      "description": "FBA ( Flexible Benefits Awards ) related fields.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Award's FBA amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "fbaBillGenDate": {
          "description": "Business date of the FBA bill generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "flexibleBenefitAward": {
          "description": "Indicates if this certificate is a Flexible Benefit Award certificate.",
          "type": "boolean"
        },
        "monetaryValue": {
          "description": "Award's FBA monetary values.",
          "type": "number"
        },
        "orphanCertificate": {
          "description": "Indicates whether the certificate is Orphan or not.",
          "type": "boolean"
        },
        "posted": {
          "description": "Indicates whether FBA has been posted.",
          "type": "boolean"
        },
        "postedAmount": {
          "description": "Award's FBA posted amount.",
          "type": "number"
        },
        "postingBusinessDate": {
          "description": "Business date of the FBA posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingDateTime": {
          "description": "Date and time of the FBA posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reimburseAllowed": {
          "description": "Marks if the certificate is eligible for reimbursement.",
          "type": "boolean"
        },
        "reimbursed": {
          "description": "Indicates whether FBA has been reimbursed.",
          "type": "boolean"
        },
        "reimbursedAmount": {
          "description": "Award's FBA reimbursed amount.",
          "type": "number"
        },
        "reimbursementBusinessDate": {
          "description": "Business date of the FBA reimbursement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reimbursementDateTime": {
          "description": "Date and time of the FBA reimbursement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "resettleAllowed": {
          "description": "Marks if the certificate is eligible for resettlement",
          "type": "boolean"
        },
        "settled": {
          "description": "Indicates whether FBA has been settled.",
          "type": "boolean"
        },
        "settlementBusinessDate": {
          "description": "Business date of the FBA settlement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "settlementDateTime": {
          "description": "Date and time of the FBA settlement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "status": {
          "description": "Possible FBA statuses.",
          "$ref": "#/definitions/fBAStatusType"
        }
      }
    },
    "fBAStatusType": {
      "description": "Flexible benefit award has been reimbursed.",
      "type": "string",
      "enum": [
        "Ordered",
        "Attached",
        "Posted",
        "Settled",
        "Reimbursed"
      ]
    },
    "facilityCodeType": {
      "description": "Facility Housekeeping Code, its description and quantity.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Facility code value.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Facility Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "quantity": {
          "description": "Signifies the quantity.",
          "type": "integer"
        }
      }
    },
    "facilityCodesType": {
      "description": "List of the facility codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/facilityCodeType"
      }
    },
    "facilityTaskType": {
      "description": "Information regarding facility task on a reservation.",
      "type": "object",
      "properties": {
        "date": {
          "description": "The Date on which the task is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "supplies": {
          "description": "Supplies associated with the task.",
          "$ref": "#/definitions/facilityCodesType"
        },
        "task": {
          "description": "The Task Code.",
          "$ref": "#/definitions/housekeepingTaskCodeType"
        }
      }
    },
    "fixedChargeDetailType": {
      "description": "Fixed charge amount could be specified by flat fee or be a percentage of the rate amount.",
      "type": "object",
      "properties": {
        "article": {
          "description": "Holds related article code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "chargeAmount": {
          "description": "Price of the product.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "Percentage of the rate amount.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "quantity": {
          "description": "Quantity of the product.",
          "type": "integer"
        },
        "roomNights": {
          "description": "Holds number of comp or cash room night to allocate.",
          "type": "integer"
        },
        "supplement": {
          "description": "Additional information regarding the fixed charge.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transaction": {
          "description": "Transaction code and description of a fixed charge.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "fixedChargeFrequencyType": {
      "description": "Yearly.",
      "type": "string",
      "enum": [
        "O",
        "D",
        "W",
        "M",
        "Q",
        "Y"
      ]
    },
    "fixedChargeScheduleType": {
      "description": "Holds schedule of fixed charge.",
      "type": "object",
      "properties": {
        "dateToExecute": {
          "description": "Date of when to execute yearly fixed charge. Applicable when frequency is Yearly.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "dayToExecute": {
          "description": "Day of when to execute fixed charge. Applicable when frequency is Daily or Weekly.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency of a fixed charge.",
          "$ref": "#/definitions/fixedChargeFrequencyType"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "fixedChargeType": {
      "description": "Holds fixed charge information.",
      "type": "object",
      "properties": {
        "charge": {
          "description": "Holds specific details of fixed charge.",
          "$ref": "#/definitions/fixedChargeDetailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "schedule": {
          "description": "Holds schedule of fixed charge.",
          "$ref": "#/definitions/fixedChargeScheduleType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "fixedChargesType": {
      "description": "Holds fixed charge detail.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fixedChargeType"
      }
    },
    "folioStatusType": {
      "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
      "type": "string",
      "enum": [
        "Deposit",
        "Void",
        "Ok",
        "Zero",
        "Compress",
        "Converted",
        "Internal"
      ]
    },
    "folioTextsType": {
      "description": "This stores the description for the type of tax calculation especially with tax exemption, etc.",
      "type": "array",
      "maxItems": 2,
      "items": {
        "type": "object",
        "properties": {
          "row": {
            "description": "Row number of the additional text.",
            "type": "integer"
          },
          "text": {
            "description": "Additional text field to display on the folio.",
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          }
        }
      }
    },
    "forecastsInformation": {
      "type": "object",
      "properties": {
        "forecastsInformation": {
          "description": "Account Forecast details to be created.",
          "$ref": "#/definitions/accountForecastsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "forgetProfileFailureReasonListType": {
      "description": "Reason describing why the profile is not eligible to be forgotten.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/forgetProfileFailureReasonType"
      }
    },
    "forgetProfileFailureReasonType": {
      "description": "Provides information about the reason why the profile is not eligible to be forgotten.",
      "type": "object",
      "properties": {
        "expectedResolutionDate": {
          "description": "Expected resolution date for this reason.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reasonCode": {
          "description": "Code representing the reason why the profile is not eligible to be forgotten.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonDescription": {
          "description": "Reason describing why the profile is not eligible to be forgotten.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "forgetProfileResultListType": {
      "description": "Result of processing/validation for forgetting a profile.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/forgetProfileResultType"
      }
    },
    "forgetProfileResultType": {
      "description": "Results of Anonymization processing/validation.",
      "type": "object",
      "properties": {
        "canBeForgotten": {
          "description": "Indicates if the profile is eligible to be anonymized.",
          "type": "boolean"
        },
        "failureReasons": {
          "description": "Collection of reasons describing why the profile is not eligible to be anonymized.",
          "$ref": "#/definitions/forgetProfileFailureReasonListType"
        },
        "profileId": {
          "description": "Unique Identifier for OPERA Profile.",
          "$ref": "#/definitions/profileId"
        },
        "status": {
          "description": "Anonymization Status of the Guest Profile.",
          "$ref": "#/definitions/anonymizationStatusType"
        }
      }
    },
    "forgetProfilesCriteria": {
      "description": "Operation to validate profiles for forgetting.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "validateForgetProfilesCriteria": {
          "description": "Criteria to identify the profiles to be validated for forgetting.",
          "$ref": "#/definitions/forgetProfilesCriteriaType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "forgetProfilesCriteriaType": {
      "description": "Criteria to identify the profiles to be forgotten.",
      "type": "object",
      "properties": {
        "profiles": {
          "description": "Collection of Unique Identifiers of profiles to be forgotten.",
          "$ref": "#/definitions/profiles"
        }
      }
    },
    "formattedTextTextType": {
      "description": "Provides text and indicates whether it is formatted or not.",
      "type": "object",
      "properties": {
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "fulfillmentExportInfoType": {
      "description": "This type holds the export log information for the membership fulfillment record.",
      "type": "object",
      "properties": {
        "deliveryStatus": {
          "description": "The Delivery Status for export logs will default to \"Unknown.\"(Unknown/Delivered/NotDelivered).",
          "$ref": "#/definitions/exportLogsDeliveryStatusType"
        },
        "excludeExtract": {
          "description": "To exclude the extract record from membership exports. Once the membership export has run, this check box will be grayed out and the extract batch Id will be populated in the Extract Batch Id read-only field.",
          "type": "boolean"
        },
        "extractBatchId": {
          "description": "Export run will populate the Extract Batch Id in export logs.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "extractCode": {
          "description": "ExtractCode of the membership fulfillment export logs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "extractDate": {
          "description": "ExtractDate of the membership fulfillment export logs.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "extractId": {
          "description": "ExtractId of Membership Extracts.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "extractLogId": {
          "description": "Unique Id that references an object uniquely in the fulfillment export logs table.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "membershipCard": {
          "description": "The card number for the guest membership.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "membershipId": {
          "description": "Id Number of the membership.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "fulfillmentExportLogsType": {
      "description": "This type holds the export log information for the membership fulfillment record.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fulfillmentExportInfoType"
      }
    },
    "fulfillmentExportedLogs": {
      "description": "Optional elements whether to update exclude extract or delivery status in membership fulfillment",
      "type": "object",
      "properties": {
        "fulfillmentExportLogs": {
          "description": "This type holds list of export logs information for the membership fulfillment .",
          "$ref": "#/definitions/fulfillmentExportLogsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "futureListType": {
      "description": "A collection of reservation history details attached to Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : Future reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "futurePastBookings": {
      "description": "This is the Response Message to information regarding existence of profile in future and/or past business blocks and/or reservations.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "response": {
          "description": "response - whether there are future and/or past business blocks or reservations for the profile.",
          "type": "boolean"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "futurePastBookingsCriteria": {
      "description": "Request for information regarding existence of profile in future and/or past business blocks and/or reservations.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to determine if search should be restricted to future and/or past business blocks and/or reservations, restricted to rate code, or restricted to exclude a given list of reservations and/or blocks.",
          "$ref": "#/definitions/hasFuturePastBookingsSearchType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "gdsNegotiatedInfoType": {
      "description": "This provides information for a channel negotiated rate.",
      "type": "object",
      "properties": {
        "accessCode": {
          "description": "The GDS negotiated rate code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "inactive": {
          "description": "The GDS Negotiated Rate is inactive or not",
          "type": "boolean"
        },
        "order": {
          "description": "The sell order.",
          "type": "integer"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "gdsNegotiatedType": {
      "description": "This holds a list of GdsNegotiatedInfoType.",
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "description": "Booking Channel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelRatePlanCode": {
          "description": "Channel Room Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "gdsNegotiatedInfoList": {
          "description": "List of channel negotiated rates for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/gdsNegotiatedInfoType"
          }
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "generateMembershipNumberCriteriaType": {
      "description": "Auto generate membership number criteria.",
      "type": "object",
      "properties": {
        "membershipType": {
          "description": "Indicates the Membership Type where membership number to be generated will be based on.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "givenNameType": {
      "description": "Given name, first name or names",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "guest": {
      "description": "Request object for creation of guest/contact/employee profile. This object contains profile details with unique identifiers of a profile. The standard optional Opera Context element is also included.",
      "type": "object",
      "properties": {
        "externalReferences": {
          "description": "External Reference information for Profile.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "guestDetails": {
          "description": "Provides detailed information of a customer profile.",
          "$ref": "#/definitions/guestProfileType"
        },
        "guestIdList": {
          "description": "Unique identifiers of Profile for both internal and external systems.",
          "$ref": "#/definitions/profileIdList"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "guestHousekeepingServiceRequestType": {
      "description": "Possible values for the Guest Service Status.",
      "type": "string",
      "enum": [
        "DoNotDisturb",
        "MakeUpRoom",
        "NoStatusSelected"
      ]
    },
    "guestLastStayInfoType": {
      "description": "Contains last stay related details of the guest.",
      "type": "object",
      "properties": {
        "lastStayDate": {
          "description": "Guest's last stay date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastStayRate": {
          "description": "The Rate amount of the guest's last stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "lastStayRoom": {
          "description": "Room Number where the guest stayed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "totalStay": {
          "description": "The total number of previous stay of the guest.",
          "type": "integer"
        }
      }
    },
    "guestProfileType": {
      "description": "Type provides the detailed information about the profile and its children.",
      "type": "object",
      "properties": {
        "addresses": {
          "description": "List of customer addresses.",
          "type": "object",
          "properties": {
            "addressInfo": {
              "description": "Collection of Detailed information on an address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/addressInfoType"
              }
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "cashiering": {
          "description": "Contains cashiering related details for the profile",
          "$ref": "#/definitions/profileCashieringType"
        },
        "comments": {
          "description": "List of Notes for the customer.",
          "type": "object",
          "properties": {
            "commentInfo": {
              "description": "Collection of Detailed information on comments for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/commentInfoType"
              }
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "commissionInfoList": {
          "description": "Contains commission related details for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/profileCommissionType"
          }
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "customer": {
          "description": "Detailed customer information for this profile.",
          "$ref": "#/definitions/customerType"
        },
        "eCertificates": {
          "description": "E-Certificate associated with the profile.",
          "$ref": "#/definitions/eCertificatesType"
        },
        "eligibleForFiscalFolio": {
          "description": "Eligible for Fiscal Folio/Payload generation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "gdsNegotiatedRates": {
          "description": "List of channel negotiated rates that this profile has been assigned to.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "gdsNegotiatedRate": {
              "description": "Collection of Detailed information on channel negotiated rates for the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/gdsNegotiatedType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "hasCommission": {
          "description": "Populates true if the profile has commission configured false otherwise.",
          "type": "boolean"
        },
        "influenceCode": {
          "description": "Influence Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "inheritedNegRates": {
          "description": "Flag to indicate if the negotiated rates are inherited from master profile. Flag is available only when the profile is linked to master profile and master profile has negotiated rate codes attached.",
          "type": "boolean"
        },
        "keywords": {
          "description": "List of customer keywords.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "keyword": {
              "description": "Collection of keywords attached to the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/keywordType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastStayInfo": {
          "description": "Information on last stay of the profile.",
          "$ref": "#/definitions/lastStayInfoType"
        },
        "localizationGuestType": {
          "description": "Localization Guest Type associated to the profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "mailingActions": {
          "description": "Contains collection of mailing action list associated with the profile",
          "$ref": "#/definitions/mailingActionsType"
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this profile as recently accessed.",
          "type": "boolean"
        },
        "markForHistory": {
          "description": "\"true\" setting marks the profile to be kept from being purged, once the profile is marked inactive.",
          "type": "boolean"
        },
        "negotiatedRates": {
          "description": "List of profile negotiated rates.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "negotiatedRate": {
              "description": "Collection of Detailed information on profile negotiated rates.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/negotiatedType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "ownerCode": {
          "description": "Owner Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "preferenceCollection": {
          "description": "List of customer preferences.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "preferenceType": {
              "description": "Collection of Detailed information on preferences of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/preferenceTypeType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "privacyInfo": {
          "description": "Contains privacy related information associated with the profile",
          "$ref": "#/definitions/privacyInfoType"
        },
        "profileAccessType": {
          "description": "Detailed information on access type associated with the profile.",
          "$ref": "#/definitions/profileAccessType"
        },
        "profileImage": {
          "description": "The profile image.",
          "$ref": "#/definitions/imageSetType"
        },
        "profileIndicators": {
          "description": "Indicators of additional information attached to the profile",
          "$ref": "#/definitions/indicatorsType"
        },
        "profileMemberships": {
          "description": "List of loyalty program(s) the profile is subscribed to.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "profileMembership": {
              "description": "Collection of Detailed information on memberships for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileMembershipType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "profileRestrictions": {
          "description": "Detailed information on restrictions associated with the profile.",
          "$ref": "#/definitions/profileRestrictions"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Employee or Contact.",
          "$ref": "#/definitions/guestProfileTypeType"
        },
        "protectedBy": {
          "description": "What level this profile is protected.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "registeredProperty": {
          "description": "Hotel which this profile is registered with. This attribute is not used for configuration.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "relationships": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "relationship": {
              "description": "A collection of the profiles that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "requestForHotel": {
          "description": "Hotel which this profile is to be registered. This attribute is only used during creation of profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "salesInfo": {
          "description": "Sales information of the profiles.",
          "$ref": "#/definitions/salesInfoType"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "subscriptions": {
          "description": "List of profile subscriptions.",
          "$ref": "#/definitions/profileSubscriptionListType"
        },
        "taxInfo": {
          "description": "Profile information about tax.",
          "$ref": "#/definitions/profileTaxInfoType"
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "traceCode": {
          "description": "Trace Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "uRLs": {
          "description": "List of Information on a URL for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "uRLInfo": {
              "description": "Collection of Detailed information on web url/address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/uRLInfoType"
              }
            }
          }
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "webUserAccounts": {
          "description": "List of Web User Accounts of the profile.",
          "$ref": "#/definitions/webUserAccountsType"
        }
      }
    },
    "guestProfileTypeType": {
      "description": "The types of Profile handled by the web service.",
      "type": "string",
      "enum": [
        "Guest",
        "Employee",
        "Contact"
      ]
    },
    "hasFuturePastBookingsExclusionsType": {
      "description": "Search type for excluding list of business blocks and/or reservations.",
      "type": "object",
      "properties": {
        "blockIdList": {
          "description": "List of Unique identifier of business block.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "reservationIdList": {
          "description": "List of unique identifier of reservation.",
          "$ref": "#/definitions/uniqueIDListType"
        }
      }
    },
    "hasFuturePastBookingsSearchType": {
      "description": "Search type for verifying whether there are future and/or past business blocks and/or reservations exist for a Profile.",
      "type": "object",
      "properties": {
        "exclusions": {
          "description": "Search to exclude list of reservations and/or business blocks.",
          "$ref": "#/definitions/hasFuturePastBookingsExclusionsType"
        },
        "profileIdList": {
          "description": "Unique identifier of the profile to be searched.",
          "$ref": "#/definitions/profileIdList"
        },
        "rateCode": {
          "description": "Unique identifier of the rate code of business block or reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "searchFor": {
          "description": "Search for active or past.",
          "type": "string",
          "enum": [
            "Active",
            "Past"
          ]
        },
        "searchIn": {
          "description": "Search in business blocks or reservations.",
          "type": "string",
          "enum": [
            "Block",
            "Reservation"
          ]
        }
      }
    },
    "historyListType": {
      "description": "A collection of reservation history details attached to Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "hotelInterfaceStatusType": {
      "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
      "type": "string",
      "enum": [
        "Stopped",
        "Running",
        "Waiting",
        "StopInitiated",
        "StartInitiated",
        "RebootInitiated",
        "Other"
      ]
    },
    "hotelInterfaceType": {
      "type": "object",
      "properties": {
        "activeFlag": {
          "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "interfaceName": {
          "description": "Name of the Hotel Interface",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "interfaceType": {
          "description": "Three letter code for each interface that identifies the interface.",
          "$ref": "#/definitions/hotelInterfaceTypeType"
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "machineName": {
          "description": "Unique machine name of the running IFC.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "status": {
          "description": "The current status of the IFC.",
          "$ref": "#/definitions/hotelInterfaceStatusType"
        }
      }
    },
    "hotelInterfaceTypeType": {
      "description": "XML Posting Interface",
      "type": "string",
      "enum": [
        "Bms",
        "Cas",
        "Ccw",
        "Dls",
        "Eft",
        "Exp",
        "Mak",
        "Mbs",
        "Msc",
        "Pbx",
        "Pos",
        "Svs",
        "Tik",
        "Vid",
        "Vms",
        "Www",
        "Xml"
      ]
    },
    "hotelStayType": {
      "description": "Type provides the hotel stay information.",
      "type": "object",
      "properties": {
        "arrivalDate": {
          "description": "Guest arrival date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotelName": {
          "description": "Hotel Name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "pointsMiles": {
          "description": "Points or Miles.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "pointsMilesEarned": {
          "description": "Guest stay points or miles earned",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "hotelStaysType": {
      "description": "Detailed information of the hotel stay.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelStayType"
      }
    },
    "housekeepingRoomStatusType": {
      "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
      "type": "string",
      "enum": [
        "Clean",
        "Dirty",
        "Pickup",
        "Inspected",
        "OutOfOrder",
        "OutOfService"
      ]
    },
    "housekeepingTaskCodeType": {
      "description": "Information related to a Task Code. Task Codes are used to generate task sheets in Rooms Management.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The Code for the task.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Task Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "facilityDepartureTask": {
          "description": "Indicates if this task code is the default departure task for Facility Tasks. This requires",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property where this task code is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "instructions": {
          "description": "Instructions for this Task Code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "sequence": {
          "description": "Ordering sequence for display.",
          "type": "integer"
        }
      }
    },
    "iATAInfoType": {
      "description": "IATA Information of the profile.",
      "type": "object",
      "properties": {
        "iATACompany": {
          "description": "IATA Company Detail.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "iATAConsortia": {
          "description": "IATA Consortia.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "iATAValidationResult": {
          "description": "IATA Validation Result.",
          "type": "boolean"
        }
      }
    },
    "identificationInfoType": {
      "description": "Information on the identification of the customer.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "identification": {
          "description": "Detailed information on the identification of the customer.",
          "$ref": "#/definitions/identificationType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "identificationType": {
      "description": "Identification information of the customer.",
      "type": "object",
      "properties": {
        "expirationDate": {
          "description": "Expiration date of Identification.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "idNumber": {
          "description": "Identification Number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idNumberMasked": {
          "description": "Masked Identification Number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idType": {
          "description": "Identification Type. Eg Passport, Driving License etc.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "issuedCountry": {
          "description": "The country where Identification was issued.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "issuedDate": {
          "description": "Issued date of Identification.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "issuedPlace": {
          "description": "The place where Identification was issued.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "registeredProperty": {
          "description": "Property where the identification belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "imageSetType": {
      "description": "Represents on image set record.",
      "type": "object",
      "properties": {
        "chainCode": {
          "description": "The image set chain code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "The image set description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "The image set hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "imageOrder": {
          "description": "The image set order.",
          "type": "integer"
        },
        "imageSet": {
          "description": "The image set name.",
          "type": "string",
          "maxLength": 800,
          "minLength": 0
        },
        "imageStyle": {
          "description": "The image set enumerated style.",
          "$ref": "#/definitions/imageStyleType"
        },
        "imageType": {
          "description": "The image set type.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "imageURL": {
          "description": "The image set URL.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "sequenceId": {
          "description": "The image set sequence ID.",
          "type": "integer"
        },
        "website": {
          "description": "The image set website.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "imageStyleType": {
      "description": "An enumeration of image styles.",
      "type": "string",
      "enum": [
        "Full",
        "Thumbnail",
        "Icon",
        "Square",
        "Banner",
        "Button",
        "Lowres",
        "Highres"
      ]
    },
    "indicatorType": {
      "description": "Lamp indicator Type.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        },
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "indicatorsType": {
      "description": "Collection of lamp indicators.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "instanceLink": {
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "type": "object",
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ],
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "interfaceRightsStatusType": {
      "type": "object",
      "properties": {
        "category": {
          "description": "Category code of this interface right.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "description": {
          "description": "User defined description for an Interface Right.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "right": {
          "description": "Internal code for each allowed right of a Hotel Interface record.",
          "type": "integer"
        },
        "statusCode": {
          "description": "User defined code for an Interface Right.",
          "type": "string",
          "maxLength": 5,
          "minLength": 0
        }
      }
    },
    "keywordDetailType": {
      "type": "object",
      "properties": {
        "newKeyword": {
          "description": "The new keyword value.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "keywordType": {
      "type": "object",
      "properties": {
        "keyword": {
          "description": "The keyword value.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "keywordDetail": {
          "description": "The keyword new value, in case keyword value is modified.",
          "$ref": "#/definitions/keywordDetailType"
        },
        "type": {
          "description": "The type of keyword",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "lastStayInfoType": {
      "description": "Contains last stay related details for the profile",
      "type": "object",
      "properties": {
        "lastRate": {
          "description": "Used to hold last rate information for the profile.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "lastRoom": {
          "description": "Used to hold last room information for the profile.",
          "type": "string"
        },
        "lastVisit": {
          "description": "Used to hold last stay information for the profile.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "totalStay": {
          "description": "The total number of previous stay of the profile.",
          "type": "integer"
        }
      }
    },
    "linkedProfiles": {
      "description": "Response of fetch set of linked Profiles to the requested Profile.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "profileSummaries": {
          "description": "Linked profile's summary information.",
          "$ref": "#/definitions/profileSummariesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "mailingActionsType": {
      "description": "Defines mailing action list for the profile.",
      "type": "object",
      "properties": {
        "active": {
          "description": "When true indicates that profile has subscribed to the mailing list.",
          "type": "boolean"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "mailingAction": {
          "description": "Defines mailing action code and description.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "mailingPreferencesType": {
      "description": "Indicates guest's mailing preferences.",
      "type": "object",
      "properties": {
        "eFolio": {
          "description": "Defines if an E-Folio is required.",
          "type": "boolean"
        },
        "mailings": {
          "description": "Defines mailings only.",
          "type": "boolean"
        }
      }
    },
    "marketCodeInfoType": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketGroup": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "masterAccountInfoType": {
      "type": "object",
      "properties": {
        "masterAccountId": {
          "description": "Unique ID of the Master account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "masterAccountName": {
          "description": "Name of the Master account.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "masterInfoCodeDetailType": {
      "type": "string",
      "enum": [
        "LongDescription",
        "ShortDescription"
      ]
    },
    "masterInfoType": {
      "type": "object",
      "properties": {
        "codeInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeInfoType"
          }
        },
        "codeType": {
          "$ref": "#/definitions/masterType"
        }
      }
    },
    "masterType": {
      "type": "string",
      "enum": [
        "Country",
        "State",
        "AddressType",
        "PhoneType",
        "RateCategory",
        "CalculationRule",
        "PostingRythym",
        "BillingInstruction",
        "TransactionCode",
        "DisplaySet",
        "MailingActions",
        "DistanceType",
        "District",
        "Territory",
        "FiscalRegion",
        "InventoryItem",
        "Package",
        "RoomFeaturePreference",
        "SpecialPreference",
        "Promotion",
        "Department",
        "ReservationPreference",
        "FacilityTask",
        "RoomType",
        "RateCode",
        "OutOfOrderReason",
        "Block"
      ]
    },
    "matchProfileType": {
      "description": "Provides information for match profile.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code for the profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "profileIdList": {
          "description": "Unique identifiers of the Profile for both internal and external systems.",
          "$ref": "#/definitions/profileIdList"
        },
        "statusCode": {
          "description": "Status of the match profile.",
          "$ref": "#/definitions/matchStatusType"
        }
      }
    },
    "matchStatusType": {
      "description": "No Match found based on the Threshold.",
      "type": "string",
      "enum": [
        "MatchFoundMerge",
        "MatchFoundCreate",
        "TentativeMatchFound",
        "MatchNotFound"
      ]
    },
    "matchedProfiles": {
      "description": "Response object for the match profiles.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "matchProfiles": {
          "description": "A collection of match profiles.",
          "$ref": "#/definitions/matchProfileType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "memberAwardActionType": {
      "description": "Specify whether award is to issue, cancel or update.",
      "type": "string",
      "enum": [
        "Issue",
        "Cancel",
        "InfoUpdate"
      ]
    },
    "memberAwardDetailType": {
      "description": "Details related to member award like award type, stay date, rate code, etc.",
      "type": "object",
      "properties": {
        "actionType": {
          "description": "Award issue , cancel or update action.",
          "$ref": "#/definitions/memberAwardActionType"
        },
        "actualCancelPoints": {
          "description": "Actual number of cancel points.",
          "type": "integer"
        },
        "awardBasedOn": {
          "description": "Indicates if award is a Stay, Package Element or other.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "awardCancellationNo": {
          "description": "Unique ID for the award cancellation if cancelled.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "awardProductId": {
          "description": "Unique ID for the award product if issued.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "awardType": {
          "description": "The award type or code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "awardVoucherNo": {
          "description": "Award Voucher Number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "cancelPenaltyCharge": {
          "description": "Number points deducted if award is cancelled.",
          "type": "integer"
        },
        "cancelPenaltyDays": {
          "description": "Number days before arrival to apply penalty for cancellation.",
          "type": "integer"
        },
        "cancelPenaltyPoints": {
          "description": "Number of penalty points if cancelled.",
          "type": "integer"
        },
        "cancelPenaltyType": {
          "description": "Type of cancel penalty like Points, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cancelPolicyType": {
          "description": "Type of cancel policy.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "exchangeRateType": {
          "description": "Exchange Rate Type for the Currency Exchange.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "fromRoomType": {
          "description": "Room type label before the upgrade in case of an upgrade award.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "If the award detail is inactive.",
          "type": "boolean"
        },
        "numberOfNights": {
          "description": "Number of nights cancel policy is applicable.",
          "type": "integer"
        },
        "pointsRequired": {
          "description": "Points required for the stay date.",
          "type": "integer"
        },
        "product": {
          "description": "Product code for which the award was issued, in case of a product award.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "rateCode": {
          "description": "Rate code associated with the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "redeemedCentralAmount": {
          "description": "Redeemed Central Amount on bill in External System Currency.",
          "type": "number"
        },
        "redeemedLocalAmount": {
          "description": "Redeemed Local Amount on bill in Hotel Currency.",
          "type": "number"
        },
        "roomType": {
          "description": "Room type label associated with the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "stayDate": {
          "description": "Date of stay.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "toRoomType": {
          "description": "Room type label after the upgrade for an upgrade award.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "totalCentralAmount": {
          "description": "Total Central Amount on bill in External System Currency.",
          "type": "number"
        },
        "totalLocalAmount": {
          "description": "Total Local Amount on bill in Hotel Currency.",
          "type": "number"
        },
        "transactionCode": {
          "description": "The Payment Transaction Code for which the Surcharge Applies.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        }
      }
    },
    "memberAwardDetailsType": {
      "description": "Details related to member award per stay date.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/memberAwardDetailType"
      }
    },
    "memberAwardProcessType": {
      "description": "Processing type of the award like Actual , Projected or Inactive.",
      "type": "string",
      "enum": [
        "Actual",
        "Projected",
        "Inactive"
      ]
    },
    "memberAwardType": {
      "type": "object",
      "properties": {
        "actualCancelPoints": {
          "description": "Actual number of cancel points.",
          "type": "integer"
        },
        "adults": {
          "description": "Number of adults associated with the reservation.",
          "type": "integer"
        },
        "awardPoints": {
          "description": "Points associated with the award.",
          "type": "integer"
        },
        "awardProcessType": {
          "description": "Processing type of the award like Actual , Projected or Inactive.",
          "$ref": "#/definitions/memberAwardProcessType"
        },
        "cancelPointsReturn": {
          "description": "Number of cancel points returned.",
          "type": "integer"
        },
        "expiryPoints": {
          "description": "Points that will expire.",
          "type": "integer"
        },
        "hotelId": {
          "description": "Property associated with the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "memberAwardDetails": {
          "description": "Details related to member award per stay date.",
          "$ref": "#/definitions/memberAwardDetailsType"
        },
        "memberPointsAfter": {
          "description": "Member points after award transaction.",
          "type": "integer"
        },
        "memberPointsBefore": {
          "description": "Member points before award transaction.",
          "type": "integer"
        },
        "membershipCardNo": {
          "description": "The card number associated with this membership.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "membershipLevel": {
          "description": "The current level of the membership.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipType": {
          "description": "The type of the membership.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems.",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationIdList": {
          "description": "Unique identifiers for the Reservation like Confirmation Number.",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationTimeSpan": {
          "description": "Arrival and Departure dates of the reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "sourceCode": {
          "description": "To specify where the business came from e.g. radio, newspaper ad, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "memberInfoDetailsType": {
      "type": "object",
      "properties": {
        "awardBasePoints": {
          "description": "Total base points of the award.",
          "type": "integer"
        },
        "awardBonusPoints": {
          "description": "Total bonus points of the award.",
          "type": "integer"
        },
        "awardMiscPoints": {
          "description": "Total miscellaneous points of the award.",
          "type": "integer"
        },
        "guestTotalNights": {
          "description": "Total nights of the guest.",
          "type": "integer"
        },
        "guestTotalStay": {
          "description": "STotal stays of the guest.",
          "type": "integer"
        },
        "membershipTotalNights": {
          "description": "Total Nights of the membership.",
          "type": "integer"
        },
        "membershipTotalStay": {
          "description": "Total Stay of the membership.",
          "type": "integer"
        },
        "tierBaseNights": {
          "description": "Tier Base Nights Points.",
          "type": "integer"
        },
        "tierBaseRevenue": {
          "description": "Tier Base Revenue Points.",
          "type": "number"
        },
        "tierBaseStay": {
          "description": "Tier Base Stay Points.",
          "type": "integer"
        },
        "tierBonusNights": {
          "description": "Tier Bonus Nights Points.",
          "type": "integer"
        },
        "tierBonusRevenue": {
          "description": "Tier Bonus Revenue Points.",
          "type": "number"
        },
        "tierBonusStay": {
          "description": "Tier Bonus Stay Points.",
          "type": "integer"
        },
        "totalAwardPoints": {
          "description": "Total points of the award.",
          "type": "integer"
        }
      }
    },
    "memberInfoRSType": {
      "type": "object",
      "properties": {
        "memberInfoDetails": {
          "description": "Points and stay details of the membership.",
          "$ref": "#/definitions/memberInfoDetailsType"
        },
        "memberInfoRangeDetails": {
          "description": "Points and stay details for the membership range.",
          "$ref": "#/definitions/memberInfoDetailsType"
        },
        "nextTierPoints": {
          "description": "Points required for next tier of membership.",
          "type": "integer"
        },
        "pointsAvailable": {
          "description": "Points available for the member.",
          "type": "integer"
        }
      }
    },
    "memberInfoType": {
      "description": "Contains details of the membership transaction processing status, provided by the airline.",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "First Name of the guest that this record corresponds to",
          "$ref": "#/definitions/givenNameType"
        },
        "lastName": {
          "description": "Last Name of the guest that this record corresponds to",
          "$ref": "#/definitions/surnameType"
        },
        "membershipId": {
          "description": "Membership Card Number",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "membershipType": {
          "description": "Membership Program Code or Membership Type",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        }
      }
    },
    "memberInformation": {
      "description": "Response object for member info.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "memberInfo": {
          "$ref": "#/definitions/memberInfoRSType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "memberPointToExpireType": {
      "description": "Information related to a member point to expire.",
      "type": "object",
      "properties": {
        "awardGenerationMethod": {
          "description": "The method of award generation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "extend": {
          "description": "Indicates if the points is extendable.",
          "type": "boolean"
        },
        "pointsExpiryDate": {
          "description": "The date when the member future award points will expire.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "pointsToExpire": {
          "description": "Displays the total number of points that will expire on the expiration date.",
          "type": "integer"
        },
        "previousPointsToExpire": {
          "description": "Displays the number of points that are relevant for extension. Points that were already extended from the previous year are not considered for extension.",
          "type": "integer"
        }
      }
    },
    "memberPointsSummaryType": {
      "description": "Member Points Summary.",
      "type": "object",
      "properties": {
        "availablePoints": {
          "description": "Total Points Available.",
          "$ref": "#/definitions/transactionSummaryAttributeType"
        },
        "nextTierPoints": {
          "description": "Points required for the next Level.",
          "$ref": "#/definitions/transactionSummaryAttributeType"
        }
      }
    },
    "memberPointsToExpire": {
      "description": "Response object for fetching member points to expire information.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "memberPointsToExpireList": {
          "description": "Collection of member points to expire.",
          "$ref": "#/definitions/memberPointsToExpireListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "memberPointsToExpireListType": {
      "description": "List of of member points to expire.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/memberPointToExpireType"
      }
    },
    "memberTransactionRecentSummaryType": {
      "description": "Itemized information related to a membership transactions summary.",
      "type": "object",
      "properties": {
        "awardPoints": {
          "description": "Summary of transactions associated with award points.",
          "$ref": "#/definitions/memberTransactionSummaryAwardPointsType"
        },
        "guestStays": {
          "description": "Summary of transactions associated with guest stays.",
          "$ref": "#/definitions/memberTransactionSummaryGuestStaysType"
        },
        "tierPoints": {
          "description": "Summary of transactions associated with tier points.",
          "$ref": "#/definitions/memberTransactionSummaryTierPointsType"
        },
        "years": {
          "description": "Range in Years.",
          "type": "integer"
        }
      }
    },
    "memberTransactionSummaryAwardPointsType": {
      "description": "Items summary associated with award points.",
      "type": "object",
      "properties": {
        "basePoints": {
          "description": "Total number of base award points for the requested membership transaction ID.",
          "$ref": "#/definitions/transactionSummaryAttributeType"
        },
        "bonusPoints": {
          "description": "If a membership points transaction involves bonus points, the total number of bonus points.",
          "$ref": "#/definitions/transactionSummaryAttributeType"
        },
        "miscPoints": {
          "description": "If a membership points transaction involves points imported into ORS from a third-party system, the total number of points.",
          "$ref": "#/definitions/transactionSummaryAttributeType"
        },
        "totalPoints": {
          "description": "The total number of award points.",
          "$ref": "#/definitions/transactionSummaryAttributeType"
        }
      }
    },
    "memberTransactionSummaryGuestStaysType": {
      "description": "Items summary associated with guest stays.",
      "type": "object",
      "properties": {
        "nights": {
          "description": "Total number of nights for the requested membership transaction ID.",
          "$ref": "#/definitions/transactionSummaryAttributeType"
        },
        "stays": {
          "description": "Total number of stays for the requested membership transaction ID.",
          "$ref": "#/definitions/transactionSummaryAttributeType"
        }
      }
    },
    "memberTransactionSummaryTierPointsType": {
      "description": "Items summary associated with Tier points.",
      "type": "object",
      "properties": {
        "baseNights": {
          "description": "Total number of base nights tier points for the requested membership transaction ID.",
          "$ref": "#/definitions/transactionSummaryAttributeType"
        },
        "baseRevenue": {
          "description": "Total number of base revenue tier points for the requested membership transaction ID.",
          "$ref": "#/definitions/transactionSummaryAttributeType"
        },
        "baseStay": {
          "description": "Total number of base stay tier points for the requested membership transaction ID.",
          "$ref": "#/definitions/transactionSummaryAttributeType"
        },
        "bonusNights": {
          "description": "Total number of bonus nights tier points for the requested membership transaction ID.",
          "$ref": "#/definitions/transactionSummaryAttributeType"
        },
        "bonusRevenue": {
          "description": "Total number of bonus revenue tier points for the requested membership transaction ID.",
          "$ref": "#/definitions/transactionSummaryAttributeType"
        },
        "bonusStay": {
          "description": "Total number of bonus stay tier points for the requested membership transaction ID.",
          "$ref": "#/definitions/transactionSummaryAttributeType"
        },
        "totalNights": {
          "description": "Total number of nights tier points for the requested membership transaction ID.",
          "$ref": "#/definitions/transactionSummaryAttributeType"
        },
        "totalStays": {
          "description": "Total number of stays tier points for the requested membership transaction ID.",
          "$ref": "#/definitions/transactionSummaryAttributeType"
        }
      }
    },
    "memberTransactionSummaryType": {
      "description": "Itemized information related to a membership transactions summary.",
      "type": "object",
      "properties": {
        "awardPoints": {
          "description": "Summary of transactions associated with award points.",
          "$ref": "#/definitions/memberTransactionSummaryAwardPointsType"
        },
        "guestStays": {
          "description": "Summary of transactions associated with guest stays.",
          "$ref": "#/definitions/memberTransactionSummaryGuestStaysType"
        },
        "tierPoints": {
          "description": "Summary of transactions associated with tier points.",
          "$ref": "#/definitions/memberTransactionSummaryTierPointsType"
        }
      }
    },
    "membership": {
      "description": "Request object for create membership. This object contains unique identifiers for each profile and list of membership details to be created. The standard optional Opera Context element is also included.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "profileMemberships": {
          "description": "Detailed information of membership related to the profile",
          "type": "array",
          "items": {
            "$ref": "#/definitions/profileMembershipType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "membershipAwardAvailabilityType": {
      "description": "Details of Member Award Type. Awards will be available for redemption of award points associated with a particular member.",
      "type": "object",
      "properties": {
        "otherInfo": {
          "description": "Information related to Other Award.",
          "$ref": "#/definitions/otherAvailabilityType"
        },
        "productInfo": {
          "description": "Information related to Product based Award.",
          "$ref": "#/definitions/productAvailabilityType"
        },
        "rateInfo": {
          "description": "Information related to Rate based Award.",
          "$ref": "#/definitions/rateAvailabilityType"
        },
        "upgradeInfo": {
          "description": "Information related to Upgrade based Award.",
          "$ref": "#/definitions/upgradeAvailabilityType"
        }
      }
    },
    "membershipAwardBasedOnType": {
      "description": "This award allows a guest to apply available membership points towards the balance of his or her bill.",
      "type": "string",
      "enum": [
        "Rate",
        "Product",
        "Upgrade",
        "Other",
        "Ft"
      ]
    },
    "membershipAwardExportInfo": {
      "description": "Response object to fetch members information for Fulfillment house processing.",
      "type": "object",
      "properties": {
        "exportInfo": {
          "description": "Collection of member information.",
          "$ref": "#/definitions/membershipAwardsExportType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "membershipAwardExportType": {
      "description": "Types holds the details of Member.",
      "type": "object",
      "properties": {
        "awardNumber": {
          "description": "Award Number to identify member's information.",
          "type": "number"
        },
        "recipientInfo": {
          "description": "Recipient information.",
          "$ref": "#/definitions/membershipAwardRecipientInfoType"
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        }
      }
    },
    "membershipAwardListType": {
      "description": "Information related to Member Award Issue List.",
      "type": "object",
      "properties": {
        "actualCancelPoints": {
          "description": "The number of points actually deducted from the member's total award points if there is a penalty points restriction associated with the award cancellation.",
          "type": "number"
        },
        "arrivalDate": {
          "description": "The arrival date of the stay for when the award is associated.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "awardBasedOn": {
          "description": "Indicates if the Award is based on RATE, PRODUCT,UPGRADE,FT or OTHER.",
          "$ref": "#/definitions/membershipAwardBasedOnType"
        },
        "awardCancelDate": {
          "description": "If the reservation associated with the award was cancelled, the reservation cancellation date appears here.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "awardCancellationNumber": {
          "description": "If the award was cancelled, the system-generated award cancellation number appears here.",
          "type": "integer"
        },
        "awardCode": {
          "description": "Code assigned to this membership award.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "awardNumber": {
          "description": "An identifying number of the award, assigned by the system when the award was issued.",
          "type": "number"
        },
        "awardPoints": {
          "description": "Number of points required by the award.",
          "type": "number"
        },
        "awardSource": {
          "description": "The source for the reservation associated with the award.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "bookingNumber": {
          "description": "Reservation confirmation number.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "calculatedCancelPoints": {
          "description": "Total calculated points to cancel an issued award.",
          "type": "number"
        },
        "cancelDays": {
          "description": "The cancel days, set up in awards configuration that establishes the number of days before arrival when a reservation may be cancelled without an award points penalty.",
          "type": "integer"
        },
        "cancelMemberStatementID": {
          "description": "If this award was included on a statement, the cancel member statement ID appears here. The field is blank if the award has not yet been reported on a statement",
          "type": "integer"
        },
        "cancelPenaltyPoints": {
          "description": "The award points that will be deducted (based on a cancel days restriction) if the award is cancelled. (Cancel days, set up in awards configuration, and establish the number of days before arrival when a reservation may be cancelled without an award points penalty.)",
          "type": "integer"
        },
        "cancelPolicyType": {
          "description": "Type of cancel policy.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cancelStatementID": {
          "description": "If this award was included on a statement, the cancel statement ID appears here. The field is blank if the award has not yet been reported on a statement",
          "type": "integer"
        },
        "crsBookNo": {
          "description": "Indicates CRS Booking Number.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "dateAwarded": {
          "description": "Date when the award was issued",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "departureDate": {
          "description": "The date of the departure of the reservation associated with the award. There may be more than one date (multiple nights) associated with award",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDate": {
          "description": "Expiry date on the Card.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotelBookingNumber": {
          "description": "Property Reservation number.",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property at which the award was issued.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "joinDate": {
          "description": "Joined date on the Card.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "memberStatementId": {
          "description": "If this award was included on a statement, the member statement ID appears here. The field is blank if the award has not yet been reported on a statement",
          "type": "integer"
        },
        "membershipCardNo": {
          "description": "Indicates Membership Card Number.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "membershipId": {
          "description": "Card number of the membership.",
          "type": "number"
        },
        "membershipLevel": {
          "description": "Level of this Membership Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipType": {
          "description": "Membership type for which awards are defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "numberOfNights": {
          "description": "Number of nights cancel policy is applicable.",
          "type": "integer"
        },
        "pmsResvNo": {
          "description": "Indicates PMS Reservation Number.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "product": {
          "description": "Indicates the Product associated with the award.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "Rate plan code associated with the award.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationCancellationNumber": {
          "description": "If the reservation associated with the award was cancelled, the reservation cancellation number appears here.",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "statementId": {
          "description": "If this award was included on a statement, the statement ID appears here. The field is blank if the award has not yet been reported on a statement",
          "type": "integer"
        },
        "stayDate": {
          "description": "The date of the reservation associated with the award. There may be more than one date (multiple nights) associated with award",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "thresholdPoints": {
          "description": "Indicates member is below the threshold limit or not to request award.",
          "type": "number"
        },
        "totalAvailablePoints": {
          "description": "Total award points available for redemption.",
          "type": "number"
        }
      }
    },
    "membershipAwardPointByHotelType": {
      "description": "Award points information group by Hotel.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Award points issued at Property level.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "totalPoints": {
          "description": "Sum of total positive and negative points.",
          "type": "number"
        }
      }
    },
    "membershipAwardPointsByHotel": {
      "description": "Response object for fetching member award points by Hotel.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "membershipAwardPoints": {
          "description": "Collection of member award points list.",
          "$ref": "#/definitions/membershipAwardPointsByHotelType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "membershipAwardPointsByHotelType": {
      "description": "List of available award points information by Hotel.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/membershipAwardPointByHotelType"
      }
    },
    "membershipAwardPointsType": {
      "description": "Details associated with award points.",
      "type": "object",
      "properties": {
        "basePoints": {
          "description": "Total number of base award points for a membership points transaction.",
          "type": "integer"
        },
        "bonusPoints": {
          "description": "If a membership points transaction involves bonus points, the total number of bonus points.",
          "type": "integer"
        },
        "miscPoints": {
          "description": "If a membership points transaction involves points imported into ORS from a third-party system, the total number of points.",
          "type": "integer"
        },
        "pointsExpiryDate": {
          "description": "The date until points are eligible for redemption based on membership type configuration.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "ruleCode": {
          "description": "Rule Code for award points.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "totalPoints": {
          "description": "The total number of award points.",
          "type": "integer"
        }
      }
    },
    "membershipAwardRecipientInfoType": {
      "description": "Type holds details of member.",
      "type": "object",
      "properties": {
        "addressInfo": {
          "description": "Member's Mailing Address infomation.",
          "$ref": "#/definitions/addressInfoType"
        },
        "companyName": {
          "description": "It returns a Company Name,If the member is associated with a company.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "memberInfo": {
          "description": "Member Name.",
          "$ref": "#/definitions/profileNameType"
        },
        "phoneNumber": {
          "description": "Phone Number.",
          "$ref": "#/definitions/phoneNumberType"
        }
      }
    },
    "membershipAwardsAvailabilityType": {
      "description": "List of available awards information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/membershipAwardAvailabilityType"
      }
    },
    "membershipAwardsExportType": {
      "description": "List of member's information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/membershipAwardExportType"
      }
    },
    "membershipAwardsListType": {
      "description": "List of Member Awards information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/membershipAwardListType"
      }
    },
    "membershipClaim": {
      "description": "Request object for creating membership claim.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "membershipClaimDetails": {
          "$ref": "#/definitions/membershipClaimDetailsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "membershipClaimDetailsType": {
      "description": "Detailed information of a claim.",
      "type": "object",
      "properties": {
        "activityLog": {
          "description": "Contains summary information of the claim.",
          "$ref": "#/definitions/claimActivityLogListType"
        },
        "approvalStatus": {
          "description": "Filter claims by approved or rejected status.",
          "$ref": "#/definitions/claimApprovalStatusType"
        },
        "callerInformation": {
          "description": "More information related to call that help to resolve the claim..",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "callerName": {
          "description": "Name of the person placing the claim. This name may be different from the name on the membership card.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "claimDate": {
          "description": "Date the claim was made.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "claimNo": {
          "description": "Unique ID Number assigned to the claim when the claim was created.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "claimPoints": {
          "description": "Membership claims award points and tier points.",
          "$ref": "#/definitions/claimAdjustmentPointsType"
        },
        "claimStatus": {
          "description": "Status of the claim.(Open, Closed, Pending Review, Waiting for Manager, etc.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "claimType": {
          "description": "Type of user-definable claim such as New Card, Stay, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "closeDate": {
          "description": "If the status is closed, the date the claim was closed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "comments": {
          "description": "Additional comments or steps taken to resolve the claim..",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "membership": {
          "description": "Membership Type details.",
          "$ref": "#/definitions/claimMembershipType"
        },
        "origin": {
          "description": "Origin of the membership claim. User definable values like Email, Fax, Phone Call, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "owner": {
          "description": "User who is assigned to handle this claim.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "profileId": {
          "description": "Profile ID of the membership holder.",
          "$ref": "#/definitions/profileId"
        },
        "recordType": {
          "description": "Record type of the claim.",
          "$ref": "#/definitions/claimRecordType"
        },
        "replyBy": {
          "description": "The date, if any, by which a response to the caller was promised.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservation": {
          "description": "Reservation or Stay information for the claim.",
          "$ref": "#/definitions/claimReservationInfoType"
        },
        "source": {
          "description": "Source of the claim. This will be either OCIS, OPMS or WEB.",
          "$ref": "#/definitions/claimSourceType"
        },
        "submitter": {
          "description": "User who entered this claim.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        }
      }
    },
    "membershipClaimSummaryListType": {
      "description": "Contains summary information of the claim.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/membershipClaimSummaryType"
      }
    },
    "membershipClaimSummaryType": {
      "description": "Summary information of a claim.",
      "type": "object",
      "properties": {
        "activityLog": {
          "description": "Contains summary information of the claim.",
          "$ref": "#/definitions/claimActivityLogListType"
        },
        "approvalStatus": {
          "description": "Filter claims by approved,rejected or pending status.",
          "$ref": "#/definitions/claimApprovalStatusType"
        },
        "arrival": {
          "description": "Arrival date for the stay associated with this claim.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "callerInformation": {
          "description": "More information related to call that help to resolve the claim..",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "callerName": {
          "description": "Name of the person placing the claim. This name may be different from the name on the membership card.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "claimDate": {
          "description": "Date the claim was made.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "claimNo": {
          "description": "Unique ID Number assigned to the claim when the claim was created.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "claimStatus": {
          "description": "Status of the claim.(Open, Closed, Pending Review, Waiting for Manager, etc.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "claimType": {
          "description": "Type of user-definable claim such as New Card, Stay, etc.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "closeDate": {
          "description": "If the status is closed, the date the claim was closed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "confirmationNo": {
          "description": "List of reservation confirmation or reference numbers associated with this claim. Like PMS reservation number, Central(ORS) booking number.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "departure": {
          "description": "Departure date for the stay associated with this claim.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotelId": {
          "description": "Property where the stay took place.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Indicates membership card number of the guest.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "number"
        },
        "membershipType": {
          "description": "Membership Type code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "origin": {
          "description": "Origin of the membership claim. User definable values like Email, Fax, Phone Call, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "owner": {
          "description": "User who is assigned to handle this claim.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "profileId": {
          "description": "Unique ID of the profile.",
          "$ref": "#/definitions/profileId"
        },
        "recordType": {
          "description": "Record type of the claim.",
          "$ref": "#/definitions/claimRecordType"
        },
        "replyBy": {
          "description": "The date, if any, by which a response to the caller was promised.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "source": {
          "description": "Source of the claim. This will be either OCIS, OPMS or WEB.",
          "$ref": "#/definitions/claimSourceType"
        },
        "submitter": {
          "description": "User who entered this claim.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        }
      }
    },
    "membershipClaims": {
      "description": "Response object for fetching membership claims.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "membershipClaimsDetail": {
          "description": "A collection of membership claims.",
          "$ref": "#/definitions/membershipClaimSummaryListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "membershipDetailsType": {
      "description": "Details about a membership like ProfileID, Card Number, Type, Level, etc.",
      "type": "object",
      "properties": {
        "cardExpirationDate": {
          "description": "Membership card expiration date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "joinedDate": {
          "description": "Date when the member enrolled for the membership.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "membershipCardNo": {
          "description": "The card number associated with this membership.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "membershipId": {
          "description": "Unique identifier of this membership.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "membershipLevel": {
          "description": "The current level of the membership.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipType": {
          "description": "The type of the membership.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "name": {
          "description": "The profile name associated with this membership.",
          "type": "string",
          "maxLength": 128,
          "minLength": 0
        },
        "profileId": {
          "description": "The profile to which this membership is associated with.",
          "$ref": "#/definitions/profileId"
        }
      }
    },
    "membershipEarningPreferenceType": {
      "description": "The earning preference of a membership, it depends on the type of property. eg. when the property is a airline it should be Miles, other than Points.",
      "type": "string",
      "enum": [
        "Points",
        "Miles"
      ]
    },
    "membershipInfoType": {
      "description": "The Membership object identifies the frequent customer reward program.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The account identification number for this particular member in this particular program.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "bonusCode": {
          "description": "The code or name of the bonus program. BonusCode can be used to indicate the level of membership (Gold Club, Platinum member, etc.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Membership ID (Unique ID from the memberships table).",
          "type": "number"
        },
        "membershipLevel": {
          "description": "The code or name of the membership level and indicates the level of membership (Gold Club, Platinum member, etc.). This is same as the BonusCode.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipLevelDesc": {
          "description": "The description of the Bonus Code.(Platinum for code P)",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "membershipTypeDesc": {
          "description": "The description of the ProgramCode.(Delta Previlige for code DP)",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "programCode": {
          "description": "The code or name of the membership program ('Hertz', 'AAdvantage', etc.).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "membershipIssueAwards": {
      "description": "Response object for fetching member issued award list.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "membershipAwardsList": {
          "description": "Collection of member award list.",
          "$ref": "#/definitions/membershipAwardsListType"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "membershipNumber": {
      "description": "Request object for generating membership number.",
      "type": "object",
      "properties": {
        "generateMembershipNumberCriteria": {
          "description": "Generate Membership Number criteria.",
          "$ref": "#/definitions/generateMembershipNumberCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "membershipPointsCalculationProcessType": {
      "description": "Issuing awards for guests belonging to a membership type, with a specific award code that is of Other type.",
      "type": "string",
      "enum": [
        "CalculatePoints",
        "ExpirePoints",
        "IssueAwards"
      ]
    },
    "membershipPointsCalculationType": {
      "description": "Details needed for calculating membership points.",
      "type": "object",
      "properties": {
        "awardCode": {
          "description": "Award Code to be used to generate awards for the membership type. Available for Automatic Generation of Awards (Issue Awards) only.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "calculateUntilDate": {
          "description": "The last date for which calculate or expire points. Available for Calculate Points and Expire Award Points only.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "membershipType": {
          "description": "Membership type for which point calculation process is to be run.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "processType": {
          "description": "Points Calculation Process Type.",
          "$ref": "#/definitions/membershipPointsCalculationProcessType"
        }
      }
    },
    "membershipPointsToCalculate": {
      "description": "Request to run membership points calculation job.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "membershipPointsCalculation": {
          "description": "Membership point calculation details needed to run job.",
          "$ref": "#/definitions/membershipPointsCalculationType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "membershipStatisticsSummaryType": {
      "description": "Totals of the each of the points.",
      "type": "object",
      "properties": {
        "awardPoints": {
          "description": "Total of the award points from all the transactions.",
          "type": "integer"
        },
        "pointsCost": {
          "description": "Total of the Points Cost from all the transactions.",
          "type": "integer"
        },
        "tierNightPoints": {
          "description": "Total of the Tier Night points from all the transactions.",
          "type": "integer"
        },
        "tierRevenuePoints": {
          "description": "Total of the Tier Revenue points from all the transactions.",
          "type": "integer"
        },
        "tierStayPoints": {
          "description": "Total of the Tier Stay points from all the transactions.",
          "type": "integer"
        }
      }
    },
    "membershipStatisticsType": {
      "description": "List of membership transactions and the summary of the different total points statistics.",
      "type": "object",
      "properties": {
        "cardNumber": {
          "description": "The membership card number.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "level": {
          "description": "The level of the membership.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "statisticsSummary": {
          "description": "Totals summary of the several points.",
          "$ref": "#/definitions/membershipStatisticsSummaryType"
        },
        "transactions": {
          "description": "Activity or a transaction related to the Membership.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/membershipTransactionSummaryType"
          }
        },
        "type": {
          "description": "The type of membership.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "membershipTierPointsType": {
      "description": "Collection of the tier points.",
      "type": "object",
      "properties": {
        "nightPoints": {
          "description": "Sum of the base night and bonus night points.",
          "type": "integer"
        },
        "pointsCost": {
          "description": "Points Cost.",
          "type": "integer"
        },
        "pointsCreditDate": {
          "description": "Date when points were created.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "revenuePoints": {
          "description": "Sum of the base revenue and bonus revenue points.",
          "type": "integer"
        },
        "stayPoints": {
          "description": "Sum of the base stay and bonus stay points.",
          "type": "integer"
        }
      }
    },
    "membershipTierProjectionType": {
      "description": "Membership Upgrade/Downgrade Projection.",
      "type": "object",
      "properties": {
        "downgrade": {
          "description": "Information regarding member's possible downgrades.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "upgrade": {
          "description": "Upgrade information which includes member's next tier level requirements for next upgrade.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        }
      }
    },
    "membershipTierProjections": {
      "description": "Response object for fetching Membership Tier Process Text.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "membershipTierProjection": {
          "description": "Membership tier upgrade/downgrade projection.",
          "$ref": "#/definitions/membershipTierProjectionType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "membershipTransaction": {
      "description": "Response object for fetching a membership transaction.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "membershipTransactionDetails": {
          "description": "Membership transaction details for the requested membership transaction ID.",
          "$ref": "#/definitions/membershipTransactionType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "membershipTransactionDetailsType": {
      "description": "Detailed information related to a membership transaction.",
      "type": "object",
      "properties": {
        "adjustment": {
          "description": "Indicates if the transaction was created as an adjustment.",
          "type": "boolean"
        },
        "averageRateAmount": {
          "description": "The average cost of the room per night.",
          "type": "number"
        },
        "awardPoints": {
          "description": "Details if this transaction is associated with award points.",
          "$ref": "#/definitions/membershipAwardPointsType"
        },
        "baseBillingGroup": {
          "description": "Base billing group the points belong to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "billingGroup": {
          "description": "Billing group the points belong to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bonusBillingGroup": {
          "description": "Bonus billing group the points belong to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bookedRoomLabel": {
          "description": "The booked room type for this transaction.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "currency": {
          "description": "The property currency at the originating PMS.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "exception": {
          "description": "Indicates if the transaction was flagged as an exception.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property from which the membership stay information was received.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "memberStatementId": {
          "description": "Member statement batch ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "membershipTransactionId": {
          "description": "Unique identifier associated with the membership transaction.",
          "$ref": "#/definitions/membershipTransactionId"
        },
        "notes": {
          "description": "Notes associated with this transaction.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "pointsCalculated": {
          "description": "Indicates if the points have been calculated on this transaction.",
          "type": "boolean"
        },
        "pointsCost": {
          "description": "The total cost associated with points earned by this transaction.",
          "type": "integer"
        },
        "pointsCreditDate": {
          "description": "For adjustments, the date when the points are to be credited.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "processingMessages": {
          "description": "Messages generated by the system during points calculation.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "profilePromotions": {
          "description": "Promotion code assigned on reservation.",
          "$ref": "#/definitions/codeListType"
        },
        "ratePromotion": {
          "description": "Promotion code assigned on reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationIdList": {
          "description": "Unique reservation identifiers associated with this transaction like PMS Confirmation Number and CRS Booking Number.",
          "$ref": "#/definitions/reservationIdList"
        },
        "roomLabel": {
          "description": "The room type for this transaction.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "statementId": {
          "description": "Statement batch ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "stayTimeSpan": {
          "description": "Arrival and Departure date for the stay.",
          "$ref": "#/definitions/timeSpanType"
        },
        "tierPoints": {
          "description": "Details if this transaction is associated with tier points.",
          "$ref": "#/definitions/membershipTransactionTierPointsType"
        },
        "transactionDate": {
          "description": "The date when the points were calculated.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionType": {
          "description": "The type of membership points transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "membershipTransactionExceptionComputePointsType": {
      "description": "Options to compute award and tier points for membership transaction exception.",
      "type": "object",
      "properties": {
        "awardBasePoints": {
          "description": "Indicates if membership transaction exception should be created for base award points.",
          "type": "boolean"
        },
        "awardBonusPoints": {
          "description": "Indicates if membership transaction exception should be created for bonus award points.",
          "type": "boolean"
        },
        "tierPointsBaseNights": {
          "description": "Indicates if membership transaction exception should be created for base tier points for the night.",
          "type": "boolean"
        },
        "tierPointsBaseRevenue": {
          "description": "Indicates if membership transaction exception should be created for base tier points for the revenue.",
          "type": "boolean"
        },
        "tierPointsBaseStay": {
          "description": "Indicates if membership transaction exception should be created for base tier points for the stay.",
          "type": "boolean"
        },
        "tierPointsBonusNights": {
          "description": "Indicates if membership transaction exception should be created for tier bonus points for the night.",
          "type": "boolean"
        },
        "tierPointsBonusRevenue": {
          "description": "Indicates if membership transaction exception should be created for tier bonus points for the revenue.",
          "type": "boolean"
        },
        "tierPointsBonusStay": {
          "description": "Indicates if membership transaction exception should be created for tier bonus points for the stay.",
          "type": "boolean"
        }
      }
    },
    "membershipTransactionExceptionType": {
      "description": "Details about a membership like ProfileID, Card Number, Type, Level, etc.",
      "type": "object",
      "properties": {
        "averageRate": {
          "description": "The average rate of the stay.",
          "type": "number"
        },
        "awardBasePoints": {
          "description": "The total number of base award points for this membership points transaction.",
          "type": "number"
        },
        "awardBonusPoints": {
          "description": "Indicates if this transaction involves bonus points, The total number of bonus points.",
          "type": "number"
        },
        "backToBack": {
          "description": "Indicates if back to back membership transaction exceptions have occurred or not.",
          "type": "string",
          "maxLength": 2,
          "minLength": 0
        },
        "cardExpirationDate": {
          "description": "Membership card expiration date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "computedPoints": {
          "description": "Information to compute award and tier points for membership transaction exception.",
          "$ref": "#/definitions/membershipTransactionExceptionComputePointsType"
        },
        "exceptionType": {
          "description": "Indicates the type of Exception like Exception not resolved,Points Rejected on Exception etc.,",
          "type": "integer"
        },
        "fromToRangeDate": {
          "description": "Arrival and Departure date of stay for which you are displaying membership transaction exceptions.",
          "$ref": "#/definitions/dateRangeType"
        },
        "hotelId": {
          "description": "Hotel code of the membership transaction exceptions.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "joinedDate": {
          "description": "Date when the member enrolled for the membership.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "membershipCardNo": {
          "description": "The card number associated with this membership.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "membershipId": {
          "description": "Unique identifier of this membership.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "membershipLevel": {
          "description": "The current level of the membership.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipTransactionId": {
          "description": "Unique identifier associated with the membership transaction.",
          "$ref": "#/definitions/membershipTransactionId"
        },
        "membershipType": {
          "description": "The type of the membership.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "name": {
          "description": "The profile name associated with this membership.",
          "type": "string",
          "maxLength": 128,
          "minLength": 0
        },
        "pointsCalculate": {
          "description": "Points Calculated value(Y/N) for the selected transaction.",
          "type": "boolean"
        },
        "processingMessages": {
          "description": "The systems records and notes identifying the exception criteria.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "profileId": {
          "description": "The profile to which this membership is associated with.",
          "$ref": "#/definitions/profileId"
        },
        "reservationNumber": {
          "description": "Any reference like reservation no etc against which the certificate was consumed.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "roomsBooked": {
          "description": "If multiple room membership transaction exceptions occurred, the number of rooms booked.(MR)",
          "type": "integer"
        },
        "tierPoints": {
          "description": "Details if this transaction is associated with tier points.",
          "$ref": "#/definitions/membershipTransactionTierPointsType"
        },
        "tierStays": {
          "description": "Tier stay points associated with this membership points transaction.",
          "type": "number"
        },
        "totalAwardPoints": {
          "description": "Award points associated with this membership points transaction.",
          "type": "number"
        },
        "totalNights": {
          "description": "Tier night points associated with this membership points transaction.",
          "type": "number"
        },
        "totalPoints": {
          "description": "The total number of award points associated with this transaction.",
          "type": "number"
        },
        "totalRevenue": {
          "description": "Tier revenue points associated with this membership points transaction.",
          "type": "number"
        },
        "userNotes": {
          "description": "Notes regarding the resolution of the membership transaction exception or for any other reason.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        }
      }
    },
    "membershipTransactionExceptions": {
      "description": "Response object for fetching membership transaction exceptions.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "memberTransactionExceptions": {
          "description": "A collection of membership transaction exceptions.",
          "$ref": "#/definitions/membershipTransactionExceptionsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "membershipTransactionExceptionsType": {
      "description": "Contains Membership transaction exception information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/membershipTransactionExceptionType"
      }
    },
    "membershipTransactionId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "membershipTransactionInfoType": {
      "description": "Specific details regarding the transaction.",
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "Code type of the type of currency.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Resort of the transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nights": {
          "description": "Total nights.",
          "type": "integer"
        },
        "reservationIdList": {
          "description": "The different reservation related ids. e.g. ResvNameId, ConfirmationNo or from an unknown PMS system.",
          "$ref": "#/definitions/reservationIdList"
        },
        "stay": {
          "description": "Total stay.",
          "type": "integer"
        },
        "stayTimeSpan": {
          "description": "Begin and end dates of the reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "transactionDate": {
          "description": "Membership Transaction Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionType": {
          "description": "Membership Transaction Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "membershipTransactionRateType": {
      "description": "Information related to a membership transaction rate.",
      "type": "object",
      "properties": {
        "centralRateAmount": {
          "description": "Indicates the Central rate amount in central currency.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "currency": {
          "description": "Indicates the Property currency code.",
          "type": "string"
        },
        "fromDate": {
          "description": "Indicates start date of the reservation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "marketCode": {
          "description": "Indicates the Market code linked to rate code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "pMSRateAmount": {
          "description": "Indicates the Rate code amount in the property currency.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "rateCode": {
          "description": "Indicates the Rate code used in the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "toDate": {
          "description": "Indicates end date of the reservation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "membershipTransactionRatesType": {
      "description": "Summary of rate details of current transaction associated with the stay.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "rate": {
          "description": "Details of rate for the current points transaction.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/membershipTransactionRateType"
          }
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "membershipTransactionRevenueType": {
      "description": "Information related to a membership transactions Revenue.",
      "type": "object",
      "properties": {
        "centralRevenue": {
          "description": "Indicates the Total central revenue Accrued.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "date": {
          "description": "Indicates the Date when the revenue was recognized.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "pMSRevenue": {
          "description": "Indicates the Total PMS Revenue accrued.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "qualified": {
          "description": "Indicates if the stay is qualified for points calculation.",
          "type": "boolean"
        },
        "revenueType": {
          "description": "Indicates the Revenue type associated to Revenue.",
          "type": "string"
        }
      }
    },
    "membershipTransactionRevenuesType": {
      "description": "Summary of stay details for current transaction.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "revenue": {
          "description": "Details on stay details for current point transaction.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/membershipTransactionRevenueType"
          }
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "membershipTransactionSummaryType": {
      "description": "Details regarding a transaction of a profile membership.",
      "type": "object",
      "properties": {
        "awardPoints": {
          "description": "Award Points.",
          "type": "integer"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "pointsCalculated": {
          "description": "Flag to indicate if points are calculated.",
          "type": "boolean"
        },
        "tierPoints": {
          "description": "Collection of tier points.",
          "$ref": "#/definitions/membershipTierPointsType"
        },
        "transactionInfo": {
          "description": "Transaction type fields.",
          "$ref": "#/definitions/membershipTransactionInfoType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "userName": {
          "description": "User who inserted or updated the record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "membershipTransactionTierPointsType": {
      "description": "Details associated with tier points.",
      "type": "object",
      "properties": {
        "baseNights": {
          "description": "Total number of base nights tier points for a membership points transaction.",
          "type": "integer"
        },
        "baseRevenue": {
          "description": "Total number of base revenue tier points for a membership points transaction.",
          "type": "integer"
        },
        "baseStay": {
          "description": "Total number of base stay tier points for a membership points transaction.",
          "type": "integer"
        },
        "bonusNights": {
          "description": "The total number of bonus nights tier points.",
          "type": "integer"
        },
        "bonusRevenue": {
          "description": "The total number of bonus revenue tier points.",
          "type": "integer"
        },
        "bonusStay": {
          "description": "The total number of bonus stay tier points.",
          "type": "integer"
        }
      }
    },
    "membershipTransactionType": {
      "description": "Detailed transaction information related to a membership.",
      "type": "object",
      "properties": {
        "membershipDetails": {
          "description": "Membership details for the requested membership transaction ID.",
          "$ref": "#/definitions/membershipDetailsType"
        },
        "membershipTransactionDetails": {
          "description": "Membership transaction details for the requested membership transaction ID.",
          "$ref": "#/definitions/membershipTransactionDetailsType"
        }
      }
    },
    "membershipTransactionsSummary": {
      "description": "Response object for fetching member point totals information.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "membershipDetails": {
          "description": "Member details for the requested membership ID.",
          "$ref": "#/definitions/membershipDetailsType"
        },
        "pointsSummary": {
          "description": "Member points summary for the requested membership ID.",
          "$ref": "#/definitions/memberPointsSummaryType"
        },
        "recentTransactionsSummary": {
          "description": "Member transaction Summary(Range) for the requested membership ID.",
          "$ref": "#/definitions/memberTransactionRecentSummaryType"
        },
        "transactionsSummary": {
          "description": "Member transaction Summary for the requested membership ID.",
          "$ref": "#/definitions/memberTransactionSummaryType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "mergedProfileType": {
      "description": "Provides information for merged profile.",
      "type": "object",
      "properties": {
        "profile": {
          "description": "Provides detailed information regarding either a company or a customer profile.",
          "$ref": "#/definitions/profileType"
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        }
      }
    },
    "mergedProfilesSnapshotDetails": {
      "description": "Response object for fetching snapshot of merge profiles result.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "mergedProfileSnapshot": {
          "$ref": "#/definitions/mergedProfileType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "mergedStageProfileSnapshot": {
      "description": "Response object to fetch merge profile based on stage and opera profile.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "mergeStageProfile": {
          "$ref": "#/definitions/stagedProfileType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "namePrefixType": {
      "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "nameTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Agent",
        "Contact",
        "Source",
        "Group",
        "Employee",
        "Hotel",
        "Purge"
      ]
    },
    "negotiatedInfoType": {
      "description": "This provides information for a profile negotiated rate.",
      "type": "object",
      "properties": {
        "comissionCode": {
          "description": "Informational purposes only in numeric format.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "corporateAgreementId": {
          "description": "The master identifier for multiple offices/locations under the same company profile. This is optional",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "inactive": {
          "description": "Negotiated Rate is inactive or not",
          "type": "boolean"
        },
        "order": {
          "description": "The sell order.",
          "type": "integer"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "negotiatedType": {
      "description": "This holds a list of NegotiatedInfoType.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel code for the negotiated rate.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "negotiatedInfoList": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/negotiatedInfoType"
          }
        },
        "rateCode": {
          "description": "Rate plan code for the negotiated rate.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "numericUDFType": {
      "description": "Used to hold user defined field of Numeric Type. It is highly recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "description": "Name of user defined field.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "number"
        }
      }
    },
    "numericUDFsType": {
      "description": "Used to hold collection of user defined fields of Numeric Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/numericUDFType"
      }
    },
    "operaVersionNumberType": {
      "description": "Current Opera Version Number",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "otherAvailabilityType": {
      "description": "Information related to Other Award.",
      "type": "object",
      "properties": {
        "awardNumber": {
          "description": "An identifying number of the award, assigned by the system when the award was issued.",
          "type": "number"
        },
        "awardType": {
          "description": "Unique code that identifies this award.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "awardValue": {
          "description": "The actual value of the award, in the amount of currency.",
          "type": "number"
        },
        "longDescription": {
          "description": "Detail description of the award.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "pointsRequired": {
          "description": "The number of points that must be redeemed for this award.",
          "type": "number"
        },
        "sellBeginDate": {
          "description": "Beginning date of the award.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "sellEndDate": {
          "description": "End date that the award will be available.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "shortDescription": {
          "description": "Descriptive name of the award.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "totalAvailablePoints": {
          "description": "Total award points available for redemption.",
          "type": "number"
        }
      }
    },
    "overrideForecastTypeType": {
      "description": "Defines values for OverrideForecastType.",
      "type": "string",
      "enum": [
        "Default",
        "Override",
        "DoNotOverride"
      ]
    },
    "ownerType": {
      "description": "Generic type for information about an owner.",
      "type": "object",
      "properties": {
        "department": {
          "description": "Department to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "email": {
          "description": "Email information of the owner.",
          "$ref": "#/definitions/emailInfoType"
        },
        "hotel": {
          "description": "Hotel to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "name": {
          "description": "Provides name information of the owner.",
          "$ref": "#/definitions/personNameType"
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phone": {
          "description": "Information on the telephone number of the owner.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "primary": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        },
        "profileId": {
          "description": "Unique owner profile information.",
          "$ref": "#/definitions/profileId"
        },
        "relationship": {
          "description": "Relationship of the owner within the profile or block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "userId": {
          "description": "Unique application user ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "userName": {
          "description": "Unique application user name of the owner.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "ownersType": {
      "description": "Generic type for a list of owners.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/ownerType"
      }
    },
    "pMS_ResStatusType": {
      "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "type": "string",
      "enum": [
        "Reserved",
        "Requested",
        "NoShow",
        "Cancelled",
        "InHouse",
        "CheckedOut",
        "Waitlisted",
        "DueIn",
        "DueOut",
        "Walkin",
        "PendingCheckout"
      ]
    },
    "paragraphType": {
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "type": "object",
      "properties": {
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        }
      }
    },
    "payeeInfoType": {
      "description": "Payee information.",
      "type": "object",
      "properties": {
        "payeeAccountInfo": {
          "description": "AR account short info of the payee.",
          "$ref": "#/definitions/aRAccountShortInfoType"
        },
        "payeeAddress": {
          "description": "Address of the payee.",
          "$ref": "#/definitions/addressInfoType"
        },
        "payeeAddressCount": {
          "description": "Payee multiple address count.",
          "type": "integer"
        },
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeName": {
          "description": "Name of the payee.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "payeeReferenceCurrency": {
          "description": "Reference currency of the payee.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "payeeTaxNumber": {
          "description": "The tax number of the payee.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "personNameType": {
      "description": "This provides name information for a person.",
      "type": "object",
      "properties": {
        "envelopeGreeting": {
          "description": "Envelope Greeting of the profile",
          "type": "string"
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "nameTitleSuffix": {
          "description": "Title Suffix. Must be populated if ADVANCED_TITLE is on.",
          "type": "integer"
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        },
        "salutation": {
          "description": "Salutation of the profile",
          "type": "string"
        },
        "surname": {
          "description": "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "personNameTypeType": {
      "description": "Person's name in an external system.",
      "type": "string",
      "enum": [
        "Primary",
        "Alternate",
        "Incognito",
        "External",
        "Phonetic"
      ]
    },
    "phoneNumberType": {
      "description": "Phone number",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "pointsRejectionReasonType": {
      "description": "Information related to a Points Rejection Reason summary.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Indicates rule code for membership rule.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rejectionReason": {
          "description": "Indicates the reason the points were not awarded (e.g. Membership level requirements not met).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "rule": {
          "description": "Indicates membership rule.",
          "type": "string"
        }
      }
    },
    "pointsRejectionReasons": {
      "description": "Response object for fetching member transactions points rejection reasons information.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "pointsRejectionReason": {
          "description": "Details on rule and reason the points were not awarded for a given point transaction.",
          "$ref": "#/definitions/pointsRejectionReasonsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "pointsRejectionReasonsType": {
      "description": "Summary of reason points were not awarded for a given points transaction.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "pointsRejectionReason": {
          "description": "Details on rule and reason the points were not awarded for a given point transaction.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/pointsRejectionReasonType"
          }
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "pointsType": {
      "description": "The Redeem Points contains the number of points required to book a room type.",
      "type": "object",
      "properties": {
        "awardsType": {
          "description": "Awards type for the award type rate code.",
          "type": "string"
        },
        "points": {
          "description": "No of points required to book this Room Stay.",
          "type": "integer"
        }
      }
    },
    "preference": {
      "description": "Response object for fetch preference. This object contains collection of preferences,Success,Warnings and Errors related to this operation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "preferenceCollections": {
          "description": "Detailed information of preferences related to the profile",
          "type": "array",
          "items": {
            "$ref": "#/definitions/preferenceTypeType"
          }
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "preferenceType": {
      "description": "Guest Preference details for the profile.",
      "type": "object",
      "properties": {
        "copyToProfile": {
          "description": "Specifies whether to copy the reservation preference to the profile or not.",
          "type": "boolean"
        },
        "description": {
          "description": "Preference Description for display purposes.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "excludedPreferencesCount": {
          "description": "Specifies the count of preferences excluded for the attached reservation preference.",
          "type": "integer"
        },
        "global": {
          "description": "Whether this preference is property specific or not.",
          "type": "boolean"
        },
        "hotels": {
          "description": "If specified preference belongs to the Hotels listed, otherwise it is a global preference.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "preferenceCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferenceValue": {
          "description": "Preference value for display purposes.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "source": {
          "description": "Source of the preference.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "preferenceTypeType": {
      "description": "Preference details for the profile.",
      "type": "object",
      "properties": {
        "availableQuantity": {
          "description": "Available quantity of preferences (maximum quantity - Existing preferences)per preference group.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "maxQuantity": {
          "description": "Maximum quantity of preferences allowed per preference group.",
          "type": "integer"
        },
        "maxResortUsedQuantity": {
          "description": "Maximum quantity of preferences used by any resort per preference group.",
          "type": "integer"
        },
        "preference": {
          "description": "Collection of Preferences for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceType"
          }
        },
        "preferenceType": {
          "description": "Preference group code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferenceTypeDescription": {
          "description": "Preference group description.",
          "type": "string"
        },
        "reservationPreference": {
          "description": "Whether this preference is reservation preference or not.",
          "type": "boolean"
        },
        "sequence": {
          "description": "Preference Sequence.",
          "type": "string"
        }
      }
    },
    "primaryProfileInfoType": {
      "description": "Contains basic information of profile.",
      "type": "object",
      "properties": {
        "profileId": {
          "description": "Unique Identifier for OPERA Profile.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "profileName": {
          "description": "Name of the account.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "profileType": {
          "description": "Type of account such as Agent, Company, and Source.",
          "$ref": "#/definitions/profileTypeType"
        }
      }
    },
    "privacyInfoType": {
      "description": "Defines Privacy related information for the profile.",
      "type": "object",
      "properties": {
        "allowEmail": {
          "description": "Indicates if the profile wishes to allow Email.",
          "type": "boolean"
        },
        "allowPhone": {
          "description": "Indicates if the profile wishes to allow phone calls.",
          "type": "boolean"
        },
        "allowSMS": {
          "description": "Indicates if the profile wishes to allow SMS.",
          "type": "boolean"
        },
        "autoEnrollLoyaltyProgram": {
          "description": "Indicates if the profile wishes to be automatically enrolled in the property's loyalty program.",
          "type": "boolean"
        },
        "infoFromThirdParty": {
          "description": "Indicates if the profile is ok getting info from third parties.",
          "type": "boolean"
        },
        "lastPrivacyPromptDate": {
          "description": "Indicate the last privacy prompt date of the guest.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "marketResearchParticipation": {
          "description": "Indicates if the profile participates in market research.",
          "type": "boolean"
        },
        "optInAutoEnrollmentMember": {
          "description": "Indicates if the profile wishes to opt in for Auto Enrolment Member.",
          "type": "boolean"
        },
        "optInEmail": {
          "description": "Indicates if the profile wishes to opt in for Email.",
          "type": "boolean"
        },
        "optInMailingList": {
          "description": "Indicates if the profile wishes to opt in for Mailing List.",
          "type": "boolean"
        },
        "optInMarketResearch": {
          "description": "Indicates if the profile wishes to opt in for Market Research.",
          "type": "boolean"
        },
        "optInPhone": {
          "description": "Indicates if the profile wishes to opt in for Phone.",
          "type": "boolean"
        },
        "optInSms": {
          "description": "Indicates if the profile wishes to opt in for SMS.",
          "type": "boolean"
        },
        "optInThirdParty": {
          "description": "Indicates if the profile wishes to opt in for Third Party.",
          "type": "boolean"
        }
      }
    },
    "productAvailabilityType": {
      "description": "Member Award availability details based on chosen award types as Product,Rate,Upgrade,FT Payment and Other.",
      "type": "object",
      "properties": {
        "awardNumber": {
          "description": "An identifying number of the award, assigned by the system when the award was issued.",
          "type": "number"
        },
        "awardType": {
          "description": "Unique code that identifies this award.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "awardValidFrom": {
          "description": "The valid time period from when the award can be issued.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "awardValidTo": {
          "description": "The valid time to an issued award.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "cancelPenaltyCharge": {
          "description": "The cancel penalty charge.",
          "type": "number"
        },
        "cancelPenaltyDays": {
          "description": "Number of days before arrival when a reservation may be cancelled without an award points penalty.",
          "type": "number"
        },
        "cancelPenaltyPoints": {
          "description": "The award points that will be forfeited if the cancel penalty charge is applied.",
          "type": "number"
        },
        "cancelPenaltyType": {
          "description": "The penalty charge is either a percentage or a flat number of points.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "HotelCode where the award will be consumed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "packageCode": {
          "description": "Package/Product code for the award .",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "packageDescription": {
          "description": "Description of the product.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "pointsRequired": {
          "description": "The number of points that must be redeemed for this award.",
          "type": "number"
        },
        "rawIssueKey": {
          "description": "Issue key in format of Raw data.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "totalAvailablePoints": {
          "description": "Total award points available for redemption.",
          "type": "number"
        }
      }
    },
    "profile": {
      "description": "Object for creation of profiles. This object contains profile details with unique identifiers for each profile.",
      "type": "object",
      "properties": {
        "externalReferences": {
          "description": "External Reference information for Profile.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "profileAllowedActions": {
          "description": "Provides the actions needed to apply on the profile",
          "$ref": "#/definitions/profileAllowedActionsType"
        },
        "profileDetails": {
          "description": "Provides detailed information regarding either a company or a customer profile.",
          "$ref": "#/definitions/profileType"
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as ID.",
          "$ref": "#/definitions/profileIdList"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileAccessType": {
      "type": "object",
      "properties": {
        "chainCode": {
          "description": "Indicates the Chain code where the profile was created",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "croCode": {
          "description": "Indicates the CRO code where the profile was created",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "Indicates the Hotel code where the profile was created",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "sharedLevel": {
          "description": "Indicates whether the profile is shared at the following levels : global/property/CRO",
          "$ref": "#/definitions/profileSharedLevelType"
        }
      }
    },
    "profileAccounts": {
      "description": "Response of profile accounts.",
      "type": "object",
      "properties": {
        "accounts": {
          "description": "Collection of profile accounts.",
          "$ref": "#/definitions/aRAccountsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileActivityLog": {
      "description": "Response object for fetching profile activity log. This object contains collection of user activity log for the profile,Success,Warnings and Errors related to this operation",
      "type": "object",
      "properties": {
        "activityLog": {
          "description": "Collection of user activity log for the profile.",
          "$ref": "#/definitions/activityLogListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileAdditionalInfoType": {
      "type": "object",
      "properties": {
        "businessPosition": {
          "description": "Business Title or Position of the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "masterAccount": {
          "description": "Indicates if the profile is a Master Account for one or more Subsidiary Accounts.",
          "type": "boolean"
        },
        "primaryOwnerCode": {
          "description": "Primary Owner of the profile",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "subsidiaryAccount": {
          "description": "Indicates if the profile is a Subsidiary Account of a Master/Parent Account.",
          "type": "boolean"
        },
        "territory": {
          "description": "Territory associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "profileAllowedActionType": {
      "description": "Flag indicating whether Profile is Enrolled to Primary Membership Program.",
      "type": "string",
      "enum": [
        "NameChange",
        "TaxIDChange",
        "EnrollToPrimaryMembership"
      ]
    },
    "profileAllowedActionsType": {
      "description": "Allowed actions for profile operations.",
      "type": "array",
      "maxItems": 2,
      "items": {
        "$ref": "#/definitions/profileAllowedActionType"
      }
    },
    "profileAttachments": {
      "description": "Response object with the details of the attachments of a profile.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "profileAttachments": {
          "description": "List of Attachments associated with the requesting Profile.",
          "$ref": "#/definitions/attachmentsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileCashieringDetailType": {
      "description": "The type contains routing instructions for the profile.",
      "type": "object",
      "properties": {
        "eCommerceId": {
          "description": "E-Commerce ID of the Profile",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "fiscalGuestType": {
          "description": "Guest type code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code for which the routing instructions are provided for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "paymentMethod": {
          "description": "Payment Method Details.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "routingInstructions": {
          "description": "Set of preconfigured transaction codes.",
          "$ref": "#/definitions/profileRoutingInstructionsType"
        },
        "taxType": {
          "description": "Tax type code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "profileCashieringDetails": {
      "description": "Request object for changing the profile cashiering details.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "profileCashieringDetailList": {
          "description": "Cashiering details for the profile.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/profileCashieringDetailType"
          }
        },
        "profileIdList": {
          "description": "Unique identifier for the profile for both internal and external systems.",
          "$ref": "#/definitions/profileIdList"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileCashieringDetailsInfo": {
      "description": "Response object containing profile routing instructions.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "profileCashieringDetailList": {
          "description": "Cashiering details for the profile.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/profileCashieringDetailType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileCashieringType": {
      "description": "Contains cashiering related details for the profile",
      "type": "object",
      "properties": {
        "arNoCentral": {
          "description": "Account Receivables Central Number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "autoFolioSettlementType": {
          "description": "Contains the auto folio settlement type for the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "directBillingList": {
          "description": "Contains the direct billing related information for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/directBillingType"
          }
        },
        "paymentDueDays": {
          "description": "Ability to define on the account, the number of days after which the invoice should be paid.",
          "type": "integer"
        },
        "referenceCurrency": {
          "description": "Reference Currency.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "taxPercent1": {
          "description": "Tax1 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent2": {
          "description": "Tax2 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent3": {
          "description": "Tax3 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent4": {
          "description": "Tax4 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent5": {
          "description": "Tax5 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "vATOffsetYN": {
          "description": "VAT Offset Flag.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        }
      }
    },
    "profileCommissionAccount": {
      "description": "Request object for creating profile commission detail.",
      "type": "object",
      "properties": {
        "criteria": {
          "$ref": "#/definitions/profileCommissionAccountCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileCommissionAccountCopy": {
      "description": "Request object for copying transaction groups configuration.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "profileCommissionAccountsInfo": {
          "description": "List of resorts with profile commission account information to be copied.",
          "$ref": "#/definitions/copyProfileCommissionInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileCommissionAccountCriteriaType": {
      "description": "Contains base info to determine profile commission bank account and code.",
      "type": "object",
      "properties": {
        "bankAccountId": {
          "description": "Bank account ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "commissionCode": {
          "description": "Profile commission code",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "hotelId": {
          "description": "Hotel code from which the profile bank account and code belongs to",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "profileId": {
          "description": "Unique profile identifier.",
          "$ref": "#/definitions/profileId"
        },
        "validatePending": {
          "description": "Used in CRUD operations. When set to true, proceed validating pending commissions",
          "type": "boolean"
        }
      }
    },
    "profileCommissionAccountInfo": {
      "description": "Response object for fetching profile commission detail.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "profileCommissionAccountInfoList": {
          "$ref": "#/definitions/profileCommissionAccountInfoListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileCommissionAccountInfoListType": {
      "description": "Profile commission info which contains bank account and commission code details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/profileCommissionAccountInfoType"
      }
    },
    "profileCommissionAccountInfoType": {
      "description": "Profile commission info which contains bank account and commission code details",
      "type": "object",
      "properties": {
        "bankAccount": {
          "description": "Bank account details",
          "$ref": "#/definitions/bankAccountType"
        },
        "commissionCode": {
          "description": "Commission code details",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "profileId": {
          "description": "Unique profile identifier.",
          "$ref": "#/definitions/profileId"
        }
      }
    },
    "profileCommissionType": {
      "description": "This is the preconfigured routing instruction type.",
      "type": "object",
      "properties": {
        "bankAccount": {
          "description": "Bank account used for the commission for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "commissionCode": {
          "description": "commission Code for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "hotelId": {
          "description": "Hotel Code for the commission being used for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "paymentMethod": {
          "description": "Type of payment associated with the bank account.",
          "$ref": "#/definitions/commissionPaymentMethods"
        }
      }
    },
    "profileDeliveryMethod": {
      "description": "Delivery Information type to the profile.",
      "type": "object",
      "properties": {
        "deliveryId": {
          "description": "Delivery ID. It will be empty in case of new delivery method.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "deliveryModule": {
          "description": "Module where this delivery type will be used. Example : EFolio Export, EInvoice , Fiscal, etc..",
          "$ref": "#/definitions/profileDeliveryModuleType"
        },
        "deliveryType": {
          "description": "Delivery type can have a value EMAIL, ELECTRONIC etc and it depends on the parameter set in OPERA Control.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "deliveryValue": {
          "description": "Delivery value holds the corresponding value of the delivery type..",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property that has delivery methods configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        }
      }
    },
    "profileDeliveryModuleType": {
      "description": "Module where this delivery type will be used. Example : EFolio Export, EInvoice , Fiscal, etc..",
      "type": "string",
      "enum": [
        "EfolioExport"
      ]
    },
    "profileDetails": {
      "description": "Response object for fetching multiple detailed profiles by unique identifiers..",
      "type": "object",
      "properties": {
        "masterInfoList": {
          "description": "Refer to Generic common types document.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "profiles": {
          "description": "Type contains Profile's primary details and it's children details.",
          "$ref": "#/definitions/profilesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileEnrollmentType": {
      "description": "Type provides the detailed information about the profile and its children.",
      "type": "object",
      "properties": {
        "addresses": {
          "description": "List of customer addresses.",
          "type": "object",
          "properties": {
            "addressInfo": {
              "description": "Collection of Detailed information on an address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/addressInfoType"
              }
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "businessSegments": {
          "description": "Business/Market Segment associated to the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "cashiering": {
          "description": "Contains cashiering related details for the profile",
          "$ref": "#/definitions/profileCashieringType"
        },
        "comments": {
          "description": "List of Notes for the customer.",
          "type": "object",
          "properties": {
            "commentInfo": {
              "description": "Collection of Detailed information on comments for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/commentInfoType"
              }
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "commissionInfoList": {
          "description": "Contains commission related details for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/profileCommissionType"
          }
        },
        "company": {
          "description": "Detailed company information for this profile.",
          "$ref": "#/definitions/companyType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "customer": {
          "description": "Detailed customer information for this profile.",
          "$ref": "#/definitions/customerType"
        },
        "eCertificates": {
          "description": "E-Certificate assosiated with the profile.",
          "$ref": "#/definitions/eCertificatesType"
        },
        "earningPreferences": {
          "description": "Rewards preferences of the guest.",
          "$ref": "#/definitions/earningPreferencesType"
        },
        "eligibleForFiscalFolio": {
          "description": "Eligible for Fiscal Folio/Payload generation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "employeeId": {
          "description": "EmployeeID of the user who is enrolling the Guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "employer": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0
        },
        "enrollmentCode": {
          "description": "Membership enrollment code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "enrollmentPaymentDetails": {
          "description": "Payment details to enroll profile to the membership program(e.g. Payment Method, Amount.)",
          "$ref": "#/definitions/enrollmentPaymentDetailsType"
        },
        "enrollmentType": {
          "description": "The type of external system that the guest is enrolling in, such as Loyalty, Gaming or Activities.",
          "$ref": "#/definitions/enrollmentTypeType"
        },
        "externalDatabaseID": {
          "description": "Enrollment details will be fetched from this External database.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "fiscalGuestType": {
          "description": "Fiscal Guest Type is used for Fiscal Folio funcionality",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "gdsNegotiatedRates": {
          "description": "List of channel negotiated rates that this profile has been assigned to.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "gdsNegotiatedRate": {
              "description": "Collection of Detailed information on channel negotiated rates for the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/gdsNegotiatedType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "hasCommission": {
          "description": "Populates true if the profile has commission configured false otherwise.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code, It is used to filter hotel specific children to this specific hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "influenceCode": {
          "description": "Influence Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "inheritedNegRates": {
          "description": "Flag to indicate if the negotiated rates are inherited from master profile. Flag is available only when the profile is linked to master profile and master profile has negotiated rate codes attached.",
          "type": "boolean"
        },
        "keywords": {
          "description": "List of customer keywords.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "keyword": {
              "description": "Collection of keywords attached to the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/keywordType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastStayInfo": {
          "description": "Information on last stay of the profile.",
          "$ref": "#/definitions/lastStayInfoType"
        },
        "localizationGuestType": {
          "description": "Localization Guest Type assocaited to the profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "mailingActions": {
          "description": "Contains collection of mailing action list associated with the profile",
          "$ref": "#/definitions/mailingActionsType"
        },
        "mailingPreferences": {
          "description": "Mailing preferences of the guest.",
          "$ref": "#/definitions/mailingPreferencesType"
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this profile as recently accessed.",
          "type": "boolean"
        },
        "markForHistory": {
          "description": "\"true\" setting marks the profile to be kept from being purged, once the profile is marked inactive.",
          "type": "boolean"
        },
        "membershipCardRegistrationCode": {
          "description": "Profile's membership card registration code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "negotiatedRates": {
          "description": "List of profile negotiated rates.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "negotiatedRate": {
              "description": "Collection of Detailed information on profile negotiated rates.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/negotiatedType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "ownerCode": {
          "description": "Owner Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "preferenceCollection": {
          "description": "List of customer preferences.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "preferenceType": {
              "description": "Collection of Detailed information on preferences of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/preferenceTypeType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "previousHotelStays": {
          "description": "List of previous hotel stays of the profile.",
          "$ref": "#/definitions/hotelStaysType"
        },
        "privacyInfo": {
          "description": "Contains privacy related information associated with the profile",
          "$ref": "#/definitions/privacyInfoType"
        },
        "profileAccessType": {
          "description": "Detailed information on access type associated with the profile.",
          "$ref": "#/definitions/profileAccessType"
        },
        "profileDeliveryMethods": {
          "description": "List of Delivery methods configured against a Property for this Profile.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "profileDeliveryMethod": {
              "description": "Collection of delivery methods for this Profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileDeliveryMethod"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "profileId": {
          "description": "Unique id of the profile.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "profileImage": {
          "description": "The profile image.",
          "$ref": "#/definitions/imageSetType"
        },
        "profileIndicators": {
          "description": "Indicators of additional information attached to the profile",
          "$ref": "#/definitions/indicatorsType"
        },
        "profileMemberships": {
          "description": "List of loyalty program(s) the profile is subscribed to.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "profileMembership": {
              "description": "Collection of Detailed information on memberships for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileMembershipType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "profileRestrictions": {
          "description": "Detailed information on restrictions associated with the profile.",
          "$ref": "#/definitions/profileRestrictions"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "protectedBy": {
          "description": "What level this profile is protected.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "registeredProperty": {
          "description": "Hotel which this profile is registered with. This attribute is not used for configuration.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "relationships": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "relationship": {
              "description": "A collection of the profiles that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "relationshipsSummary": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "relationship": {
              "description": "A collection of the profiles summary that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoSummaryType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "requestForHotel": {
          "description": "Hotel which this profile is to be registered. This attribute is only used during creation of profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationId": {
          "description": "Unique identifier of the reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "reservationInfoList": {
          "description": "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref": "#/definitions/reservationHistoryFutureInfoType"
        },
        "rewardsInfo": {
          "description": "Guest's rewards information.",
          "$ref": "#/definitions/rewardsInfoType"
        },
        "roomOwnershipsList": {
          "description": "Room Ownership records.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "roomOwnershipInfo": {
              "description": "Collection of Detailed information on Room Ownership records.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/roomOwnershipType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "roomPreferences": {
          "description": "Room preferences and request of the guest.",
          "$ref": "#/definitions/roomPreferencesType"
        },
        "salesInfo": {
          "description": "Sales information of the profiles.",
          "$ref": "#/definitions/salesInfoType"
        },
        "showInactiveRoomOwners": {
          "description": "Flag to show inactive Room Owners.",
          "type": "boolean"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "stayReservationInfoList": {
          "description": "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref": "#/definitions/reservationStayHistoryFutureInfoType"
        },
        "subscriptions": {
          "description": "List of profile subscriptions.",
          "$ref": "#/definitions/profileSubscriptionListType"
        },
        "taxInfo": {
          "description": "Profile information about tax.",
          "$ref": "#/definitions/profileTaxInfoType"
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "territory": {
          "description": "Territory associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "traceCode": {
          "description": "Trace Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "uRLs": {
          "description": "List of Information on a URL for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "uRLInfo": {
              "description": "Collection of Detailed information on web url/address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/uRLInfoType"
              }
            }
          }
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "userId": {
          "description": "UserID/LoginID of the user who is enrolling the Guest.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "webUserAccounts": {
          "description": "List of Web User Accounts of the profile.",
          "$ref": "#/definitions/webUserAccountsType"
        }
      }
    },
    "profileHotelStatisticsbyYearSummaryType": {
      "description": "Contains stay statistics summary information by year",
      "type": "object",
      "properties": {
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "netRevenue": {
          "type": "array",
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/stayStatisticsRevenueType"
          }
        },
        "stayDetail": {
          "type": "array",
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/stayDetailSummaryType"
          }
        },
        "year": {
          "type": "string"
        }
      }
    },
    "profileId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "profileIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "profileInfoType": {
      "description": "Provides information about attached profiles to the block.",
      "type": "object",
      "properties": {
        "city": {
          "description": "City for the profile attached to the block.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "name": {
          "description": "Name for the profile attached to the block.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "phone": {
          "description": "Phone for the profile attached to the block.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "profileId": {
          "description": "Opera ID for the profile attached to the block.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "type": {
          "description": "Defines the type of Linked profiles for a block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "profileMembershipStatistics": {
      "description": "Response of the WS operation FetchProfileMembershipPoints. It contains the summary statistics and/or the details of each of the membership transactions and its points.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "membershipStatistics": {
          "description": "the summary statistics and/or the details of each of the membership transactions and its points.",
          "$ref": "#/definitions/membershipStatisticsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileMembershipType": {
      "description": "Detailed information of the memberships.",
      "type": "object",
      "properties": {
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        }
      }
    },
    "profileNameType": {
      "description": "This provides name information for a person.",
      "type": "object",
      "properties": {
        "fullName": {
          "description": "Full display Name.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        }
      }
    },
    "profileOwners": {
      "description": "Request object to change profile owners.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to change the owners of a profile.",
          "$ref": "#/definitions/setProfileOwnersCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileOwnersDetail": {
      "description": "Response object to fetch the owners of a profile.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "profileOwnersList": {
          "description": "Collection of the profile owners belonging to the profile requested.",
          "$ref": "#/definitions/ownersType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileRelationship": {
      "description": "Request object for creating profile relationship.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "relationship": {
          "description": "Refer to Relationship Profile request criteria.",
          "$ref": "#/definitions/relationshipCriteriaType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileRelationshipToBeChanged": {
      "description": "Request object for changing profile relationship.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "relationship": {
          "description": "Refer to Relationship Profile request criteria.",
          "$ref": "#/definitions/changeRelationshipCriteriaType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileRelationships": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "relationships": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "$ref": "#/definitions/relationshipsSummary"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileRestrictions": {
      "type": "object",
      "properties": {
        "reason": {
          "description": "Restriction reason associated with the current profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonDescription": {
          "description": "Description of restriction reason.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "restricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        }
      }
    },
    "profileRoutingInstructionsType": {
      "description": "The type contains routing instructions for the profile.",
      "type": "object",
      "properties": {
        "autoPopulateRouting": {
          "description": "A flag which determines whether the instructions has to be automatically populated for this profile or not.",
          "type": "boolean"
        },
        "billingInstructions": {
          "description": "Set of preconfigured Billing Instruction results.",
          "$ref": "#/definitions/billingInstructionsType"
        },
        "transactionCodes": {
          "description": "Set of preconfigured transaction codes.",
          "$ref": "#/definitions/trxCodesInfoType"
        }
      }
    },
    "profileSharedLevelType": {
      "description": "Simple types for Shared level.",
      "type": "string",
      "enum": [
        "Global",
        "Property",
        "Cro"
      ]
    },
    "profileStatistics": {
      "description": "Response object for fetching profile stay/reservation/revenue statistics. This object contains collection of summary or detail,Success,Warnings and Errors related to this operation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "profileStatistic": {
          "description": "Contains summary/detail/revenue statistics information.",
          "$ref": "#/definitions/profileStatisticsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileStatisticsType": {
      "description": "Contains summary/detail/Revenue statistics information for Profile.",
      "type": "object",
      "properties": {
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "reportType": {
          "description": "Contains the statistical report(Reservation, Revenue, Stay Records) type.",
          "$ref": "#/definitions/statisticsReportType"
        },
        "revenueStatisticsSummaryList": {
          "description": "List of summary profile revenue statistics.",
          "$ref": "#/definitions/revenueStatisticsSummaryListType"
        },
        "stayStatisticsDetailList": {
          "description": "List of detailed profile stay statistics.",
          "$ref": "#/definitions/stayStatisticsDetailListType"
        },
        "stayStatisticsSummaryList": {
          "description": "List of summary profile stay statistics.",
          "$ref": "#/definitions/statisticsSummaryListType"
        }
      }
    },
    "profileStatisticsbyYearSummaryType": {
      "description": "Contains stay statistics summary information by year",
      "type": "object",
      "properties": {
        "netRevenue": {
          "type": "array",
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/stayStatisticsRevenueType"
          }
        },
        "stayDetail": {
          "type": "array",
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/stayDetailSummaryType"
          }
        },
        "year": {
          "type": "string"
        }
      }
    },
    "profileStatusType": {
      "type": "string",
      "enum": [
        "Active",
        "Inactive"
      ]
    },
    "profileStayDetailsType": {
      "description": "Type provides the stay history and future reservations of specific profile.",
      "type": "object",
      "properties": {
        "reservationInfoList": {
          "description": "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref": "#/definitions/reservationStayHistoryFutureInfoType"
        }
      }
    },
    "profileStayHistory": {
      "description": "Response object for showing stay history and future reservations of specific profile.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "profileStayDetails": {
          "description": "Type contains stay history and future reservations of the specific profile.",
          "$ref": "#/definitions/profileStayDetailsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileSubscriptionListType": {
      "description": "Details of the OPERA Profile subscription to external system",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/profileSubscriptionType"
      }
    },
    "profileSubscriptionType": {
      "description": "Contains details of the profile subscription. The subscription represents the link between the OPERA profile and the external profile within a particular external system",
      "type": "object",
      "properties": {
        "distributed": {
          "description": "Indicates if the profile was distributed to the external system.",
          "type": "boolean"
        },
        "externalProfileId": {
          "description": "Profile ID within the external system.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "force": {
          "description": "Indicates if the profile information should be overwritten by the external system.",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicates whether this subscription is active or inactive.",
          "type": "boolean"
        },
        "lastDistributionDate": {
          "description": "Timestamp of the most recent distribution of this profile to the external system.",
          "type": "string",
          "format": "date-time"
        },
        "lastExternalUpdateDate": {
          "description": "Timestamp of the most recent update of the subscription information by the external system.",
          "type": "string",
          "format": "date-time"
        },
        "profileId": {
          "description": "OPERA Profile ID that this subscription record corresponds to.",
          "$ref": "#/definitions/profileId"
        },
        "profileInfo": {
          "description": "This provides name information for a person.",
          "type": "object",
          "properties": {
            "fullName": {
              "description": "Full display Name.",
              "type": "string",
              "maxLength": 200,
              "minLength": 0
            },
            "givenName": {
              "description": "Given name, first name or names.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "middleName": {
              "description": "The middle name of the person name.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "name": {
              "description": "Family name, last name or Company Name.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "namePrefix": {
              "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "nameSuffix": {
              "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "nameTitle": {
              "description": "Degree or honors (e.g., Ph.D., M.D.)",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "nameType": {
              "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
              "$ref": "#/definitions/personNameTypeType"
            },
            "profileType": {
              "description": "OPERA profile type such as Individual or Company",
              "$ref": "#/definitions/profileTypeType"
            }
          }
        },
        "subscriptionDate": {
          "description": "Timestamp when the profile was subscribed to.",
          "type": "string",
          "format": "date-time"
        },
        "systemCode": {
          "description": "Code of system where profile is subscribed to.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "systemType": {
          "description": "Type of system where profile is subscribed to.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "profileSubscriptionsToSynchronize": {
      "description": "Request object for re-subscribing profile subscriptions.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to re-subscribe profile subscriptions.",
          "$ref": "#/definitions/synchronizeProfileSubscriptionsCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileSummaries": {
      "description": "Response object for fetching profiles. This object contains profile primary details,profile summary details,master info list containing code and description used as lookup for description.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "masterInfoList": {
          "description": "Refer to Generic common types document.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "profileSummaries": {
          "description": "Type contains Profile's summary information.",
          "$ref": "#/definitions/profileSummariesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileSummariesType": {
      "description": "A complex type containing the collection of Profile objects or Unique IDs of Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "profileInfo": {
          "description": "A collection of Profiles or Unique IDs of Profiles.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/profileSummaryInfoType"
          }
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "profileSummaryInfoType": {
      "description": "Summary information about a profile and the associated Unique IDs.",
      "type": "object",
      "properties": {
        "profile": {
          "description": "Provides summary information regarding profile.",
          "$ref": "#/definitions/profileSummaryType"
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code.",
          "$ref": "#/definitions/profileIdList"
        }
      }
    },
    "profileSummaryType": {
      "description": "Type provides the basic information about the profile.",
      "type": "object",
      "properties": {
        "aRAccount": {
          "description": "AR Account information.",
          "$ref": "#/definitions/directBillingType"
        },
        "additionalInfo": {
          "description": "Additional Information about the profile.",
          "$ref": "#/definitions/profileAdditionalInfoType"
        },
        "addressInfo": {
          "description": "Detailed information on an address for the customer.",
          "$ref": "#/definitions/addressInfoType"
        },
        "allowedActions": {
          "description": "Collection of allowed actions for profile search.",
          "$ref": "#/definitions/profileAllowedActionsType"
        },
        "altName": {
          "description": "Profile Name information for this profile.",
          "$ref": "#/definitions/profileNameType"
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "cashiering": {
          "description": "Contains cashiering related details for the profile",
          "$ref": "#/definitions/profileCashieringType"
        },
        "citizenCountry": {
          "description": "Name of the (self-professed) country that is claimed for citizenship.",
          "$ref": "#/definitions/countryNameType"
        },
        "commission": {
          "description": "Commission Code and description of the requested HotelCode.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "emailInfo": {
          "description": "Detailed information on an eMail address for the customer.",
          "$ref": "#/definitions/emailInfoType"
        },
        "formerName": {
          "description": "This provides name information for a person.",
          "type": "object",
          "properties": {
            "birthDate": {
              "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "birthDateMasked": {
              "description": "Indicates the date of birth as masked.",
              "type": "string"
            },
            "currencyCode": {
              "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "currencySymbol": {
              "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
              "type": "string",
              "maxLength": 10,
              "minLength": 0
            },
            "customerValue": {
              "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "decimalPlaces": {
              "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
              "type": "integer"
            },
            "fullName": {
              "description": "Full display Name.",
              "type": "string",
              "maxLength": 200,
              "minLength": 0
            },
            "gender": {
              "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "givenName": {
              "description": "Given name, first name or names.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "language": {
              "description": "Language identification.",
              "type": "string",
              "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
            },
            "middleName": {
              "description": "The middle name of the person name.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "name": {
              "description": "Family name, last name or Company Name.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "namePrefix": {
              "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "nameSuffix": {
              "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "nameTitle": {
              "description": "Degree or honors (e.g., Ph.D., M.D.)",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "nameType": {
              "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
              "$ref": "#/definitions/personNameTypeType"
            }
          }
        },
        "inheritedNegRates": {
          "description": "Flag to indicate if the negotiated rates are inherited from master profile. Flag is available only when the profile is linked to master profile and master profile has negotiated rate codes attached.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastStayInfo": {
          "description": "Information on last stay of the profile.",
          "$ref": "#/definitions/lastStayInfoType"
        },
        "owners": {
          "description": "Owner of the customer.",
          "$ref": "#/definitions/ownersType"
        },
        "primaryAccountInfo": {
          "description": "Contains primary account information (Profile Id, Profile Type and Profile Name) for the contacts.",
          "$ref": "#/definitions/primaryProfileInfoType"
        },
        "primaryCompany": {
          "description": "Primary Company of the profile.",
          "type": "string"
        },
        "privateProfile": {
          "description": "This element tells profile is property exclusive or not.",
          "type": "boolean"
        },
        "profileAccessType": {
          "description": "Detailed information on access type associated with the profile.Information on whether the profile is created in CRO/Hotel/Chain.",
          "$ref": "#/definitions/profileAccessType"
        },
        "profileIndicators": {
          "description": "Indicators of additional information attached to the profile",
          "$ref": "#/definitions/indicatorsType"
        },
        "profileMembership": {
          "description": "Information on membership for the customer.",
          "$ref": "#/definitions/profileMembershipType"
        },
        "profileRestrictions": {
          "description": "Detailed information on restrictions associated with the profile.",
          "$ref": "#/definitions/profileRestrictions"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "protected": {
          "description": "What level this profile is protected.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "registeredProperty": {
          "description": "Property this profile is registered with.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "salesInfo": {
          "description": "Sales information of the profile.",
          "$ref": "#/definitions/salesInfoType"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "subscription": {
          "description": "This element tells If there is an active subscription for this external profile .",
          "type": "boolean"
        },
        "taxInfo": {
          "description": "Profile information about tax.",
          "$ref": "#/definitions/profileTaxInfoType"
        },
        "telephoneInfo": {
          "description": "Detailed information on telephone/ fax for the customer.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "uRLInfo": {
          "description": "Detailed information on web url/address for the customer.",
          "$ref": "#/definitions/uRLInfoType"
        },
        "vipStatus": {
          "description": "VIP status of the customer.",
          "$ref": "#/definitions/vIPStatusType"
        }
      }
    },
    "profileTaxInfoType": {
      "description": "Profile information related to tax.",
      "type": "object",
      "properties": {
        "businessId": {
          "description": "Business ID. The maximum length of this element should not exceed 120 characters.",
          "type": "string",
          "maxLength": 128,
          "minLength": 0
        },
        "businessRegistration": {
          "description": "Business Registration Code. The maximum length of this element should not exceed 120 characters.",
          "type": "string",
          "maxLength": 128,
          "minLength": 0
        },
        "tax1No": {
          "description": "The tax id of this profile. Usually issued by a government agency. Used by 1099 printing.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "tax2No": {
          "description": "Tax 2 id of this profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "taxCategory": {
          "description": "Tax Category to be changed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "taxOffice": {
          "description": "Tax Office to be changed.",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "taxType": {
          "description": "Tax type to be changed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "profileToBeMerged": {
      "description": "Profile Resource will be merged.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "profileDetails": {
          "description": "Provides detailed information regarding either a company or a customer profile.",
          "$ref": "#/definitions/profileType"
        },
        "victimProfileId": {
          "description": "Provides detailed information regarding either a company or a customer profile.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileType": {
      "description": "Type provides the detailed information about the profile and its children.",
      "type": "object",
      "properties": {
        "addresses": {
          "description": "List of customer addresses.",
          "type": "object",
          "properties": {
            "addressInfo": {
              "description": "Collection of Detailed information on an address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/addressInfoType"
              }
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "businessSegments": {
          "description": "Business/Market Segment associated to the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "cashiering": {
          "description": "Contains cashiering related details for the profile",
          "$ref": "#/definitions/profileCashieringType"
        },
        "comments": {
          "description": "List of Notes for the customer.",
          "type": "object",
          "properties": {
            "commentInfo": {
              "description": "Collection of Detailed information on comments for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/commentInfoType"
              }
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "commissionInfoList": {
          "description": "Contains commission related details for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/profileCommissionType"
          }
        },
        "company": {
          "description": "Detailed company information for this profile.",
          "$ref": "#/definitions/companyType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "customer": {
          "description": "Detailed customer information for this profile.",
          "$ref": "#/definitions/customerType"
        },
        "eCertificates": {
          "description": "E-Certificate assosiated with the profile.",
          "$ref": "#/definitions/eCertificatesType"
        },
        "eligibleForFiscalFolio": {
          "description": "Eligible for Fiscal Folio/Payload generation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "fiscalGuestType": {
          "description": "Fiscal Guest Type is used for Fiscal Folio funcionality",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "gdsNegotiatedRates": {
          "description": "List of channel negotiated rates that this profile has been assigned to.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "gdsNegotiatedRate": {
              "description": "Collection of Detailed information on channel negotiated rates for the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/gdsNegotiatedType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "hasCommission": {
          "description": "Populates true if the profile has commission configured false otherwise.",
          "type": "boolean"
        },
        "influenceCode": {
          "description": "Influence Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "inheritedNegRates": {
          "description": "Flag to indicate if the negotiated rates are inherited from master profile. Flag is available only when the profile is linked to master profile and master profile has negotiated rate codes attached.",
          "type": "boolean"
        },
        "keywords": {
          "description": "List of customer keywords.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "keyword": {
              "description": "Collection of keywords attached to the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/keywordType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastStayInfo": {
          "description": "Information on last stay of the profile.",
          "$ref": "#/definitions/lastStayInfoType"
        },
        "localizationGuestType": {
          "description": "Localization Guest Type assocaited to the profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "mailingActions": {
          "description": "Contains collection of mailing action list associated with the profile",
          "$ref": "#/definitions/mailingActionsType"
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this profile as recently accessed.",
          "type": "boolean"
        },
        "markForHistory": {
          "description": "\"true\" setting marks the profile to be kept from being purged, once the profile is marked inactive.",
          "type": "boolean"
        },
        "negotiatedRates": {
          "description": "List of profile negotiated rates.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "negotiatedRate": {
              "description": "Collection of Detailed information on profile negotiated rates.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/negotiatedType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "ownerCode": {
          "description": "Owner Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "preferenceCollection": {
          "description": "List of customer preferences.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "preferenceType": {
              "description": "Collection of Detailed information on preferences of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/preferenceTypeType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "privacyInfo": {
          "description": "Contains privacy related information associated with the profile",
          "$ref": "#/definitions/privacyInfoType"
        },
        "profileAccessType": {
          "description": "Detailed information on access type associated with the profile.",
          "$ref": "#/definitions/profileAccessType"
        },
        "profileDeliveryMethods": {
          "description": "List of Delivery methods configured against a Property for this Profile.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "profileDeliveryMethod": {
              "description": "Collection of delivery methods for this Profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileDeliveryMethod"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "profileImage": {
          "description": "The profile image.",
          "$ref": "#/definitions/imageSetType"
        },
        "profileIndicators": {
          "description": "Indicators of additional information attached to the profile",
          "$ref": "#/definitions/indicatorsType"
        },
        "profileMemberships": {
          "description": "List of loyalty program(s) the profile is subscribed to.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "profileMembership": {
              "description": "Collection of Detailed information on memberships for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileMembershipType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "profileRestrictions": {
          "description": "Detailed information on restrictions associated with the profile.",
          "$ref": "#/definitions/profileRestrictions"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "protectedBy": {
          "description": "What level this profile is protected.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "registeredProperty": {
          "description": "Hotel which this profile is registered with. This attribute is not used for configuration.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "relationships": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "relationship": {
              "description": "A collection of the profiles that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "relationshipsSummary": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "relationship": {
              "description": "A collection of the profiles summary that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoSummaryType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "requestForHotel": {
          "description": "Hotel which this profile is to be registered. This attribute is only used during creation of profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomOwnershipsList": {
          "description": "Room Ownership records.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "roomOwnershipInfo": {
              "description": "Collection of Detailed information on Room Ownership records.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/roomOwnershipType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "salesInfo": {
          "description": "Sales information of the profiles.",
          "$ref": "#/definitions/salesInfoType"
        },
        "showInactiveRoomOwners": {
          "description": "Flag to show inactive Room Owners.",
          "type": "boolean"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "stayReservationInfoList": {
          "description": "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref": "#/definitions/reservationStayHistoryFutureInfoType"
        },
        "subscriptions": {
          "description": "List of profile subscriptions.",
          "$ref": "#/definitions/profileSubscriptionListType"
        },
        "taxInfo": {
          "description": "Profile information about tax.",
          "$ref": "#/definitions/profileTaxInfoType"
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "territory": {
          "description": "Territory associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "traceCode": {
          "description": "Trace Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "uRLs": {
          "description": "List of Information on a URL for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "uRLInfo": {
              "description": "Collection of Detailed information on web url/address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/uRLInfoType"
              }
            }
          }
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "webUserAccounts": {
          "description": "List of Web User Accounts of the profile.",
          "$ref": "#/definitions/webUserAccountsType"
        }
      }
    },
    "profileTypeType": {
      "description": "The types of Profile handled by the web service.",
      "type": "string",
      "enum": [
        "Guest",
        "Agent",
        "Company",
        "Group",
        "Source",
        "Employee",
        "Hotel",
        "Vendor",
        "Contact",
        "Purge",
        "BusinessHeader",
        "BillingAccount",
        "Activity",
        "Potential",
        "Account"
      ]
    },
    "profiles": {
      "description": "Unique identifier for a profile.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/profileId"
      }
    },
    "profilesType": {
      "description": "A collection of Profile objects or Unique IDs of Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "profileInfo": {
          "description": "A collection of Profiles or Unique IDs of Profiles.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "allowedActions": {
                "description": "Collection of allowed actions for profile search.",
                "$ref": "#/definitions/profileAllowedActionsType"
              },
              "chainCode": {
                "description": "Chain code associated with the profile.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "profile": {
                "description": "Provides detailed information regarding either a company or a customer profile.",
                "$ref": "#/definitions/profileType"
              },
              "profileIdList": {
                "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
                "$ref": "#/definitions/profileIdList"
              }
            }
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "promotionType": {
      "description": "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "type": "object",
      "properties": {
        "couponCode": {
          "description": "Promotion Coupon Code when promotion is setup to have a valid coupon code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "promotionCode": {
          "description": "Promotion code associated with the rate plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "promotionName": {
          "description": "Promotion code Name associated with the rate plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "queueTextInfoType": {
      "description": "Information regarding the message sent to guest.",
      "type": "object",
      "properties": {
        "sentBy": {
          "description": "User name of the user who sent message.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "sentTime": {
          "description": "Time the text was last sent to the user.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "rateAvailabilityType": {
      "description": "Member Award availability details based on chosen award types as Product,Rate,Upgrade,FT Payment and Other.",
      "type": "object",
      "properties": {
        "awardNumber": {
          "description": "An identifying number of the award, assigned by the system when the award was issued.",
          "type": "number"
        },
        "awardType": {
          "description": "Unique code that identifies this award.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "cancelPenaltyCharge": {
          "description": "The cancel penalty charge.",
          "type": "number"
        },
        "cancelPenaltyDays": {
          "description": "Number of days before arrival when a reservation may be cancelled without an award points penalty.",
          "type": "number"
        },
        "cancelPenaltyPoints": {
          "description": "The award points that will be forfeited if the cancel penalty charge is applied.",
          "type": "number"
        },
        "cancelPenaltyType": {
          "description": "The penalty charge is either a percentage or a flat number of points.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "HotelCode where the award will be consumed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "pointsRequired": {
          "description": "The number of points that must be redeemed for this award.",
          "type": "number"
        },
        "rateCode": {
          "description": "Rate code associated with the award.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateDescription": {
          "description": "Rate code description associated with the award.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "rawIssueKey": {
          "description": "Issue key in format of Raw data.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "roomCategory": {
          "description": "Indicates which room category it belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomDescription": {
          "description": "Description of the Room.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "roomLabel": {
          "description": "Code for the room type in which the award was issued.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "stayDate": {
          "description": "The date of the reservation associated with the award. There may be more than one date (multiple nights) associated with award.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "totalAvailablePoints": {
          "description": "Total award points available for redemption.",
          "type": "number"
        }
      }
    },
    "rates": {
      "description": "Response object for fetching Membership Transaction Rates information.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "rate": {
          "description": "Details of rate for the current points transaction.",
          "$ref": "#/definitions/membershipTransactionRatesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "recentlyAccessedProfileType": {
      "description": "A recently used profile details.",
      "type": "object",
      "properties": {
        "accessDate": {
          "description": "The date the record was accessed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "guestFirstName": {
          "description": "First Name of a Profile.",
          "$ref": "#/definitions/givenNameType"
        },
        "guestLastName": {
          "description": "Last Name of a profile.",
          "$ref": "#/definitions/surnameType"
        },
        "profileIdList": {
          "description": "List of unique ids, consisting of the profile name id.",
          "$ref": "#/definitions/profileIdList"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        }
      }
    },
    "recentlyAccessedProfiles": {
      "description": "Response with the fetched recently accessed profiles.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "profiles": {
          "description": "List of recently accessed profiles.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/recentlyAccessedProfileType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "relationshipAddressType": {
      "description": "Provides address information for a Relationship.",
      "type": "object",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "maxLength": 80,
            "minLength": 0
          }
        },
        "city": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "relationshipCriteriaType": {
      "description": "Contains Criteria Information for a profile relationship.",
      "type": "object",
      "properties": {
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "boolean"
        },
        "sourceProfileType": {
          "description": "Used to specify a source profile type.",
          "$ref": "#/definitions/profileTypeType"
        },
        "sourceRelation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceRelationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).This needs to be passed if the attribute primary is sent as true.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "targetProfileType": {
          "description": "Used to specify a target profile type.",
          "$ref": "#/definitions/profileTypeType"
        },
        "targetRelation": {
          "description": "Indicates the type of relationship the related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetRelationDescription": {
          "description": "Displays the description of relationship the related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "relationshipInfoSummaryType": {
      "description": "RelationshipInfoSummaryType contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "type": "object",
      "properties": {
        "masterAccountDetails": {
          "description": "Refer to Master Profile type document.",
          "$ref": "#/definitions/masterAccountInfoType"
        },
        "relationshipID": {
          "description": "Relationship identifier.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "relationshipProfile": {
          "description": "Refer to Relationship Profile Summary type document.",
          "$ref": "#/definitions/relationshipProfileSummaryType"
        },
        "sourceRelation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceRelationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "relationshipInfoType": {
      "description": "Relationship Type contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "type": "object",
      "properties": {
        "changeRelationship": {
          "description": "Information about the changes in relationship for the profile",
          "$ref": "#/definitions/changeRelationsType"
        },
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "masterAccountInfo": {
          "description": "Refer to Master Profile type document.",
          "$ref": "#/definitions/masterAccountInfoType"
        },
        "relation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "relationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "relationshipProfile": {
          "description": "Refer to Relationship Profile type document.",
          "$ref": "#/definitions/relationshipProfileType"
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "relationshipProfileSummaryType": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Information on address details for the customer/company",
          "$ref": "#/definitions/relationshipAddressType"
        },
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "customerName": {
          "description": "Name of the customer",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "boolean"
        },
        "primaryOwnerCode": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        },
        "profileIdList": {
          "description": "Original profile details for which the relationships was created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "profileStatus": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "telephoneNumber": {
          "description": "Telephone number assigned to a single location",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "relationshipProfileType": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Information on address details for the customer/company",
          "$ref": "#/definitions/addressInfoType"
        },
        "changeProfileIdList": {
          "description": "Updated/changed profile details for the relationships created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "company": {
          "description": "Detailed information of the Company.",
          "$ref": "#/definitions/companyType"
        },
        "customer": {
          "description": "Detailed information of the customer",
          "$ref": "#/definitions/customerType"
        },
        "email": {
          "description": "Information on email address for the customer/company",
          "$ref": "#/definitions/emailInfoType"
        },
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "primaryOwner": {
          "description": "Primary Owner of the profile",
          "$ref": "#/definitions/ownerType"
        },
        "profileIdList": {
          "description": "Original profile details for which the relationships was created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "telephone": {
          "description": "Information on telephone details for the customer/company",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "uRLs": {
          "description": "Information on web url/address for the customer/company",
          "$ref": "#/definitions/uRLInfoType"
        }
      }
    },
    "relationshipsSummary": {
      "description": "Contains details relationships related to a profile.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "relationship": {
          "description": "A collection of the profiles summary that have a relationship with this profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/relationshipInfoSummaryType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "resAccessRestrictionType": {
      "description": "Indicates any Updates/Changes on the reservation as well as Reservation Cancellation are not allowed.",
      "type": "string",
      "enum": [
        "Change",
        "Cancel",
        "ChangeOrCancel"
      ]
    },
    "resAccompanyGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "resAccompanyGuestListType": {
      "description": "Collection of accompany guests",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAccompanyGuestInfoType"
      }
    },
    "resAttachedProfileListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAttachedProfileType"
      }
    },
    "resAttachedProfileType": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Attached profile name",
          "type": "string"
        },
        "profileIdList": {
          "description": "Collection of unique profile identifiers",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "resCashieringType": {
      "description": "Cashiering Information for the reservation.",
      "type": "object",
      "properties": {
        "bedTaxReporting": {
          "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
          "$ref": "#/definitions/bedTaxReportingType"
        },
        "billingPrivileges": {
          "description": "Billing privileges set on the reservation.",
          "$ref": "#/definitions/billingPrivilegesType"
        },
        "compAccounting": {
          "description": "Information regarding comp accounting on the reservation.",
          "$ref": "#/definitions/resCompAccountingType"
        },
        "financiallyResponsible": {
          "description": "The guest from whom payment has to be recovered (direct guest).",
          "type": "boolean"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "lastRoomAndTaxPostedDate": {
          "description": "Date of the last Room And Tax posting. Used primarily to know the date in case of Advance Billing.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "periodicFolio": {
          "description": "Information regarding periodic folios set on the reservation.",
          "$ref": "#/definitions/resPeriodicFolioType"
        },
        "proratedBilling": {
          "description": "In case of Appartment style billing indicates whether a prorated amount should be used for an Apartment Style Billing rate.",
          "type": "boolean"
        },
        "reservationPreConfiguredRoutingInstruction": {
          "description": "Information regarding the selected preconfigured routing instruction on the reservation.",
          "$ref": "#/definitions/resPreConfiguredRoutingInstrType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "reverseAdvanceCheckInAllowed": {
          "description": "This attribute is to verify if reverse advance check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/reservationTaxTypeInfo"
        },
        "transactionsPosted": {
          "description": "Specifies whether reservation has a financial transaction associated with it.",
          "type": "boolean"
        }
      }
    },
    "resCommunicationType": {
      "description": "Communication details for a reservation.",
      "type": "object",
      "properties": {
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        }
      }
    },
    "resCompAccountingType": {
      "description": "Information regarding comp accounting on the reservation.",
      "type": "object",
      "properties": {
        "authorizer": {
          "description": "ID of the employee who will act as the host for this guest.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "compPostings": {
          "description": "Indicates if the Comp Billing/posting Exist",
          "type": "string",
          "maxLength": 5,
          "minLength": 0
        },
        "compType": {
          "description": "Code used to identify the casino comp type and ranking of a guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resExpectedTimesType": {
      "description": "Holds the Arrival and Departure Time Information",
      "type": "object",
      "properties": {
        "reservationExpectedArrivalTime": {
          "description": "Arrival Time",
          "type": "string",
          "format": "date-time"
        },
        "reservationExpectedDepartureTime": {
          "description": "Departure Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "resGuaranteeType": {
      "description": "Validations type record returned after Validations are done.",
      "type": "object",
      "properties": {
        "guaranteeCode": {
          "description": "Guarantee Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "onHold": {
          "description": "Guarantee Code.",
          "type": "boolean"
        },
        "shortDescription": {
          "description": "Guarantee Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "resGuestExternalInfoType": {
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "type": "object",
      "properties": {
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        }
      }
    },
    "resGuestInfoType": {
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "type": "object",
      "properties": {
        "accompanyGuests": {
          "description": "List of guest names that are accompanying the reservation guest",
          "$ref": "#/definitions/resAccompanyGuestListType"
        },
        "address": {
          "description": "Address information that is attached to the reservation guest",
          "$ref": "#/definitions/addressSearchType"
        },
        "alternateFullName": {
          "description": "Altername full display name",
          "type": "string"
        },
        "alternateGivenName": {
          "description": "Alternate given name, first name or names",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "alternateSurname": {
          "description": "Alternate family name, last name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "birthDate": {
          "description": "Date of birth",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "email": {
          "description": "Email address",
          "$ref": "#/definitions/basicEmailType"
        },
        "externalInfo": {
          "description": "External information about the guest associated with the reservation.",
          "$ref": "#/definitions/resGuestExternalInfoType"
        },
        "fullName": {
          "description": "Full display name",
          "type": "string"
        },
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "guestLastStayInfo": {
          "description": "Contains information regarding the last stay of this guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "guestRestricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        },
        "guestRestrictedCode": {
          "description": "Guest profile restricted reason code",
          "type": "string"
        },
        "guestRestrictedReasonDesc": {
          "description": "Guest profile restricted reason description",
          "type": "string"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "membership": {
          "description": "The Membership object identifying the frequent customer reward program.",
          "$ref": "#/definitions/membershipInfoType"
        },
        "middleName": {
          "description": "The middle name of the person name",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
          "$ref": "#/definitions/namePrefixType"
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nameType": {
          "$ref": "#/definitions/nameTypeType"
        },
        "nationality": {
          "description": "Affiliation or ethnicity to a particular country.",
          "$ref": "#/definitions/countryNameType"
        },
        "phoneNumber": {
          "description": "Phone number",
          "$ref": "#/definitions/phoneNumberType"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        },
        "surnamePrefix": {
          "description": "e.g \"van der\", \"von\", \"de\"",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "vip": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "$ref": "#/definitions/vIPType"
        }
      }
    },
    "resHousekeepingType": {
      "description": "Holds housekeeping turndown service information for the room.",
      "type": "object",
      "properties": {
        "expectedServiceTime": {
          "description": "Expected Start Time for housekeeping task(s).",
          "type": "string"
        },
        "facilityTaskInfo": {
          "description": "The facility task applicable for the current day. This will be information only and not used for any updates.",
          "$ref": "#/definitions/facilityTaskType"
        },
        "instructions": {
          "description": "Turndown instructions for the room.",
          "type": "string"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "roomStatus": {
          "description": "Current room status. Current room status is populated only if room is assigned to the reservation and reservation is due in or in house.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "serviceTime": {
          "description": "This is the Turndown room service time.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "turndownRequested": {
          "description": "Indicates whether guest wants turndown facility or not.",
          "type": "boolean"
        }
      }
    },
    "resMobileNotificationsType": {
      "description": "Contains the status of Room Ready and Key Ready messages.",
      "type": "object",
      "properties": {
        "checkoutMessageReceived": {
          "description": "Indicates if the Mobile checkout message is received.",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Error message when Mobile Notification has failed.",
          "type": "string"
        },
        "keyReady": {
          "description": "Denotes the status of Key Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "requiresAction": {
          "description": "Indicates if user action is required. The action could be for sending Room Ready or Key Ready Notification. It could also be for initiating Checkout",
          "type": "boolean"
        },
        "roomReady": {
          "description": "Denotes the status of Room Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        }
      }
    },
    "resPaymentCardType": {
      "description": "Information on a credit card for the customer.",
      "type": "object",
      "properties": {
        "approvalAmountNeeded": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "Approval code sent by the credit card company on a successful authorization.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "attachCreditCardToProfile": {
          "description": "Attach the credit card to profile.",
          "type": "boolean"
        },
        "cardHolderName": {
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cardNumber": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberMasked": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardOrToken": {
          "description": "This contains information on whether credit card is tokenized (token enabled). A value of 'Token' indicates credit card is token enabled and 'CardNumber' indicates non token environment for this payment card type.",
          "$ref": "#/definitions/cardNumberTypeType"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
          "type": "boolean"
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "currentAuthorizedAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "expirationDate": {
          "description": "Expiration date of the credit card",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expirationDateExpired": {
          "type": "boolean"
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "swiped": {
          "type": "boolean"
        },
        "userDefinedCardType": {
          "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
          "type": "string",
          "maxLength": 2,
          "minLength": 0
        }
      }
    },
    "resPeriodicFolioType": {
      "description": "Information regarding periodic folios set on the reservation.",
      "type": "object",
      "properties": {
        "frequency": {
          "description": "Frequency in number of days when folios should be printed for this reservation.",
          "type": "integer"
        },
        "lastFolioDate": {
          "description": "Latest date when a folio was printed using the \"Periodic Batch Folios\" option",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastSettlementDate": {
          "description": "Latest date when a direct bill settlement was automatically done using the \"Direct Bill Batch Folios\" option.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "resPreConfiguredRoutingInstrType": {
      "description": "Instruction to attach Pre-Configured Routing Instructions to a Reservation.",
      "type": "object",
      "properties": {
        "profileType": {
          "description": "Profile Type with attached Routing Instruction.",
          "$ref": "#/definitions/resProfileTypeType"
        },
        "promotionCode": {
          "description": "Promotion Code with attached Complimentary Routing.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "Rate Code with attached Routing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resProfileTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Group",
        "TravelAgent",
        "Source",
        "ReservationContact",
        "BillingContact",
        "Addressee"
      ]
    },
    "resRevenueBalanceType": {
      "description": "Revenue and Balance Amount summary for the reservation.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "Balance amount on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "foodAndBevRevenue": {
          "description": "Food and Beverage Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "nonRevenue": {
          "description": "Total Non Revenue posted on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "otherRevenue": {
          "description": "Other Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomRevenue": {
          "description": "Room Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalFixedCharge": {
          "description": "Total Fixed Charges on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPayment": {
          "description": "Total payment received for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalRevenue": {
          "description": "Total Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "resSharedGuestInfoType": {
      "description": "Contains information regarding the share reservation.",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "profileId": {
          "$ref": "#/definitions/profileId"
        }
      }
    },
    "resSharedGuestListType": {
      "description": "Collection of shared guest reservations.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resSharedGuestInfoType"
      }
    },
    "reservationAllowedActionType": {
      "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
      "type": "string",
      "enum": [
        "Cancel",
        "Move",
        "PreCharge",
        "PostCharge",
        "FacilitySchedule",
        "Upsell",
        "PreCheckIn",
        "PostToNoShowCancel",
        "NoShow",
        "NameChange",
        "Discount",
        "EnrollToPrimaryMembership",
        "EnrollInProgress"
      ]
    },
    "reservationAllowedActionsType": {
      "description": "Allowed action.",
      "type": "array",
      "maxItems": 11,
      "items": {
        "$ref": "#/definitions/reservationAllowedActionType"
      }
    },
    "reservationBlockType": {
      "description": "Key information about the block for a reservation.",
      "type": "object",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers for the reservation.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "The Name of the block that is attached to the reservation.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "This is the HotelCode of the Block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationCertificateType": {
      "description": "Certificate is incentive.",
      "type": "string",
      "enum": [
        "Reward",
        "Incentive"
      ]
    },
    "reservationDepositType": {
      "description": "Reservation Deposit Type.",
      "type": "object",
      "properties": {
        "amountOwed": {
          "description": "Deposit Amount Owed.",
          "type": "number"
        },
        "amountPaid": {
          "description": "Deposit Amount Paid.",
          "type": "number"
        },
        "amountRequired": {
          "description": "Deposit Amount Required.",
          "type": "number"
        },
        "dueDate": {
          "description": "Deposit Due Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hasOutstanding": {
          "description": "Resolves whether reservation has outstanding deposit.",
          "type": "boolean"
        },
        "hasPaid": {
          "description": "Resolves whether reservation has paid deposit.",
          "type": "boolean"
        },
        "postingDate": {
          "description": "Deposit Posting Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "reservationFolioWindowType": {
      "description": "Folio window view which holds the set of folios for a reservation.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "Running balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "payeeInfo": {
          "description": "The window's configured payee information.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "paymentMethod": {
          "description": "Payment Method Type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationFolioWindowsType": {
      "description": "Collection of reservation folio windows.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationFolioWindowType"
      }
    },
    "reservationHistoryFutureInfoType": {
      "description": "Information of History and Future Reservation details attached to Profiles.",
      "type": "object",
      "properties": {
        "futureList": {
          "description": "Refer to Future list type document.",
          "$ref": "#/definitions/futureListType"
        },
        "historyList": {
          "description": "Refer to History list type document.",
          "$ref": "#/definitions/historyListType"
        }
      }
    },
    "reservationId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "reservationIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "reservationInfoType": {
      "description": "The Reservation class contains the current reservation being created or altered.",
      "type": "object",
      "properties": {
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "allowedActions": {
          "description": "Collection of reservation allowed actions.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "cancellationInfo": {
          "description": "Information regarding why reservation has been/was cancelled.",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "description": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          }
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "commissionPayoutTo": {
          "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
          "$ref": "#/definitions/commissionPayoutToType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "deposit": {
          "description": "Holds reservation deposit information.",
          "$ref": "#/definitions/reservationDepositType"
        },
        "displayColor": {
          "description": "Color setting of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "expectedServiceTime": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "guestPreferredCurrency": {
          "description": "Currency code preferred by guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelInterfaceStatusList": {
          "description": "Collection of Hotel Interfaces and rights, this is populated only when fetching interface status for rooms.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInterfaceStatusType"
          }
        },
        "hotelName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "housekeeping": {
          "description": "Information regarding housekeeping for this reservation.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "keyCount": {
          "description": "Number of keys created for the reservation.",
          "type": "integer"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastPrivacyPromptDate": {
          "description": "Last Privacy Prompt Date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready, Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "openFolio": {
          "description": "Returns true when reservation has an open folio.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.",
          "type": "boolean"
        },
        "parentReservationId": {
          "description": "Reservation ID of the parent reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "paymentMethod": {
          "description": "Payment Method.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preRegistered": {
          "description": "Defines if the reservation is pre-registered or not.",
          "type": "boolean"
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "reservationFolioWindows": {
          "description": "Collection of reservation folio windows.",
          "$ref": "#/definitions/reservationFolioWindowsType"
        },
        "reservationGuest": {
          "description": "Collection of guests associated with the reservation.",
          "$ref": "#/definitions/resGuestInfoType"
        },
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "reservationPaymentMethod": {
          "description": "Payment method used for this reservation",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "roomStatus": {
          "description": "Current room status",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "specials": {
          "description": "Set of reservation preferences which belongs to the Specials group.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/taxTypeType"
        },
        "turndownInfo": {
          "description": "Currency code preferred by guest.",
          "$ref": "#/definitions/reservationTurndownInfoType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is not in Waitlist status anymore.",
          "$ref": "#/definitions/waitlistResType"
        },
        "walkInIndicator": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "welcomeOffer": {
          "description": "This flag will determine wheather the reservation is eligible for Welcome Offer or not.",
          "type": "boolean"
        }
      }
    },
    "reservationInterfaceStatusType": {
      "description": "Hotel Interface Type for a reservation and status of the various services",
      "type": "object",
      "properties": {
        "hotelInterface": {
          "description": "Hotel interface information for the reservation",
          "$ref": "#/definitions/hotelInterfaceType"
        },
        "interfaceRights": {
          "description": "Contains a list of status/rights for the various services under this interface",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceRightsStatusType"
          }
        },
        "roomExtension": {
          "description": "Identifier for the room extension",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationPaymentMethodType": {
      "type": "object",
      "properties": {
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            }
          }
        },
        "folioView": {
          "type": "integer"
        },
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "paymentMethod": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationQueueInformationType": {
      "description": "Information regarding the Date, Duration and Priority of the reservation on Queue for Check in.",
      "type": "object",
      "properties": {
        "averageQueueTimeCurrentReservations": {
          "description": "The average time, in seconds, of the reservations currently in queue.",
          "type": "integer"
        },
        "averageQueueTimeToCheckIn": {
          "description": "The average time, in seconds, a reservation was on queue prior to Check-In.",
          "type": "integer"
        },
        "guestTextInfo": {
          "description": "Information for the message sent to the user",
          "$ref": "#/definitions/queueTextInfoType"
        },
        "priority": {
          "description": "The Queue Priority given to this reservation.",
          "type": "integer"
        },
        "queueDate": {
          "description": "The Business date on which the reservation was due to arrive and is currently placed on Queue for Check In.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "timeSpan": {
          "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
          "type": "object",
          "properties": {
            "duration": {
              "type": "string"
            },
            "durationInSeconds": {
              "description": "The total duration, in seconds, the reservation is on Queue.",
              "type": "integer"
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        }
      }
    },
    "reservationStayHistoryFutureInfoType": {
      "description": "Information of History and Future Reservation details attached to Profiles.",
      "type": "object",
      "properties": {
        "futureList": {
          "description": "Refer to Future list type document.",
          "$ref": "#/definitions/stayFutureListType"
        },
        "historyList": {
          "description": "Refer to History list type document.",
          "$ref": "#/definitions/stayHistoryListType"
        }
      }
    },
    "reservationTaxTypeInfo": {
      "description": "Provides information about the Tax Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "taxExemptNo": {
          "description": "Tax exempt number on the profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationTurndownInfoType": {
      "description": "Turndown information for a reservation",
      "type": "object",
      "properties": {
        "allowed": {
          "description": "Indicates if turndown is allowed or not",
          "type": "boolean"
        },
        "status": {
          "description": "Indicates turndown status, values could be required, not required, completed",
          "$ref": "#/definitions/turndownStatusType"
        }
      }
    },
    "revenueBucketListType": {
      "description": "Details about revenue summary.",
      "type": "object",
      "properties": {
        "bucket": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/revenueBucketType"
          }
        }
      }
    },
    "revenueBucketType": {
      "description": "The different revenue buckets of a profile.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of revenue type.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of revenue type.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "value": {
          "description": "Value of revenue.",
          "type": "number"
        }
      }
    },
    "revenueStatisticsDetailListType": {
      "description": "The collection of profile revenue statistics.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/revenueStatisticsDetailType"
      }
    },
    "revenueStatisticsDetailType": {
      "description": "The different statistics from the revenue of a profile.",
      "type": "object",
      "properties": {
        "centralRevenue": {
          "description": "Central Revenue Type for Stay.",
          "type": "number"
        },
        "guestName": {
          "description": "Name Of The Guest.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "localRevenue": {
          "description": "Local Revenue Type for Stay.",
          "type": "number"
        },
        "profileIdList": {
          "description": "Id of the guest profile in the reservation.",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationIdList": {
          "description": "Id of the reservation.",
          "$ref": "#/definitions/reservationIdList"
        },
        "revenueBuckets": {
          "description": "The different revenue buckets of a profile.",
          "$ref": "#/definitions/revenueBucketListType"
        },
        "revenueType": {
          "description": "Revenue Type for Stay.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "stayTimeSpan": {
          "description": "The stay time span of the reservation.",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "revenueStatisticsSummaryListType": {
      "description": "List of the detailed and yearly summarized information about the profile revenue.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/revenueStatisticsSummaryType"
      }
    },
    "revenueStatisticsSummaryType": {
      "description": "Summary of the revenue for a year",
      "type": "object",
      "properties": {
        "revenueBucketsSummary": {
          "description": "Details about revenue summary.",
          "$ref": "#/definitions/revenueBucketListType"
        },
        "revenueDetails": {
          "description": "Details regarding the profile revenue belonging to the specified year.",
          "$ref": "#/definitions/revenueStatisticsDetailListType"
        },
        "year": {
          "description": "Year of the revenue.",
          "type": "string",
          "maxLength": 4,
          "minLength": 4
        }
      }
    },
    "revenues": {
      "description": "Response object for fetching Membership Transaction Revenue.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "revenue": {
          "description": "Details on stay details for current point transaction.",
          "$ref": "#/definitions/membershipTransactionRevenuesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "rewardCertificateType": {
      "description": "Point Saver reward.",
      "type": "string",
      "enum": [
        "Regular",
        "StayAnytime",
        "PointSaver"
      ]
    },
    "rewardsInfoType": {
      "description": "Indicates membership base information like CurrentBalance,association and Owned card.",
      "type": "object",
      "properties": {
        "association": {
          "description": "Indicates guest association.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "currentBalance": {
          "description": "Current membership points.",
          "type": "number"
        },
        "mVCIOwner": {
          "description": "Indicates if the member is an MVCI owner.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "meetingPlanner": {
          "description": "Indicates if meeting planner is requested.",
          "type": "boolean"
        },
        "membershipDate": {
          "description": "Indicates membership date of the guest",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "membershipId": {
          "description": "Indicates membership id of the guest.",
          "type": "number"
        },
        "membershipLevel": {
          "description": "Indicates membership level of the guest",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipNo": {
          "description": "Indicates membership number of the guest",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "ownsVisaCard": {
          "description": "Indicates if guest owns a visa card.",
          "type": "boolean"
        }
      }
    },
    "roomClassCodeInfoType": {
      "description": "Code of the room class type.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomClassCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "roomOwnershipType": {
      "description": "Define the search criteria for retrieving room ownership records",
      "type": "object",
      "properties": {
        "contractNumber": {
          "description": "Contract number for room owner.",
          "type": "string"
        },
        "endDate": {
          "description": "End Date of the room ownership record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "profileId": {
          "description": "Profile ID of the room ownership record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "roomCategory": {
          "description": "Room Category of the room ownership record.",
          "type": "string"
        },
        "roomId": {
          "description": "Room Id of room owner.",
          "type": "string"
        },
        "roomOwnershipId": {
          "description": "Unique Id for Room Owner record.",
          "type": "integer"
        },
        "roomType": {
          "description": "Room Type of the room ownership record.",
          "type": "string"
        },
        "startDate": {
          "description": "Start Date of the room ownership record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "status": {
          "description": "Status of the room ownership record.",
          "type": "string"
        }
      }
    },
    "roomPreferencesType": {
      "description": "Indicates the guest's room preferences.",
      "type": "object",
      "properties": {
        "accessible": {
          "description": "Indicates if the member requires accessible rooms.",
          "type": "boolean"
        },
        "bedType": {
          "description": "Indicates the bed type preference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "beverage": {
          "description": "Indicates the beverage preference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "floor": {
          "description": "Indicates the floor type preference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "interests": {
          "description": "Indicates guest preferred interests.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "newspapers": {
          "description": "Indicates the newspaper preference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "pillow": {
          "description": "Indicates the pillow type preference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "precedence": {
          "description": "Indicates which room preference takes priority, bed type or smoking type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomAmenities": {
          "description": "Indicates the room amenities requested.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "smoking": {
          "description": "Indicates the smoking preference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "snack": {
          "description": "Indicates the snack preference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "rulePointsTypeType": {
      "description": "Possible membership points types.",
      "type": "string",
      "enum": [
        "Base",
        "Bonus"
      ]
    },
    "salesInfoType": {
      "description": "Provides sales information about the profiles of type company, travel agent, source and contact.",
      "type": "object",
      "properties": {
        "accountSource": {
          "description": "Defines the account source.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "accountType": {
          "description": "Defines the account type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "actionCode": {
          "description": "Defines the action code.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "businessSegments": {
          "description": "Defines the Business segments.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "competitionCode": {
          "description": "Defines the competition code.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code used to filter the sales information.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "industryCode": {
          "description": "Defines the industry code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "influence": {
          "description": "Defines the influence for the contact profile.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "preferredRoom": {
          "description": "Defines the Preferred Room for profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "priority": {
          "description": "Defines the priority.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "roomsPotential": {
          "description": "Defines the rooms potential.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "scope": {
          "description": "Defines the scope.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "scopeCity": {
          "description": "Defines the scope city.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "searchMatchType": {
      "description": "Search match indicating attribute and the matching value.",
      "type": "object",
      "properties": {
        "attribute": {
          "description": "Search match attribute.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "value": {
          "description": "Search match value.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "searchMatchesType": {
      "description": "List of Generic Name-Value-Pair Parameters used for super search matches.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/searchMatchType"
      }
    },
    "setProfileOwnersCriteriaType": {
      "description": "Criteria to update the profile owners.",
      "type": "object",
      "properties": {
        "owners": {
          "description": "Collection of owners that will be updated.",
          "$ref": "#/definitions/ownersType"
        },
        "profileIdList": {
          "description": "Id of the profile of which its owners will be updated.",
          "$ref": "#/definitions/profileIdList"
        }
      }
    },
    "sourceCodeInfoType": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceGroup": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "sourceOfSaleType": {
      "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
      "type": "object",
      "properties": {
        "sourceCode": {
          "description": "The entity/channel who made the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceType": {
          "description": "Type of entity/channel who made the reservation..",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "stagedAddressCleansStatus": {
      "description": "Simple type for status of staged address cleansing.",
      "type": "string",
      "enum": [
        "NotCleansed",
        "Cleansed",
        "Failure"
      ]
    },
    "stagedProfile": {
      "description": "Request object for changing the staged profile.",
      "type": "object",
      "properties": {
        "changeInstructions": {
          "$ref": "#/definitions/stagedProfileChangeInstructionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "stagedProfile": {
          "$ref": "#/definitions/stagedProfileType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stagedProfileAddressType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "barCode": {
          "description": "The postal barcode for the address.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "cleansStatus": {
          "description": "Status of Address Cleansing.",
          "$ref": "#/definitions/stagedAddressCleansStatus"
        },
        "errorDescription": {
          "description": "The error in address information in a staged profile with an invalid status",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "inactiveDate": {
          "description": "Inactivation date of the record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postalCodeExtension": {
          "description": "Postal code extension.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "stagedProfileBillingInstructionType": {
      "description": "Configured Billing Instruction which represents a set of Transaction Codes.",
      "type": "object",
      "properties": {
        "billingCode": {
          "description": "Unique identifier for the Billing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "desc": {
          "description": "Billing Instruction code description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "errorDescription": {
          "description": "The error in billing instruction information in a staged profile with an invalid status",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel context of the Billing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "stagedProfileChangeInstructionsType": {
      "description": "Information about instructions to change the staged profile.",
      "type": "object",
      "properties": {
        "fullyOverlay": {
          "description": "If true then delete and recreat the staged profile details.",
          "type": "boolean"
        }
      }
    },
    "stagedProfileCharacterUDFType": {
      "description": "Used to hold user defined field of Character/String Type.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "errorDescription": {
          "description": "The error in a user defined field in a staged profile with an invalid status",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "name": {
          "description": "Used to hold user defined field of Character Type. It is highly recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "tableName": {
          "description": "PMS table name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "valid": {
          "description": "Indicates whether the UDF information is valid.",
          "type": "boolean"
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "stagedProfileCharacterUDFsType": {
      "description": "Used to hold collection of user defined fields of Character/String Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/stagedProfileCharacterUDFType"
      }
    },
    "stagedProfileCommentInfoType": {
      "description": "Comment related to the profile/reservation.",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "errorDescription": {
          "description": "The error in a user defined field in a staged profile with an invalid status.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "inActiveDate": {
          "description": "Indicates comment inactive date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lineNo": {
          "description": "The line number of the comment.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "valid": {
          "description": "Indicates whether the comment information is valid.",
          "type": "boolean"
        }
      }
    },
    "stagedProfileCommentInfosType": {
      "description": "List of Notes for the customer.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/stagedProfileCommentInfoType"
      }
    },
    "stagedProfileCompanyType": {
      "type": "object",
      "properties": {
        "alternateLanguage": {
          "description": "Alternate Language of the company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "alternateName": {
          "description": "Alternate Name of the Company. Mainly, it's the name of the company written in the Alternate Language.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "blacklist": {
          "description": "This element tells if profile is blacklisted or not.",
          "type": "boolean"
        },
        "businessLocale": {
          "description": "A jurisdiction(Territory) in which a company is authorized to do business.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "businessTitle": {
          "description": "Business Title.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "commissionCode": {
          "description": "Commission code of the company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "companyName2": {
          "description": "Second Name of the company.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "companyName3": {
          "description": "Third Name of the company.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "corporateIdType": {
          "description": "The type of corporate ID",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "creditRating": {
          "description": "Credit Rating of the company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "errors": {
          "description": "The error in stage profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stagedProfileErrorType"
          }
        },
        "iATAInfo": {
          "description": "IATA Information of the profile.",
          "$ref": "#/definitions/iATAInfoType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nationalityDescription": {
          "description": "Nationality code description",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "vipStatus": {
          "description": "VIP status of the company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "stagedProfileCustomerType": {
      "description": "Contains basic data on the customer's identity, location, relationships, finances, memberships, etc.",
      "type": "object",
      "properties": {
        "alienInfo": {
          "description": "Immigration/visa information of a foreign person.",
          "$ref": "#/definitions/alienInfoType"
        },
        "alternateLanguage": {
          "description": "ALternate language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "birthCountry": {
          "description": "Country of birth.",
          "$ref": "#/definitions/countryNameType"
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        },
        "birthPlace": {
          "description": "Place of birth.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "blacklist": {
          "description": "This element tells if profile is blacklisted or not.",
          "type": "boolean"
        },
        "businessTitle": {
          "description": "Business Title.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "citizenCountry": {
          "description": "Name of the (self-professed) country that is claimed for citizenship.",
          "$ref": "#/definitions/countryNameType"
        },
        "companyInfo": {
          "description": "Company Information of the Profile.",
          "$ref": "#/definitions/companyInfoType"
        },
        "creditRating": {
          "description": "Credit Rating of the customer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "customerValue": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "errors": {
          "description": "The error in stage profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stagedProfileErrorType"
          }
        },
        "gender": {
          "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "identifications": {
          "description": "List of identification of the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "identificationInfo": {
              "description": "Collection of detailed information on the identification of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/identificationInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "legalCompany": {
          "description": "Name Of the company the individual is associated with.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nationalityDescription": {
          "description": "Nationality code description",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "personName": {
          "description": "Detailed name information for the customer.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/personNameType"
          }
        },
        "privateProfile": {
          "description": "This element tells profile is property exclusive or not.",
          "type": "boolean"
        },
        "profession": {
          "description": "Profession of a person.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "vipStatus": {
          "description": "VIP status of the customer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "stagedProfileDateUDFType": {
      "description": "Used to hold user defined field of Date Type.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "errorDescription": {
          "description": "The error in a user defined field in a staged profile with an invalid status",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "name": {
          "description": "Used to hold user defined field of Date Type. It is highly recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "tableName": {
          "description": "PMS table name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "valid": {
          "description": "Indicates whether the UDF information is valid.",
          "type": "boolean"
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "stagedProfileDateUDFsType": {
      "description": "Used to hold collection of user defined fields of Date Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/stagedProfileDateUDFType"
      }
    },
    "stagedProfileDetails": {
      "description": "Response object for the staged profile.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "stagedProfile": {
          "description": "Response object for the staged profile.",
          "$ref": "#/definitions/stagedProfileType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stagedProfileEmailType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "defaultConfirmation": {
          "description": "Indicates whether the email is the default confirmation method.",
          "type": "boolean"
        },
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "errorDescription": {
          "description": "The error in email information in a staged profile with an invalid status",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "inactiveDate": {
          "description": "Inactivation date of the record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "stagedProfileErrorField": {
      "description": "Simple type for stage profile error filed to specify which filed in the stage profile has error.",
      "type": "string",
      "enum": [
        "PrimaryLanguage",
        "AlternateLanguag",
        "Gender",
        "ProfileType",
        "Nationality",
        "Prefix",
        "VIPStatus"
      ]
    },
    "stagedProfileErrorType": {
      "description": "Criteria to fetch the staged profile.",
      "type": "object",
      "properties": {
        "errorDescription": {
          "description": "The error description for the staged profile.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "field": {
          "description": "The field that has error.",
          "$ref": "#/definitions/stagedProfileErrorField"
        }
      }
    },
    "stagedProfileIdentificationsType": {
      "description": "Information on the identification of the customer.",
      "type": "object",
      "properties": {
        "documentResort": {
          "description": "Hotel code to which the document belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "errorDescription": {
          "description": "The error in negotiated rate information in a staged profile with an invalid status",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "identification": {
          "description": "Detailed information on the identification of the customer.",
          "$ref": "#/definitions/identificationType"
        },
        "inactiveDate": {
          "description": "The date when the record was inactivated.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "stagedProfileKeywordType": {
      "type": "object",
      "properties": {
        "errorDescription": {
          "description": "The error in keyword information in a staged profile with an invalid status",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "keyword": {
          "description": "The keyword value.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "keywordDetail": {
          "description": "The keyword new value, in case keyword value is modified.",
          "$ref": "#/definitions/keywordDetailType"
        },
        "keywordType": {
          "description": "The type of keyword",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "stagedProfileMembershipType": {
      "description": "Detailed information of the memberships.",
      "type": "object",
      "properties": {
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "deviceCode": {
          "description": "Device encoded string.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "deviceDisabledDate": {
          "description": "Device disabled date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "enrollmentCode": {
          "description": "Enrollment code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "errorDescription": {
          "description": "The error in membership information in a staged profile with an invalid status.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "inactiveDate": {
          "description": "Inactivation date of the record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "membershipStatus": {
          "description": "Membership status.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "registrationResort": {
          "description": "Registration resort.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "updateExistingMembership": {
          "description": "Indicates if existing information for primary membership should be overwritten.",
          "type": "boolean"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        }
      }
    },
    "stagedProfileNegotiatedRateType": {
      "description": "This holds a list of NegotiatedInfoType.",
      "type": "object",
      "properties": {
        "errorDescription": {
          "description": "The error in negotiated rate information in a staged profile with an invalid status",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel code for the negotiated rate.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "negotiatedInfoList": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/negotiatedInfoType"
          }
        },
        "rateCode": {
          "description": "Rate plan code for the negotiated rate.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "stagedProfileNumericUDFType": {
      "description": "Used to hold user defined field of Numeric Type. It is highly recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "errorDescription": {
          "description": "The error in a user defined field in a staged profile with an invalid status",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "name": {
          "description": "Name of user defined field.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "tableName": {
          "description": "PMS table name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "valid": {
          "description": "Indicates whether the UDF information is valid.",
          "type": "boolean"
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "number"
        }
      }
    },
    "stagedProfileNumericUDFsType": {
      "description": "Used to hold collection of user defined fields of Numeric Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/stagedProfileNumericUDFType"
      }
    },
    "stagedProfilePhoneType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "defaultConfirmation": {
          "description": "Indicates whether the phone is the default confirmation method.",
          "type": "boolean"
        },
        "errorDescription": {
          "description": "The error in telephone information in a staged profile with an invalid status.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "inactiveDate": {
          "description": "Inactivation date of the record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "stagedProfilePreferenceType": {
      "description": "Guest Preference details for the profile.",
      "type": "object",
      "properties": {
        "copyToProfile": {
          "description": "Specifies whether to copy the reservation preference to the profile or not.",
          "type": "boolean"
        },
        "description": {
          "description": "Preference Description for display purposes.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "errorDescription": {
          "description": "The error in Preference information in a staged profile with an invalid status",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "excludedPreferencesCount": {
          "description": "Specifies the count of preferences excluded for the attached reservation preference.",
          "type": "integer"
        },
        "global": {
          "description": "Whether this preference is property specific or not.",
          "type": "boolean"
        },
        "hotels": {
          "description": "If specified preference belongs to the Hotels listed, otherwise it is a global preference.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "inactiveDate": {
          "description": "Inactivation date of the record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "preferenceCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferenceValue": {
          "description": "Preference value for display purposes.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "resortPrefernce": {
          "description": "Prefernce resort.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "source": {
          "description": "Source of the preference.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "valid": {
          "description": "Indicated whether the preference information is valid.",
          "type": "boolean"
        }
      }
    },
    "stagedProfileRoutingInstructionType": {
      "type": "object",
      "properties": {
        "billingInstruction": {
          "description": "Configured Billing Instruction in a staged profile with an invalid status",
          "$ref": "#/definitions/stagedProfileBillingInstructionType"
        },
        "transactionInfo": {
          "description": "Transaction code information in a staged profile with an invalid status",
          "$ref": "#/definitions/stagedProfileTrxInfoType"
        }
      }
    },
    "stagedProfileStatus": {
      "description": "Simple type for status of the staged profiles.",
      "type": "string",
      "enum": [
        "Valid",
        "Invalid",
        "MatchFound",
        "New"
      ]
    },
    "stagedProfileSummariesType": {
      "description": "A collection of staged profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "profileInfo": {
          "description": "Basic information about staged profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stagedProfileSummaryType"
          }
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "stagedProfileSummaryType": {
      "description": "Basic information about staged profile.",
      "type": "object",
      "properties": {
        "country": {
          "description": "The country of residence where the property is located that has received the staged profile.",
          "$ref": "#/definitions/countryNameType"
        },
        "hotelId": {
          "description": "Hotel code associated with the staged profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "importDate": {
          "description": "The date on which the staged profile has been received.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "profileIdList": {
          "description": "List of unique identifier of staged profile.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "profileName": {
          "description": "Name information for the staged profile.",
          "$ref": "#/definitions/profileNameType"
        },
        "profileType": {
          "description": "Type of the staged profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "region": {
          "description": "The region of the staged profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "stageStatus": {
          "description": "The status of the staged profiles.",
          "$ref": "#/definitions/stagedProfileStatus"
        }
      }
    },
    "stagedProfileTrxInfoType": {
      "description": "Transaction codes info.",
      "type": "object",
      "properties": {
        "articles": {
          "description": "The List of Articles defined for this transaction code, when using the Articles functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/articleInfoType"
          }
        },
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "errorDescription": {
          "description": "The error in transaction code information in a staged profile with an invalid status",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionGroup": {
          "description": "Category of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionSubGroup": {
          "description": "Sub category of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "stagedProfileType": {
      "description": "Detailed information about the staged profile.",
      "type": "object",
      "properties": {
        "addresses": {
          "description": "Collection of detailed information about address for the staged profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stagedProfileAddressType"
          }
        },
        "comments": {
          "description": "List of Notes for the customer.",
          "$ref": "#/definitions/stagedProfileCommentInfosType"
        },
        "company": {
          "description": "Detailed company information for this profile.",
          "$ref": "#/definitions/stagedProfileCompanyType"
        },
        "customer": {
          "description": "Detailed customer information for this profile.",
          "$ref": "#/definitions/stagedProfileCustomerType"
        },
        "emails": {
          "description": "Collection of detailed information about email for the staged profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stagedProfileEmailType"
          }
        },
        "hotelId": {
          "description": "Hotel code that the staged profile belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "identifications": {
          "description": "Collection of detailed information about identification for the staged profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stagedProfileIdentificationsType"
          }
        },
        "importDate": {
          "description": "The date on which the staged profile has been received.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "keywords": {
          "description": "Collection of detailed information about keyword for the staged profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stagedProfileKeywordType"
          }
        },
        "mailingActions": {
          "description": "Contains collection of mailing action list associated with the profile",
          "$ref": "#/definitions/mailingActionsType"
        },
        "memberships": {
          "description": "Collection of detailed information about memberships for the staged profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stagedProfileMembershipType"
          }
        },
        "negotiatedRates": {
          "description": "Collection of detailed information about negotiated rates for the staged profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stagedProfileNegotiatedRateType"
          }
        },
        "preferences": {
          "description": "Collection of detailed information about preferences for the staged profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stagedProfilePreferenceType"
          }
        },
        "privacyInfo": {
          "description": "Contains privacy related information associated with the profile",
          "$ref": "#/definitions/privacyInfoType"
        },
        "profileIdList": {
          "description": "List of unique identifier of staged profile.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "profileType": {
          "description": "Type of the staged profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "routingInstructions": {
          "description": "Collection of routing instructions for the staged profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stagedProfileRoutingInstructionType"
          }
        },
        "stageStatus": {
          "description": "The status of the staged profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "telephones": {
          "description": "Collection of detailed information about telephone/fax for the staged profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stagedProfilePhoneType"
          }
        },
        "uRLs": {
          "description": "Collection of detailed information about web url/address for the staged profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stagedProfileURLType"
          }
        },
        "userDefinedFields": {
          "description": "List of user defined fields for the staged profile.",
          "$ref": "#/definitions/stagedProfileUserDefinedFieldsType"
        }
      }
    },
    "stagedProfileURLType": {
      "description": "Web site address.",
      "type": "object",
      "properties": {
        "defaultConfirmation": {
          "description": "Indicates whether the phone is the default confirmation method.",
          "type": "boolean"
        },
        "errorDescription": {
          "description": "The error in URL in a staged profile with an invalid status",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "inactiveDate": {
          "description": "Inactivation date of the record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "stagedProfileUserDefinedFieldsType": {
      "description": "Used to hold user defined fields(UDFs) for staged profile.",
      "type": "object",
      "properties": {
        "characterUDFs": {
          "description": "Collection of user defined fields of Character/String Type.",
          "$ref": "#/definitions/stagedProfileCharacterUDFsType"
        },
        "dateUDFs": {
          "description": "Collection of user defined fields of Date Type.",
          "$ref": "#/definitions/stagedProfileDateUDFsType"
        },
        "numericUDFs": {
          "description": "Collection of user defined fields of Numeric Type.",
          "$ref": "#/definitions/stagedProfileNumericUDFsType"
        }
      }
    },
    "stagedProfiles": {
      "description": "Response object for the staged profiles.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "stagedProfiles": {
          "description": "A collection of staged profiles.",
          "$ref": "#/definitions/stagedProfileSummariesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "statisticsReportType": {
      "description": "Indicate to get revenue of Stay Records.",
      "type": "string",
      "enum": [
        "Reservation",
        "Revenue",
        "ProfileStayRecords",
        "DetailStayRecordsRevenue"
      ]
    },
    "statisticsRevenueTypeType": {
      "description": "Contains Revenue information",
      "type": "object",
      "properties": {
        "revenueAmount": {
          "type": "number"
        },
        "revenueLabel": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "statisticsSummaryListType": {
      "description": "Collection of Profile statistics summary information",
      "type": "object",
      "properties": {
        "profileHotelStatisticsbyYearSummary": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/profileHotelStatisticsbyYearSummaryType"
          }
        },
        "profileStatisticsbyYearSummary": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/profileStatisticsbyYearSummaryType"
          }
        }
      }
    },
    "status": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stayDetailSummaryType": {
      "description": "Contains stay related information such as reservation nights,room nights,arrival rooms,cancel rooms,etc.",
      "type": "object",
      "properties": {
        "arrivalRooms": {
          "type": "integer"
        },
        "cancelRooms": {
          "type": "integer"
        },
        "dayUseRooms": {
          "type": "integer"
        },
        "noShowRooms": {
          "type": "integer"
        },
        "roomNights": {
          "type": "integer"
        },
        "stayReservation": {
          "$ref": "#/definitions/stayReservationType"
        },
        "totalBooked": {
          "description": "Total Booked Stays/Reservations for Profile",
          "type": "integer"
        },
        "totalStays": {
          "description": "Total Stayed Reservations for Profile",
          "type": "integer"
        }
      }
    },
    "stayDetailType": {
      "description": "The Reservation class contains the current reservation being created or altered.",
      "type": "object",
      "properties": {
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "allotmentCode": {
          "description": "Allotment Code for stay record.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "allowedActions": {
          "description": "Collection of reservation allowed actions.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "bookedArrivalDate": {
          "description": "Booked arrival date of the stay record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "bookedDepartureDate": {
          "description": "Booked departure date of the stay record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "bookedRoomType": {
          "description": "Indicate the category of room originally booked.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bookingDate": {
          "description": "Booking date of the stay record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "cancellationDate": {
          "description": "Cancellation date of the stay record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "cancellationInfo": {
          "description": "Information regarding why reservation has been/was cancelled.",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "description": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          }
        },
        "cancelledRoomNights": {
          "description": "Number of cancelled room nights.",
          "type": "integer"
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "channelCode": {
          "description": "Indicate channel for stay.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "commissionPayoutTo": {
          "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
          "$ref": "#/definitions/commissionPayoutToType"
        },
        "complimentaray": {
          "description": "Indicates the profile stay record is complimentaray.",
          "type": "boolean"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "deposit": {
          "description": "Holds reservation deposit information.",
          "$ref": "#/definitions/reservationDepositType"
        },
        "displayColor": {
          "description": "Color setting of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "exchangeRate": {
          "description": "Exchange Rate.",
          "type": "number"
        },
        "expectedServiceTime": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "guestPreferredCurrency": {
          "description": "Currency code preferred by guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelInterfaceStatusList": {
          "description": "Collection of Hotel Interfaces and rights, this is populated only when fetching interface status for rooms.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInterfaceStatusType"
          }
        },
        "hotelName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "housekeeping": {
          "description": "Information regarding housekeeping for this reservation.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "keyCount": {
          "description": "Number of keys created for the reservation.",
          "type": "integer"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastPrivacyPromptDate": {
          "description": "Last Privacy Prompt Date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready, Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "noShowRoomNights": {
          "description": "Number of no show room nights.",
          "type": "integer"
        },
        "openFolio": {
          "description": "Returns true when reservation has an open folio.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.",
          "type": "boolean"
        },
        "paymentMethod": {
          "description": "Payment Method.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preRegistered": {
          "description": "Defines if the reservation is pre-registered or not.",
          "type": "boolean"
        },
        "primarySharer": {
          "description": "Indicates whether the guest was the primary sharer or not.",
          "type": "boolean"
        },
        "promotionCode": {
          "description": "Promotion code associated with the stay.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "reservationFolioWindows": {
          "description": "Collection of reservation folio windows.",
          "$ref": "#/definitions/reservationFolioWindowsType"
        },
        "reservationGuest": {
          "description": "Collection of guests associated with the reservation.",
          "$ref": "#/definitions/resGuestInfoType"
        },
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "reservationPaymentMethod": {
          "description": "Payment method used for this reservation",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationSourceCode": {
          "description": "Indicates the profile stay record reservation source code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationSourceType": {
          "description": "Indicates the profile stay record reservation source Type.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "roomStatus": {
          "description": "Current room status",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "shareNumber": {
          "description": "Indicates the share Number for Stay if reservation was a share.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "specials": {
          "description": "Set of reservation preferences which belongs to the Specials group.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "stayRecordId": {
          "description": "Stay Record identifier.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/taxTypeType"
        },
        "travelAgentReferenceId": {
          "description": "Travel Agent reference number for stay record.",
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "turndownInfo": {
          "description": "Currency code preferred by guest.",
          "$ref": "#/definitions/reservationTurndownInfoType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is not in Waitlist status anymore.",
          "$ref": "#/definitions/waitlistResType"
        },
        "walkInIndicator": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "welcomeOffer": {
          "description": "This flag will determine wheather the reservation is eligible for Welcome Offer or not.",
          "type": "boolean"
        }
      }
    },
    "stayFutureListType": {
      "description": "A collection of reservation history details attached to Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : Future reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "stayHistoryListType": {
      "description": "A collection of reservation history details attached to Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "stayInfoType": {
      "description": "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.",
      "type": "object",
      "properties": {
        "adultCount": {
          "description": "A collection of Guest Counts associated with Room Stay.",
          "type": "integer"
        },
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "balance": {
          "description": "Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "bookingChannelCode": {
          "description": "Booking channel code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "childCount": {
          "description": "A collection of Child Counts associated with Room Stay.",
          "type": "integer"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "componentRoomType": {
          "description": "True indicates room type is a component type.",
          "type": "boolean"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "depositPayments": {
          "description": "A collection of deposit and/or payments for the Room Stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "expectedTimes": {
          "description": "The expected arrival, return and departure times of the guest.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "fixedRate": {
          "description": "True if the rate is a fixed rate, otherwise false",
          "type": "boolean"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "guestServiceStatus": {
          "description": "Service Status of In House guest like DND or MUP",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "linkCode": {
          "description": "Party code",
          "type": "string",
          "maxLength": 2000
        },
        "marketCode": {
          "description": "Market code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketDescription": {
          "description": "Description of Market code",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "numberOfRooms": {
          "description": "Room Id",
          "type": "integer"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "points": {
          "description": "The Points contains the number of points used to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "promotion": {
          "description": "Promotion Codes",
          "$ref": "#/definitions/promotionType"
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "ratePlanCode": {
          "description": "Rate plan code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateSuppressed": {
          "description": "Whether this rate should be suppressed from view",
          "type": "boolean"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "roomClass": {
          "description": "Room class code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomId": {
          "description": "Room Id",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "roomType": {
          "description": "Room type code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomTypeCharged": {
          "description": "Room type code that was charged",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "scheduledCheckoutTime": {
          "description": "Indicates that this reservation is scheduled for automated check out.",
          "type": "string",
          "format": "date"
        },
        "sourceCode": {
          "description": "Source of business",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "totalAmount": {
          "description": "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "upgradedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "stayReservationInfoType": {
      "description": "The Reservation class contains the current reservation being created or altered.",
      "type": "object",
      "properties": {
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "parentReservationId": {
          "description": "Reservation ID of the parent reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        }
      }
    },
    "stayReservationType": {
      "description": "Enumeration for stay types.",
      "type": "string",
      "enum": [
        "Transient",
        "Block"
      ]
    },
    "stayStatisticsDetailListType": {
      "description": "Collection of stay statistics detail information",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/stayStatisticsDetailType"
      }
    },
    "stayStatisticsDetailType": {
      "description": "Contains stay statistics detail information",
      "type": "object",
      "properties": {
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "revenue": {
          "$ref": "#/definitions/stayStatisticsRevenueType"
        },
        "stayDetail": {
          "$ref": "#/definitions/stayDetailType"
        },
        "year": {
          "type": "string"
        }
      }
    },
    "stayStatisticsRevenueType": {
      "description": "Contains different list of stay statistics revenue information",
      "type": "object",
      "properties": {
        "averageDailyRate": {
          "$ref": "#/definitions/statisticsRevenueTypeType"
        },
        "currency": {
          "type": "string"
        },
        "extraRevenue": {
          "$ref": "#/definitions/statisticsRevenueTypeType"
        },
        "fBRevenue": {
          "$ref": "#/definitions/statisticsRevenueTypeType"
        },
        "nonRevenue": {
          "$ref": "#/definitions/statisticsRevenueTypeType"
        },
        "roomRevenue": {
          "$ref": "#/definitions/statisticsRevenueTypeType"
        },
        "stayReservation": {
          "$ref": "#/definitions/stayReservationType"
        },
        "totalRevenue": {
          "$ref": "#/definitions/statisticsRevenueTypeType"
        }
      }
    },
    "stringLength100": {
      "description": "Used for Character Strings, length 0 to 100.",
      "type": "string",
      "maxLength": 100,
      "minLength": 0
    },
    "stringLength200": {
      "description": "Used for Character Strings, length 0 to 200.",
      "type": "string",
      "maxLength": 200,
      "minLength": 0
    },
    "stringLength40": {
      "description": "Used for Character Strings, length 0 to 40.",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "stringLength80": {
      "description": "Used for Character Strings, length 0 to 80.",
      "type": "string",
      "maxLength": 80,
      "minLength": 0
    },
    "successType": {
      "description": "Returning an empty element of this type indicates the successful processing of an message. This is used in conjunction with the Warning Type to report any warnings or business errors.",
      "type": "object"
    },
    "surnameType": {
      "description": "Family name, last name.",
      "type": "string",
      "maxLength": 80,
      "minLength": 0
    },
    "suspendedAddresses": {
      "description": "Response object for fetching unique company profile.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "suspendedAddressesInfo": {
          "description": "Suspended Addresses List",
          "$ref": "#/definitions/suspendedAddressesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "suspendedAddressesInfoType": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Corporate id of the profile.",
          "type": "integer"
        },
        "clientID": {
          "description": "Corporate id of the profile.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "country": {
          "description": "The country of residence where the property is located e.",
          "$ref": "#/definitions/countryNameType"
        },
        "firstName": {
          "description": "First Name of the Profile against which the Suspended Addresses are fetched.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "hotelId": {
          "description": "Resort of the Profile",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "matchCode": {
          "description": "Match Code of the Address Validation Performed from the batch processing",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "name": {
          "description": "Last Name of the Profile against which the Suspended Addresses are fetched.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "profileId": {
          "description": "Opera ID for the profile attached to the address.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "profileType": {
          "description": "Profile Type of the Profile against which the Suspended Addresses are fetched..",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "validateDate": {
          "description": "Validate Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "suspendedAddressesType": {
      "description": "List of suspended addresses returned, based on the entered seach criteria.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "suspendedAddressesInfo": {
          "description": "A collection of suspended Addresses.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/suspendedAddressesInfoType"
          }
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "suspendedProfileErrorSummaryInfo": {
      "description": "Response object for fetch suspended profile Errors summary. This object contains collection of profile erros and count of how many profiles encountered this error.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "suspendedProfileErrorSummary": {
          "description": "Indicates response of the suspended profile errors summary.",
          "$ref": "#/definitions/suspendedProfileErrorsSummaryType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "suspendedProfileErrorSummaryType": {
      "description": "Type which represents suspended profile errors information.",
      "type": "object",
      "properties": {
        "errorCount": {
          "description": "Count of how many profiles encountered this error.",
          "type": "number"
        },
        "errorDescription": {
          "description": "Represents Error summary of the suspended profiles.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "suspendedProfileErrorsSummaryType": {
      "description": "Collection of profile error summary.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/suspendedProfileErrorSummaryType"
      }
    },
    "synchronizeProfileSubscriptionsCriteriaType": {
      "description": "Criteria for searching profile subscriptions.",
      "type": "object",
      "properties": {
        "databaseIds": {
          "description": "List of codes identifying the external database record which is linked to external systems.",
          "$ref": "#/definitions/databaseIDListType"
        },
        "profileId": {
          "description": "Unique ID of the profile.",
          "$ref": "#/definitions/profileId"
        }
      }
    },
    "taxTypeType": {
      "description": "Provides information about the Tax Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        }
      }
    },
    "telephoneInfoType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "telephoneType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "extension": {
          "description": "Extension to reach a specific party at the phone number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        }
      }
    },
    "tierAdministrationType": {
      "description": "Do not upgrade membership. The membership may be downgraded.",
      "type": "string",
      "enum": [
        "Disabled",
        "NoUpgrade"
      ]
    },
    "timeSpanType": {
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "type": "object",
      "properties": {
        "duration": {
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "traceResolveType": {
      "type": "object",
      "properties": {
        "resolvedBy": {
          "description": "User that resolved the trace",
          "type": "string"
        },
        "resolvedOn": {
          "description": "Date the trace was resolved",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "traceTimeInfoType": {
      "type": "object",
      "properties": {
        "dateTimeSpan": {
          "description": "Time span for the trace.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "enteredBy": {
          "description": "User that entered this trace.",
          "type": "string"
        },
        "traceOn": {
          "description": "Date of the trace.",
          "type": "string",
          "format": "date-time"
        },
        "traceTime": {
          "description": "Time of the trace",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "traceType": {
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "departmentId": {
          "description": "Indicates the Department code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "reservationId": {
          "description": "Reservation ID of the reservation for which the traces are to be retrieved.",
          "$ref": "#/definitions/reservationId"
        },
        "resolveInfo": {
          "description": "Information regarding the status of the trace",
          "$ref": "#/definitions/traceResolveType"
        },
        "timeInfo": {
          "description": "Date of the trace.",
          "$ref": "#/definitions/traceTimeInfoType"
        },
        "traceText": {
          "description": "The information this trace contains.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "transactionSummaryAttributeType": {
      "description": "Attributes of Summary transactions.",
      "type": "object",
      "properties": {
        "customLabel": {
          "description": "Attribute Label",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "value": {
          "description": "Attribute Value",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "trxCodesInfoType": {
      "description": "List of Transaction codes info.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxInfoType"
      }
    },
    "trxInfoType": {
      "description": "Transaction codes info.",
      "type": "object",
      "properties": {
        "articles": {
          "description": "The List of Articles defined for this transaction code, when using the Articles functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/articleInfoType"
          }
        },
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionGroup": {
          "description": "Category of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionSubGroup": {
          "description": "Sub category of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "turndownStatusType": {
      "description": "Simple type for turndown status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Required, Not Required and Completed.",
      "type": "string",
      "enum": [
        "Required",
        "NotRequired",
        "Compeleted"
      ]
    },
    "uRLInfoType": {
      "description": "Web site address.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "url": {
          "description": "Provides URL information.",
          "$ref": "#/definitions/uRLType"
        }
      }
    },
    "uRLType": {
      "description": "Web site address, in IETF(The Internet Engineering Task Force) specified format.",
      "type": "object",
      "properties": {
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "type": {
          "description": "Defines the purpose of the URL address, such as personal, business, public, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "uniqueIDListType": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "uniqueID_Type": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "upgradeAvailabilityType": {
      "description": "Member Award availability details based on chosen award types as Product,Rate,Upgrade,FT Payment and Other.",
      "type": "object",
      "properties": {
        "awardNumber": {
          "description": "An identifying number of the award, assigned by the system when the award was issued.",
          "type": "number"
        },
        "awardType": {
          "description": "Unique code that identifies this award.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "cancelPenaltyCharge": {
          "description": "The cancel penalty charge.",
          "type": "number"
        },
        "cancelPenaltyDays": {
          "description": "Number of days before arrival when a reservation may be cancelled without an award points penalty.",
          "type": "number"
        },
        "cancelPenaltyPoints": {
          "description": "The award points that will be forfeited if the cancel penalty charge is applied.",
          "type": "number"
        },
        "cancelPenaltyType": {
          "description": "The penalty charge is either a percentage or a flat number of points.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "fromRoom": {
          "description": "Indicates room type code for the room prior to the upgrade.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "fromRoomCategory": {
          "description": "Indicates room type code for the room prior to the upgrade.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "fromRoomDescription": {
          "description": "Indicates room type Description for the room prior to the upgrade.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "hotelId": {
          "description": "HotelCode where the award will be consumed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "pointsRequired": {
          "description": "The number of points that must be redeemed for this award.",
          "type": "number"
        },
        "rawIssueKey": {
          "description": "Issue key in format of Raw data.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "stayDate": {
          "description": "The date of the reservation associated with the award. There may be more than one date (multiple nights) associated with award.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "toRoom": {
          "description": "Indicates room type code of the upgrade room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "toRoomCategory": {
          "description": "Indicates room type code of the upgrade room.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "toRoomDescription": {
          "description": "Indicates room type Description of the upgrade room.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "totalAvailablePoints": {
          "description": "Total award points available for redemption.",
          "type": "number"
        }
      }
    },
    "userDefinedFieldsType": {
      "description": "A common type used to hold user defined fields(UDFs). This type should be used to handle UDFs on RReservation, Profiles, etc.",
      "type": "object",
      "properties": {
        "characterUDFs": {
          "description": "Collection of user defined fields of Character/String Type.",
          "$ref": "#/definitions/characterUDFsType"
        },
        "dateUDFs": {
          "description": "Collection of user defined fields of Date Type.",
          "$ref": "#/definitions/dateUDFsType"
        },
        "numericUDFs": {
          "description": "Collection of user defined fields of Numeric Type.",
          "$ref": "#/definitions/numericUDFsType"
        }
      }
    },
    "vIPStatusType": {
      "description": "VIP status of the customer.",
      "type": "object",
      "properties": {
        "code": {
          "description": "VIP status of the customer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Used for Character Strings, length 0 to 2000.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "vIPType": {
      "description": "The supplier's ranking of the customer.",
      "type": "object",
      "properties": {
        "vipCode": {
          "description": "VIP Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "vipDescription": {
          "description": "VIP Description.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "validatedForgetProfiles": {
      "description": "Response object for validating profiles for forgetting.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "validateForgetProfilesResults": {
          "description": "Results of validation.",
          "$ref": "#/definitions/forgetProfileResultListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "verifiedECertificate": {
      "description": "Response object to Verify E-Certificate and will return the profile information.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "profileId": {
          "description": "Profile NameId.",
          "$ref": "#/definitions/profileId"
        },
        "profileName": {
          "description": "Basic profile information related to the ecertificate.",
          "$ref": "#/definitions/profileNameType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "waitlistResType": {
      "description": "Information regarding why reservation is being /has been waitlisted.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description why the reservation is being /has been waitlisted.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "priorityCode": {
          "description": "Waitlist Priority Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "priorityDescription": {
          "description": "Waitlist priority Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reasonCode": {
          "description": "Waitlist Reason Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonDescription": {
          "description": "Waitlist Reason Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "telephone": {
          "description": "Guest telephone number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "warningType": {
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "type": "object",
      "properties": {
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "maxLength": 8,
          "minLength": 1
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "description": "Used in conjunction with the Success element to define a business error.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "webUserAccountType": {
      "description": "Web User Account of the guest.",
      "type": "object",
      "properties": {
        "autoGeneratePassword": {
          "description": "A flag which determines if the password is auto generated.",
          "type": "boolean"
        },
        "comments": {
          "description": "Comments.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "domainCode": {
          "description": "Domain code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "history": {
          "description": "Web User Account History.",
          "$ref": "#/definitions/webUserHistoryType"
        },
        "inactive": {
          "description": "Boolean flag that indicates whether the web account is inactive or not.",
          "type": "boolean"
        },
        "locked": {
          "description": "Boolean flag that indicates whether the web account is locked or not.",
          "type": "boolean"
        },
        "loginName": {
          "description": "Login Name of the guest.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "newLoginName": {
          "description": "New Login Name of the guest.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "newPassword": {
          "description": "Login Password.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "securityAnswer": {
          "description": "Answer to the Security Question.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "securityQuestion": {
          "description": "Security Question and its Code associated with the account to verify the user.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "webUserAccountsType": {
      "description": "Web User Accounts List.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/webUserAccountType"
      }
    },
    "webUserHistoryType": {
      "description": "Creation date time, Creator Id, last modification date time and last Modifier Id.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "inactiveDate": {
          "description": "Inactive date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastLogin": {
          "description": "Last login date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastPasswordChange": {
          "description": "Last Password change date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    }
  },
  "tags": [
    {
      "description": "The Profile APIs allow you to view, create, update, and delete profiles in OPERA Cloud. Each time a new profile in created in OPERA Cloud, a profileID is assigned.  Use this profileID to retrieve and update details relating to that profile.   The resource 'Companies' includes group, source, company and travel agent profile types.   The resource 'Guests' includes individual and contact profile types.",
      "name": "Profile"
    },
    {
      "description": "The Profile External module allows you to retrieve and manage profiles from an external system.",
      "name": "ProfileExternal"
    },
    {
      "description": "Profiles have many Lists of Values, storing the available options a user can select when updating a profile.  This module allows you to get available ListOfValues for Profile Preferences and AR Addresses on a profile.",
      "name": "ProfileLOV"
    },
    {
      "description": "This will allow you to create a guest profile enrollment in OPERA Cloud. Enrollment relates to a membership program, so as an example you can enrol the guest Mr Tom Smith into a Membership / loyalty program.",
      "name": "ProfileMembership"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}