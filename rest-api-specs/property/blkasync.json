{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "APIs to cater Block Reservation related asynchronous functionality in OPERA.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "title": "OPERA Cloud Block Reservation Asynchronous API",
    "version": "23.2",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality-integrations_ww@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "basePath": "/blk/async/v1",
  "paths": {
    "/externalSystems/{extSystemCode}/hotels/{hotelId}/blocks/allocationSummary": {
      "post": {
        "description": "This API will fetch Block allocation information for a hotel, and specified date range.  The block allocated inventory, rates and room type statistics are returned as part of the response. <p><strong>OperationId:</strong>startBlockAllocationSummaryProcess</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "BlockAsync"
        ],
        "summary": "This API facilitates fetching block allocation summary for a Hotel.",
        "operationId": "startBlockAllocationSummaryProcess",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "extSystemCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for fetching block allocation summary asynchronously.",
            "name": "criteria",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/criteria"
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "202": {
            "description": "Location of process status resource",
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of process status resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "x-interaction": [
          "async-polling"
        ]
      }
    },
    "/externalSystems/{extSystemCode}/hotels/{hotelId}/blocks/allocationSummary/{requestId}": {
      "get": {
        "description": "This API will fetch Block allocation information for a hotel, and specified date range.  The block allocated inventory, rates and room type statistics are returned as part of the response. <p><strong>OperationId:</strong>getBlockAllocationSummary</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "BlockAsync"
        ],
        "summary": "This API returns a hotel's block allocation summary for a scheduled process.",
        "operationId": "getBlockAllocationSummary",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "extSystemCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Callback request object for fetched block allocation summary.",
            "schema": {
              "$ref": "#/definitions/blockAllocationSummary"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "BlockAllocationSummary not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "head": {
        "description": " <p><strong>OperationId:</strong>getBlockAllocationSummaryProcessStatus</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "BlockAsync"
        ],
        "summary": "This API returns the status of asynchronous process scheduled for given id.",
        "operationId": "getBlockAllocationSummaryProcessStatus",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "extSystemCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for status of scheduled asynchronous process.",
            "headers": {
              "Cache-Control": {
                "type": "string",
                "description": "number of seconds to wait before polling again."
              },
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Status": {
                "enum": [
                  "Processing",
                  "Invalid"
                ],
                "type": "string",
                "description": "Status of the requested process."
              }
            }
          },
          "201": {
            "description": "Response for status of scheduled asynchronous process.",
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource once the status of process run is Complete."
              },
              "Status": {
                "enum": [
                  "Completed"
                ],
                "type": "string",
                "description": "Status of the requested process."
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "500": {
            "description": "System Error"
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    }
  },
  "definitions": {
    "blockActualRevenueType": {
      "description": "Indicates the sum of revenue breakup per room type per block per allocation date for the reservations. Applicable for past dates, business date or future dates.",
      "type": "object",
      "properties": {
        "currency": {
          "description": "Currency code to reflect the currency in which an amount may be expressed.",
          "type": "string"
        },
        "foodRevenue": {
          "description": "Indicates food revenue amount.",
          "type": "number"
        },
        "foodRevenueTax": {
          "description": "Indicates food revenue tax amount.",
          "type": "number"
        },
        "nonRevenue": {
          "description": "Indicates non revenue amount.",
          "type": "number"
        },
        "nonRevenueTax": {
          "description": "Indicates non revenue tax amount.",
          "type": "number"
        },
        "otherRevenue": {
          "description": "Indicates other revenue amount.",
          "type": "number"
        },
        "otherRevenueTax": {
          "description": "Indicates other revenue tax amount.",
          "type": "number"
        },
        "roomRevenue": {
          "description": "Indicates room revenue amount.",
          "type": "number"
        },
        "roomRevenueTax": {
          "description": "Indicates room revenue tax amount.",
          "type": "number"
        },
        "totalRevenue": {
          "description": "Indicates total revenue amount.",
          "type": "number"
        },
        "totalRevenueTax": {
          "description": "Indicates total revenue tax amount.",
          "type": "number"
        }
      }
    },
    "blockAllocationSummary": {
      "description": "Response object for fetched block allocation summary.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockAllocationSummaryType"
      }
    },
    "blockAllocationSummaryType": {
      "type": "object",
      "properties": {
        "allocationDates": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomAllocationDateType"
          }
        },
        "blockCode": {
          "description": "Defined block code for the block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "blockId": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "number",
          "maxLength": 80,
          "minLength": 0
        },
        "blockName": {
          "description": "Name of the block.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "blockType": {
          "description": "Indicates the internal type of the block like G, etc.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "cancellationCode": {
          "description": "Code that idenfies the reason for cancellation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cancellationDate": {
          "description": "Cancellation Date.",
          "type": "string",
          "format": "date-time"
        },
        "cancellationDescription": {
          "description": "Description that explains the reason for cancellation.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "cateringOwner": {
          "description": "Catering Owner",
          "type": "integer"
        },
        "cateringOwnerCode": {
          "description": "Primary Catering Owner Code",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "cateringOwnerResort": {
          "description": "Property of Catering Owner",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "createDateTime": {
          "description": "The business date the block was created.",
          "type": "string",
          "format": "date-time"
        },
        "cutOffDate": {
          "type": "string",
          "format": "date-time"
        },
        "cutOffDays": {
          "type": "integer"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "description": "Date Time when the block was modified last.",
          "type": "string",
          "format": "date-time"
        },
        "marketCode": {
          "description": "Market Code of the block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "masterBlockId": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "number",
          "maxLength": 80,
          "minLength": 0
        },
        "owner": {
          "description": "Owner ID",
          "type": "integer"
        },
        "ownerCode": {
          "description": "Block Owner Code",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "ownerResort": {
          "description": "Property of Business Block Owner",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "Rate code associated with Block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationMethod": {
          "description": "Booking Method.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomsOwner": {
          "description": "Rooms Owner",
          "type": "integer"
        },
        "roomsOwnerCode": {
          "description": "Primary Rooms Owner Code",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "roomsOwnerResort": {
          "description": "Property of Rooms Owner",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCode": {
          "description": "Source of the Block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "description": "Booking Status of the block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "blockGridInvType": {
      "description": "Indicates the inventory values ( occupancy or availability ) per person occupancy.",
      "type": "object",
      "properties": {
        "fourPerson": {
          "description": "Indicates the four person inventory value ( occupancy or availability ).",
          "type": "integer"
        },
        "onePerson": {
          "description": "Indicates the one person inventory value ( occupancy or availability ).",
          "type": "integer"
        },
        "sellLimit": {
          "description": "Indicates the sell limit",
          "type": "integer"
        },
        "threePerson": {
          "description": "Indicates the three person inventory value ( occupancy or availability ).",
          "type": "integer"
        },
        "twoPerson": {
          "description": "Indicates the two person inventory value ( occupancy or availability ).",
          "type": "integer"
        }
      }
    },
    "blockGridRatesType": {
      "description": "Indicates the rate amount values per person occupancy.",
      "type": "object",
      "properties": {
        "extraPerson": {
          "description": "Indicates the extra person occupancy rate amount.",
          "type": "number"
        },
        "fourPerson": {
          "description": "Indicates the four person occupancy rate amount.",
          "type": "number"
        },
        "onePerson": {
          "description": "Indicates the one person occupancy rate amount.",
          "type": "number"
        },
        "threePerson": {
          "description": "Indicates the three person occupancy rate amount.",
          "type": "number"
        },
        "twoPerson": {
          "description": "Indicates the two person occupancy rate amount.",
          "type": "number"
        }
      }
    },
    "blockPotenitalRevenueType": {
      "description": "Indicates the sum of revenue breakup per room type per block per allocation date for the reservations. Applicable for business date or future dates.",
      "type": "object",
      "properties": {
        "currency": {
          "description": "Currency code to reflect the currency in which an amount may be expressed.",
          "type": "string"
        },
        "foodRevenue": {
          "description": "Indicates food revenue amount.",
          "type": "number"
        },
        "foodRevenueTax": {
          "description": "Indicates food revenue tax amount.",
          "type": "number"
        },
        "nonRevenue": {
          "description": "Indicates non revenue amount.",
          "type": "number"
        },
        "nonRevenueTax": {
          "description": "Indicates non revenue tax amount.",
          "type": "number"
        },
        "otherRevenue": {
          "description": "Indicates other revenue amount.",
          "type": "number"
        },
        "otherRevenueTax": {
          "description": "Indicates other revenue tax amount.",
          "type": "number"
        },
        "roomRevenue": {
          "description": "Indicates room revenue amount.",
          "type": "number"
        },
        "roomRevenueTax": {
          "description": "Indicates room revenue tax amount.",
          "type": "number"
        },
        "totalRevenue": {
          "description": "Indicates total revenue amount.",
          "type": "number"
        },
        "totalRevenueTax": {
          "description": "Indicates total revenue tax amount.",
          "type": "number"
        }
      }
    },
    "criteria": {
      "description": "Request object for fetching block allocation summary asynchronously.",
      "type": "object",
      "properties": {
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "endLastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "occupancyDate": {
          "type": "string",
          "format": "date"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "startLastModifiedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "errorInstance": {
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "title": "Error Instance Details",
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "exceptionDetailType": {
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "title": "Error Detail",
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "instanceLink": {
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "type": "object",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "roomAllocationDateType": {
      "type": "object",
      "properties": {
        "allocationDate": {
          "description": "The block date for which the allocation details are listed.",
          "type": "string",
          "format": "date-time"
        },
        "allocations": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomAllocationDetailsType"
          }
        }
      }
    },
    "roomAllocationDetailsType": {
      "type": "object",
      "properties": {
        "actualRevenue": {
          "description": "The break up of actual revenue for room type. Applicable for past dates, business date or future dates.",
          "$ref": "#/definitions/blockActualRevenueType"
        },
        "currentRooms": {
          "description": "The total current( projected + pickup ) rooms for the block.",
          "type": "integer"
        },
        "inventory": {
          "description": "The break up of projected rooms by occupancy.",
          "$ref": "#/definitions/blockGridInvType"
        },
        "originalRooms": {
          "description": "The total original( forecasted ) rooms for the block.",
          "type": "integer"
        },
        "pickupRooms": {
          "description": "The total pickup rooms for the block.",
          "type": "integer"
        },
        "potentialRevenue": {
          "description": "The break up of potential revenue for room type. Applicable for business date or future dates.",
          "$ref": "#/definitions/blockPotenitalRevenueType"
        },
        "rates": {
          "description": "The break up of occupancy rates.",
          "$ref": "#/definitions/blockGridRatesType"
        },
        "roomType": {
          "description": "The room type for which the allocation details are listed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    }
  },
  "tags": [
    {
      "description": "The Block Async Service Web Service provides capability to implement block related asynchronous operations in OPERA Cloud.",
      "name": "BlockAsync"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}