{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "title": "OPERA Cloud Reservation API",
    "version": "23.2",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality-integrations_ww@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "basePath": "/rsv/v1",
  "paths": {
    "/blockReservationStatisticsByDateAndRoomPool": {
      "get": {
        "description": "Get block Reservation statistics by date and room pool <p><strong>OperationId:</strong>getBlockReservationStatisticsByDateAndRoomPool</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RSVStats"
        ],
        "summary": "Get block Reservation Statistics",
        "operationId": "getBlockReservationStatisticsByDateAndRoomPool",
        "parameters": [
          {
            "type": "boolean",
            "description": "Whether to exclude blocks without quote IDs from the statistics gathering.",
            "name": "excludeBlocksWithoutQuoteID",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for BlockReservationStatisticsByDateAndRoomPool operation.",
            "schema": {
              "$ref": "#/definitions/blockReservationStatistics"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "BlockReservationStatisticsByDateAndRoomPool not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/calls": {
      "post": {
        "description": "Use this API to request a new call or make updates to an existing call.<p><strong>OperationId:</strong>postCall</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Register calls",
        "operationId": "postCall",
        "parameters": [
          {
            "description": "Request to register call. Either creates a new call or updates an existing call.",
            "name": "registerCall",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/registerCall"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response that contains either created/updated call information if successful or error(s) if not.",
            "schema": {
              "$ref": "#/definitions/registerCall"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/calls/statistics": {
      "get": {
        "description": "Use this API to get call statistics. <p><strong>OperationId:</strong>getCallStatistics</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get call statistics",
        "operationId": "getCallStatistics",
        "parameters": [
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "end",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "start",
            "in": "query"
          },
          {
            "type": "string",
            "name": "domain",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "appUserName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to the request to retrieve Call Statistics.",
            "schema": {
              "$ref": "#/definitions/callStatistics"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CallStatistics not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/externalSystems/{extSystemCode}/reservations": {
      "get": {
        "description": "This API will allow a user to retrieve a list of reservations based on the search criteria specified in the request body. For example you can search for reservations using query parameters like first name, last name, arrival/departure date, external confirmation number. <p><strong>OperationId:</strong>getExternalSystemReservations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get Reservations for a hotel",
        "operationId": "getExternalSystemReservations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Code to identify the external system from which the request is coming. This is the ExternalSystem ID used to exchange information between OPERA and the external system.",
            "name": "extSystemCode",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "externalReferenceList",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Mark this reservation as recently accessed.",
            "name": "recentlyAccessed",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Any",
              "DayUse",
              "Arrival",
              "Arrived",
              "Departure",
              "WaitList",
              "Cancellation",
              "CheckedOut",
              "NoShow",
              "Complimentary",
              "InHouse",
              "PostStayPendingBalance",
              "PreRegistered",
              "PostToRoom",
              "OpenFolio",
              "ScheduledCheckOut",
              "Queued",
              "MobileCheckout",
              "RegisteredAndInHouse",
              "ResvBlockTraces",
              "GuestMessages",
              "MassCancellation",
              "Operator",
              "Turndown",
              "WalkIn",
              "AdvanceCheckedIn",
              "OpenBalance",
              "AutoFolioSettlement",
              "Routing",
              "PlayerSnapshot"
            ],
            "type": "string",
            "description": "Represents Reservation search type Player Snapshot.",
            "name": "searchType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of Hotels to support searches with multiple resorts for which traces are to be fetched.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Free form text field for searching all reservation fields",
            "name": "text",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "arrivalEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "arrivalStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "departureEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "departureStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The ending value of the time span.",
            "name": "expectedArrivalStartTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The starting value of the time span.",
            "name": "expectedArrivalEndTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The ending value of the time span.",
            "name": "expectedReturnEndTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The starting value of the time span.",
            "name": "expectedReturnStartTime",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Attached profile name",
            "name": "companyNames",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "travelAgentIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "companyIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "sourceIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "contactIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "groupIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "billingContactIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Membership ID criteria.",
            "name": "membershipCardNumber",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "membershipLevels",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "membershipTypes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Family name, last name.",
            "name": "surname",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names",
            "name": "givenName",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "VIP status of the customer.",
            "name": "anyVIPStatus",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "VIP status of the customer.",
            "name": "vipCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Fetches the reservation having Guarantee Code(Reservation Type) supplied here.",
            "name": "guaranteeCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Fetches the reservation having method of payment supplied here.",
            "name": "paymentMethod",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "description": "Fetches the reservation for which discount is applied",
            "name": "discountApplied",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "user",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Fetches reservation created by specified user. If both CreatedByUsers and CreatedBy is specified, CreatedByUsers will take precedence.",
            "name": "createdBy",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fetches reservations cancelled by list of users.",
            "name": "cancelledByList",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Fetches the reservations which are cancelled on a specific date.",
            "name": "cancelledOn",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "ratePlanCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "sourceCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "marketCodes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true the search result will exclude the blocks reservations.",
            "name": "excludeBlockReservations",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Name of the block that is attached to the reservation.",
            "name": "blockName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "blockIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "blockCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Custom reference",
            "name": "customReference",
            "in": "query"
          },
          {
            "type": "string",
            "description": "GDS Record Locator for reservation.",
            "name": "recordLocator",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "Nights",
                "ArrivalDate",
                "ArrivalDateETR",
                "DepartureDate",
                "GuestSurname",
                "RateAmount",
                "RateCode",
                "Room",
                "RoomType"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "orderBy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Asc",
                "Desc"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": [
              "Asc"
            ],
            "name": "sortOrder",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicator to query reservations which have a room number assigned.",
            "name": "roomAssignedOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicator to query reservations which does not have a room number assigned.",
            "name": "roomUnassignedOnly",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room number of the reservation to search by.",
            "name": "roomId",
            "in": "query"
          },
          {
            "maxItems": 4000,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Room Type.",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A code representing a room feature.",
            "name": "roomFeatures",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Preference value for display purposes.",
            "name": "roomSpecials",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Preference value for display purposes.",
            "name": "roomSmokingPreference",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Preference value for display purposes.",
            "name": "roomFloorPreferences",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Clean",
                "Dirty",
                "Pickup",
                "Inspected",
                "OutOfOrder",
                "OutOfService"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
            "name": "housekeepingRoomStatuses",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomClasses",
            "in": "query"
          },
          {
            "type": "string",
            "name": "roomRangeFrom",
            "in": "query"
          },
          {
            "type": "string",
            "name": "roomRangeTo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter by the last digits of a reservation's phone number.",
            "name": "communication",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Reservation",
                "ReservationID",
                "Indicators",
                "Deposits",
                "RevenuesAndBalances",
                "GuestServiceStatus",
                "MasterInfo",
                "CancellationInfo",
                "BlockReservations",
                "TaxType",
                "GuestDeviceNotification",
                "RoomAssignedByAI"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Instruction to fetch whether the room was assigned/upgraded by AI. This will also include Reservation instruction.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag containing true or false value for reservation to be eligible for prior check in by guest using mobile device. Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile check in yes / no. Upon fetch, the current state of the flag will show true or false.",
            "name": "allowPreRegistration",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that only reservations with deposit balance should be expected from the result.",
            "name": "hasDepositBalance",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that only reservations with open balance should be expected from the result.",
            "name": "hasOpenBalance",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that only reservations with open folio should be expected from the result.",
            "name": "hasOpenFolio",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Criteria that indicates whether to scheduled checkouts or not.",
            "name": "includeScheduledCheckOut",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that only linked reservations should be expected from the result.",
            "name": "linkedOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that only unlinked reservations should be expected from the result.",
            "name": "unlinkedOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which have already arrived on the Search Date is required.",
            "name": "actualArrivals",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which were expected to depart on the Search Date and have already checked, is required.",
            "name": "actualDepartures",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations where rate codes are marked as Complimentary Rates , is required. This flag should be used in conjunction with the Arrivals, Departures or StayOvers criteria.",
            "name": "complimentaryReservations",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which have cancelled on the Search Date which is also the day of arrival is required.",
            "name": "dayOfArrivalCancels",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which are day use reservation on the Search Date, is required.",
            "name": "dayUse",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which checked out early on the Search Date, is required.",
            "name": "earlyDepartures",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which are expected arrivals for the Search Date and who have not yet arrived, is required.",
            "name": "expectedArrivals",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which are expected departures for the Search Date and who have not yet departed, is required.",
            "name": "expectedDepartures",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which have extended their stays on the Search Date, is required.",
            "name": "extendedStays",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations where rate codes are marked as House Use Rates , is required. This flag should be used in conjunction with the Arrivals, Departures or StayOvers criteria.",
            "name": "houseUseReservations",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which are StayOvers on the Search Date, is required.",
            "name": "stayovers",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date for searching the reservations. This is the date for which the search types are applicable. If date is not available, the business date will be used by default.",
            "name": "stayDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "roomRoutingId",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates to exclude Pseudo room reservations.",
            "name": "excludePseudoRoomReservations",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "excludeReservationIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "VIP status of the customer.",
            "name": "excludeVIPStatusCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Preference value for display purposes.",
            "name": "excludeSpecials",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Preference value for display purposes.",
            "name": "excludeFloorPreferences",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates to exclude Advance Checked In Reservations from search result.",
            "name": "excludeAdvanceCheckedIn",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Exclude the reservation(s) with provided room features from the search result.",
            "name": "excludeRoomFeatures",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Player ID associated to the reservation.",
            "name": "playerId",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Balance from.",
            "name": "gamingBalanceFrom",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Balance to.",
            "name": "gamingBalanceTo",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Comp Balance From",
            "name": "compAccountingBalanceFrom",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Comp Balance To",
            "name": "compAccountingBalanceTo",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Any",
                "DayUse",
                "Arrival",
                "Arrived",
                "Departure",
                "WaitList",
                "Cancellation",
                "CheckedOut",
                "NoShow",
                "Complimentary",
                "InHouse",
                "PostStayPendingBalance",
                "PreRegistered",
                "PostToRoom",
                "OpenFolio",
                "ScheduledCheckOut",
                "Queued",
                "MobileCheckout",
                "RegisteredAndInHouse",
                "ResvBlockTraces",
                "GuestMessages",
                "MassCancellation",
                "Operator",
                "Turndown",
                "WalkIn",
                "AdvanceCheckedIn",
                "OpenBalance",
                "AutoFolioSettlement",
                "Routing",
                "PlayerSnapshot"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Represents Reservation search type Player Snapshot.",
            "name": "searchTypes",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Cancelled",
                "CheckedOut",
                "CheckedIn",
                "DueIn",
                "DueOut",
                "InHouse",
                "NoShow",
                "WaitList"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Reservation status type for reservations search.",
            "name": "reservationStatuses",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "transportationCodes",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Pending",
                "Completed",
                "Failed",
                "Sent",
                "Received",
                "Cancelled",
                "PendingAvailability"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
            "name": "roomReadyStatuses",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Fetches the reservations for which Checkout Message is received.",
            "name": "checkoutMessageReceived",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Fetches the reservations for which reservation communication has been opted.",
            "name": "optedForCommunication",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to the Fetch Reservation Request operation. Based on the criteria, reservation information is returned.",
            "schema": {
              "$ref": "#/definitions/reservationsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ExternalSystemReservations not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/awardUpgrades": {
      "get": {
        "description": "Get award upgrades for a specific property. <p><strong>OperationId:</strong>getAwardUpgrades</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get Award Upgrades",
        "operationId": "getAwardUpgrades",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "profileIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The type of the membership.",
            "name": "membershipType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The card number associated with this membership.",
            "name": "membershipCardNo",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Current membership points available for this guest.",
            "name": "membershipPoints",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "reservationTimeSpanStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "reservationTimeSpanEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "reservationTimeSpanDuration",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The number of rooms.",
            "name": "numberOfRooms",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room type associated with the reservation.",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for available award upgrades.",
            "schema": {
              "$ref": "#/definitions/awardUpgrades"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AwardUpgrades not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/awards": {
      "get": {
        "description": "Get certificates and awards associated with the Reservation. <p><strong>OperationId:</strong>getAwards</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Fetch Awards",
        "operationId": "getAwards",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response of fetch awards for a reservation.",
            "schema": {
              "$ref": "#/definitions/reservationAwards"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Awards not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/blocks/{blockId}/reservations": {
      "post": {
        "description": "Use this to create a new reservation for a block, you must know the block Code to create this reservation.  In order to post a successful block reservation, please ensure you use the ListOfValues API's to know the hotel's codes; such as Address Type, Country Code,  Titles, preferenceCodes etc. <p><strong>OperationId:</strong>postReservationByBlock</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Create Reservation for a Block",
        "operationId": "postReservationByBlock",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA internal ID for the block.",
            "name": "blockId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is created.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to create reservations. Includes instructions for information which needs to be returned.",
            "name": "createReservation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/createReservation"
                },
                {
                  "example": {
                    "reservations": {
                      "reservation": [
                        {
                          "allowAutoCheckin": false,
                          "allowMobileCheckout": false,
                          "allowMobileViewFolio": false,
                          "allowPreRegistration": false,
                          "computedReservationStatus": "DueIn",
                          "hasOpenFolio": false,
                          "hotelId": "HOTEL1",
                          "optedForCommunication": false,
                          "preRegistered": false,
                          "printRate": false,
                          "reservationGuests": [
                            {
                              "primary": true,
                              "profileInfo": {
                                "profile": {
                                  "customer": {
                                    "language": "E",
                                    "personName": [
                                      {
                                        "givenName": "Jennifer",
                                        "nameType": "Primary",
                                        "surname": "Smith"
                                      },
                                      {
                                        "nameType": "External"
                                      }
                                    ]
                                  },
                                  "profileType": "Guest"
                                },
                                "profileIdList": [
                                  {
                                    "id": "3099001",
                                    "type": "Profile"
                                  }
                                ]
                              }
                            }
                          ],
                          "reservationPaymentMethods": [
                            {
                              "folioView": "1",
                              "paymentMethod": "CASH"
                            }
                          ],
                          "reservationProfiles": {
                            "reservationProfile": [
                              {
                                "profileIdList": [
                                  {
                                    "id": "3223789",
                                    "type": "Profile"
                                  }
                                ],
                                "reservationProfileType": "Group"
                              }
                            ]
                          },
                          "reservationStatus": "Reserved",
                          "roomStay": {
                            "arrivalDate": "2016-12-05",
                            "departureDate": "2016-12-06",
                            "guarantee": {
                              "guaranteeCode": "6PM",
                              "shortDescription": "6PM Hold"
                            },
                            "guestCounts": {
                              "adults": "1",
                              "children": "0"
                            },
                            "printRate": false,
                            "roomNumberLocked": false,
                            "roomRates": [
                              {
                                "bogoDiscount": false,
                                "complimentary": false,
                                "discountAllowed": false,
                                "end": "2016-12-05",
                                "fixedRate": true,
                                "guestCounts": {
                                  "adults": "1",
                                  "children": "0"
                                },
                                "houseUseOnly": false,
                                "marketCode": "COM",
                                "marketCodeDescription": "COMPLIMENTARY",
                                "numberOfUnits": "1",
                                "pseudoRoom": false,
                                "ratePlanCode": "1HJ",
                                "rates": {
                                  "rate": [
                                    {
                                      "base": {
                                        "amountBeforeTax": "200",
                                        "currencyCode": "USD"
                                      },
                                      "end": "2016-12-05",
                                      "shareDistributionInstruction": "Full",
                                      "start": "2016-12-05",
                                      "total": {
                                        "amountBeforeTax": "200"
                                      }
                                    }
                                  ]
                                },
                                "reservationBlock": {
                                  "blockIdList": [
                                    {
                                      "id": "32723",
                                      "type": "Block"
                                    }
                                  ]
                                },
                                "roomType": "STTD",
                                "roomTypeCharged": "STTD",
                                "sourceOfBusiness": "TW",
                                "sourceOfBusinessDescription": "OnlineAgent",
                                "start": "2016-12-05",
                                "stayProfiles": [
                                  {
                                    "profileIdList": [
                                      {
                                        "id": "3223789",
                                        "type": "Profile"
                                      }
                                    ],
                                    "reservationProfileType": "Group"
                                  }
                                ],
                                "suppressRate": true,
                                "total": {
                                  "amountBeforeTax": "200"
                                }
                              }
                            ]
                          },
                          "roomStayReservation": true,
                          "sourceOfSale": {
                            "sourceCode": "TOKYO",
                            "sourceType": "PMS"
                          },
                          "upgradeEligible": false,
                          "walkIn": false
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/cancellationPolicies": {
      "put": {
        "description": "Change cancellation policy that is configured for a property. <p><strong>OperationId:</strong>putCancellationPolicy</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Change a Cancellation policy",
        "operationId": "putCancellationPolicy",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object that holds the details of Cancellation Policy to be changed.",
            "name": "reservationCancellationPolicyCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationCancellationPolicyCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/reservationCancellationPolicyCriteria"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/confirmationLetters": {
      "get": {
        "description": "Get a list of Reservations for which confirmation letters need to be sent. <p><strong>OperationId:</strong>getConfirmationLetters</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Fetch Confirmation Letters",
        "operationId": "getConfirmationLetters",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "If true then the fetch result will include the reservations that do not have a letter attached to them.",
            "name": "notAttached",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true then the result will include only the pending confirmation letters.",
            "name": "pending",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true then the result will include only the confirmation letters that have been sent to the guest.",
            "name": "sent",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "createdOnEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "createdOnStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "arrivalEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "arrivalStartDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "letterStyleId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Name of the confirmation letter style.",
            "name": "letterStyle",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "letterStyleIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationGuestId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationGuestIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Membership ID criteria.",
            "name": "membershipId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "membershipLevelCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "membershipTypeCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Family name, last name.",
            "name": "surname",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names",
            "name": "givenName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This is the HotelCode of the Block.",
            "name": "blockHotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "blockId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "blockIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Name of the block that is attached to the reservation.",
            "name": "blockName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to the request to fetch a list of reservations for which confirmation letters need to be sent.",
            "schema": {
              "$ref": "#/definitions/reservationConfirmationLetters"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ConfirmationLetters not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Create a confirmation letter for a property. <p><strong>OperationId:</strong>postConfirmationLetters</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Create the confirmation letters",
        "operationId": "postConfirmationLetters",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to create a confirmation letter.",
            "name": "confirmationLetters",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/confirmationLetters"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response object after creating a confirmation letter.",
            "schema": {
              "$ref": "#/definitions/confirmationLettersDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/depositPolicies": {
      "put": {
        "description": "Change deposit policy which already exists for a property. <p><strong>OperationId:</strong>putDepositPolicy</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Change deposit policy",
        "operationId": "putDepositPolicy",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object that holds the details of hotel level Deposit Policy to be changed.",
            "name": "reservationDepositPolicyCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationDepositPolicyCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/changeDepositPolicyDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/externalSystems/{externalSystemCode}/reservations/linkedReservations/{reservationExternalId}": {
      "post": {
        "description": "This will allow you to link 1 or more reservations to an existing reservation.  <p><strong>OperationId:</strong>postReservationLinksByExtId</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Link Reservations",
        "operationId": "postReservationLinksByExtId",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "External reservation ID.",
            "name": "reservationExternalId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Code to identify the external system from which the request is coming. This is the ExternalSystem ID used to exchange information between OPERA and the external system.",
            "name": "externalSystemCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to link a list of reservations with another existing reservation.",
            "name": "linkReservationsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/linkReservationsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to unlink a reservation from its currently associated reservation. <p><strong>OperationId:</strong>deleteReservationLinksByExtId</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Remove Reservation Links",
        "operationId": "deleteReservationLinksByExtId",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "External reservation ID.",
            "name": "reservationExternalId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Code to identify the external system from which the request is coming. This is the ExternalSystem ID used to exchange information between OPERA and the external system.",
            "name": "externalSystemCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/externalSystems/{externalSystemCode}/reservations/{reservationExternalId}": {
      "get": {
        "description": "Use this API to get a reservation using the external reference ID associated with the reservation such as a Central Reservation System confirmation number or booking engine confirmation number.<p><strong>OperationId:</strong>getReservationByExtId</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get reservation by external ID",
        "operationId": "getReservationByExtId",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "External reservation Id.",
            "name": "reservationExternalId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Code to identify the external system from which the request is coming. This is the ExternalSystem ID used to exchange information between OPERA and the external system.",
            "name": "externalSystemCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on external reservation Id.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Reservation",
                "Comments",
                "GuestComments",
                "Packages",
                "TotalCostOfStay",
                "InventoryItems",
                "ReservationPaymentMethods",
                "RoutingInstructions",
                "Preferences",
                "Memberships",
                "Alerts",
                "Traces",
                "ConfirmationLetters",
                "CallHistory",
                "FixedCharges",
                "GuestMessages",
                "ReservationPolicies",
                "Indicators",
                "LinkedReservations",
                "RevenuesAndBalances",
                "GuestLastStay",
                "ECoupons",
                "TrackItItems",
                "ReservationAwards",
                "WebRegistrationCards",
                "ReservationActivities",
                "ScheduledActivities",
                "PrepaidCards",
                "Shares",
                "Attachments",
                "Locators",
                "ProfileAwards",
                "TransactionDiversions",
                "Tickets",
                "GuestMemberships",
                "ECertificates",
                "UpsellInfo",
                "RoomAssignedByAI"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Instruction to fetch whether the room was assigned/upgraded by AI. This will also include Reservation instruction.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Cancel",
                "Move",
                "PreCharge",
                "PostCharge",
                "FacilitySchedule",
                "Upsell",
                "PreCheckIn",
                "PostToNoShowCancel",
                "NoShow",
                "NameChange",
                "Discount",
                "HouseKeeping",
                "EnrollToPrimaryMembership",
                "EnrollInProgress"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
            "name": "allowedActions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Return object to the request for information regarding a reservation.",
            "schema": {
              "$ref": "#/definitions/reservation"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReservationByExtId not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this to update an existing reservation for a hotel, such as adding comments, changing the number of guests.   There are many fields in putReservation defined by ListOfValues; ensure you have reviewed ListOfValues APIs in order successfully to use putReservation. <p><strong>OperationId:</strong>putReservationByExtId</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Update Reservation by ID",
        "operationId": "putReservationByExtId",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "External reservation ID.",
            "name": "reservationExternalId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Code to identify the external system from which the request is coming. This is the ExternalSystem ID used to exchange information between OPERA and the external system.",
            "name": "externalSystemCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request method to change a reservations information.",
            "name": "changeReservation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeReservation"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/changeReservationDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/externalSystems/{externalSystemCode}/reservations/{reservationExternalId}/cancellations": {
      "put": {
        "description": "Use this API to reinstate a cancelled reservation. <p><strong>OperationId:</strong>putReinstateReservationByExtId</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Reinstate a Reservation",
        "operationId": "putReinstateReservationByExtId",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "External reservation ID.",
            "name": "reservationExternalId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Code to identify the external system from which the request is coming. This is the ExternalSystem ID used to exchange information between OPERA and the external system.",
            "name": "externalSystemCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Overriding the validation check will log the supposed errors in the warnings log if they would fail.",
            "name": "reinstateReservation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reinstateReservation"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/reinstateReservationDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this if a guest would like to cancel their reservation.  You will receive a cancellation number in the response. <p><strong>OperationId:</strong>postCancelReservationByExtId</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Cancel Reservation by ID",
        "operationId": "postCancelReservationByExtId",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "External reservation ID.",
            "name": "reservationExternalId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Code to identify the external system from which the request is coming. This is the ExternalSystem ID used to exchange information between OPERA and the external system.",
            "name": "externalSystemCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for canceling reservations.",
            "name": "cancelReservation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cancelReservation"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response object for the request to cancel reservations. Response contains the reservations which were successfully canceled.",
            "schema": {
              "$ref": "#/definitions/cancelReservationDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/externalSystems/{externalSystemCode}/reservations/{reservationExternalId}/routingInstructions": {
      "put": {
        "description": "Change routing instructions on an existing reservation. <p><strong>OperationId:</strong>putRoutingInstructionsByExtId</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Change routing instructions",
        "operationId": "putRoutingInstructionsByExtId",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "External reservation ID.",
            "name": "reservationExternalId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Code to identify the external system from which the request is coming. This is the ExternalSystem ID used to exchange information between OPERA and the external system.",
            "name": "externalSystemCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request when changing a routing instruction.",
            "name": "routingInstructionsInfo",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/routingInstructionsInfo"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "You can use this API to create routing instructions on a reservation. <p><strong>OperationId:</strong>postRoutingInstructionsByExtId</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Create routing instructions",
        "operationId": "postRoutingInstructionsByExtId",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "External reservation ID.",
            "name": "reservationExternalId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Code to identify the external system from which the request is coming. This is the ExternalSystem ID used to exchange information between OPERA and the external system.",
            "name": "externalSystemCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to create a routing instruction.",
            "name": "reservationRoutingCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationRoutingCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/externalSystems/{externalSystemCode}/reservations/{reservationExternalId}/shares": {
      "get": {
        "description": "This API can be used to retrieve the share reservations that exist on a reservation. <p><strong>OperationId:</strong>getShareReservationsByExtId</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get share Reservations",
        "operationId": "getShareReservationsByExtId",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "External reservation ID.",
            "name": "reservationExternalId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Code to identify the external system from which the request is coming. This is the ExternalSystem ID used to exchange information between OPERA and the external system.",
            "name": "externalSystemCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on external reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the fetch share reservation request. This returns all sharer reservations including the request reservation.",
            "schema": {
              "$ref": "#/definitions/shareReservations"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ShareReservationsByExtId not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Combine share reservation for a given reservation id <p><strong>OperationId:</strong>postCombineShareReservationsByExtId</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Combine Share Reservations",
        "operationId": "postCombineShareReservationsByExtId",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "External reservation ID.",
            "name": "reservationExternalId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Code to identify the external system from which the request is coming. This is the ExternalSystem ID used to exchange information between OPERA and the external system.",
            "name": "externalSystemCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to combine sharer reservations. This request requires a Reservation Name Id(Joining to) and a Joining Reservation Id",
            "name": "combineShareReservations",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/combineShareReservations"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response for the combine share reservation request. Based on the request, this will return all sharer reservations including the request reservation.",
            "schema": {
              "$ref": "#/definitions/combineShareReservationsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "This API can be used to separate the share reservations. <p><strong>OperationId:</strong>deleteShareReservationByExtId</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Separate share Reservations",
        "operationId": "deleteShareReservationByExtId",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "External reservation ID.",
            "name": "reservationExternalId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Code to identify the external system from which the request is coming. This is the ExternalSystem ID used to exchange information between OPERA and the external system.",
            "name": "externalSystemCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Indicate to Override the Room Inventory Check if applicable.",
            "name": "overrideInventoryCheck",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicate to Override the check on Maximum Room Occupancy if applicable.",
            "name": "overrideMaxOccupancyCheck",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicate to Override the check on Maximum Room Occupancy if applicable.",
            "name": "overrideRateAvailabilityCheck",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "After the break share operation, return the new list of Sharer Reservations.",
            "name": "returnShareReservations",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/fetchExternalSystemDeliveryHistory": {
      "get": {
        "description": "Get external system delivery history. <p><strong>OperationId:</strong>getExternalSystemDeliveryHistory</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get External system delivery history",
        "operationId": "getExternalSystemDeliveryHistory",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response that contains fetched reservation's delivery history.",
            "schema": {
              "$ref": "#/definitions/deliveryHistoryLog"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ExternalSystemDeliveryHistory not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/guestMessages": {
      "get": {
        "description": "Get guest messages which exist on a reservation. <p><strong>OperationId:</strong>getGuestMessages</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get guest messages",
        "operationId": "getGuestMessages",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag that specified if Delivered Guest Messages will also be retrieved.",
            "name": "retrieveDeliveredMessages",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room number attached to the reservation.",
            "name": "room",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup guest messages with this Travel agent name.",
            "name": "travelAgent",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup guest messages with the Company name.",
            "name": "company",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup guest messages with the Travel agent name.",
            "name": "group",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup guest messages with the Source name.",
            "name": "source",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Any",
              "DayUse",
              "Arrival",
              "Arrived",
              "Departure",
              "WaitList",
              "Cancellation",
              "CheckedOut",
              "NoShow",
              "Complimentary",
              "InHouse",
              "PostStayPendingBalance",
              "PreRegistered",
              "PostToRoom",
              "OpenFolio",
              "ScheduledCheckOut",
              "Queued",
              "MobileCheckout",
              "RegisteredAndInHouse",
              "ResvBlockTraces",
              "GuestMessages",
              "MassCancellation",
              "Operator",
              "Turndown",
              "WalkIn",
              "AdvanceCheckedIn",
              "OpenBalance",
              "AutoFolioSettlement",
              "Routing",
              "PlayerSnapshot"
            ],
            "type": "string",
            "description": "Represents Reservation search type Player Snapshot.",
            "name": "reservationStatus",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag that specified if Undelivered Guest Messages will also be retrieved.",
            "name": "retrieveUndeliveredMessages",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag that specified if Printed Guest Messages will also be retrieved.",
            "name": "retrievePrintedMessages",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag that specified if Texted Guest Messages will also be retrieved.",
            "name": "retrieveTextedMessages",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup messages using Block name.",
            "name": "blockName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup guest messages with the recipient name.",
            "name": "recipientName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup guest messages using reservation confirmation no.",
            "name": "confirmationNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to the request to retrieve Guest Messages for a Reservation.",
            "schema": {
              "$ref": "#/definitions/guestMessages"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "GuestMessages not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/locks/{lockHandle}": {
      "put": {
        "description": "Extend Reservation Lock. <p><strong>OperationId:</strong>putReservationLock</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Extend Reservation Lock",
        "operationId": "putReservationLock",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Lock handle of the lock to be extended.",
            "name": "lockHandle",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Operation for extending the lifetime of a lock on a reservation.",
            "name": "extendReservationLock",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/extendReservationLock"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "This response will indicate whether or not the extension was successful. This operation may return errors when the lock being requested to be extended no longer exists. This can happen when the lock has already expired and cleaned up.",
            "schema": {
              "$ref": "#/definitions/extendReservationLockDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Release Reservation Lock. <p><strong>OperationId:</strong>deleteReservationLock</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Release Reservation Lock",
        "operationId": "deleteReservationLock",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Lock handle of the lock to be released.",
            "name": "lockHandle",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/preArrivalMembersReservations": {
      "get": {
        "description": "Get preArrival Member Reservations. <p><strong>OperationId:</strong>getPreArrivalMemberReservations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get preArrival Member Reservations",
        "operationId": "getPreArrivalMemberReservations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "end",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "start",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Membership Type.",
            "name": "membershipType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Type of the desired reservation external confirmation number.",
            "name": "externalReferenceType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of PreArrivalMemberReservations.",
            "schema": {
              "$ref": "#/definitions/preArrivalMemberReservationsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "PreArrivalMemberReservations not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/preConfiguredRoutingInstructions": {
      "get": {
        "description": "Get preConfigured Routing Instructions. <p><strong>OperationId:</strong>getPreConfiguredRoutingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get pre-Configured Routing Instructions",
        "operationId": "getPreConfiguredRoutingInstructions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "rateCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Promotion Code for ComplimentaryRouting",
            "name": "promotionCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Attached profile name",
            "name": "guestName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "guestIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Attached profile name",
            "name": "companyName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "companyIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Attached profile name",
            "name": "groupName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "groupIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Attached profile name",
            "name": "travelAgentName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "travelAgentIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Attached profile name",
            "name": "sourceName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "sourceIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Attached profile name",
            "name": "contactName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "contactIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Attached profile name",
            "name": "billingContactName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "billingContactIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Attached profile name",
            "name": "addresseeName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "addresseeIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "This is the Response Message to the request for Pre-Configured Routing Instructions.",
            "schema": {
              "$ref": "#/definitions/preConfiguredRoutingInstructions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "PreConfiguredRoutingInstructions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/profiles/{profileIdtoShare}/share": {
      "get": {
        "description": "Get Reservations to share by profile id. <p><strong>OperationId:</strong>getReservationsToShareByProfileId</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get Reservations to share ",
        "operationId": "getReservationsToShareByProfileId",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "profileIdtoShare",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Free form text field for searching all reservation fields",
            "name": "superSearch",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationGuestId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationGuestIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Membership ID criteria.",
            "name": "membershipId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "membershipLevel",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "membershipType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Family name, last name.",
            "name": "surname",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names",
            "name": "givenName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room number",
            "name": "roomId",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Reservation",
                "Comments",
                "GuestComments",
                "Packages",
                "InventoryItems",
                "ReservationPaymentMethods",
                "RoutingInstructions",
                "Preferences",
                "Memberships",
                "Alerts",
                "Traces",
                "ConfirmationLetters",
                "CallHistory",
                "FixedCharges",
                "GuestMessages",
                "ReservationPolicies",
                "Indicators",
                "LinkedReservations",
                "RevenuesAndBalances",
                "GuestLastStay",
                "ECoupons",
                "TrackItItems",
                "TotalCostOfStay",
                "ReservationAwards",
                "WebRegistrationCards",
                "ServiceRequests",
                "ReservationActivities",
                "ScheduledActivities",
                "PrepaidCards",
                "Shares",
                "Attachments",
                "Locators",
                "ProfileAwards",
                "TransactionDiversions",
                "Tickets",
                "GuestMemberships",
                "ECertificates",
                "UpsellInfo",
                "RoomAssignedByAI",
                "CustomNameValue",
                "CustomChargeExemptions"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Instruction to fetch whether the room was assigned/upgraded by AI. This will also include Reservation instruction.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to the Fetch UpgradeEligibilityReservations Request operation. Based on the criteria, reservation information is returned.",
            "schema": {
              "$ref": "#/definitions/fetchReservations"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReservationsToShareByProfileId not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rateInfoValidation": {
      "put": {
        "description": "Validate the rate plan information for a reservation. <p><strong>OperationId:</strong>validateRateInfo</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Validate rate information",
        "operationId": "validateRateInfo",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Retrieve either the reservation's rate information or make a quotation for a rate information. SummaryInfo attribute specifies if the item being requested is of detail or summary type.",
            "name": "validateRateInfo",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/validateRateInfo"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response will either be Summary or Detail type, but not both. See the request for the summary attribute flag.",
            "schema": {
              "$ref": "#/definitions/rateInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations": {
      "get": {
        "description": "Use this API to search reservations in a hotel, filtering by whether they are Day Use, Due In, Checked In, Due Out, Checked Out, Cancelled, No Show and Complimentary or any other of the large selection of search criteria. It also serves as an entry way for changing existing reservation information, canceling reservations, checking in guests, canceling check ins, etc. You can use further query parameters to narrow your results. This API is not designed to support sync between two systems or initial upload of data.<p><strong>OperationId:</strong>getHotelReservations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get and search for reservations in a hotel",
        "operationId": "getHotelReservations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "keyTrack2 is an id which is either generated by the PMS or provided by the door lock system and which is associated to the reservation. With the keyTrack2 value a reservation can be identified.",
            "name": "keyTrack2",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Skip",
              "Sleep"
            ],
            "type": "string",
            "name": "discrepancy",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Mark this reservation as recently accessed.",
            "name": "recentlyAccessed",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Any",
              "DayUse",
              "Arrival",
              "Arrived",
              "Departure",
              "WaitList",
              "Cancellation",
              "CheckedOut",
              "NoShow",
              "Complimentary",
              "InHouse",
              "PostStayPendingBalance",
              "PreRegistered",
              "PostToRoom",
              "OpenFolio",
              "ScheduledCheckOut",
              "Queued",
              "MobileCheckout",
              "RegisteredAndInHouse",
              "ResvBlockTraces",
              "GuestMessages",
              "MassCancellation",
              "Operator",
              "Turndown",
              "WalkIn",
              "AdvanceCheckedIn",
              "OpenBalance",
              "AutoFolioSettlement",
              "Routing",
              "PlayerSnapshot",
              "FiscalInfo"
            ],
            "type": "string",
            "description": "Represents Reservation search type Player Snapshot.",
            "name": "searchType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Free form text field for searching all reservation fields",
            "name": "text",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationIdList",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "confirmationNumberList",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "cancellationNumberList",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "externalReferenceIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": [
              "External"
            ],
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "externalSystemCodes",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "arrivalEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "arrivalStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "departureEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "departureStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "stayOnStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Fetches reservations which are created on the given property business date.",
            "name": "createdOnStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The ending value of the time span.",
            "name": "expectedArrivalEndTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The starting value of the time span.",
            "name": "expectedArrivalStartTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "depositDueEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "depositDueStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The ending value of the time span.",
            "name": "expectedReturnEndTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The starting value of the time span.",
            "name": "expectedReturnStartTime",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Attached profile name",
            "name": "companyNames",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Attached profile name",
            "name": "sourceNames",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Attached profile name",
            "name": "travelAgentNames",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Attached profile name",
            "name": "groupNames",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation. API expects CompanyName Query parameter along with the ID to obtain correct results.",
            "name": "travelAgentIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation. API expects CompanyName Query parameter along with the ID to obtain correct results.",
            "name": "companyIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation. API expects CompanyName Query parameter along with the ID to obtain correct results.",
            "name": "sourceIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation. API expects CompanyName Query parameter along with the ID to obtain correct results.",
            "name": "contactIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation. API expects CompanyName Query parameter along with the ID to obtain correct results.",
            "name": "groupIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation. API expects CompanyName Query parameter along with the ID to obtain correct results.",
            "name": "billingContactIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Commission Paid criteria",
            "name": "commissionPaid",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Membership ID criteria.",
            "name": "membershipCardNumber",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "membershipLevels",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "membershipTypes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Family name, last name.",
            "name": "surname",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names",
            "name": "givenName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names",
            "name": "fromName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names",
            "name": "toName",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "VIP status of the customer.",
            "name": "anyVIPStatus",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "VIP status of the customer.",
            "name": "vipCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Fetches the reservation having Guarantee Code(Reservation Type) supplied here.",
            "name": "guaranteeCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Fetches the reservation having method of payment supplied here.",
            "name": "paymentMethod",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "description": "Fetches the reservation for which discount is applied",
            "name": "discountApplied",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "user",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Fetches reservation created by specified user. If both CreatedByUsers and CreatedBy is specified, CreatedByUsers will take precedence.",
            "name": "createdBy",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fetches reservations cancelled by list of users.",
            "name": "cancelledByList",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Fetches reservations which are cancelled on the given property business date.",
            "name": "cancelledOn",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "ratePlanCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "sourceCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "marketCodes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true the search result will exclude the blocks reservations.",
            "name": "excludeBlockReservations",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Hotel Code of the Block.",
            "name": "blockCriteriaHotelCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Name of the block that is attached to the reservation.",
            "name": "blockName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "blockIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "blockCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Custom reference",
            "name": "customReference",
            "in": "query"
          },
          {
            "type": "string",
            "description": "GDS Record Locator for reservation.",
            "name": "recordLocator",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "Nights",
                "ArrivalDate",
                "ArrivalDateETR",
                "DepartureDate",
                "GuestSurname",
                "RateAmount",
                "RateCode",
                "Room",
                "RoomType",
                "QueuePriority",
                "QueueDurationTime"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "orderBy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Asc",
                "Desc"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": [
              "Asc"
            ],
            "name": "sortOrder",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicator to query reservations which have a room number assigned.",
            "name": "roomAssignedOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicator to query reservations which does not have a room number assigned.",
            "name": "roomUnassignedOnly",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room number of the reservation to search by.",
            "name": "roomId",
            "in": "query"
          },
          {
            "maxItems": 4000,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Room Type.",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A code representing a room feature.",
            "name": "roomFeatures",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Preference value for display purposes.",
            "name": "roomSpecials",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Preference value for display purposes.",
            "name": "roomSmokingPreference",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Preference value for display purposes.",
            "name": "roomFloorPreferences",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Clean",
                "Dirty",
                "Pickup",
                "Inspected",
                "OutOfOrder",
                "OutOfService"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
            "name": "housekeepingRoomStatuses",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomClasses",
            "in": "query"
          },
          {
            "type": "string",
            "name": "roomRangeFrom",
            "in": "query"
          },
          {
            "type": "string",
            "name": "roomRangeTo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter by the last digits of a reservation's phone number.",
            "name": "communication",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Reservation",
                "ReservationID",
                "Indicators",
                "Deposits",
                "RevenuesAndBalances",
                "GuestServiceStatus",
                "MasterInfo",
                "CancellationInfo",
                "BlockReservations",
                "TaxType",
                "GuestDeviceNotification",
                "RoomAssignedByAI",
                "SwapShiftRooms",
                "ReservationPreferences",
                "FiscalInfo",
                "CommissionsInfo"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Instruction to fetch whether the room was assigned/upgraded by AI. This will also include Reservation instruction.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Cancel",
                "Move",
                "PreCharge",
                "PostCharge",
                "FacilitySchedule",
                "Upsell",
                "PreCheckIn",
                "PostToNoShowCancel",
                "NoShow",
                "NameChange",
                "Discount",
                "HouseKeeping",
                "EnrollToPrimaryMembership",
                "EnrollInProgress",
                "MemberAwardAttached"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
            "name": "allowedReservationActions",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag containing true or false value for reservation to be eligible for prior check in by guest using mobile device. Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile check in yes / no. Upon fetch, the current state of the flag will show true or false.",
            "name": "allowPreRegistration",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that reservations with No Post flag should not be expected from the result.",
            "name": "excludeNoPost",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that reservations with PM room type should not be expected from the result.",
            "name": "excludePMRooms",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that only reservations with deposit balance should be expected from the result.",
            "name": "hasDepositBalance",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that only reservations with open balance should be expected from the result.",
            "name": "hasOpenBalance",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that only reservations with open folio should be expected from the result.",
            "name": "hasOpenFolio",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Criteria that indicates whether to scheduled checkouts or not.",
            "name": "includeScheduledCheckOut",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that only linked reservations should be expected from the result.",
            "name": "linkedOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that only unlinked reservations should be expected from the result.",
            "name": "unlinkedOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which have already arrived on the Search Date is required.",
            "name": "actualArrivals",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which were expected to depart on the Search Date and have already checked, is required.",
            "name": "actualDepartures",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations where rate codes are marked as Complimentary Rates , is required. This flag should be used in conjunction with the Arrivals, Departures or StayOvers criteria.",
            "name": "complimentaryReservations",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which have cancelled on the Search Date which is also the day of arrival is required.",
            "name": "dayOfArrivalCancels",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which are day use reservation on the Search Date, is required.",
            "name": "dayUse",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which checked out early on the Search Date, is required.",
            "name": "earlyDepartures",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which are expected arrivals for the Search Date and who have not yet arrived, is required.",
            "name": "expectedArrivals",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which are expected departures for the Search Date and who have not yet departed, is required.",
            "name": "expectedDepartures",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which have extended their stays on the Search Date, is required.",
            "name": "extendedStays",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations where rate codes are marked as House Use Rates , is required. This flag should be used in conjunction with the Arrivals, Departures or StayOvers criteria.",
            "name": "houseUseReservations",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which are StayOvers on the Search Date, is required.",
            "name": "stayovers",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date for searching the reservations. This is the date for which the search types are applicable. If date is not available, the business date will be used by default.",
            "name": "stayDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "roomRoutingId",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Weekly",
              "Monthly",
              "Days"
            ],
            "type": "string",
            "description": "Periodic folio type.",
            "name": "periodicFolio",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Comma-delimited list of Folio Settlement Type codes.",
            "name": "folioSettlementTypes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Use the Number of Days For Settlement, defined for the Reservation.",
            "name": "defaultDays",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates to exclude Pseudo room reservations.",
            "name": "excludePseudoRoomReservations",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "excludeReservationIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "VIP status of the customer.",
            "name": "excludeVIPStatusCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Preference value for display purposes.",
            "name": "excludeSpecials",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Preference value for display purposes.",
            "name": "excludeFloorPreferences",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates to exclude Advance Checked In Reservations from search result.",
            "name": "excludeAdvanceCheckedIn",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Exclude the reservation(s) with provided room features from the search result.",
            "name": "excludeRoomFeatures",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Player ID associated to the reservation.",
            "name": "playerId",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Balance from.",
            "name": "gamingBalanceFrom",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Balance to.",
            "name": "gamingBalanceTo",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Comp Balance From",
            "name": "compAccountingBalanceFrom",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Comp Balance To",
            "name": "compAccountingBalanceTo",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Any",
                "DayUse",
                "Arrival",
                "Arrived",
                "Departure",
                "WaitList",
                "Cancellation",
                "CheckedOut",
                "NoShow",
                "Complimentary",
                "InHouse",
                "PostStayPendingBalance",
                "PreRegistered",
                "PostToRoom",
                "OpenFolio",
                "ScheduledCheckOut",
                "Queued",
                "MobileCheckout",
                "RegisteredAndInHouse",
                "ResvBlockTraces",
                "GuestMessages",
                "MassCancellation",
                "Operator",
                "Turndown",
                "WalkIn",
                "AdvanceCheckedIn",
                "OpenBalance",
                "AutoFolioSettlement",
                "Routing",
                "PlayerSnapshot"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Represents Reservation search type Player Snapshot.",
            "name": "searchTypes",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Cancelled",
                "CheckedOut",
                "CheckedIn",
                "DueIn",
                "DueOut",
                "InHouse",
                "NoShow",
                "WaitList"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Reservation status type for reservations search.",
            "name": "reservationStatuses",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "transportationCodes",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Pending",
                "Completed",
                "Failed",
                "Sent",
                "Received",
                "Cancelled",
                "PendingAvailability"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
            "name": "roomReadyStatuses",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Fetches the reservations for which Checkout Message is received.",
            "name": "checkoutMessageReceived",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Fetches the reservations for which reservation communication has been opted.",
            "name": "optedForCommunication",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Fetches the reservations for which this reservation room can be shifted or swapped.",
            "name": "swapShiftRoomReservationId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The smoking preferences of rooms to be fetched.",
            "name": "roomSmokingPreferences",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The room features of the rooms. Fetches reservations with rooms that have same room features. It has to be used in conjunction with roomType, arrivalStartDate, and arrivalEndDate.",
            "name": "roomFeaturePreferences",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The floor of the rooms. Fetches reservations with rooms that are on the same floor. It has to be used in conjunction with roomType, arrivalStartDate, and arrivalEndDate.",
            "name": "roomsFloorPreferences",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxLength": 82,
              "minLength": 0,
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Name of Contact Profile associated with Reservation.",
            "name": "contactNames",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to the Fetch Reservation Request operation. Based on the criteria, reservation information is returned.",
            "schema": {
              "$ref": "#/definitions/reservationsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "HotelReservations not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this to create a new reservation for a hA12:F24otel.  Generally, you would search for a hotel's availability and rates before proceeding to use postReservation.  There are many fields in postReservation defined by ListOfValues; ensure you have reviewed ListOfValues APIs in order successfully to use postReservation. <p><strong>OperationId:</strong>postReservation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Create Reservation",
        "operationId": "postReservation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to create reservations. Includes instructions for information which needs to be returned.",
            "name": "createReservation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/createReservation"
                },
                {
                  "example": {
                    "reservations": {
                      "reservation": [
                        {
                          "allowAutoCheckin": false,
                          "allowMobileCheckout": false,
                          "allowMobileViewFolio": false,
                          "allowPreRegistration": false,
                          "comments": [
                            {
                              "comment": {
                                "commentTitle": "General Notes",
                                "internal": false,
                                "notificationLocation": "RESERVATION",
                                "text": {
                                  "value": "This guest would like a corner room"
                                },
                                "type": "GEN"
                              }
                            }
                          ],
                          "computedReservationStatus": "DueIn",
                          "hasOpenFolio": false,
                          "hotelId": "HOTEL1",
                          "optedForCommunication": false,
                          "preRegistered": false,
                          "printRate": false,
                          "reservationGuests": [
                            {
                              "primary": true,
                              "profileInfo": {
                                "profile": {
                                  "customer": {
                                    "language": "E",
                                    "personName": [
                                      {
                                        "givenName": "Ben",
                                        "nameType": "Primary",
                                        "surname": "Smith"
                                      },
                                      {
                                        "nameType": "External"
                                      }
                                    ]
                                  },
                                  "profileType": "Guest"
                                }
                              }
                            }
                          ],
                          "reservationPackages": [
                            {
                              "consumptionDetails": {
                                "allowanceConsumed": false,
                                "defaultQuantity": "1",
                                "totalQuantity": "1"
                              },
                              "endDate": "2021-07-02",
                              "packageCode": "BBRFSTAS",
                              "packageHeaderType": {
                                "postingAttributes": {
                                  "addToRate": false,
                                  "forecastNextDay": false,
                                  "postNextDay": false,
                                  "printSeparateLine": false
                                },
                                "primaryDetails": {
                                  "description": "Breakfast Buffet - Adult 1"
                                },
                                "transactionDetails": {
                                  "allowance": true,
                                  "calculationRule": "F",
                                  "currency": "USD",
                                  "postingType": "D"
                                }
                              },
                              "scheduleList": [
                                {
                                  "computedResvPrice": "25",
                                  "consumptionDate": "2021-07-01",
                                  "originalUnitAllowance": "25",
                                  "originalUnitPrice": "25",
                                  "reservationDate": "2021-07-01",
                                  "unitAllowance": "25",
                                  "unitPrice": "25"
                                }
                              ],
                              "source": "Reservation",
                              "startDate": "2021-07-01"
                            }
                          ],
                          "reservationPaymentMethods": [
                            {
                              "folioView": "1",
                              "paymentMethod": "CA"
                            }
                          ],
                          "reservationProfiles": {
                            "reservationProfile": [
                              {
                                "profileIdList": [
                                  {
                                    "id": "3223789",
                                    "type": "Profile"
                                  }
                                ],
                                "reservationProfileType": "Group"
                              }
                            ]
                          },
                          "reservationStatus": "Reserved",
                          "roomStay": {
                            "arrivalDate": "2021-07-01",
                            "departureDate": "2021-07-02",
                            "guarantee": {
                              "guaranteeCode": "6PM",
                              "shortDescription": "6PM Hold"
                            },
                            "guestCounts": {
                              "adults": "1",
                              "children": "0"
                            },
                            "printRate": false,
                            "roomNumberLocked": false,
                            "roomRates": [
                              {
                                "bogoDiscount": false,
                                "complimentary": false,
                                "discountAllowed": false,
                                "end": "2021-07-02",
                                "fixedRate": true,
                                "guestCounts": {
                                  "adults": "1",
                                  "children": "0"
                                },
                                "houseUseOnly": false,
                                "marketCode": "ASSN",
                                "marketCodeDescription": "Group Association",
                                "numberOfUnits": "1",
                                "pseudoRoom": false,
                                "ratePlanCode": "DFLEX",
                                "rates": {
                                  "rate": [
                                    {
                                      "base": {
                                        "amountBeforeTax": "200",
                                        "currencyCode": "USD"
                                      },
                                      "end": "2021-07-02",
                                      "shareDistributionInstruction": "Full",
                                      "start": "2021-07-01",
                                      "total": {
                                        "amountBeforeTax": "200"
                                      }
                                    }
                                  ]
                                },
                                "roomType": "STDK",
                                "roomTypeCharged": "STDK",
                                "sourceCode": "REF",
                                "sourceCodeDescription": "Referral",
                                "start": "2021-07-01",
                                "stayProfiles": [
                                  {
                                    "profileIdList": [
                                      {
                                        "id": "719616",
                                        "type": "Profile"
                                      }
                                    ],
                                    "reservationProfileType": "Group"
                                  }
                                ],
                                "suppressRate": true,
                                "total": {
                                  "amountBeforeTax": "200"
                                }
                              }
                            ]
                          },
                          "roomStayReservation": true,
                          "sourceOfSale": {
                            "sourceCode": "HOTEL1",
                            "sourceType": "PMS"
                          },
                          "upgradeEligible": false,
                          "walkIn": false
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response for created reservation",
            "schema": {
              "$ref": "#/definitions/createReservationType"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/activityLog": {
      "get": {
        "description": "Use this API to get the activity log data of reservations being created and managed.<p><strong>OperationId:</strong>getReservationActivityLog</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Fetch reservation activity log",
        "operationId": "getReservationActivityLog",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Name of the parameter.",
            "name": "parameterName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Value of the parameter.",
            "name": "parameterValue",
            "in": "query"
          },
          {
            "type": "string",
            "name": "activityGroup",
            "in": "query"
          },
          {
            "type": "string",
            "name": "activityType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Search from date for the user activity log.",
            "name": "fromDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Search to date for the user activity log.",
            "name": "toDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search text for the user activity log.",
            "name": "searchText",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "integer"
            },
            "collectionFormat": "multi",
            "name": "userByIdsUserId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "integer"
            },
            "collectionFormat": "multi",
            "name": "userForIdsUserId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for the request for the reservation user activity log.",
            "schema": {
              "$ref": "#/definitions/activityLog"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReservationActivityLog not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/alerts": {
      "post": {
        "description": "Create or updates multiple alerts for multiple reservations in bulk. <p><strong>OperationId:</strong>postBulkReservationAlerts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Create Bulk Reservation Alerts",
        "operationId": "postBulkReservationAlerts",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to create or update multiple alerts information for multiple reservations in bulk.",
            "name": "reservationAlerts",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationAlerts"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/cancellations": {
      "post": {
        "description": "This API can be used to  cancel multiple reservations. <p><strong>OperationId:</strong>postCancelReservations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Cancel Reservations ",
        "operationId": "postCancelReservations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to submit batch cancel reservations.",
            "name": "cancelReservations",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cancelReservations"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/linkedReservations/{reservationId}": {
      "post": {
        "description": "This will allow you to link 1 or more reservations to an existing reservation.  <p><strong>OperationId:</strong>postReservationLinks</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Link Reservations",
        "operationId": "postReservationLinks",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to link a list of reservations with another existing reservation.",
            "name": "linkReservationsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/linkReservationsCriteria"
                },
                {
                  "example": {
                    "linkToReservationId": {
                      "id": "720932",
                      "type": "Reservation"
                    },
                    "reservationIdList": [
                      {
                        "id": "720933",
                        "type": "Reservation"
                      }
                    ],
                    "responseInstruction": {
                      "fetchLinkedReservations": true
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to unlink a reservation from its currently associated reservation. <p><strong>OperationId:</strong>deleteReservationLinks</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Remove Reservation Links",
        "operationId": "deleteReservationLinks",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/rateInfo": {
      "get": {
        "description": "Use this API to retrieve rate plan information including a breakdown of packages and taxes.<p><strong>OperationId:</strong>getRateInfo</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get rate information",
        "operationId": "getRateInfo",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indicate if summary information is required.",
            "name": "summaryInfo",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "criteriaStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "criteriaEndDate",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Defines the number of Adults.",
            "name": "adults",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Defines the number of Children.",
            "name": "children",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Age of a child in years.",
            "name": "childAge",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Number of children classified under the first Age Qualifying Group(Child Bucket#1).",
            "name": "bucket1Count",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Number of children classified under the second Age Qualifying Group(Child Bucket#2).",
            "name": "bucket2Count",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Number of children classified under the third Age Qualifying Group(Child Bucket#3).",
            "name": "bucket3Count",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Number of children classified under the fourth Age Qualifying Group(Child Bucket#4).",
            "name": "bucket4Count",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Number of children classified under the fifth Age Qualifying Group(Child Bucket#5).",
            "name": "bucket5Count",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "This field is only required when the criteria is meant for a detailed results. The date for the rate detail is needed.",
            "name": "detailDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "blockId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "blockIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "ratePlanCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "The ending value of the date range.",
            "name": "effectiveRateEnd",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "The starting value of the date range.",
            "name": "effectiveRateStart",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response will either be Summary or Detail type, but not both. See the request for the summary attribute flag.",
            "schema": {
              "$ref": "#/definitions/rateInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RateInfo not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/reservationCancellations": {
      "post": {
        "description": "Use this API to cancel reservations including multiple share reservations with single request. You will receive cancellation numbers in the response. <p><strong>OperationId:</strong>postCancelShareReservation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Cancel reservations",
        "operationId": "postCancelShareReservation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for canceling reservations.",
            "name": "cancelReservation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cancelReservation"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response object for the request to cancel reservations. Response contains the reservations which were successfully canceled.",
            "schema": {
              "$ref": "#/definitions/cancelReservationDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/summary": {
      "get": {
        "description": "<p>This operation fetches brief summary for the reservations and also supports the Global Parameter <strong>MAX ROWS FETCH COUNT</strong>.<br>By default this parameter is configured to support an overall fetch of <strong>5000</strong> Records in total, with maximum number of records that can be fetched at a time being <strong>200</strong> (limit). However, this parameter can be updated to support an overall fetch value being a valid number between <strong>1</strong> and <strong>10000</strong> with maximum number of records that can be fetched at a time being same i.e. <strong>200</strong> (limit).</p><p>Requests with an <strong>offset</strong> and <strong>limit</strong> sum exceeding the <strong>MAX ROWS FETCH COUNT</strong> configured would fail the request.</p> <p><strong>OperationId:</strong>getReservationsSummary</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get brief summary for Reservations",
        "operationId": "getReservationsSummary",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservations is being searched.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "This filter indicates if the reservation(s) has performed an Advance Check-In or not. Data fetched is for 30 days ahead of business date.",
            "name": "advancedCheckedIn",
            "in": "query"
          },
          {
            "type": "integer",
            "default": "200",
            "description": "This filter indicates number of records the API has to fetch.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "This filter is for the index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This filter indicates whether the reservation is Pre-Registered for Internet Check-In or not. Data fetched is for 30 days ahead of business date.",
            "name": "preRegistered",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "This filter is for the date of arrival of reservation.",
            "name": "arrivalDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "This filter is for the date of departure of reservation.",
            "name": "departureDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "This filter is for the business date when reservation(s) was created in the system.",
            "name": "createDateTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "This filter is for the date when reservation(s) was cancelled.",
            "name": "cancelledOn",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "This filter is for the date when reservation(s) folio was closed.",
            "name": "folioClosedOn",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This filter looks up reservations with this last Name. Data fetched is for +-2 business date only when passed alone.",
            "name": "lastName",
            "in": "query"
          },
          {
            "type": "number",
            "description": "This filter is ID of the company used for the reservation. Data fetched is for +-2 business date only when passed alone.",
            "name": "companyId",
            "in": "query"
          },
          {
            "type": "number",
            "description": "This filter is ID of the guest.",
            "name": "guestNameId",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Cancelled",
              "CheckedOut",
              "CheckedIn",
              "DueIn",
              "DueOut",
              "InHouse",
              "NoShow",
              "WaitList"
            ],
            "type": "string",
            "description": "This filter is computed reservation status of the reservation(s).",
            "name": "reservationStatus",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This filter is ID of confirmation for the reservation.",
            "name": "confirmationNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This filter is ID of external reference for the reservation.",
            "name": "externalReferenceNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This filter is ID of cancellation for the reservation.",
            "name": "cancellationNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This filter is used for looking up reservations with this membership number. Last Name is required along with membership number to filter the data.",
            "name": "membershipNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This filter is unique identifier of the registration card number. Last Name is required along with registration card number to filter the data.",
            "name": "registeredCardNumber",
            "in": "query"
          },
          {
            "type": "number",
            "description": "This filter checks reservations with balance amount greater than or equal to this amount. Departure date is required along with balance to filter the data.",
            "name": "balance",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This filter is for room number.",
            "name": "roomId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response that contains fetched reservation's delivery history.",
            "schema": {
              "$ref": "#/definitions/reservationsSummary"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReservationsSummary not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/validations": {
      "put": {
        "description": "Use this API to validate either the guarantee type or stay details of a reservation you are about to create. <p><strong>OperationId:</strong>putValidateReservationChanges</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Validate Reservation Change",
        "operationId": "putValidateReservationChanges",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to validate reservation changes.",
            "name": "validateReservationChanges",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/validateReservationChanges"
                },
                {
                  "example": {
                    "instructions": {
                      "instruction": [
                        "StayHeader"
                      ]
                    },
                    "links": [],
                    "reservation": {
                      "comments": [],
                      "hotelId": "HOTEL1",
                      "reservationGuests": [
                        {
                          "primary": false,
                          "profileInfo": {
                            "profileIdList": [
                              {
                                "id": "1156017",
                                "type": "Profile"
                              }
                            ]
                          }
                        }
                      ],
                      "reservationPaymentMethods": {
                        "folioView": "1",
                        "paymentMethod": "CASH"
                      },
                      "reservationStatus": "Reserved",
                      "roomStay": {
                        "arrivalDate": "2020-11-28",
                        "departureDate": "2020-11-29",
                        "expectedTimes": {
                          "reservationExpectedArrivalTime": "2020-11-28",
                          "reservationExpectedDepartureTime": "2020-11-29"
                        },
                        "guarantee": {
                          "guaranteeCode": "6PM",
                          "onHold": false
                        },
                        "guestCounts": {
                          "adults": 1,
                          "children": 0
                        },
                        "roomRates": [
                          {
                            "bogoDiscount": false,
                            "complimentary": false,
                            "discountAllowed": false,
                            "end": "2020-11-28",
                            "guestCounts": {
                              "adults": 1,
                              "children": 0
                            },
                            "houseUseOnly": false,
                            "marketCode": "HOUSE",
                            "numberOfUnits": 1,
                            "pseudoRoom": false,
                            "ratePlanCode": "RACK",
                            "rates": {
                              "rate": [
                                {
                                  "base": {
                                    "amountBeforeTax": "299"
                                  },
                                  "end": "2020-11-23",
                                  "start": "2020-11-23"
                                }
                              ]
                            },
                            "roomType": "STDK",
                            "roomTypeCharged": "STDK",
                            "sourceOfBusiness": "DIRECT",
                            "start": "2020-11-28",
                            "suppressRate": false
                          }
                        ]
                      }
                    },
                    "timeSpan": {
                      "endDate": "2020-11-29",
                      "startDate": "2020-11-28"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for validating reservation changes.",
            "schema": {
              "$ref": "#/definitions/validateReservationChangesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationIdtoShare}/share": {
      "get": {
        "description": "Fetch the reservation that can be shared with an existing reservation. <p><strong>OperationId:</strong>getReservationsToShareByReservationId</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get Reservations to share by Reservation id",
        "operationId": "getReservationsToShareByReservationId",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationIdtoShare",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Free form text field for searching all reservation fields",
            "name": "superSearch",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationGuestId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationGuestIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Membership ID criteria.",
            "name": "membershipId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "membershipLevel",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "membershipType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Family name, last name.",
            "name": "surname",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names",
            "name": "givenName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room number",
            "name": "roomId",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Reservation",
                "Comments",
                "GuestComments",
                "Packages",
                "InventoryItems",
                "ReservationPaymentMethods",
                "RoutingInstructions",
                "Preferences",
                "Memberships",
                "Alerts",
                "Traces",
                "ConfirmationLetters",
                "CallHistory",
                "FixedCharges",
                "GuestMessages",
                "ReservationPolicies",
                "Indicators",
                "LinkedReservations",
                "RevenuesAndBalances",
                "GuestLastStay",
                "ECoupons",
                "TrackItItems",
                "TotalCostOfStay",
                "ReservationAwards",
                "WebRegistrationCards",
                "ServiceRequests",
                "ReservationActivities",
                "ScheduledActivities",
                "PrepaidCards",
                "Shares",
                "Attachments",
                "Locators",
                "ProfileAwards",
                "TransactionDiversions",
                "Tickets",
                "GuestMemberships",
                "ECertificates",
                "UpsellInfo",
                "RoomAssignedByAI",
                "CustomNameValue",
                "CustomChargeExemptions"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Instruction to fetch whether the room was assigned/upgraded by AI. This will also include Reservation instruction.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to the Fetch UpgradeEligibilityReservations Request operation. Based on the criteria, reservation information is returned.",
            "schema": {
              "$ref": "#/definitions/fetchReservations"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReservationsToShareByReservationId not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}": {
      "get": {
        "description": "Use this API to retrieve a reservation&apos;s detail such as guest&apos;s stay, arrival and departure dates, transportation, room and rate information, preferences, packages, and more using OPERA&apos;s reservationId.<p><strong>OperationId:</strong>getReservation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get reservation by ID",
        "operationId": "getReservation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Reservation",
                "Comments",
                "ReservationMembershipAwards",
                "GuestComments",
                "Packages",
                "TotalCostOfStay",
                "InventoryItems",
                "ReservationPaymentMethods",
                "RoutingInstructions",
                "Preferences",
                "Memberships",
                "Alerts",
                "Traces",
                "ConfirmationLetters",
                "CallHistory",
                "FixedCharges",
                "GuestMessages",
                "ReservationPolicies",
                "Indicators",
                "LinkedReservations",
                "RevenuesAndBalances",
                "GuestLastStay",
                "ECoupons",
                "TrackItItems",
                "ReservationAwards",
                "WebRegistrationCards",
                "ReservationActivities",
                "ScheduledActivities",
                "PrepaidCards",
                "Attachments",
                "Locators",
                "ProfileAwards",
                "TransactionDiversions",
                "Tickets",
                "GuestMemberships",
                "ECertificates",
                "UpsellInfo",
                "RoomAssignedByAI",
                "AutoCheckInRoomType"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Instruction to fetch whether the room was assigned/upgraded by AI. This will also include Reservation instruction.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Cancel",
                "Move",
                "PreCharge",
                "PostCharge",
                "FacilitySchedule",
                "Upsell",
                "PreCheckIn",
                "PostToNoShowCancel",
                "NoShow",
                "NameChange",
                "Discount",
                "HouseKeeping",
                "EnrollToPrimaryMembership",
                "EnrollInProgress",
                "MemberAwardAttached",
                "UpgradeAwardAttached"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
            "name": "allowedActions",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Marks the reservation as recently accessed.",
            "name": "markAsRecentlyAccessed",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Return object to the request for information regarding a reservation.",
            "schema": {
              "$ref": "#/definitions/reservation"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "reservations": {
                  "reservation": [
                    {
                      "allowMobileCheckout": false,
                      "comments": [
                        {
                          "comment": {
                            "createDateTime": "2020-01-28 17:22:35.0",
                            "creatorId": "BEN@HOTEL1",
                            "internal": false,
                            "lastModifierId": "BEN@HOTEL1",
                            "lastModifyDateTime": "2020-01-28 17:22:35.0",
                            "notificationLocation": "GEN",
                            "text": {
                              "value": "This is a sample reservation comment"
                            },
                            "type": "RESERVATION"
                          },
                          "id": "113803",
                          "type": "Comment"
                        },
                        {
                          "comment": {
                            "commentTitle": "Cashier Comment",
                            "createDateTime": "2020-01-28 17:23:38.0",
                            "creatorId": "BEN@HOTEL1",
                            "internal": false,
                            "lastModifierId": "BEN@HOTEL1",
                            "lastModifyDateTime": "2020-01-28 17:27:51.0",
                            "notificationLocation": "PROPHOTEL1",
                            "text": {
                              "value": "Cashier Comment will go here"
                            },
                            "type": "CASHIER"
                          },
                          "id": "113804",
                          "type": "Comment"
                        }
                      ],
                      "createDateTime": "2020-01-28 14:33:54.0",
                      "hotelId": "HOTEL1",
                      "preRegistered": false,
                      "reservationGuests": [
                        {
                          "primary": true,
                          "profileInfo": {
                            "profile": {
                              "customer": {
                                "personName": [
                                  {
                                    "givenName": "Jennifer",
                                    "nameType": "Primary",
                                    "surname": "Clarke"
                                  }
                                ]
                              }
                            },
                            "profileIdList": [
                              {
                                "id": "687128",
                                "type": "Profile"
                              }
                            ]
                          }
                        }
                      ],
                      "reservationIdList": [
                        {
                          "id": "571062",
                          "type": "Reservation"
                        },
                        {
                          "id": "813595",
                          "type": "Confirmation"
                        }
                      ],
                      "reservationStatus": "Reserved",
                      "roomStay": {
                        "arrivalDate": "2020-01-13",
                        "departureDate": "2020-01-14",
                        "expectedTimes": {
                          "reservationExpectedArrivalTime": "2020-01-13",
                          "reservationExpectedDepartureTime": "2020-01-14"
                        },
                        "guarantee": {
                          "guaranteeCode": "6PM",
                          "shortDescription": "6pm Hold"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "Reservation not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this to update an existing reservation for a hotel, such as adding comments, changing the number of guests.   There are many fields in putReservation defined by ListOfValues; ensure you have reviewed ListOfValues APIs in order successfully to use putReservation. <p><strong>OperationId:</strong>putReservation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Update Reservation by ID",
        "operationId": "putReservation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request method to change a reservations information.",
            "name": "changeReservation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeReservation"
                },
                {
                  "example": {
                    "reservations": {
                      "allowAutoCheckin": false,
                      "allowMobileCheckout": false,
                      "allowMobileViewFolio": false,
                      "allowPreRegistration": false,
                      "chargeCardNumber": "5904606",
                      "comments": {
                        "commentInfo": [
                          {
                            "comment": {
                              "commentTitle": "InHouse Comment",
                              "internal": false,
                              "notificationLocation": "PROPDFLT",
                              "text": {
                                "value": "The guest will be a late arrival"
                              },
                              "type": "RESERVATION"
                            },
                            "id": "120303",
                            "type": "Comment"
                          },
                          {
                            "comment": {
                              "commentTitle": "No Change To Reservation Comment",
                              "internal": false,
                              "notificationLocation": "GEN",
                              "text": {
                                "value": "reservation comments"
                              },
                              "type": "RESERVATION"
                            },
                            "id": "120304",
                            "type": "Comment"
                          },
                          {
                            "comment": {
                              "commentTitle": "New Cashier Comment",
                              "internal": false,
                              "notificationLocation": "Note1",
                              "text": {
                                "value": "New Cashier Comment"
                              },
                              "type": "CASHIER"
                            }
                          }
                        ]
                      },
                      "computedReservationStatus": "DueIn",
                      "createBusinessDate": "2021-02-27",
                      "hasOpenFolio": false,
                      "hotelId": "HOTEL1",
                      "optedForCommunication": false,
                      "preRegistered": false,
                      "printRate": false,
                      "reservationGuests": {
                        "reservationGuest": [
                          {
                            "primary": true,
                            "profileInfo": {
                              "profile": {
                                "customer": {
                                  "language": "E",
                                  "personName": [
                                    {
                                      "givenName": "Sam",
                                      "nameTitle": "Mr",
                                      "nameType": "Primary",
                                      "surname": "Jones"
                                    },
                                    {
                                      "nameType": "External"
                                    }
                                  ],
                                  "vipDescription": "Gold Level",
                                  "vipStatus": "GOLD"
                                },
                                "profileType": "Guest"
                              },
                              "profileIdList": [
                                {
                                  "id": "687128",
                                  "type": "Profile"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "reservationStatus": "Reserved",
                      "roomStay": {
                        "arrivalDate": "2021-02-27",
                        "bookingMedium": "PMS",
                        "bookingMediumDescription": "PMS Channel",
                        "departureDate": "2021-02-28",
                        "guarantee": {
                          "guaranteeCode": "GDED",
                          "shortDescription": "Group Deduct"
                        },
                        "guestCounts": {
                          "adults": "1",
                          "children": "0"
                        },
                        "printRate": false,
                        "remoteCheckInAllowed": false,
                        "roomNumberLocked": false,
                        "roomRates": [
                          {
                            "bogoDiscount": false,
                            "complimentary": false,
                            "discountAllowed": false,
                            "end": "2021-02-27",
                            "fixedRate": false,
                            "guestCounts": {
                              "adults": "1",
                              "children": "0"
                            },
                            "houseUseOnly": false,
                            "marketCode": "CORP",
                            "marketCodeDescription": "Group Corporate",
                            "numberOfUnits": "1",
                            "pseudoRoom": false,
                            "ratePlanCode": "IHUBFAST",
                            "rates": {
                              "rate": [
                                {
                                  "base": {
                                    "amountBeforeTax": "120",
                                    "currencyCode": "USD"
                                  },
                                  "end": "2021-02-27",
                                  "shareDistributionInstruction": "Full",
                                  "start": "2021-02-27",
                                  "total": {
                                    "amountBeforeTax": "120"
                                  }
                                }
                              ]
                            },
                            "roomType": "STDK",
                            "roomTypeCharged": "STDK",
                            "sourceCode": "REF",
                            "sourceCodeDescription": "Referral",
                            "start": "2021-02-27",
                            "suppressRate": false,
                            "total": {
                              "amountBeforeTax": "120"
                            }
                          }
                        ],
                        "total": {
                          "amountAfterTax": "121",
                          "amountBeforeTax": "120"
                        }
                      },
                      "roomStayReservation": true,
                      "sourceOfSale": {
                        "sourceCode": "HOTEL1",
                        "sourceType": "PMS"
                      },
                      "upgradeEligible": false,
                      "walkIn": false
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/changeReservationDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/alerts": {
      "get": {
        "description": "Get the alert notices including global alerts for a reservation. <p><strong>OperationId:</strong>getAlertNotices</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Fetch Alert Notices",
        "operationId": "getAlertNotices",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "enum": [
              "CheckIn",
              "CheckOut",
              "Reservation",
              "Billing",
              "InHouse"
            ],
            "type": "string",
            "name": "alertArea",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Determines whether to fetch Global Alert Notices or Welcome Offer Alert Notice.",
            "name": "welcomeOffer",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response with the fetched alerts, includes global alerts, notes and undelivered guest messages.",
            "schema": {
              "$ref": "#/definitions/alerts"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AlertNotices not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/attachments": {
      "get": {
        "description": "Get Reservation attachments <p><strong>OperationId:</strong>getReservationAttachments</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get Reservation attachments",
        "operationId": "getReservationAttachments",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Indicator to retrieve e-Signed registration card attachments.",
            "name": "webRegistrationCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Return object to the request for information regarding reservation attachments.",
            "schema": {
              "$ref": "#/definitions/reservationAttachments"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReservationAttachments not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/attachments/{attachmentId}": {
      "delete": {
        "description": "Delete attachments from a Reservation. <p><strong>OperationId:</strong>deleteReservationAttachment</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Delete Reservation attachments",
        "operationId": "deleteReservationAttachment",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Id of the attachment to be deleted.",
            "name": "attachmentId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/breakshares/action/validate": {
      "put": {
        "description": "This API performs a validation before separating share reservations. <p><strong>OperationId:</strong>putBreakShareValidations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Validate before breaking a share Reservation",
        "operationId": "putBreakShareValidations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for Break Share operation validations. This request should be done prior to the actual Break Share operation request. Based on the validations returned from this request the appropriate parameters can be returned in the actual break share request.",
            "name": "breakShareValidations",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/breakShareValidations"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the Break Share Validation request. This returns all validation messages for the operation.",
            "schema": {
              "$ref": "#/definitions/breakShareValidationsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/calls": {
      "get": {
        "description": "Get the Reservation Call History <p><strong>OperationId:</strong>getCallHistory</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get the Reservation Call History",
        "operationId": "getCallHistory",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response that contains either the fetched call history if was successful or error(s) if not.",
            "schema": {
              "$ref": "#/definitions/callHistory"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CallHistory not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/cancellationHistory": {
      "get": {
        "description": "Get cancellation history for a reservation. <p><strong>OperationId:</strong>getCancellationHistory</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get cancellation history",
        "operationId": "getCancellationHistory",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "hotelName",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "roomStayStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "roomStayEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "roomStayDuration",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room class code",
            "name": "roomClass",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room type code",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Room Id",
            "name": "numberOfRooms",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room Id",
            "name": "roomId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Rate plan code",
            "name": "ratePlanCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This is the HotelCode of the Block.",
            "name": "reservationBlockHotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationBlockId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationBlockIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Name of the block that is attached to the reservation.",
            "name": "blockName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Booking channel code",
            "name": "bookingChannelCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Party code",
            "name": "linkCode",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Guarantee Code.",
            "name": "onHold",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The account identification number for this particular member in this particular program.",
            "name": "membershipAccountId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The code or name of the bonus program. BonusCode can be used to indicate the level of membership (Gold Club, Platinum member, etc.)",
            "name": "membershipBonusCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The code or name of the membership level and indicates the level of membership (Gold Club, Platinum member, etc.). This is same as the BonusCode.",
            "name": "membershipLevel",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Membership ID (Unique ID from the memberships table).",
            "name": "membershipId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Guest's last stay date.",
            "name": "lastStayDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to the request to retrieve cancellation history for a reservation.",
            "schema": {
              "$ref": "#/definitions/cancellationHistory"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CancellationHistory not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/cancellationPolicies": {
      "put": {
        "description": "Compute the cancellation policies for a reservation. <p><strong>OperationId:</strong>putComputeCancellationPolicies</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Compute the cancellation policies",
        "operationId": "putComputeCancellationPolicies",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Operation to fetch the details for cancellation rules, applicable to a reservation. Based on the criteria the rule information can be retrieved for all cancellation rules or for a particular rule.",
            "name": "computeCancellationPolicies",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/computeCancellationPolicies"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the cancellation rules configuration request. Contains computed details for the cancellation rules requested.",
            "schema": {
              "$ref": "#/definitions/computeCancellationPoliciesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Create a new cancellation policy for a property. <p><strong>OperationId:</strong>postCancellationPolicy</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Create a Cancellation policy",
        "operationId": "postCancellationPolicy",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object that holds the details of Cancellation Policy to be created.",
            "name": "reservationCancellationPolicyCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationCancellationPolicyCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Delete an existing cancellation policy for a specific hotel. <p><strong>OperationId:</strong>deleteCancellationPolicy</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Delete a Cancellation policy",
        "operationId": "deleteCancellationPolicy",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "policyId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/cancellations": {
      "put": {
        "description": "Use this API to reinstate a cancelled reservation. <p><strong>OperationId:</strong>putReinstateReservation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Reinstate a Reservation",
        "operationId": "putReinstateReservation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Overriding the validation check will log the supposed errors in the warnings log if they would fail.",
            "name": "reinstateReservation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reinstateReservation"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/reinstateReservationDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this if a guest would like to cancel their reservation.  You will receive a cancellation number in the response. <p><strong>OperationId:</strong>postCancelReservation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Cancel Reservation by ID",
        "operationId": "postCancelReservation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for canceling reservations.",
            "name": "cancelReservation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cancelReservation"
                },
                {
                  "example": {
                    "reason": {
                      "code": "WEATHER",
                      "description": "Bad weather has changed travel plans"
                    },
                    "reservations": [
                      {
                        "allowedActions": [
                          "Cancel"
                        ],
                        "cxlInstr": {
                          "deleteResTraces": true
                        },
                        "externalCancellationId": "123456",
                        "hotelId": "HOTEL1",
                        "reservationIdList": [
                          {
                            "id": "660082",
                            "type": "Reservation"
                          }
                        ],
                        "roomStatus": "Clean"
                      }
                    ],
                    "verificationOnly": false
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response object for the request to cancel reservations. Response contains the reservations which were successfully canceled.",
            "schema": {
              "$ref": "#/definitions/cancelReservationDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/certificates": {
      "post": {
        "description": "Attach a certificate to Reservation. <p><strong>OperationId:</strong>postReservationCertificate</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Attach Certificate",
        "operationId": "postReservationCertificate",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to attach certificate to the Reservation.",
            "name": "attachCertificate",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/attachCertificate"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Remove a certification from a reservation. <p><strong>OperationId:</strong>deleteReservationCertificate</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Detach Certificate",
        "operationId": "deleteReservationCertificate",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/combineshares/action/validate": {
      "put": {
        "description": "Validate before combining Reservations for shares. <p><strong>OperationId:</strong>putCombineShareValidations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Combine Share Validations",
        "operationId": "putCombineShareValidations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to validate a combine share operation. This would be done prior to the actual Combine Share operation. Based on the validations returned from this request, the appropriate values can be returned to the Combine Share operation request.",
            "name": "combineShareValidations",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/combineShareValidations"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the Combine Share Validation request. This returns all validation messages which may be required for the combine share operation.",
            "schema": {
              "$ref": "#/definitions/combineShareValidationsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/copy": {
      "post": {
        "description": "Copy a Reservation. <p><strong>OperationId:</strong>postReservationCopy</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Copy a Reservation",
        "operationId": "postReservationCopy",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for copying a reservation's information as a template for a new reservation.",
            "name": "copyReservation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyReservation"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/dailyRates/action/validate": {
      "put": {
        "description": "Validate daily rate details change. <p><strong>OperationId:</strong>putReservationDailyRateDetailValidation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Validate daily rate details change",
        "operationId": "putReservationDailyRateDetailValidation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for validating Daily Rate Details modifications.",
            "name": "reservationDailyRateDetail",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationDailyRateDetail"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response after validating the changes for Daily Rate Details modifications.",
            "schema": {
              "$ref": "#/definitions/reservationDailyRateDetailDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/depositPolicies": {
      "put": {
        "description": "Computes the deposit policies. <p><strong>OperationId:</strong>putComputeDepositPolicies</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Computes the deposit policies",
        "operationId": "putComputeDepositPolicies",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Operation to fetch the details for deposit rules, applicable to a reservation. Based on the criteria the rule information can be retrieved for all deposit rules or for a particular rule.",
            "name": "computeDepositPolicies",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/computeDepositPolicies"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the deposit rules configuration request. Contains computed details for the deposit rules requested.",
            "schema": {
              "$ref": "#/definitions/computeDepositPoliciesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Create deposit policy for a property. This policy can then be used for reservations. <p><strong>OperationId:</strong>postDepositPolicy</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Create deposit policy",
        "operationId": "postDepositPolicy",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object that holds the details of hotel level Deposit Policy to be created.",
            "name": "reservationDepositPolicyCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationDepositPolicyCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Delete deposit policy for a property.   <p><strong>OperationId:</strong>deleteDepositPolicy</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Delete deposit policy",
        "operationId": "deleteDepositPolicy",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "policyId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/eCoupons": {
      "get": {
        "description": "Get the Reservation Ecoupons. <p><strong>OperationId:</strong>getECoupons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get Reservation Ecoupons",
        "operationId": "getECoupons",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching the eCoupons attached to Reservation.",
            "schema": {
              "$ref": "#/definitions/eCoupons"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ECoupons not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Change the Reservation Ecoupons. <p><strong>OperationId:</strong>putECoupons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Change Reservation Ecoupon",
        "operationId": "putECoupons",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing the existing eCoupons attached to Reservation.",
            "name": "eCouponsInfo",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/eCouponsInfo"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/eCoupons"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Create the Reservation Ecoupons. <p><strong>OperationId:</strong>postECoupons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Create Reservation ECoupon",
        "operationId": "postECoupons",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating new eCoupons.",
            "name": "eCouponsInfo",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/eCouponsInfo"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Delete the Reservation Ecoupons. <p><strong>OperationId:</strong>deleteECoupons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Delete Reservation ECoupons",
        "operationId": "deleteECoupons",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "eCouponId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/excludedPreferences": {
      "get": {
        "description": "Get the Reservation excluded preferences. <p><strong>OperationId:</strong>getReservationExcludedPreferences</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Fetch Reservation excluded preferences",
        "operationId": "getReservationExcludedPreferences",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The preference type for which the excluded preference search will be performed.",
            "name": "preferenceType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The preference code for which the excluded preference search will be performed.",
            "name": "preferenceCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the excluded preferences request.",
            "schema": {
              "$ref": "#/definitions/reservationExcludedPreferences"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReservationExcludedPreferences not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/guestLocators": {
      "get": {
        "description": "Get the Guest locater for a Reservation. <p><strong>OperationId:</strong>getReservationLocators</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Fetch Reservation Guest Locator",
        "operationId": "getReservationLocators",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object response to retrieve Guest Messages for a Reservation.",
            "schema": {
              "$ref": "#/definitions/reservationLocators"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReservationLocators not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Create Guest Locater for a list of Reservations. <p><strong>OperationId:</strong>postReservationLocators</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Create Reservation Guest Locator",
        "operationId": "postReservationLocators",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating new Notes for the hotels",
            "name": "reservationLocatorsDetailsInfo",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationLocatorsDetailsInfo"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response object for creating new Notes for the hotel.",
            "schema": {
              "$ref": "#/definitions/reservationLocatorsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/guestLocators/{locatorId}": {
      "put": {
        "description": "Change a list of Guest Locater for a Reservation. <p><strong>OperationId:</strong>changeReservationLocators</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Change Reservation Guest Locators",
        "operationId": "changeReservationLocators",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "locatorId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing hotel Notes for hotels.",
            "name": "reservationLocatorsInfo",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationLocatorsInfo"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/reservationLocatorsStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Delete a Guest Locater for a Reservation. <p><strong>OperationId:</strong>deleteReservationLocators</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Remove Reservation Locators",
        "operationId": "deleteReservationLocators",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "locatorId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/guestMessages": {
      "put": {
        "description": "Change guest messages for Reservation. <p><strong>OperationId:</strong>putResvGuestMessages</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Change Reservation Guest Messages",
        "operationId": "putResvGuestMessages",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for updating the Guest Messages for a Reservation Workspace.",
            "name": "changeResvGuestMessages",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeResvGuestMessages"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to the request to update Guest Messages for a Reservation.",
            "schema": {
              "$ref": "#/definitions/changeResvGuestMessages"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Create guest message for a guest reservation. <p><strong>OperationId:</strong>postGuestMessages</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Create guest messages",
        "operationId": "postGuestMessages",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating a new guest message.",
            "name": "createGuestMessages",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/createGuestMessages"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response object to the request to create Guest Messages for a Reservation.",
            "schema": {
              "$ref": "#/definitions/guestMessagesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/guestMessages/{guestMessageId}": {
      "put": {
        "description": "Change guest Message on a reservation. <p><strong>OperationId:</strong>putGuestMessages</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Change guest Message  ",
        "operationId": "putGuestMessages",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Guest Message Id",
            "name": "guestMessageId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for modifying an existing guest message.",
            "name": "changeGuestMessages",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeGuestMessages"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to the request to update Guest Messages for a Reservation.",
            "schema": {
              "$ref": "#/definitions/changeGuestMessages"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Delete guest messages from a reservation. <p><strong>OperationId:</strong>deleteGuestMessages</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Delete guest messages",
        "operationId": "deleteGuestMessages",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Guest Message Id",
            "name": "guestMessageId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/header/action/validate": {
      "put": {
        "description": "Validate Reservation header change. <p><strong>OperationId:</strong>putReservationHeaderValidation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Validate Reservation header change",
        "operationId": "putReservationHeaderValidation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for validating Reservation Header modifications.",
            "name": "reservationDailyRateDetail",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationDailyRateDetail"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response after validating the changes for the reservation header modifications.",
            "schema": {
              "$ref": "#/definitions/reservationDailyRateDetailDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/inventoryItems": {
      "get": {
        "description": "Get the Inventory Items reserved for the Reservation. <p><strong>OperationId:</strong>getReservedInventoryItems</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get Reserved Inventory Items ",
        "operationId": "getReservedInventoryItems",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Return object to the request for information regarding inventory Items reserved for a reservation.",
            "schema": {
              "$ref": "#/definitions/inventoryItems"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReservedInventoryItems not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Change the Inventory Items reserved for the Reservation. <p><strong>OperationId:</strong>putReservedInventoryItems</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Change reserved Inventory Items ",
        "operationId": "putReservedInventoryItems",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to change the reserved inventory Items for a reservation.",
            "name": "reservedInventoryItemsInfo",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservedInventoryItemsInfo"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/reservedInventoryItemsInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Reserve Reservation inventory items. <p><strong>OperationId:</strong>postReserveInventoryItems</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Reserve Reservation inventory items",
        "operationId": "postReserveInventoryItems",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to reserve inventory Items for a reservation.",
            "name": "reserveInventoryItems",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reserveInventoryItems"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Delete the Inventory Items reserved for the Reservation. <p><strong>OperationId:</strong>deleteReservedInventoryItems</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Delete Reserved Inventory Items",
        "operationId": "deleteReservedInventoryItems",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/linked": {
      "get": {
        "description": "Get linked Reservations for given Reservation. <p><strong>OperationId:</strong>getLinkedReservations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get linked Reservations ",
        "operationId": "getLinkedReservations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "additionalReservationId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "additionalReservationIdType",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Reservation",
                "Comments",
                "GuestComments",
                "Packages",
                "InventoryItems",
                "ReservationPaymentMethods",
                "RoutingInstructions",
                "Preferences",
                "Memberships",
                "Alerts",
                "Traces",
                "ConfirmationLetters",
                "CallHistory",
                "FixedCharges",
                "GuestMessages",
                "ReservationPolicies",
                "Indicators",
                "LinkedReservations",
                "RevenuesAndBalances",
                "GuestLastStay",
                "ECoupons",
                "TrackItItems",
                "TotalCostOfStay",
                "ReservationAwards",
                "WebRegistrationCards",
                "ServiceRequests",
                "ReservationActivities",
                "ScheduledActivities",
                "PrepaidCards",
                "Shares",
                "Attachments",
                "Locators",
                "ProfileAwards",
                "TransactionDiversions",
                "Tickets",
                "GuestMemberships",
                "ECertificates",
                "UpsellInfo",
                "RoomAssignedByAI",
                "CustomNameValue",
                "CustomChargeExemptions"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Instruction to fetch whether the room was assigned/upgraded by AI. This will also include Reservation instruction.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Return object for retrieving linked reservations.",
            "schema": {
              "$ref": "#/definitions/linkedHotelReservations"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "LinkedReservations not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/linkedSummary": {
      "get": {
        "description": "Get Reservation summary for linked Reservation of given Reservation id. <p><strong>OperationId:</strong>getLinkedReservationsSummary</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get Reservation summary for linked Reservation",
        "operationId": "getLinkedReservationsSummary",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "additionalReservationId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "additionalReservationIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Return object for retrieving linked reservations.",
            "schema": {
              "$ref": "#/definitions/linkedReservationsInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "LinkedReservationsSummary not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/locks": {
      "put": {
        "description": "Acquire Reservation Lock. <p><strong>OperationId:</strong>putAcquireReservationLock</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Acquire Reservation Lock",
        "operationId": "putAcquireReservationLock",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Operation for requesting a lock on a reservation.",
            "name": "reservationLock",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationLock"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "This response will indicate whether the requested lock has been granted or some other user owns the lock.",
            "schema": {
              "$ref": "#/definitions/reservationLockDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/locks/break": {
      "post": {
        "description": "Break Reservation lock on a reservation. <p><strong>OperationId:</strong>postBreakReservationLock</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Break Reservation lock",
        "operationId": "postBreakReservationLock",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Operation for forcefully breaking a reservation lock This operation is subject to user permissions.",
            "name": "reservationLock",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationLock"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/masterAccount": {
      "put": {
        "description": "Change a master account on a reservation. <p><strong>OperationId:</strong>putMasterAccount</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Change a Master Account",
        "operationId": "putMasterAccount",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for ChangeMasterAccount operation.",
            "name": "masterAccount",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/masterAccount"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for ChangeMasterAccount operation.",
            "schema": {
              "$ref": "#/definitions/masterAccountSummary"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Create a master account for a reservation. <p><strong>OperationId:</strong>postMasterAccount</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Create a Master Account",
        "operationId": "postMasterAccount",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for CreateMasterAccount operation.",
            "name": "masterAccount",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/masterAccount"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Cancel Master account on a reservation. <p><strong>OperationId:</strong>deleteMasterAccount</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Cancel Master Account",
        "operationId": "deleteMasterAccount",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/memberships": {
      "post": {
        "description": "Add a membership to an existing reservation. <p><strong>OperationId:</strong>postReservationMembership</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Create a Reservation membership",
        "operationId": "postReservationMembership",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Method to create a reservation membership on an existing reservation.",
            "name": "reservationMembership",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationMembership"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Delete a membership from an existing reservation. <p><strong>OperationId:</strong>deleteReservationMembership</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Delete a Reservation membership",
        "operationId": "deleteReservationMembership",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/mergeReservations": {
      "put": {
        "description": "Use this API to merge multiple reservations. <p><strong>OperationId:</strong>mergeReservations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Merge multiple Reservations",
        "operationId": "mergeReservations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request method to Merge reservations.",
            "name": "reservationsToMerge",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationsToMerge"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/mergeReservationsStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/move": {
      "put": {
        "description": "This API can be used to move a reservation to a different hotel. <p><strong>OperationId:</strong>putReservationHotelMove</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Move the Reservation ",
        "operationId": "putReservationHotelMove",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for moving a reservation and its valid sharers to a different hotel.",
            "name": "moveReservationHotel",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/moveReservationHotel"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "This API will potentially remove the following information to a moved reservation: - Routing Instructions - All routing information will have to be configured in the new hotel. - Packages - All packages will need to be re-configured, if it exist, in the new hotel. - Imperfect Share - An imperfect share was requested to be moved and has been ignored.",
            "schema": {
              "$ref": "#/definitions/moveReservationHotelDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/packages": {
      "get": {
        "description": "Get the package availability for a hotel code and reservation id <p><strong>OperationId:</strong>getPackage</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get Package",
        "operationId": "getPackage",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "postingRhythm",
            "in": "query"
          },
          {
            "type": "string",
            "name": "productCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "ratePlanCode",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "reservationTimeSpanStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "reservationTimeSpanEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "packageTimeSpanStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "packageTimeSpanEndDate",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "packageQuantity",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "packageExcludedQuantity",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Defines the number of Adults.",
            "name": "reservationAdults",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Defines the number of Children.",
            "name": "reservationChildren",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Primary",
                "Transaction",
                "Classification",
                "Schedule",
                "InventoryItems"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for package instructions that can be used in requests for partial operations.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to fetch package availability with the data, success and warnings or errors.",
            "schema": {
              "$ref": "#/definitions/packages"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Package not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "This API will allow you to update existing packages on a reservation. <p><strong>OperationId:</strong>putReservationPackage</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Update a package on a Reservation",
        "operationId": "putReservationPackage",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Method to change/modify a reservation package on an existing reservation. The main information required are the Package Code, Resort, RateCode(if applicable), Original Begin Date(if applicable) and Original End Date(if applicable). These are the criteria by which the package will be identified in order to be modified/changed. The elements that can be changed are the Quantity, Excluded Quantity, Unit Price and Unit Allowance if existing. For RateCode packages, the begin date and end date cannot be changed. For non-RateCode packages, the begin date or end date can be changed.",
            "name": "reservationPackagesInfo",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationPackagesInfo"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/reservationPackagesInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "This API will allow you to add packages to a reservation. <p><strong>OperationId:</strong>postReservationPackage</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Add a package to a Reservation",
        "operationId": "postReservationPackage",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request method to attach a package to an existing reservation.",
            "name": "reservationPackagesInfo",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationPackagesInfo"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "This API will allow you to delete packages from a reservation. <p><strong>OperationId:</strong>deleteReservationPackage</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Delete a package from a Reservation",
        "operationId": "deleteReservationPackage",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/paymentMethods": {
      "get": {
        "description": "This API will return the payment method(s) that exist on a reservation. <p><strong>OperationId:</strong>getPaymentMethods</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get a payment method ",
        "operationId": "getPaymentMethods",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Flag to notify the operation to also retrieve the outstanding balance, current authorized amount and amount needed to be approved for each folio.",
            "name": "includeAmounts",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for the fetch payment method request. Retrieves the payment methods for the reservation.",
            "schema": {
              "$ref": "#/definitions/reservationPaymentMethods"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "PaymentMethods not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "This API will update an existing payment method on a reservation. <p><strong>OperationId:</strong>putPaymentMethods</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Change a payment method ",
        "operationId": "putPaymentMethods",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Method to update a reservation's payment methods.",
            "name": "reservationPaymentMethods",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationPaymentMethods"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/reservationPaymentMethods"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add a payment method to a reservation. <p><strong>OperationId:</strong>postPaymentMethods</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Create a payment method ",
        "operationId": "postPaymentMethods",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to create payment methods.",
            "name": "reservationPaymentMethods",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationPaymentMethods"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete a payment method from a reservation. <p><strong>OperationId:</strong>deletePaymentMethods</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Delete a payment method ",
        "operationId": "deletePaymentMethods",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/policies": {
      "get": {
        "description": "Use this API to get cancelation and deposit policies for a given reservation.<p><strong>OperationId:</strong>getReservationPolicies</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get reservation cancel and deposit policies",
        "operationId": "getReservationPolicies",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "A flag which instructs whether the deposit policies needs to be fetched.",
            "name": "fetchDepositPolicies",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "A flag which instructs whether the cancel policies needs to be fetched.",
            "name": "fetchCancellationPolicies",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response that contains deposit and cancellation policies attached with the reservation.",
            "schema": {
              "$ref": "#/definitions/reservationPolicies"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReservationPolicies not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/preCheckIn": {
      "post": {
        "description": "This will allow you to set a reservation as a pre-registered guest.  The API request requires the guests confirmation number and you can optionally include arrival time.  The behavior of the API will be dependent upon the Pre-registration rules configured for the hotel in OPERA Cloud administration. <p><strong>OperationId:</strong>postPreCheckInReservation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Pre-Checkin a Reservation",
        "operationId": "postPreCheckInReservation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to pre-register a reservation eligible for pre-registration and change arrival details.",
            "name": "preCheckInReservation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/preCheckInReservation"
                },
                {
                  "example": {
                    "reservation": {
                      "reservationId": {
                        "idContext": "OPERA",
                        "type": "Confirmation"
                      }
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "This will cancel or rather revert the pre-checkin action for a guest's reservation. The reservation will return to DUEIN status. <p><strong>OperationId:</strong>deletePreCheckInReservation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Revert a PreCheckIn Reservation",
        "operationId": "deletePreCheckInReservation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "resvIDExtension",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The time at which the guest arrives at the hotel.",
            "name": "arrivalTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room Number to be assigned to the reservation.",
            "name": "roomNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Currency code preferred by guest.",
            "name": "guestPreferredCurrency",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
            "name": "allowMobileViewFolio",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "paymentMethodDescription",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "name": "paymentMethodFolioView",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "paymentMethod",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Attach the credit card to profile.",
            "name": "attachCreditCardToProfile",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardHolderName",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumber",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberLast4Digits",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ],
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "name": "cardOrToken",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ],
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "name": "cardType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Expiration date of the credit card",
            "name": "expirationDate",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "expirationDateExpired",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Masked Expiration date of the credit card",
            "name": "expirationDateMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ],
            "type": "string",
            "name": "processing",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "swiped",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "name": "userDefinedCardType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "cardId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "cardIdIDExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "cardIdIDContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "cardIdType",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "currentAuthorizedAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "authorizedAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "approvalAmountNeeded",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "approvalAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "balanceAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "balanceCurrencyCode",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The authorization rule code.",
            "name": "authorizationRuleCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "authorizationRuleAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "authorizationRuleCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A percentage value if the authorization rule is percentage based.",
            "name": "authorizationRulePercent",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "emailFolio",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "emailFolioID",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "emailFolioIDExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "emailFolioIDContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "emailFolioIDType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of the creation.",
            "name": "emailFolioCreateDateTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
            "name": "emailFolioCreatorID",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the e-mail address.",
            "name": "emailFolioEmailAddress",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Html",
              "Text"
            ],
            "type": "string",
            "description": "Supported Email format.",
            "name": "emailFolioEmailFormat",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Identifies the last software system or person to modify a record.",
            "name": "emailFolioLastModifierID",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of last modification.",
            "name": "emailFolioLastModifyDateTime",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Display Order sequence.",
            "name": "emailFolioOrderSequence",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true, indicates a primary information.",
            "name": "emailFolioPrimaryInd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
            "name": "emailFolioPurgeDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
            "name": "emailFolioType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Describes the Type code",
            "name": "emailFolioTypeDescription",
            "in": "query"
          },
          {
            "type": "string",
            "name": "arrivalCarrierCode",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "arrivalDateTime",
            "in": "query"
          },
          {
            "type": "string",
            "name": "arrivalStationCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "arrivalTransportCode",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "arrivalTransportationReqd",
            "in": "query"
          },
          {
            "type": "string",
            "name": "arrivalType",
            "in": "query"
          },
          {
            "type": "string",
            "name": "arrivalComments",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/preferences": {
      "get": {
        "description": "You can use this API to retrieve the preferences that exist on a reservation. <p><strong>OperationId:</strong>getReservationPreference</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get Reservation Preferences",
        "operationId": "getReservationPreference",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "preferenceTypeCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the reservation's preferences.",
            "schema": {
              "$ref": "#/definitions/reservationPreference"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReservationPreference not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "This API will add a preference to a Reservation.  <p><strong>OperationId:</strong>postReservationPreference</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Add a preference to a Reservation",
        "operationId": "postReservationPreference",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Method to create a reservation preference on an existing reservation.",
            "name": "reservationPreferenceInfo",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationPreferenceInfo"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/preferences/{preferenceCode}": {
      "put": {
        "description": "You can use this API to update the preferences that exist on a reservation. <p><strong>OperationId:</strong>putReservationPreference</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Change a Reservation Preference",
        "operationId": "putReservationPreference",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Preference Code",
            "name": "preferenceCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Method to change a reservation preference on an existing reservation.",
            "name": "reservationPreferenceInfo",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationPreferenceInfo"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/reservationPreferenceDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "You can use this API to remove a preference that exist on a reservation. <p><strong>OperationId:</strong>deleteReservationPreference</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Delete a Reservation Preference",
        "operationId": "deleteReservationPreference",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Preference Code",
            "name": "preferenceCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/reverseDepositPolicy/{policyId}": {
      "post": {
        "description": "You can use this API to reverse a deposit policy on a specified reservation. <p><strong>OperationId:</strong>postReverseDepositPolicy</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Reverse a deposit policy",
        "operationId": "postReverseDepositPolicy",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Policy ID",
            "name": "policyId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type to reverse deposit policy of a reservation.(This is applicable only when advance deposit handling is set to '17') ReverseDepositPolicy operation will reverse the policy by creating a new request with same opposite amount.",
            "name": "reverseDepositPolicy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reverseDepositPolicy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/routingInstructions": {
      "get": {
        "description": "Use this API to fetch a reservation's routing instructions. It requires a reservation ID, which can be fetched using getReservations. <p><strong>OperationId:</strong>getRoutingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get routing instructions",
        "operationId": "getRoutingInstructions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Include the window routing instructions to the response.",
            "name": "includeWindowRouting",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Include the room routing instructions in the response.",
            "name": "includeRoomRouting",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Include the comp routing instructions in the response.",
            "name": "includeCompRouting",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Include the comp routing requests in the response.",
            "name": "includeCompRoutingRequests",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "If date is included then the search result should only be valid for dates which includes this date.",
            "name": "effectiveOn",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object containing routing instructions for a reservation.",
            "schema": {
              "$ref": "#/definitions/routingInstructions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RoutingInstructions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Change routing instructions on an existing reservation. <p><strong>OperationId:</strong>putRoutingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Change routing instructions",
        "operationId": "putRoutingInstructions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request when changing a routing instruction.",
            "name": "routingInstructionsInfo",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/routingInstructionsInfo"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "You can use this API to create routing instructions on a reservation. It requires a reservation ID, which can be fetched using getReservations. <p><strong>OperationId:</strong>postRoutingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Create routing instructions for a reservation",
        "operationId": "postRoutingInstructions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to create a routing instruction.",
            "name": "reservationRoutingCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationRoutingCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "You can use this API to delete routing instructions from a reservation. <p><strong>OperationId:</strong>deleteRoutingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Delete routing instructions",
        "operationId": "deleteRoutingInstructions",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/shareRateAmount": {
      "put": {
        "description": "Change the share amounts of a reservation <p><strong>OperationId:</strong>putShareRateAmount</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Change Share Rate Amount",
        "operationId": "putShareRateAmount",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to change the share amount for a sharer reservation. The amount change type can be Full, Entire or Split",
            "name": "changeShareRateAmount",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeShareRateAmount"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the change share amount request.",
            "schema": {
              "$ref": "#/definitions/shareReservations"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/sharedGuestCount": {
      "put": {
        "description": "Change the guest counts(adults or children) for a Sharing Reservation <p><strong>OperationId:</strong>putSharingGuests</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Change Sharing Guests",
        "operationId": "putSharingGuests",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to change Sharing Reservations Guest Counts(adults or children) information.",
            "name": "changeSharingGuests",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeSharingGuests"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/changeSharingGuests"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/shares": {
      "get": {
        "description": "This API can be used to retrieve the share reservations that exist on a reservation. <p><strong>OperationId:</strong>getShareReservations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get share Reservations",
        "operationId": "getShareReservations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the fetch share reservation request. This returns all sharer reservations including the request reservation.",
            "schema": {
              "$ref": "#/definitions/shareReservations"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ShareReservations not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Combine share reservation for a given reservation id <p><strong>OperationId:</strong>postCombineShareReservations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Combine Share Reservations",
        "operationId": "postCombineShareReservations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to combine sharer reservations. This request requires a Reservation Name Id(Joining to) and a Joining Reservation Id",
            "name": "combineShareReservations",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/combineShareReservations"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response for the combine share reservation request. Based on the request, this will return all sharer reservations including the request reservation.",
            "schema": {
              "$ref": "#/definitions/combineShareReservationsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "This API can be used to separate the share reservations. <p><strong>OperationId:</strong>deleteShareReservation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Separate share Reservations",
        "operationId": "deleteShareReservation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Indicate to Override the Room Inventory Check if applicable.",
            "name": "overrideInventoryCheck",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicate to Override the check on Maximum Room Occupancy if applicable.",
            "name": "overrideMaxOccupancyCheck",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicate to Override the check on Maximum Room Occupancy if applicable.",
            "name": "overrideRateAvailabilityCheck",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "After the break share operation, return the new list of Sharer Reservations.",
            "name": "returnShareReservations",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/stay/action/validate": {
      "put": {
        "description": "Validate overlapping stay for a reservation <p><strong>OperationId:</strong>putValidateOverlappingStay</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Check overlapping stay",
        "operationId": "putValidateOverlappingStay",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to check for overlapping stays of reservations.",
            "name": "overlappingStay",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/overlappingStay"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for checking overlapping stays of reservations.",
            "schema": {
              "$ref": "#/definitions/overlappingStayDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/tickets": {
      "get": {
        "description": "Get tickets for a reservation. <p><strong>OperationId:</strong>getTickets</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get tickets",
        "operationId": "getTickets",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Property where the tickets messages belongs to.",
            "name": "packageCode",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag that specified if only issued tickets will be retrieved.",
            "name": "retrieveIssuedOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag that specified if only not issued tickets will be retrieved.",
            "name": "retrieveNotIssuedOnly",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Common tickets request base type.",
            "schema": {
              "$ref": "#/definitions/tickets"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Tickets not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to change tickets on a reservation. <p><strong>OperationId:</strong>putTickets</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Change tickets",
        "operationId": "putTickets",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Common tickets request base type.",
            "name": "ticketsInfo",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ticketsInfo"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/tickets"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create tickets on a reservation. <p><strong>OperationId:</strong>postTickets</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Create tickets",
        "operationId": "postTickets",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Common tickets request base type.",
            "name": "ticketsInfo",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ticketsInfo"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "You can use this API to delete tickets from a reservation. <p><strong>OperationId:</strong>deleteTickets</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Delete tickets",
        "operationId": "deleteTickets",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/tickets/inquiry": {
      "get": {
        "description": "You can use this API to perform a Inquiry for Reservation tickets. <p><strong>OperationId:</strong>getTicketsInquiry</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Inquiry for Reservation tickets",
        "operationId": "getTicketsInquiry",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "ticketId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "ticketIdType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Package Code.",
            "name": "packageCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationProductId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationProductIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "ticketNumberId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "ticketNumberIdType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Tickets issue date.",
            "name": "ticketIssueDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Tickets comsumption date.",
            "name": "ticketConsumptionDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The Rate Code to which tickets belong to.",
            "name": "ticketRateCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The Status Code for outbound WS call.",
            "name": "ticketStatus",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Common tickets request base type.",
            "schema": {
              "$ref": "#/definitions/tickets"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TicketsInquiry not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/tickets/issue": {
      "post": {
        "description": "You can use this API to issue Reservation tickets. <p><strong>OperationId:</strong>postIssueTickets</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Issue Reservation tickets",
        "operationId": "postIssueTickets",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Common tickets request base type.",
            "name": "ticketsInfo",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ticketsInfo"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/tickets/refund": {
      "delete": {
        "description": "You can use this API to refund Reservation tickets. <p><strong>OperationId:</strong>deleteRefundTickets</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Refund Reservation tickets",
        "operationId": "deleteRefundTickets",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/tickets/reprint": {
      "get": {
        "description": "You can use this API to reprint Reservation tickets. <p><strong>OperationId:</strong>getReprintTickets</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Reprints Reservation tickets",
        "operationId": "getReprintTickets",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "ticketId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "ticketIdType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Package Code.",
            "name": "packageCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationProductId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationProductIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "ticketNumberId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "ticketNumberIdType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Tickets issue date.",
            "name": "ticketIssueDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Tickets comsumption date.",
            "name": "ticketConsumptionDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The Rate Code to which tickets belong to.",
            "name": "ticketRateCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The Status Code for outbound WS call.",
            "name": "ticketStatus",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Common tickets request base type.",
            "schema": {
              "$ref": "#/definitions/tickets"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReprintTickets not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/traces": {
      "get": {
        "description": "You can use this API to get traces for a Reservation. <p><strong>OperationId:</strong>getTracesByReservation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get traces for a Reservation",
        "operationId": "getTracesByReservation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Return object to the request for information regarding traces.",
            "schema": {
              "$ref": "#/definitions/traces"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TracesByReservation not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/transactionDiversions": {
      "get": {
        "description": "You can use this API to get Transaction Diversions. <p><strong>OperationId:</strong>getTransactionDiversions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get Transaction Diversions ",
        "operationId": "getTransactionDiversions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transactionDiversionCodes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to check if the the daily details are required to be fetched for a particular transaciton.",
            "name": "includeDailyDetails",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to fetch the transaction diversion rules attached to a reservation.",
            "schema": {
              "$ref": "#/definitions/transactionDiversions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TransactionDiversions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "You can use this API to change Transaction Diversions. <p><strong>OperationId:</strong>putTransactionDiversions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Change Transaction Diversions ",
        "operationId": "putTransactionDiversions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to modify transaction diversion rules attached to a reservation.",
            "name": "transactionDiversionsInfo",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionDiversionsInfo"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/transactionDiversionsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "You can use this API to create Transaction Diversions. <p><strong>OperationId:</strong>postTransactionDiversions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Create Transaction Diversions ",
        "operationId": "postTransactionDiversions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to create transaction diversion rules for a reservation.",
            "name": "transactionDiversionsInfo",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionDiversionsInfo"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "You can use this API to delete Transaction Diversions. <p><strong>OperationId:</strong>deleteTransactionDiversions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Delete Transaction Diversions ",
        "operationId": "deleteTransactionDiversions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/upgradeEligibleReservations": {
      "put": {
        "description": "You can use this API to set Upgrade Eligibility for Reservations. <p><strong>OperationId:</strong>putReservationsUpgradeEligibility</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Set Upgrade Eligibility for Reservations",
        "operationId": "putReservationsUpgradeEligibility",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object containing a list of reservation name ids, hotel code and eligibility flag.",
            "name": "reservationsUpgradeEligibility",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationsUpgradeEligibility"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/reservationsUpgradeEligibilityDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/upsell": {
      "get": {
        "description": "Use this API to retrieve the available upsell offers for a specific reservation. If no upsell options are configured for this hotel or available for this reservation, an appropriate error will be returned. <p><strong>OperationId:</strong>getReservationUpsellInfo</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get available Upsell offers",
        "operationId": "getReservationUpsellInfo",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to the that contains information for a reservation prior to upgrade.",
            "schema": {
              "$ref": "#/definitions/reservationUpsellInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReservationUpsellInfo not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "This API will allow you to upsell a reservation in OPERA.  You would need to already know the upsell rules that are available for this reservation - you can do this by using the getUpsell API. <p><strong>OperationId:</strong>postUpsellReservation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Upsell a Reservation",
        "operationId": "postUpsellReservation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to upsell a reservation.",
            "name": "upsellReservation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/upsellReservation"
                },
                {
                  "example": {
                    "hotelId": "HOTEL1",
                    "reservationId": {
                      "idContext": "OPERA",
                      "type": "Reservation"
                    },
                    "upsell": {
                      "firstNightAmount": {
                        "amount": {
                          "amount": 150
                        }
                      },
                      "ratePlanCode": "PROM01",
                      "rates": [
                        {
                          "date": "2020-02-16",
                          "requiredAmount": {
                            "amount": {
                              "amount": 150
                            }
                          }
                        },
                        {
                          "date": "2020-02-17",
                          "requiredAmount": {
                            "amount": {
                              "amount": 150
                            }
                          }
                        }
                      ],
                      "roomType": {
                        "roomType": "DLXK"
                      },
                      "ruleId": {
                        "id": "754",
                        "type": "UpsellRuleId"
                      },
                      "totalStayAmount": {
                        "amount": {
                          "amount": 150
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "This API will enable you to delete an upsell from a reservation. There may be reservation policies that might prevent an upsell from being deleted and as such an appropriate response will be returned. <p><strong>OperationId:</strong>deleteUpsell</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Delete a Reservation Upsell",
        "operationId": "deleteUpsell",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/roomCalendar": {
      "get": {
        "description": "Use this API to get the room calendar for a hotel. It fetches inventory detail per rooms, the reservations assigned for a selected date range in the past or future, scheduled Out of Order or Out of Service status, room description, room attributes, room features, connecting room, etc.<p><strong>OperationId:</strong>getRoomCalendar</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get the room calendar",
        "operationId": "getRoomCalendar",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "If true, then filter room results to rooms with Advance Checked In Reservations.",
            "name": "advanceCheckedIn",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If 'Y', then filter room results to rooms that are assigned to guest.",
            "name": "assignedRooms",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If 'Y', then filter room results to component rooms.",
            "name": "componentRooms",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If 'Y', then filter room results to only connecting rooms.",
            "name": "connectingRoomsOnly",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If 'Y', then filter room results to rooms with Due Out Reservations.",
            "name": "dueOut",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true, then fetch result will be sorted in descending order.",
            "name": "isSortDescending",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Page index to be retrieved.",
            "name": "pageIndex",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If 'Y', then filter room results to component rooms that have at least one of its rooms assigned to guest.",
            "name": "partiallyAssignedRooms",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Number of records per page.",
            "name": "recordsPerPage",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If 'Y', then filter room results to rooms with Room Conditions.",
            "name": "roomConditions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If 'Y', then filter room results to rooms with rotation rooms only. It is supported only if OPERA Control Room Rotation is active.",
            "name": "ownerRoomsOnly",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If 'Y', then filter room results to rooms that are exclusive to the owner. It is supported only if OPERA Control Room Rotation is active.",
            "name": "ownerExclusiveOnly",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Default",
              "Room",
              "RoomType",
              "RoomStatus"
            ],
            "type": "string",
            "description": "A collection of supported sorting for room calendar.",
            "name": "sortingBy",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Include Room Move History in result.",
            "name": "includeRoomMoveHistory",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Include information about Component Room Reservation dates when fetching a component suite.",
            "name": "includeComponentRoomBlockOutDates",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If 'Y', then filter room results to rooms that are not yet assigned to guest.",
            "name": "unassignedRooms",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room search filter.",
            "name": "roomId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Type search filter.",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Class search filter.",
            "name": "roomClass",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Floor search filter.",
            "name": "floor",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A code representing a room feature.",
            "name": "roomFeature",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Clean",
                "Dirty",
                "Pickup",
                "Inspected",
                "OutOfOrder",
                "OutOfService"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
            "name": "roomStatus",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Smoking Preference filter.",
            "name": "smokingPreference",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "bedType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "This is the Response Message to information regarding existence of future reservation or business blocks.",
            "schema": {
              "$ref": "#/definitions/roomCalendar"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RoomCalendar not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rooms/{roomId}/traces": {
      "get": {
        "description": "This API will fetch the traces for a Room. <p><strong>OperationId:</strong>getTracesByRoom</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get traces for a Room",
        "operationId": "getTracesByRoom",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Room Id",
            "name": "roomId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Return object to the request for information regarding traces.",
            "schema": {
              "$ref": "#/definitions/traces"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TracesByRoom not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/script": {
      "get": {
        "description": "This API will get the script for your property. <p><strong>OperationId:</strong>getScript</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get a script",
        "operationId": "getScript",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "languageCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used for Character Strings, length 0 to 40.",
            "name": "scriptType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Script for a Reservation based on its StayDetails as well as itinerary.",
            "schema": {
              "$ref": "#/definitions/script"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Script not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/sellMessages/config": {
      "get": {
        "description": "Fetch the existing sell message configuration for a property. <p><strong>OperationId:</strong>getSellMessageConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get sell messages ",
        "operationId": "getSellMessageConfig",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sell Message text.",
            "name": "message",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Type.",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Rate Plan code.",
            "name": "ratePlanCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "blockId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "blockIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Block Code to query for.",
            "name": "blockCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Language code for the sell message.",
            "name": "languageCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "CRO code to query for.",
            "name": "croCode",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The date on which the fetched sell message should be active.",
            "name": "displayDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "This is the fetch response message type for fetch operation of sell messages.",
            "schema": {
              "$ref": "#/definitions/fetchSellMessageConfig"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "SellMessageConfig not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Update the existing sell message configuration for a property. <p><strong>OperationId:</strong>putSellMessageConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Change sell message",
        "operationId": "putSellMessageConfig",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "This is the request message type for sell message update operation.",
            "name": "sellMessageConfig",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/sellMessageConfig"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/sellMessageConfig"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Create sell message configuration for a property. <p><strong>OperationId:</strong>postSellMessageConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Create sell message",
        "operationId": "postSellMessageConfig",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "This is the request message type for creating sell messages.",
            "name": "sellMessageConfig",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/sellMessageConfig"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Delete an existing sell message configuration for a property. <p><strong>OperationId:</strong>deleteSellMessageConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Delete sell message",
        "operationId": "deleteSellMessageConfig",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/stay/action/validate": {
      "put": {
        "description": "Validate overlapping stays <p><strong>OperationId:</strong>putValidateOverlappingStays</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Check overlapping stay",
        "operationId": "putValidateOverlappingStays",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to check for overlapping stays of reservations.",
            "name": "overlappingStay",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/overlappingStay"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for checking overlapping stays of reservations.",
            "schema": {
              "$ref": "#/definitions/overlappingStayDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/turnaways": {
      "post": {
        "description": "Register turnaways for a property. <p><strong>OperationId:</strong>postTurnawayReservation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Register Turnaway",
        "operationId": "postTurnawayReservation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to register turn away reservation.",
            "name": "registerTurnaway",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/registerTurnaway"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/upgradeEligibleReservations": {
      "get": {
        "description": "You can use this API to fetch Reservations Eligible for an Upgrade. <p><strong>OperationId:</strong>getUpgradeEligibilityReservations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Fetch Reservations Eligible for an Upgrade",
        "operationId": "getUpgradeEligibilityReservations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is searched based on reservation ID.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "arrivalEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "arrivalStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Membership Type.",
            "name": "membershipType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Type of the desired reservation external confirmation number.",
            "name": "externalReferenceType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to the Fetch UpgradeEligibilityReservations Request operation. Based on the criteria, reservation information is returned.",
            "schema": {
              "$ref": "#/definitions/upgradeEligibilityReservations"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "UpgradeEligibilityReservations not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/reservations": {
      "get": {
        "description": "Use this API to identify whether there are future reservations or business block for the profile id. <p><strong>OperationId:</strong>getFutureReservationsOrBlocks</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get Future Reservations on a profile",
        "operationId": "getFutureReservationsOrBlocks",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA internal profile ID which is used to find any type of profile from OPERA. This ID is a primary identification of a profile in OPERA.",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "This is the Response Message to information regarding existence of future reservation or business blocks.",
            "schema": {
              "$ref": "#/definitions/futureReservationsOrBlocksDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FutureReservationsOrBlocks not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/recentlyAccessedReservations": {
      "get": {
        "description": "This API will return all recently accessed Reservations. <p><strong>OperationId:</strong>getRecentlyAccessedReservations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get recently accessed Reservations",
        "operationId": "getRecentlyAccessedReservations",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response with the fetched recently accessed reservations.",
            "schema": {
              "$ref": "#/definitions/recentlyAccessedReservations"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RecentlyAccessedReservations not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/reservations": {
      "get": {
        "description": "This API will allow a user to retrieve a list of reservations based on the search criteria specified in the request body. For example you can search for reservations using query parameters like first name, last name, arrival/departure date, external confirmation number. <p><strong>OperationId:</strong>getReservations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get Reservations for a hotel",
        "operationId": "getReservations",
        "parameters": [
          {
            "type": "boolean",
            "description": "Mark this reservation as recently accessed.",
            "name": "recentlyAccessed",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Any",
              "DayUse",
              "Arrival",
              "Arrived",
              "Departure",
              "WaitList",
              "Cancellation",
              "CheckedOut",
              "NoShow",
              "Complimentary",
              "InHouse",
              "PostStayPendingBalance",
              "PreRegistered",
              "PostToRoom",
              "OpenFolio",
              "ScheduledCheckOut",
              "Queued",
              "MobileCheckout",
              "RegisteredAndInHouse",
              "ResvBlockTraces",
              "GuestMessages",
              "MassCancellation",
              "Operator",
              "Turndown",
              "WalkIn",
              "AdvanceCheckedIn",
              "OpenBalance",
              "AutoFolioSettlement",
              "Routing",
              "PlayerSnapshot"
            ],
            "type": "string",
            "description": "Represents Reservation search type Player Snapshot.",
            "name": "searchType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of Hotels to support searches with multiple resorts for which traces are to be fetched.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Free form text field for searching all reservation fields",
            "name": "text",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationIdList",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "confirmationNumberList",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "cancellationNumberList",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "externalReferenceIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": [
              "External"
            ],
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "externalSystemCodes",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "arrivalEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "arrivalStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "departureEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "departureStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The ending value of the time span.",
            "name": "expectedArrivalStartTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The starting value of the time span.",
            "name": "expectedArrivalEndTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The ending value of the time span.",
            "name": "expectedReturnEndTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The starting value of the time span.",
            "name": "expectedReturnStartTime",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Attached profile name",
            "name": "companyNames",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Attached profile name",
            "name": "sourceNames",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Attached profile name",
            "name": "travelAgentNames",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Attached profile name",
            "name": "groupNames",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "travelAgentIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "companyIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "sourceIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "contactIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "groupIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "billingContactIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Membership ID criteria.",
            "name": "membershipCardNumber",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "membershipLevels",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "membershipTypes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Family name, last name.",
            "name": "surname",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names",
            "name": "givenName",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "VIP status of the customer.",
            "name": "anyVIPStatus",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "VIP status of the customer.",
            "name": "vipCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Fetches the reservation having Guarantee Code(Reservation Type) supplied here.",
            "name": "guaranteeCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Fetches the reservation having method of payment supplied here.",
            "name": "paymentMethod",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "description": "Fetches the reservation for which discount is applied",
            "name": "discountApplied",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "user",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Fetches reservation created by specified user. If both CreatedByUsers and CreatedBy is specified, CreatedByUsers will take precedence.",
            "name": "createdBy",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fetches reservations cancelled by list of users.",
            "name": "cancelledByList",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Fetches the reservations which are cancelled on a specific date.",
            "name": "cancelledOn",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "ratePlanCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "sourceCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "marketCodes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true the search result will exclude the blocks reservations.",
            "name": "excludeBlockReservations",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Name of the block that is attached to the reservation.",
            "name": "blockName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "blockIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "blockCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Custom reference",
            "name": "customReference",
            "in": "query"
          },
          {
            "type": "string",
            "description": "GDS Record Locator for reservation.",
            "name": "recordLocator",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "Nights",
                "ArrivalDate",
                "ArrivalDateETR",
                "DepartureDate",
                "GuestSurname",
                "RateAmount",
                "RateCode",
                "Room",
                "RoomType"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "orderBy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Asc",
                "Desc"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": [
              "Asc"
            ],
            "name": "sortOrder",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicator to query reservations which have a room number assigned.",
            "name": "roomAssignedOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicator to query reservations which does not have a room number assigned.",
            "name": "roomUnassignedOnly",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room number of the reservation to search by.",
            "name": "roomId",
            "in": "query"
          },
          {
            "maxItems": 4000,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Room Type.",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A code representing a room feature.",
            "name": "roomFeatures",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Preference value for display purposes.",
            "name": "roomSpecials",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Preference value for display purposes.",
            "name": "roomSmokingPreference",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Preference value for display purposes.",
            "name": "roomFloorPreferences",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Clean",
                "Dirty",
                "Pickup",
                "Inspected",
                "OutOfOrder",
                "OutOfService"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
            "name": "housekeepingRoomStatuses",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomClasses",
            "in": "query"
          },
          {
            "type": "string",
            "name": "roomRangeFrom",
            "in": "query"
          },
          {
            "type": "string",
            "name": "roomRangeTo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter by the last digits of a reservation's phone number.",
            "name": "communication",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Reservation",
                "ReservationID",
                "Indicators",
                "Deposits",
                "RevenuesAndBalances",
                "GuestServiceStatus",
                "MasterInfo",
                "CancellationInfo",
                "BlockReservations",
                "TaxType",
                "GuestDeviceNotification",
                "RoomAssignedByAI"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Instruction to fetch whether the room was assigned/upgraded by AI. This will also include Reservation instruction.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Cancel",
                "Move",
                "PreCharge",
                "PostCharge",
                "FacilitySchedule",
                "Upsell",
                "PreCheckIn",
                "PostToNoShowCancel",
                "NoShow",
                "NameChange",
                "Discount",
                "HouseKeeping",
                "EnrollToPrimaryMembership",
                "EnrollInProgress",
                "MemberAwardAttached"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
            "name": "allowedReservationActions",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag containing true or false value for reservation to be eligible for prior check in by guest using mobile device. Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile check in yes / no. Upon fetch, the current state of the flag will show true or false.",
            "name": "allowPreRegistration",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that only reservations with deposit balance should be expected from the result.",
            "name": "hasDepositBalance",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that only reservations with open balance should be expected from the result.",
            "name": "hasOpenBalance",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that only reservations with open folio should be expected from the result.",
            "name": "hasOpenFolio",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Criteria that indicates whether to scheduled checkouts or not.",
            "name": "includeScheduledCheckOut",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that only linked reservations should be expected from the result.",
            "name": "linkedOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that only unlinked reservations should be expected from the result.",
            "name": "unlinkedOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which have already arrived on the Search Date is required.",
            "name": "actualArrivals",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which were expected to depart on the Search Date and have already checked, is required.",
            "name": "actualDepartures",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations where rate codes are marked as Complimentary Rates , is required. This flag should be used in conjunction with the Arrivals, Departures or StayOvers criteria.",
            "name": "complimentaryReservations",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which have cancelled on the Search Date which is also the day of arrival is required.",
            "name": "dayOfArrivalCancels",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which are day use reservation on the Search Date, is required.",
            "name": "dayUse",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which checked out early on the Search Date, is required.",
            "name": "earlyDepartures",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which are expected arrivals for the Search Date and who have not yet arrived, is required.",
            "name": "expectedArrivals",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which are expected departures for the Search Date and who have not yet departed, is required.",
            "name": "expectedDepartures",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which have extended their stays on the Search Date, is required.",
            "name": "extendedStays",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations where rate codes are marked as House Use Rates , is required. This flag should be used in conjunction with the Arrivals, Departures or StayOvers criteria.",
            "name": "houseUseReservations",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if reservations which are StayOvers on the Search Date, is required.",
            "name": "stayovers",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date for searching the reservations. This is the date for which the search types are applicable. If date is not available, the business date will be used by default.",
            "name": "stayDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "roomRoutingId",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates to exclude Pseudo room reservations.",
            "name": "excludePseudoRoomReservations",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "excludeReservationIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "VIP status of the customer.",
            "name": "excludeVIPStatusCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Preference value for display purposes.",
            "name": "excludeSpecials",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Preference value for display purposes.",
            "name": "excludeFloorPreferences",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates to exclude Advance Checked In Reservations from search result.",
            "name": "excludeAdvanceCheckedIn",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Exclude the reservation(s) with provided room features from the search result.",
            "name": "excludeRoomFeatures",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Player ID associated to the reservation.",
            "name": "playerId",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Balance from.",
            "name": "gamingBalanceFrom",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Balance to.",
            "name": "gamingBalanceTo",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Comp Balance From",
            "name": "compAccountingBalanceFrom",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Comp Balance To",
            "name": "compAccountingBalanceTo",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Any",
                "DayUse",
                "Arrival",
                "Arrived",
                "Departure",
                "WaitList",
                "Cancellation",
                "CheckedOut",
                "NoShow",
                "Complimentary",
                "InHouse",
                "PostStayPendingBalance",
                "PreRegistered",
                "PostToRoom",
                "OpenFolio",
                "ScheduledCheckOut",
                "Queued",
                "MobileCheckout",
                "RegisteredAndInHouse",
                "ResvBlockTraces",
                "GuestMessages",
                "MassCancellation",
                "Operator",
                "Turndown",
                "WalkIn",
                "AdvanceCheckedIn",
                "OpenBalance",
                "AutoFolioSettlement",
                "Routing",
                "PlayerSnapshot"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Represents Reservation search type Player Snapshot.",
            "name": "searchTypes",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Cancelled",
                "CheckedOut",
                "CheckedIn",
                "DueIn",
                "DueOut",
                "InHouse",
                "NoShow",
                "WaitList"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Reservation status type for reservations search.",
            "name": "reservationStatuses",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "transportationCodes",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Pending",
                "Completed",
                "Failed",
                "Sent",
                "Received",
                "Cancelled",
                "PendingAvailability"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
            "name": "roomReadyStatuses",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Fetches the reservations for which Checkout Message is received.",
            "name": "checkoutMessageReceived",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Fetches the reservations for which reservation communication has been opted.",
            "name": "optedForCommunication",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Fetches reservations which were created on the given property business date.",
            "name": "createdOn",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Fetches all reservations that are scheduled to stay over the selected date.",
            "name": "stayOn",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxLength": 82,
              "minLength": 0,
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Name of Contact Profile associated with Reservation.",
            "name": "contactNames",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to the Fetch Reservation Request operation. Based on the criteria, reservation information is returned.",
            "schema": {
              "$ref": "#/definitions/reservationsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "reservations": {
                  "hasMore": true,
                  "limit": "20",
                  "offset": "20",
                  "reservationInfo": [
                    {
                      "advanceCheckIn": {
                        "advanceCheckedIn": true,
                        "expectedReturnTime": "2020-05-09 15:00:00.0"
                      },
                      "allowMobileCheckout": false,
                      "commissionPayoutTo": "None",
                      "computedReservationStatus": "CheckedOut",
                      "createDateTime": "2020-01-09 01:02:48.0",
                      "displayColor": "GREEN",
                      "hotelId": "HOTEL1",
                      "hotelName": "Hotel One",
                      "lastModifyDateTime": "2020-02-26 03:00:08.0",
                      "openFolio": true,
                      "optedForCommunication": false,
                      "paymentMethod": "CA",
                      "preRegistered": false,
                      "reservationGuest": {
                        "address": {
                          "cityName": "Redwood Shores",
                          "country": {
                            "code": "AU"
                          },
                          "postalCode": "94065",
                          "state": "CA"
                        },
                        "anonymization": {},
                        "email": "Sarah@example.com",
                        "givenName": "SARAH",
                        "guestLastStayInformation": {
                          "lastStayRoom": "304"
                        },
                        "guestRestricted": false,
                        "id": "288106",
                        "language": "E",
                        "middleName": "F",
                        "nameType": "Guest",
                        "phoneNumber": "415 555 0100 ",
                        "surname": "SMITH",
                        "type": "Profile",
                        "vip": {
                          "vipCode": "GOLD",
                          "vipDescription": "Gold"
                        }
                      },
                      "reservationIdList": [
                        {
                          "id": "236552",
                          "type": "Reservation"
                        },
                        {
                          "id": "379252",
                          "type": "Confirmation"
                        },
                        {
                          "id": "5735646",
                          "type": "ExternalReference"
                        }
                      ],
                      "reservationIndicators": [
                        {
                          "count": "1",
                          "indicatorName": "EXTERNALREFERENCES"
                        },
                        {
                          "count": "3",
                          "indicatorName": "PREFERENCE"
                        },
                        {
                          "count": "2",
                          "indicatorName": "PROFILENOTE"
                        },
                        {
                          "count": "1",
                          "indicatorName": "PACKAGEITEM"
                        },
                        {
                          "indicatorName": "OPENFOLIO"
                        },
                        {
                          "indicatorName": "STAYREVENUE"
                        },
                        {
                          "count": "3",
                          "indicatorName": "HISTORYFUTURE"
                        },
                        {
                          "count": "6",
                          "indicatorName": "COMMUNICATION"
                        },
                        {
                          "count": "1",
                          "indicatorName": "ASSOCIATEDPROFILES"
                        }
                      ],
                      "reservationPaymentMethod": {
                        "paymentMethod": "CA"
                      },
                      "reservationStatus": "CheckedOut",
                      "roomStay": {
                        "adultCount": "2",
                        "arrivalDate": "2020-05-08",
                        "balance": {
                          "amount": "115.55",
                          "currencyCode": "USD"
                        },
                        "childCount": "1",
                        "departureDate": "2020-05-09",
                        "expectedTimes": {
                          "reservationExpectedArrivalTime": "2020-05-08 19:17:25.0",
                          "reservationExpectedDepartureTime": "2020-05-09 13:30:00.0"
                        },
                        "fixedRate": false,
                        "guarantee": {
                          "guaranteeCode": "CHECKED IN",
                          "shortDescription": "Checked In"
                        },
                        "marketCode": "CORP",
                        "numberOfRooms": "1",
                        "originalTimeSpan": {
                          "endDate": "2020-05-09",
                          "startDate": "2020-05-08"
                        },
                        "pseudoRoom": false,
                        "rateAmount": {
                          "amount": "100",
                          "currencyCode": "USD"
                        },
                        "ratePlanCode": "UPGRADE",
                        "rateSuppressed": false,
                        "roomClass": "ALL",
                        "roomNumber": "2010",
                        "roomNumberLocked": false,
                        "roomType": "STDQ",
                        "roomTypeCharged": "STDQ",
                        "sourceOfBusiness": "CWEB",
                        "sourceOfBusinessDescription": "Website"
                      },
                      "roomStayReservation": true,
                      "sourceOfSale": {
                        "sourceCode": "HOTEL1",
                        "sourceType": "PMS"
                      },
                      "waitlist": {},
                      "walkInIndicator": true
                    },
                    {
                      "advanceCheckIn": {
                        "advanceCheckedIn": false,
                        "eTRComments": "ETR Comments",
                        "expectedReturnTime": "2020-05-09"
                      },
                      "allowMobileCheckout": false,
                      "commissionPayoutTo": "None",
                      "computedReservationStatus": "CheckedOut",
                      "createDateTime": "2020-07-10 15:08:43.0",
                      "displayColor": "GREEN",
                      "hotelId": "HOTEL1",
                      "hotelName": "Hotel One",
                      "lastModifyDateTime": "2020-02-26 03:44:50.0",
                      "openFolio": true,
                      "optedForCommunication": false,
                      "paymentMethod": "MC",
                      "preRegistered": false,
                      "reservationGuest": {
                        "address": {
                          "cityName": "Redwood Shores",
                          "country": {
                            "code": "AU"
                          },
                          "postalCode": "94065",
                          "state": "CA"
                        },
                        "anonymization": {},
                        "email": "Sarah@example.com",
                        "givenName": "SARAH",
                        "guestLastStayInformation": {
                          "lastStayRoom": "304"
                        },
                        "guestRestricted": false,
                        "id": "288106",
                        "language": "E",
                        "middleName": "F",
                        "nameType": "Guest",
                        "phoneNumber": "+1 415 555 0100",
                        "surname": "SMITH",
                        "type": "Profile",
                        "vip": {
                          "vipCode": "GOLD",
                          "vipDescription": "Gold"
                        }
                      },
                      "reservationIdList": [
                        {
                          "id": "267803",
                          "type": "Reservation"
                        },
                        {
                          "id": "238564",
                          "type": "ParentReservation"
                        },
                        {
                          "id": "432198",
                          "type": "Confirmation"
                        }
                      ],
                      "reservationIndicators": [
                        {
                          "count": "1",
                          "indicatorName": "ITINERARY"
                        },
                        {
                          "count": "1",
                          "indicatorName": "TRACE"
                        },
                        {
                          "count": "2",
                          "indicatorName": "PREFERENCE"
                        },
                        {
                          "count": "2",
                          "indicatorName": "PROFILENOTE"
                        },
                        {
                          "indicatorName": "TRANSPORT"
                        },
                        {
                          "count": "1",
                          "indicatorName": "PACKAGEITEM"
                        },
                        {
                          "indicatorName": "OPENFOLIO"
                        },
                        {
                          "indicatorName": "STAYREVENUE"
                        },
                        {
                          "count": "3",
                          "indicatorName": "HISTORYFUTURE"
                        },
                        {
                          "count": "6",
                          "indicatorName": "COMMUNICATION"
                        },
                        {
                          "count": "1",
                          "indicatorName": "ASSOCIATEDPROFILES"
                        }
                      ],
                      "reservationPaymentMethod": {
                        "paymentCard": {
                          "cardType": "Mc"
                        },
                        "paymentMethod": "MC"
                      },
                      "reservationStatus": "CheckedOut",
                      "roomStay": {
                        "adultCount": "2",
                        "arrivalDate": "2020-05-08",
                        "balance": {
                          "amount": "442",
                          "currencyCode": "USD"
                        },
                        "childCount": "1",
                        "departureDate": "2020-05-09",
                        "expectedTimes": {
                          "reservationExpectedArrivalTime": "2020-05-08 15:14:32.0",
                          "reservationExpectedDepartureTime": "2020-05-09 14:14:00.0"
                        },
                        "fixedRate": false,
                        "guarantee": {
                          "guaranteeCode": "CHECKED IN",
                          "shortDescription": "Checked In"
                        },
                        "marketCode": "CORI",
                        "numberOfRooms": "1",
                        "originalTimeSpan": {
                          "endDate": "2020-05-09",
                          "startDate": "2020-05-08"
                        },
                        "partyCode": "383555 SMITH, SARAH",
                        "pseudoRoom": false,
                        "rateAmount": {
                          "amount": "106",
                          "currencyCode": "USD"
                        },
                        "ratePlanCode": "FIXED",
                        "rateSuppressed": false,
                        "roomClass": "ALL",
                        "roomNumber": "304",
                        "roomNumberLocked": false,
                        "roomType": "STDK",
                        "roomTypeCharged": "STDK",
                        "sourceOfBusiness": "TRAVAG1",
                        "sourceOfBusinessDescription": "Travel Agent1"
                      },
                      "roomStayReservation": true,
                      "sourceOfSale": {
                        "sourceCode": "ABHI",
                        "sourceType": "PMS"
                      },
                      "waitlist": {},
                      "walkInIndicator": false
                    },
                    {
                      "advanceCheckIn": {
                        "advanceCheckedIn": false,
                        "eTRComments": "test add comments ERT?",
                        "expectedReturnTime": "2020-05-09"
                      },
                      "allowMobileCheckout": false,
                      "commissionPayoutTo": "None",
                      "computedReservationStatus": "NoShow",
                      "createDateTime": "2020-01-14 19:47:34.0",
                      "displayColor": "GREEN",
                      "hotelId": "HOTEL1",
                      "hotelName": "Hotel One",
                      "lastModifyDateTime": "2020-02-26 04:36:07.0",
                      "openFolio": false,
                      "optedForCommunication": false,
                      "paymentMethod": "MNVIS",
                      "preRegistered": false,
                      "reservationGuest": {
                        "address": {
                          "cityName": "Redwood Shores",
                          "country": {
                            "code": "AU"
                          },
                          "postalCode": "94065",
                          "state": "CA"
                        },
                        "anonymization": {},
                        "email": "Sarah@example.com",
                        "givenName": "SARAH",
                        "guestLastStayInformation": {
                          "lastStayRoom": "304"
                        },
                        "guestRestricted": false,
                        "id": "288106",
                        "language": "E",
                        "middleName": "F",
                        "nameType": "Guest",
                        "phoneNumber": "+1 415 555 0100",
                        "surname": "SMITH",
                        "type": "Profile",
                        "vip": {
                          "vipCode": "GOLD",
                          "vipDescription": "Gold"
                        }
                      },
                      "reservationIdList": [
                        {
                          "id": "238564",
                          "type": "Reservation"
                        },
                        {
                          "id": "383555",
                          "type": "Confirmation"
                        },
                        {
                          "id": "5737400",
                          "type": "ExternalReference"
                        }
                      ],
                      "reservationIndicators": [
                        {
                          "count": "1",
                          "indicatorName": "WEBREGISTRATIONCARDS"
                        },
                        {
                          "count": "1",
                          "indicatorName": "ITINERARY"
                        },
                        {
                          "count": "1",
                          "indicatorName": "TRACE"
                        },
                        {
                          "count": "1",
                          "indicatorName": "EXTERNALREFERENCES"
                        },
                        {
                          "count": "2",
                          "indicatorName": "PREFERENCE"
                        },
                        {
                          "count": "2",
                          "indicatorName": "PROFILENOTE"
                        },
                        {
                          "count": "5",
                          "indicatorName": "ALERT"
                        },
                        {
                          "indicatorName": "TRANSPORT"
                        },
                        {
                          "count": "1",
                          "indicatorName": "PACKAGEITEM"
                        },
                        {
                          "count": "3",
                          "indicatorName": "HISTORYFUTURE"
                        },
                        {
                          "count": "6",
                          "indicatorName": "COMMUNICATION"
                        },
                        {
                          "count": "1",
                          "indicatorName": "ASSOCIATEDPROFILES"
                        },
                        {
                          "indicatorName": "DUPLICATES"
                        }
                      ],
                      "reservationPaymentMethod": {
                        "paymentCard": {
                          "cardType": "Va"
                        },
                        "paymentMethod": "MNVIS"
                      },
                      "reservationStatus": "NoShow",
                      "roomStay": {
                        "adultCount": "2",
                        "arrivalDate": "2020-05-08",
                        "balance": {
                          "amount": "106",
                          "currencyCode": "USD"
                        },
                        "childCount": "1",
                        "departureDate": "2020-05-09",
                        "expectedTimes": {
                          "reservationExpectedArrivalTime": "2020-05-08 07:00:00.0",
                          "reservationExpectedDepartureTime": "2020-05-09"
                        },
                        "fixedRate": false,
                        "guarantee": {
                          "guaranteeCode": "6PM",
                          "shortDescription": "6pm Hold"
                        },
                        "marketCode": "CORP",
                        "numberOfRooms": "2",
                        "originalTimeSpan": {
                          "endDate": "2020-05-09",
                          "startDate": "2020-05-08"
                        },
                        "partyCode": "383555 SMITH, SARAH",
                        "pseudoRoom": false,
                        "rateAmount": {
                          "amount": "106",
                          "currencyCode": "USD"
                        },
                        "ratePlanCode": "FIXED",
                        "rateSuppressed": false,
                        "roomClass": "ALL",
                        "roomNumberLocked": false,
                        "roomType": "STDK",
                        "roomTypeCharged": "STDK",
                        "sourceOfBusiness": "TRAVEL",
                        "sourceOfBusinessDescription": "Travel Site"
                      },
                      "roomStayReservation": true,
                      "sourceOfSale": {
                        "sourceCode": "HOTEL1",
                        "sourceType": "PMS"
                      },
                      "waitlist": {},
                      "walkInIndicator": false
                    }
                  ],
                  "totalPages": "1",
                  "totalResults": "3"
                }
              }
            }
          },
          "204": {
            "description": "Reservations not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/reservations/indicators": {
      "get": {
        "description": "Get Reservation indicators. <p><strong>OperationId:</strong>getReservationIndicators</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get Reservation indicators",
        "operationId": "getReservationIndicators",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "HasDepositPolicies",
                "HasCancellationPolicies"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type that corresponds to check reservation instructions.",
            "name": "checkInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for checking allowed actions, existence of attached records, or indicators of a reservation.",
            "schema": {
              "$ref": "#/definitions/checkReservationsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReservationIndicators not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/reservations/linkedReservations/{reservationId}": {
      "post": {
        "description": "This will allow you to link 1 or more reservations to an existing reservation.  <p><strong>OperationId:</strong>postReservationLinksByChain</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Link Reservations By Chain",
        "operationId": "postReservationLinksByChain",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to link a list of reservations with another existing reservation.",
            "name": "linkReservationsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/linkReservationsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to unlink a reservation from its currently associated reservation. <p><strong>OperationId:</strong>deleteReservationLinksByChain</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Remove Reservation Links By Chain",
        "operationId": "deleteReservationLinksByChain",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/reservations/pace": {
      "get": {
        "description": "Use this API to get Reservation pace. <p><strong>OperationId:</strong>getReservationPace</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RSVStats"
        ],
        "summary": "Get Reservation pace",
        "operationId": "getReservationPace",
        "parameters": [
          {
            "type": "string",
            "description": "Hotel code from which the reservations will be fetched.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Target stay date for report",
            "name": "stayDate",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Number of lead days from stay date",
            "name": "leadDays",
            "in": "query"
          },
          {
            "type": "string",
            "description": "List of Channels for which pace to be computed",
            "name": "channels",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "FetchReservationPace response.",
            "schema": {
              "$ref": "#/definitions/reservationPace"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReservationPace not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/reservations/statistics": {
      "get": {
        "description": "Use this API to get a statistical breakdown of reservations such as inventory and revenue data.<p><strong>OperationId:</strong>getReservationStatistics</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RSVStats"
        ],
        "summary": "Get reservation statistics",
        "operationId": "getReservationStatistics",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The name of the hotel chain (e.g., Hilton, Marriott, Hyatt).",
            "name": "chainName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The IATA city code; for example DCA, ORD.",
            "name": "hotelCityCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The code that uniquely identifies a single hotel property. The hotel code is decided between vendors.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A text field used to communicate the context (or source of - ex Sabre, Galileo, Worldspan, Amadeus) the HotelReferenceGroup codes.",
            "name": "hotelCodeContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A text field used to communicate the proper name of the hotel.",
            "name": "hotelName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "The ending value of the date range.",
            "name": "requestedReportsTypeEndDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Hotel fiscal date for statistics.",
            "name": "fiscalDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "ChannelMonitorSummary",
                "ReservationAndRevenueSummary"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Identifies the type of statistics collected. Each ReportCode corresponds to a set of category summaries based upon a predetermined agreement.",
            "name": "reportCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "The starting value of the date range.",
            "name": "requestedReportsTypeStartDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Name of the parameter.",
            "name": "requestedReportsTypeParameterName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Value of the parameter.",
            "name": "requestedReportsTypeParameterValue",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of statistic data of a reservation.",
            "schema": {
              "$ref": "#/definitions/reservationStatistics"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReservationStatistics not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/reservations/{reservationId}/split": {
      "put": {
        "description": "You can use this API to split a multi room reservation.  This will create a new confirmation number for the split reservation. <p><strong>OperationId:</strong>putSplitMultiRoomReservation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Split multi room Reservation",
        "operationId": "putSplitMultiRoomReservation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to split multi-room reservation into separate reservations.",
            "name": "splitMultiRoomReservation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/splitMultiRoomReservation"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for splitting multi-room reservation into separate reservations.",
            "schema": {
              "$ref": "#/definitions/splitMultiRoomReservationDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/sellMessages": {
      "get": {
        "description": "Fetch the configured sell messages for a property. <p><strong>OperationId:</strong>getSellMessages</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get sell messages",
        "operationId": "getSellMessages",
        "parameters": [
          {
            "type": "string",
            "description": "This is the Central Reservation office code.",
            "name": "croCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This is the hotel code or resort.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "criteriaId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This is the language code.",
            "name": "criteriaIdType",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This represents the rate plan code of the room type.",
            "name": "ratePlanCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This represents the room type code.",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Flag which tells if this message is Sticky (Y/N).",
            "name": "stickyFlagYn",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "criteriaType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "RateCodes",
                "RoomTypes"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Instruction to fetch all Room Type sell messages configured.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Blocks",
              "Reservations",
              "FunctionDiary",
              "LookToBookSales",
              "GroupRoomsControl"
            ],
            "type": "string",
            "description": "This represents the moduleType of the SellMessages to be fetched.",
            "name": "usedInModule",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "This is the Response Message Type to the request for retrieving Sell Messages.",
            "schema": {
              "$ref": "#/definitions/sellMessages"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "SellMessages not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/sellMessages/config": {
      "get": {
        "description": "Fetch the existing sell message configuration. <p><strong>OperationId:</strong>getSellMessageConfigByChain</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Get sell messages by chain",
        "operationId": "getSellMessageConfigByChain",
        "parameters": [
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sell Message text.",
            "name": "message",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Type.",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Rate Plan code.",
            "name": "ratePlanCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "blockId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "blockIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Block Code to query for.",
            "name": "blockCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Language code for the sell message.",
            "name": "languageCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Chain code to query for.",
            "name": "chainId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "CRO code to query for.",
            "name": "croCode",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The date on which the fetched sell message should be active.",
            "name": "displayDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "This is the fetch response message type for fetch operation of sell messages.",
            "schema": {
              "$ref": "#/definitions/fetchSellMessageConfig"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "SellMessageConfigByChain not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Update the existing sell message configuration. <p><strong>OperationId:</strong>putSellMessageConfigByChain</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Change sell message by chain",
        "operationId": "putSellMessageConfigByChain",
        "parameters": [
          {
            "description": "This is the request message type for sell message update operation.",
            "name": "sellMessageConfig",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/sellMessageConfig"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/sellMessageConfig"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Create sell message configuration. <p><strong>OperationId:</strong>postSellMessageConfigByChain</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Create sell message by chain",
        "operationId": "postSellMessageConfigByChain",
        "parameters": [
          {
            "description": "This is the request message type for creating sell messages.",
            "name": "sellMessageConfig",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/sellMessageConfig"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Delete an existing sell message configuration. <p><strong>OperationId:</strong>deleteSellMessageConfigByChain</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Reservation"
        ],
        "summary": "Delete sell message by chain",
        "operationId": "deleteSellMessageConfigByChain",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "sellMessageConfigId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    }
  },
  "definitions": {
    "actionStatusType": {
      "description": "Action status of the Track It item(Open, Closed).",
      "type": "string",
      "enum": [
        "Open",
        "Closed"
      ]
    },
    "activityList": {
      "description": "A collection of Activity objects.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "description": "Represents a single instance of a scheduled activity.",
        "type": "object",
        "properties": {
          "activityIds": {
            "description": "A collection of reference ID values that identify this uniquely scheduled activity instance. May contain one ID per external system plus an internal identifier.",
            "$ref": "#/definitions/uniqueIDListType"
          },
          "amount": {
            "description": "The amount charged for the activity.",
            "$ref": "#/definitions/currencyAmountType"
          },
          "deposit": {
            "description": "A monetary value expressed with a currency code.",
            "type": "object",
            "properties": {
              "amount": {
                "description": "A monetary amount.",
                "type": "number"
              },
              "collectedBy": {
                "type": "string",
                "enum": [
                  "Vendor",
                  "Agent",
                  "Other"
                ]
              },
              "currencyCode": {
                "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
                "type": "string",
                "maxLength": 3,
                "minLength": 3
              }
            }
          },
          "description": {
            "description": "Description of the activity",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          },
          "duration": {
            "description": "The time span of the activity falls",
            "$ref": "#/definitions/dateTimeSpanType"
          },
          "extensions": {
            "description": "Vendor extensions to the activity record.",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string"
            }
          },
          "groupCode": {
            "description": "Any Block code associated with the activity if its a Group booking.",
            "type": "string"
          },
          "inactiveDate": {
            "description": "The Date by which the activity is deemed Cancelled/Deleted.",
            "type": "string",
            "format": "date-time"
          },
          "link": {
            "description": "When true indicates that activity link only needs to be inserted or deleted for this record.",
            "type": "boolean"
          },
          "location": {
            "description": "The Location where the activity takes place. Eg: Salon",
            "type": "string"
          },
          "name": {
            "description": "Name of the people for whom the activity is scheduled. Can be more than one but should be equal to the number of persons",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string",
              "maxLength": 200,
              "minLength": 0
            }
          },
          "note": {
            "description": "Any additional notes or comments regarding the scheduled activity.",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          },
          "numberOfPersons": {
            "description": "The total number of the people for whom the activity is scheduled. Can be more than one but should be equal to the number of persons",
            "type": "integer"
          },
          "participants": {
            "description": "The names of the participants.",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "$ref": "#/definitions/personNameType"
            }
          },
          "status": {
            "description": "Activity reservation status. Typical examples are RESERVED, BOOKED, CANCELLED, and TENTATIVE.",
            "type": "string"
          },
          "statusDescription": {
            "description": "Activity reservation status description. Typical examples are RESERVED, BOOKED, CANCELLED, and TENTATIVE.",
            "type": "string"
          },
          "timeSpan": {
            "description": "The time with-in which an activity falls (Starts/Ends/Spans)",
            "$ref": "#/definitions/dateTimeSpanType"
          },
          "type": {
            "description": "The Type of the activity. Eg: SPA, Golf etc.",
            "type": "string"
          },
          "uRLLink": {
            "description": "The URL link to launch the Activity Reservation System to view or edit full details of this activity.",
            "type": "string"
          }
        }
      }
    },
    "activityLog": {
      "description": "Response object for the request for the reservation user activity log.",
      "type": "object",
      "properties": {
        "activityLog": {
          "description": "Collection of the list of Activities(Log) requested.",
          "$ref": "#/definitions/activityLogListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "activityLogListType": {
      "type": "object",
      "properties": {
        "activityLog": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/activityLogType"
          }
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "activityLogType": {
      "type": "object",
      "properties": {
        "actionDescription": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "actionType": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "croCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "iPAddress": {
          "description": "The IP Address of the machine that performed the activity",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "logDate": {
          "type": "string",
          "format": "date-time"
        },
        "logUserId": {
          "type": "integer"
        },
        "logUserName": {
          "type": "string"
        },
        "machineStation": {
          "type": "string"
        },
        "module": {
          "type": "string"
        },
        "refActionId": {
          "type": "number"
        }
      }
    },
    "activityLookUpList": {
      "description": "Criteria for fetching Activity Bookings.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fetchActivityBookingsType"
      }
    },
    "addressInfoType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "addressSearchType": {
      "description": "Address Details such as city, state, country, postal code etc.",
      "type": "object",
      "properties": {
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "excludeNoCity": {
          "description": "When true indicates that only profiles with city will be fetched.",
          "type": "boolean"
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "addressType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "maxLength": 80,
            "minLength": 0
          }
        },
        "barCode": {
          "description": "The postal barcode for the address.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        }
      }
    },
    "advanceCheckInType": {
      "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
      "type": "object",
      "properties": {
        "advanceCheckedIn": {
          "description": "Indicates if the reservation is marked as Advance Checked In",
          "type": "boolean"
        },
        "eTRComments": {
          "description": "ETR Comments",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "expectedReturnTime": {
          "description": "Expected Return Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "alertAreaType": {
      "type": "string",
      "enum": [
        "CheckIn",
        "CheckOut",
        "Reservation",
        "Billing",
        "InHouse"
      ]
    },
    "alertGuestInfoType": {
      "type": "object",
      "properties": {
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        },
        "comments": {
          "description": "Additional alert information regarding the membership of the guest.",
          "type": "string"
        },
        "guestName": {
          "description": "Guest Name.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "guestPreferredLanguage": {
          "description": "Holds the language preferred by the guest.",
          "$ref": "#/definitions/languageType"
        },
        "lastHotelCode": {
          "description": "Hotel code of the last stay location of the guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "lastStayDate": {
          "description": "Last stay date at the property.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "membership": {
          "description": "Membership information of the guest.",
          "$ref": "#/definitions/membershipType"
        },
        "preference": {
          "description": "Additional alert information regarding the guest.",
          "type": "string"
        },
        "preference2": {
          "description": "Additional mandatory alert information regarding the guest preferences.",
          "type": "string"
        },
        "totalBrandStay": {
          "description": "Holds total number of days that the guest have stayed in the properties for the same brand.",
          "type": "integer"
        },
        "totalStay": {
          "description": "Holds total number of days that the guest have stayed in the property.",
          "type": "integer"
        },
        "vipStatus": {
          "description": "VIP status of the guest.",
          "$ref": "#/definitions/vIPStatusType"
        }
      }
    },
    "alertType": {
      "type": "object",
      "properties": {
        "area": {
          "description": "The Area where the alert will be attached and shown.",
          "$ref": "#/definitions/alertAreaType"
        },
        "code": {
          "description": "Code identifying the type of alert.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "description": {
          "description": "The alert message.",
          "type": "string"
        },
        "global": {
          "description": "Indicate whether the alert is a global that is automatically and dynamically attached to all reservations that meet the alert criteria.",
          "type": "boolean"
        },
        "guestInfo": {
          "description": "Contains information regarding the guest.",
          "$ref": "#/definitions/alertGuestInfoType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "printerName": {
          "description": "Printer used to print the alert notification.",
          "type": "string"
        },
        "printerNotification": {
          "description": "Notify by sending the message to the printer.",
          "type": "boolean"
        },
        "reportDescription": {
          "description": "Report description. Mainly used for as a parameter for printing the alerts.",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        },
        "reportId": {
          "description": "The module id of the report. This is used to printer the alert.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reportName": {
          "description": "Report name of the report type.",
          "type": "string"
        },
        "screenNotification": {
          "description": "Notify by showing the alert on the screen",
          "type": "boolean"
        },
        "stopCheckInCheckOut": {
          "description": "Indicates the Reservation Stop Check In/Check Out Global Alert.",
          "type": "boolean"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "welcomeOffer": {
          "description": "Contains information regarding welcome offer.",
          "$ref": "#/definitions/welcomeOfferType"
        }
      }
    },
    "alerts": {
      "description": "Response with the fetched alerts, includes global alerts, notes and undelivered guest messages.",
      "type": "object",
      "properties": {
        "alerts": {
          "description": "The Alert information returned as per the request.",
          "$ref": "#/definitions/alertsType"
        },
        "comments": {
          "description": "List of Notes for the Guest related to the reservation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "guestMessages": {
          "description": "List of undelivered Messages for the Guest related to the requested Reservation. Refer to Generic common types document.",
          "$ref": "#/definitions/resvGuestMessagesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "alertsType": {
      "description": "List of alerts.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/alertType"
      }
    },
    "amountDeterminationType": {
      "description": "Used to indicate if an amount is inclusive or exclusive of other charges, such as taxes.",
      "type": "string",
      "enum": [
        "Inclusive",
        "Exclusive"
      ]
    },
    "amountPointsType": {
      "description": "Holds monetary value expressed with a currency code / number of points",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Monetary value expressed with a currency code",
          "$ref": "#/definitions/currencyAmountType"
        },
        "points": {
          "description": "Number of points",
          "type": "integer"
        }
      }
    },
    "amountType": {
      "description": "Base charge and additional charges related to a room that includes such things as additional guest amounts, cancel fees, etc. Also includes Discount percentages, total amount, and the rate description.",
      "type": "object",
      "properties": {
        "base": {
          "description": "The base amount charged for the accommodation or service per unit of time (ex: Nightly, Weekly, etc). If TaxInclusive is set to True, then taxes are included in the base amount. Note that any additional charges should itemized in the other elements.",
          "$ref": "#/definitions/totalType"
        },
        "discount": {
          "description": "Discount percentage and/or Amount, code and textual reason for discount",
          "$ref": "#/definitions/discountType"
        },
        "effectiveRate": {
          "description": "The reservation effective amount charged for the accommodation or service (i.e. base amount + amount for Add to Rate Combine Line packages) per unit of time",
          "$ref": "#/definitions/totalType"
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "requiredPoints": {
          "description": "The Points contains the number of points required to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "shareDistributionInstruction": {
          "description": "Last rate share distribution instruction applied on share reservation daily rate segment.",
          "$ref": "#/definitions/shareDistributionInstructionType"
        },
        "shareRatePercentage": {
          "description": "Indicates the share rate percentage for the reservation if set to CUSTOMSPLIT.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "total": {
          "description": "The total amount charged for this rate including additional occupant amounts and fees.",
          "$ref": "#/definitions/totalType"
        }
      }
    },
    "anonymizationStatusType": {
      "description": "Guest has been anonymized.",
      "type": "string",
      "enum": [
        "Requested",
        "Anonymized"
      ]
    },
    "anonymizationType": {
      "description": "Provides information about guest's anonymization status.",
      "type": "object",
      "properties": {
        "anonymizationStatus": {
          "description": "Status of anonymization such as Requested or Anonymized.",
          "$ref": "#/definitions/anonymizationStatusType"
        }
      }
    },
    "applicationUserType": {
      "type": "object",
      "properties": {
        "actAs": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "actAt": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "appUser": {
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "appUserId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "attendantInfo": {
          "$ref": "#/definitions/attendantType"
        },
        "cashierId": {
          "type": "integer"
        },
        "cashierTitle": {
          "description": "Cashier title.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "department": {
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "departmentLocation": {
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "disabledUntil": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expiryDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotel": {
          "description": "Hotel where user belongs.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "lDAPUser": {
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "passwordChangeDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "salesRepCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "userDefaultLanguage": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "userInfo": {
          "$ref": "#/definitions/employeeInfoType"
        },
        "userSessionInfo": {
          "description": "This is only used during log-in.",
          "$ref": "#/definitions/userSessionInfoType"
        }
      }
    },
    "associatedResType": {
      "description": "Information regarding associated reservations to the reservation.",
      "type": "object"
    },
    "attachCertificate": {
      "description": "Request to attach certificate to the Reservation.",
      "type": "object",
      "properties": {
        "awards": {
          "description": "Collection of Awards,Certificates for the guest profile.",
          "$ref": "#/definitions/awardsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "attachmentType": {
      "description": "Attached files.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description for the file.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "fileName": {
          "description": "Name of the file.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fileSize": {
          "description": "Size of the file.",
          "type": "integer"
        },
        "global": {
          "description": "Flag to say if attachment is available across properties.",
          "type": "boolean"
        },
        "history": {
          "description": "History data associated with Attachment.",
          "$ref": "#/definitions/dateTimeStampGroupType"
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "attachmentsType": {
      "description": "Attachment List.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/attachmentType"
      }
    },
    "attendantType": {
      "type": "object",
      "properties": {
        "attendantId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "authorizationRuleType": {
      "description": "Configured rule for computing the amount to authorize.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The amount applicable to the authorization rule.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "code": {
          "description": "The authorization rule code.",
          "type": "integer",
          "pattern": "[0-9]{1,9}"
        },
        "percent": {
          "description": "A percentage value if the authorization rule is percentage based.",
          "type": "number"
        }
      }
    },
    "authorizerInfoType": {
      "description": "Authorizer Information",
      "type": "object",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        }
      }
    },
    "awardKindType": {
      "description": "Indicates that this is electronic certificate.",
      "type": "string",
      "enum": [
        "Paper",
        "ECertificate"
      ]
    },
    "awardStatusType": {
      "description": "Indicates that certificate is in use.",
      "type": "string",
      "enum": [
        "Available",
        "NotAvailable",
        "InUse"
      ]
    },
    "awardType": {
      "description": "Detailed information of the awards.",
      "type": "object",
      "properties": {
        "awardCode": {
          "description": "Award category.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "awardType": {
          "description": "Can be P (Paper) or E (E-Certificate).",
          "$ref": "#/definitions/awardKindType"
        },
        "categoryValid": {
          "description": "Indicates whether the category of certificate is valid or not for this resort.",
          "type": "boolean"
        },
        "certificateNo": {
          "description": "Certificate No.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "description": {
          "description": "Description of the award/certificate.",
          "type": "string"
        },
        "detailedCertificate": {
          "description": "Indicates if this certificate is detailed or not.",
          "type": "boolean"
        },
        "displaySequence": {
          "description": "Indicates the order in which the certificates received from MRW.",
          "type": "number"
        },
        "expirationDate": {
          "description": "Expiration Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "externalConfirmationNo": {
          "description": "Confirmation Number given by a CRS application for this reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "externalHotelCode": {
          "description": "Hotel Code of the CRS application that this certificate belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "gift": {
          "description": "Signifies whether award is gift or not.",
          "type": "boolean"
        },
        "hotelCategory": {
          "description": "Indicates the lowest hotel category for which the certificate is valid.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code for which the routing instructions are provided for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "instantlyRedeemable": {
          "description": "Indicates if the award is an Instant Redemption award.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "membershipNo": {
          "description": "Membership No.",
          "type": "string"
        },
        "nights": {
          "description": "Award Nights.",
          "type": "integer"
        },
        "package": {
          "description": "Signifies whether upgrade is package or not.",
          "type": "boolean"
        },
        "paidUpgrade": {
          "description": "Indicates if this certificate was ordered using the \"Paid Upgrade\" option in the E-Certs screen.",
          "type": "boolean"
        },
        "points": {
          "description": "No. of points used to order this award.",
          "type": "number"
        },
        "profileId": {
          "description": "Unique profile identifier requested to be fetched.",
          "$ref": "#/definitions/profileId"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "quantity": {
          "description": "Quantity of such awards needed to be ordered.",
          "type": "integer"
        },
        "reservationCertificateType": {
          "description": "[R]=Reward, [I]=Incentive.",
          "$ref": "#/definitions/reservationCertificateType"
        },
        "reservationId": {
          "description": "Reservation IDs will be empty if award is not attached.",
          "$ref": "#/definitions/reservationId"
        },
        "rewardCertificateType": {
          "description": "[RE]=Regular Certificate, [SA]=Stay Anytime Certificate, [PS]=Point Saver Certificate.",
          "$ref": "#/definitions/rewardCertificateType"
        },
        "sourceType": {
          "description": "MRW : From MRW MAN:Entered manually.",
          "type": "string"
        },
        "status": {
          "description": "Status of the award aka available.",
          "$ref": "#/definitions/awardStatusType"
        },
        "upgrade": {
          "description": "Signifies whether upgrade award or not.",
          "type": "boolean"
        }
      }
    },
    "awardUpgradeDetailType": {
      "type": "object",
      "properties": {
        "date": {
          "description": "Date on which the award details like points required and penalty points are applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "penaltyPoints": {
          "description": "Penalty Points applicable for the award detail date.",
          "type": "integer"
        },
        "pointsRequired": {
          "description": "Points required for the award detail date.",
          "type": "integer"
        }
      }
    },
    "awardUpgradeDetailsType": {
      "description": "Daily Details related to award upgrade.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/awardUpgradeDetailType"
      }
    },
    "awardUpgradeInfoType": {
      "type": "object",
      "properties": {
        "awardUpgradeSummaries": {
          "description": "Summary information related to award upgrade.",
          "$ref": "#/definitions/awardUpgradeSummariesType"
        },
        "fromRoomType": {
          "description": "From Room type associated with the award.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property associated with the award upgrade.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipCardNo": {
          "description": "The card number associated with this membership.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "membershipLevel": {
          "description": "The current level of the membership.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipPoints": {
          "description": "Current membership points available for this guest.",
          "type": "integer"
        },
        "membershipType": {
          "description": "The type of the membership.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationTimeSpan": {
          "description": "Arrival and Departure dates of the reservation.",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "awardUpgradeSummariesType": {
      "description": "Summary information related to award upgrade.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/awardUpgradeSummaryType"
      }
    },
    "awardUpgradeSummaryType": {
      "type": "object",
      "properties": {
        "awardCode": {
          "description": "User configured award code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "awardUpgradeDetails": {
          "description": "Daily Details related to award upgrade.",
          "$ref": "#/definitions/awardUpgradeDetailsType"
        },
        "fromRoomType": {
          "description": "From Room type associated with the award.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "penaltyCharge": {
          "description": "Number points deducted if award is cancelled.",
          "type": "integer"
        },
        "penaltyDays": {
          "description": "Number days before arrival to apply penalty for cancellation.",
          "type": "integer"
        },
        "penaltyPoints": {
          "description": "Total Number of penalty points if cancelled.",
          "type": "integer"
        },
        "penaltyType": {
          "description": "Type of cancel penalty like Points, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "pointsRequired": {
          "description": "Total Number of points required for the award.",
          "type": "integer"
        },
        "toRoomType": {
          "description": "To Room type associated with the award.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "awardUpgrades": {
      "description": "Response object for available award upgrades.",
      "type": "object",
      "properties": {
        "awardUpgradeInfo": {
          "$ref": "#/definitions/awardUpgradeInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "awardsType": {
      "description": "List of awards.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/awardType"
      }
    },
    "basicEmailType": {
      "description": "Email address",
      "type": "string",
      "maxLength": 2000,
      "minLength": 0
    },
    "bedTaxReportingType": {
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "type": "object",
      "properties": {
        "taxRegistrationNo": {
          "description": "Tax Registration Number for Maldives Bed Tax Reporting.",
          "type": "number"
        }
      }
    },
    "bedTypeInfoType": {
      "description": "Information representing Bed type associated with a room type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Bed Type Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of Bed Type.",
          "$ref": "#/definitions/translationTextType2000"
        }
      }
    },
    "benefitType": {
      "description": "Basic information about membership benefit.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Benefit code associated with a membership.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates whether membership benefit is active or inactive.",
          "type": "boolean"
        },
        "message": {
          "description": "Processing message for membership benefit.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        }
      }
    },
    "benefitsType": {
      "description": "Basic information about membership benefit.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/benefitType"
      }
    },
    "billingInstructionType": {
      "description": "Configured Billing Instruction which represents a set of Transaction Codes.",
      "type": "object",
      "properties": {
        "billingCode": {
          "description": "Unique identifier for the Billing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "desc": {
          "description": "Billing Instruction code description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel context of the Billing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "billingInstructionsType": {
      "description": "Set of Billing Instruction codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/billingInstructionType"
      }
    },
    "billingPrivilegesType": {
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "type": "object",
      "properties": {
        "allowAutoCheckin": {
          "description": "Indicated if a new reservation should be created and automatically checked in whenever the room is checked out. Available for pseudo room types only.",
          "type": "boolean"
        },
        "autoSettlement": {
          "description": "Indicates if the is a candidate for auto folio settlement.",
          "type": "boolean"
        },
        "autoSettlementFreq": {
          "description": "The interval of days between each auto folio settlement.",
          "type": "integer"
        },
        "autoSettlementType": {
          "description": "The folio settlement type for auto folio settlement.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "creditLimitAutoPay": {
          "description": "Indicates if the reservation will be included in the Automatic Credit Limit Overages process and also be listed in the Credit Limit Overages screen results.",
          "type": "boolean"
        },
        "postStayCharging": {
          "description": "Indicates if the reservation has charging privileges after checkout.",
          "type": "boolean"
        },
        "postingRestriction": {
          "description": "Flag used by interface program during check in.",
          "type": "boolean"
        },
        "preStayCharging": {
          "description": "Indicates if the reservation has charging privileges before arrival.",
          "type": "boolean"
        },
        "videoCheckout": {
          "description": "Indicates if the guest can do video checkout",
          "type": "boolean"
        }
      }
    },
    "blockId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "blockIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "blockReservationStatistics": {
      "description": "Response for BlockReservationStatisticsByDateAndRoomPool operation.",
      "type": "object",
      "properties": {
        "blockReservationStatisticsByDateAndRoomPool": {
          "description": "Block reservation statistics.",
          "$ref": "#/definitions/blockReservationStatisticsByDateAndRoomPoolType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "blockReservationStatisticsByDateAndRoomPoolType": {
      "description": "Statistics of block reservations summarized by date and room pools.",
      "type": "object",
      "properties": {
        "dailyStats": {
          "description": "Collection of daily statistics.",
          "$ref": "#/definitions/dailyStatsType"
        }
      }
    },
    "blockStatType": {
      "description": "Statistics of one block.",
      "type": "object",
      "properties": {
        "blockIdList": {
          "description": "Unique IDs of the business block being represented.",
          "$ref": "#/definitions/blockIdList"
        },
        "roomPoolStats": {
          "description": "Collection of room pool statistics.",
          "$ref": "#/definitions/roomPoolStatsType"
        }
      }
    },
    "blockStatsType": {
      "description": "Statistics of one block.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockStatType"
      }
    },
    "bookingChannelMappingType": {
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "code": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "bookingChannelType": {
      "type": "object",
      "properties": {
        "channelCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "breakShareValidations": {
      "description": "Request for Break Share operation validations. This request should be done prior to the actual Break Share operation request. Based on the validations returned from this request the appropriate parameters can be returned in the actual break share request.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Opera Hotel/Resort code for the Break Share Reservations request.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "description": "Unique reservation identifiers. Currently supported are Reservation Id and/or Confirmation Number which may include the leg number.",
          "$ref": "#/definitions/reservationId"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "breakShareValidationsDetails": {
      "description": "Response for the Break Share Validation request. This returns all validation messages for the operation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "returnedValidations": {
          "description": "Collection of validation messages returned.",
          "$ref": "#/definitions/validationsReturnType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "callHistory": {
      "description": "Response that contains either the fetched call history if was successful or error(s) if not.",
      "type": "object",
      "properties": {
        "callHistory": {
          "description": "History of Calls made. Contains information on Caller Info, Reservation info and comments. Refer to the Generic Common Types document for information on the Call History Type",
          "$ref": "#/definitions/callHistoryType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "callHistoryType": {
      "description": "Holds call information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/callType"
      }
    },
    "callStatistics": {
      "description": "Response object to the request to retrieve Call Statistics.",
      "type": "object",
      "properties": {
        "callStatisticsList": {
          "description": "List of Call Statistics.",
          "$ref": "#/definitions/callStatisticsListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "callStatisticsListType": {
      "description": "Holds Call Statistics Information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/callStatisticsType"
      }
    },
    "callStatisticsType": {
      "description": "Holds Call Statistics Information.",
      "type": "object",
      "properties": {
        "appUserName": {
          "description": "Application User for which the Call Statistics is being retrieved.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "averageCallTime": {
          "description": "Holds Average Call Time of Agent.",
          "type": "integer"
        },
        "totalCallTime": {
          "description": "Holds Total Call Time by Agent.",
          "type": "integer"
        },
        "totalCalls": {
          "description": "Holds Total Calls made by Agent.",
          "type": "integer"
        },
        "totalRevenue": {
          "description": "Holds Total Revenue of the Reservations made by Agent.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalSales": {
          "description": "Holds Total Sales by Agent.",
          "type": "integer"
        }
      }
    },
    "callType": {
      "description": "Holds call information.",
      "type": "object",
      "properties": {
        "caller": {
          "description": "Holds caller information.",
          "$ref": "#/definitions/callerType"
        },
        "comments": {
          "description": "Call comments.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "dateTimeSpan": {
          "description": "Call Time Span. Start Date and End Date is used for the Call duration.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "reservation": {
          "description": "Holds Reservation Id and Hotel Code.",
          "type": "object",
          "properties": {
            "hotelId": {
              "description": "Holds Hotel Code.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "reservationIdList": {
              "description": "Holds Reservation related Ids.",
              "$ref": "#/definitions/reservationIdList"
            }
          }
        },
        "turnawayCode": {
          "description": "Call turn away code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "callerType": {
      "description": "Holds caller information.",
      "type": "object",
      "properties": {
        "email": {
          "description": "Caller Email.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "fax": {
          "description": "Caller Fax Number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "givenName": {
          "description": "Caller First Name.",
          "type": "string",
          "maxLength": 280,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "phone": {
          "description": "Caller Phone Number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "surname": {
          "description": "Caller Last Name.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "cancelReservation": {
      "description": "Request object for canceling reservations.",
      "type": "object",
      "properties": {
        "channelInformation": {
          "description": "Channel specific information to be received in case the reservation is being created through a channel.",
          "$ref": "#/definitions/channelResvRQInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "rateChangeInstruction": {
          "description": "Defines rate change instruction to use relevant for sharing reservations.",
          "$ref": "#/definitions/rateChangeInstructionType"
        },
        "reason": {
          "description": "The reason for Cancelling the reservations.",
          "$ref": "#/definitions/cancellationReasonType"
        },
        "reservations": {
          "description": "Information on the reservation that is to be canceled.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/cancelReservationType"
          }
        },
        "verificationOnly": {
          "description": "Indicator if the request is a verification on whether the reservation can be canceled.",
          "type": "boolean"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cancelReservationDetails": {
      "description": "Response object for the request to cancel reservations. Response contains the reservations which were successfully canceled.",
      "type": "object",
      "properties": {
        "channelInformation": {
          "description": "Information to be returned, if the request is received through a channel",
          "$ref": "#/definitions/channelResvRSInfoType"
        },
        "cxlActivityLog": {
          "description": "Cancellation information includes information regarding Reason, Date of Cancellation etc..",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cancellationActivityType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "newRates": {
          "description": "Collection of new room rate information on a daily basis for the new remaining guest count in case of sharing reservations.",
          "$ref": "#/definitions/dailyRatesType"
        },
        "oldRates": {
          "description": "Collection of old room rate information on a daily basis for the old guest count in case of sharing reservations.",
          "$ref": "#/definitions/dailyRatesType"
        },
        "reservations": {
          "description": "Information regarding the reservation which was canceled.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cancelReservationType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cancelReservationType": {
      "description": "The Reservation class contains the current reservation being created or altered.",
      "type": "object",
      "properties": {
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "allowedActions": {
          "description": "Collection of reservation allowed actions.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "cancellationInfo": {
          "description": "Information regarding why reservation has been/was cancelled.",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "description": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          }
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "commissionPayoutTo": {
          "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
          "$ref": "#/definitions/commissionPayoutToType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "cxlInstr": {
          "$ref": "#/definitions/cancellationInstructionsType"
        },
        "deposit": {
          "description": "Holds reservation deposit information.",
          "$ref": "#/definitions/reservationDepositType"
        },
        "displayColor": {
          "description": "Color setting of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "expectedServiceTime": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "externalCancellationId": {
          "description": "External cancellation number to be stored as cancellation number of the reservation. This is supported by postCancelShareReservation and postCancelReservation only.",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelInterfaceStatusList": {
          "description": "Collection of Hotel Interfaces and rights, this is populated only when fetching interface status for rooms.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInterfaceStatusType"
          }
        },
        "hotelName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "housekeeping": {
          "description": "Information regarding housekeeping for this reservation.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "keyCount": {
          "description": "Number of keys created for the reservation.",
          "type": "integer"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastPrivacyPromptDate": {
          "description": "Last Privacy Prompt Date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready, Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "openFolio": {
          "description": "Returns true when reservation has an open folio.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.",
          "type": "boolean"
        },
        "overrideExternalChecks": {
          "description": "This forcefully overrides the cancel operation on Reservation. For real-time CRS interface, it is used as cancellation override flag.",
          "type": "boolean"
        },
        "paymentMethod": {
          "description": "Payment Method.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preRegistered": {
          "description": "Defines if the reservation is pre-registered or not.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "refResId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "reservationFolioWindows": {
          "description": "Collection of reservation folio windows.",
          "$ref": "#/definitions/reservationFolioWindowsType"
        },
        "reservationGuest": {
          "description": "Collection of guests associated with the reservation.",
          "$ref": "#/definitions/resGuestInfoType"
        },
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "reservationLockHandle": {
          "type": "number"
        },
        "reservationPaymentMethod": {
          "description": "Payment method used for this reservation",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "roomStatus": {
          "description": "Current room status",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "specials": {
          "description": "Set of reservation preferences which belongs to the Specials group.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/taxTypeType"
        },
        "turndownInfo": {
          "description": "Currency code preferred by guest.",
          "$ref": "#/definitions/reservationTurndownInfoType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is not in Waitlist status anymore.",
          "$ref": "#/definitions/waitlistResType"
        },
        "walkInIndicator": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "welcomeOffer": {
          "description": "This flag will determine wheather the reservation is eligible for Welcome Offer or not.",
          "type": "boolean"
        }
      }
    },
    "cancelReservations": {
      "description": "Request to submit batch cancel reservations.",
      "type": "object",
      "properties": {
        "cancelReservations": {
          "description": "Cancellation information, includes the instructions to be applied for the reservation that are going to be cancelled.",
          "$ref": "#/definitions/cancelReservationsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cancelReservationsInstructionsType": {
      "description": "The instructions to be applied for the reservations that are being cancelled.",
      "type": "object",
      "properties": {
        "cancelShares": {
          "description": "Indicate whether any sharing reservations associated with the reservation which is being cancelled will also be cancelled.",
          "type": "boolean"
        },
        "deleteTraces": {
          "description": "Indicate if the traces associated with the reservations have to be deleted after the cancellation process.",
          "type": "boolean"
        },
        "ignoreDeposits": {
          "description": "Indicate whether to allow cancel a reservation which has an applied deposit.",
          "type": "boolean"
        },
        "ignorePenalties": {
          "description": "Indicate whether to ignore any associated cancellation rules during the cancellation process.",
          "type": "boolean"
        }
      }
    },
    "cancelReservationsType": {
      "description": "Criteria for submitting batch cancel reservations.",
      "type": "object",
      "properties": {
        "cancelInstructions": {
          "description": "The instructions to be applied for the reservations that are being cancelled.",
          "$ref": "#/definitions/cancelReservationsInstructionsType"
        },
        "hotelId": {
          "description": "The hotel code for the reservations that are being cancelled.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reason": {
          "description": "The reason for Cancelling the reservations.",
          "$ref": "#/definitions/cancellationReasonType"
        },
        "reservations": {
          "description": "List of unique reservation identifiers to be cancelled. Reservations should have the same property.",
          "$ref": "#/definitions/reservations"
        }
      }
    },
    "cancellationActivityType": {
      "type": "object",
      "properties": {
        "cancellationIdList": {
          "description": "Cancellation IDs",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "cxlDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reason": {
          "$ref": "#/definitions/cancellationReasonType"
        },
        "userId": {
          "type": "number"
        },
        "userName": {
          "type": "string"
        }
      }
    },
    "cancellationHistory": {
      "description": "Response object to the request to retrieve cancellation history for a reservation.",
      "type": "object",
      "properties": {
        "cxlActivityLog": {
          "description": "Cancellation Activity information. Refer to Generic common types document.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/cancellationActivityType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cancellationInstructionsType": {
      "type": "object",
      "properties": {
        "deleteResTraces": {
          "type": "boolean"
        },
        "description": {
          "description": "Detailed description such as why reservation cannot be cancelled.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "status": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "cancellationReasonType": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "cardNumberTypeType": {
      "description": "Simple type for indicating if credit card number is tokenized.",
      "type": "string",
      "enum": [
        "CardNumber",
        "Token"
      ]
    },
    "cardProcessingType": {
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardReIssueType": {
      "description": "Request to re issue a new card.",
      "type": "string",
      "enum": [
        "Pending",
        "NotApplicable",
        "Requested"
      ]
    },
    "cardTypeType": {
      "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
      "type": "string",
      "enum": [
        "Ab",
        "Am",
        "Ax",
        "Cb",
        "Dc",
        "Ds",
        "Dt",
        "Ec",
        "Er",
        "Jc",
        "Jl",
        "Mc",
        "Nb",
        "So",
        "St",
        "Sw",
        "Va",
        "Xy",
        "Zz",
        "Cp",
        "Cu"
      ]
    },
    "cateringResInfoType": {
      "description": "Information regarding catering event and catering revenue type associated to the reservation.",
      "type": "object",
      "properties": {
        "eventId": {
          "description": "Unique ID on a catering event associated to the reservation.",
          "$ref": "#/definitions/eventId"
        },
        "revenueType": {
          "description": "Catering revenue type associated to the reservation.",
          "type": "string"
        }
      }
    },
    "changeDepositPolicyDetails": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeGuestMessages": {
      "description": "Request object for updating the Guest Messages for a Reservation.",
      "type": "object",
      "properties": {
        "guestMessages": {
          "description": "List of Guest Messages to be updated. Refer to Generic common types document.",
          "$ref": "#/definitions/guestMessagesType"
        },
        "hotelId": {
          "description": "Property where the reservation belongs to.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "description": "Reservation Id for which the Guest Messages will be retrieved from.",
          "$ref": "#/definitions/reservationId"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeInstructionType": {
      "description": "Instructions for Changing a Reservation.",
      "type": "object",
      "properties": {
        "changeAllShares": {
          "type": "boolean"
        },
        "facilitySchedulerOption": {
          "$ref": "#/definitions/facilitySchedulerOptionType"
        },
        "overrideInventory": {
          "type": "boolean"
        },
        "shareReservations": {
          "description": "Collection of unique identifiers of the sharing reservations to be modified.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "updatePackagePrice": {
          "description": "Indicates whether package prices will be updated with the latest configurations.",
          "type": "boolean"
        }
      }
    },
    "changeReservation": {
      "description": "Request method to change a reservations information.",
      "type": "object",
      "properties": {
        "channelInformation": {
          "description": "Channel specific information to be received in case the reservation is being created through a channel.",
          "$ref": "#/definitions/channelResvRQInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservations": {
          "description": "A collection of Reservations with information that needs to be changed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hotelReservationInstructionType"
          }
        },
        "reservationsInstructionsType": {
          "description": "Collection of Reservations which have to be created.",
          "$ref": "#/definitions/reservationsInstructionsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeReservationDetails": {
      "type": "object",
      "properties": {
        "channelInformation": {
          "description": "Information to be returned, if the request is received through a channel",
          "$ref": "#/definitions/channelResvRSInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "masterInfoList": {
          "description": "Refer to Generic common types document.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "reservations": {
          "description": "Reservation Information for the reservations which have been changed.",
          "$ref": "#/definitions/hotelReservationsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeResvGuestMessages": {
      "description": "Request object for updating the Guest Messages for a Reservation Workspace.",
      "type": "object",
      "properties": {
        "guestMessages": {
          "description": "List of Guest Messages in for the requested Reservation. Refer to Generic common types document.",
          "$ref": "#/definitions/resvGuestMessagesType"
        },
        "hotelId": {
          "description": "Property where the reservation belongs to.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeShareRateAmount": {
      "description": "Request to change the share amount for a sharer reservation. The amount change type can be Full, Entire or Split",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for the Change Share Amount request.",
          "$ref": "#/definitions/changeShareRateAmountType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeShareRateAmountType": {
      "description": "Type for changing the Rate Amount of a Sharer.",
      "type": "object",
      "properties": {
        "changeShareRateInstructions": {
          "description": "Instruction to apply new effective rates to the reservations.",
          "type": "object",
          "properties": {
            "effectiveRates": {
              "description": "Instruction to apply new effective rates to the reservations.",
              "$ref": "#/definitions/effectiveRatesType"
            },
            "returnShareReservations": {
              "description": "After the change rate operation, return the new list of Sharer Reservaitions.",
              "type": "boolean"
            }
          }
        },
        "hotelId": {
          "description": "Opera Hotel/Resort code for the Change Share Amount request.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "shareDistributionCriteria": {
          "description": "Type Of Rate Change for the Sharer Reservation. Valid Types are Full, Entire and Zero.",
          "$ref": "#/definitions/shareDistributionCriteria"
        }
      }
    },
    "changeSharingGuests": {
      "description": "Request to change Sharing Reservations Guest Counts(adults or children) information.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservations": {
          "description": "A collection of Sharing Reservations with the Guest Counts(adults or children) information that needs to be changed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/sharingGuestType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelMarketingInfoType": {
      "description": "Marketing Text like cancel policy, deposit policy etc.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "description": {
            "description": "Marketing Text like cancel policy, deposit policy etc.",
            "type": "string",
            "maxLength": 4000,
            "minLength": 0
          },
          "policyType": {
            "description": "Indicates the policy type like cancel,deposit etc.",
            "$ref": "#/definitions/marketingPolicyType"
          },
          "ratePlanCode": {
            "description": "Indicates the rate code for which the policy is associated with.",
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        }
      }
    },
    "channelResvActionType": {
      "description": "Cancel a reservation in OPERA through a channel. The cancellation of the reservation is committed in OPERA at once. There is no session reservation involved.",
      "type": "string",
      "enum": [
        "Book",
        "Hold",
        "Initiate",
        "Ignore",
        "Modify",
        "Commit",
        "CommitOverrideEdits",
        "Create",
        "Change",
        "Cancel"
      ]
    },
    "channelResvRQInfoType": {
      "description": "Holds all the channel reservation specific information.",
      "type": "object",
      "properties": {
        "channelResvAction": {
          "description": "Holds type of action to be taken on a channel reservation.",
          "$ref": "#/definitions/channelResvActionType"
        },
        "channelSummaryInfo": {
          "description": "Holds channel details such as type, code",
          "$ref": "#/definitions/channelSummaryInfoType"
        },
        "retransmissionIndicator": {
          "description": "This attribute indicates true if the message is resubmitted for processing.",
          "type": "boolean"
        }
      }
    },
    "channelResvRSInfoType": {
      "description": "Holds all the channel reservation specific information.",
      "type": "object",
      "properties": {
        "channelMarketingInfo": {
          "description": "Channel Marketing Text like cancel,deposit,tax,commission policy etc.",
          "$ref": "#/definitions/channelMarketingInfoType"
        },
        "channelResvStatus": {
          "description": "Holds the reservation status to be returned to channel.",
          "$ref": "#/definitions/channelResvStatusType"
        },
        "channelSummaryInfo": {
          "description": "Holds channel details such as type, code",
          "$ref": "#/definitions/channelSummaryInfoType"
        }
      }
    },
    "channelResvStatusType": {
      "description": "Depicts that the operation was failed.",
      "type": "string",
      "enum": [
        "Pending",
        "Cancelled",
        "Modified",
        "Committed",
        "Ignored",
        "Unsuccessful"
      ]
    },
    "channelSummaryInfoType": {
      "description": "Depicts channel information such as the type and code.",
      "type": "object",
      "properties": {
        "bookingChannel": {
          "$ref": "#/definitions/bookingChannelType"
        }
      }
    },
    "characterUDFType": {
      "description": "Used to hold user defined field of Character/String Type.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "description": "Used to hold user defined field of Character Type. It is highly recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "characterUDFsType": {
      "description": "Used to hold collection of user defined fields of Character/String Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/characterUDFType"
      }
    },
    "checkInstructionType": {
      "description": "Simple type that corresponds to check reservation instructions.",
      "type": "string",
      "enum": [
        "HasDepositPolicies",
        "HasCancellationPolicies"
      ]
    },
    "checkReservationType": {
      "description": "Reservation and the status of its allowed actions, attached records, and indicators.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property code of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationId": {
          "description": "Unique identifier of the reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "results": {
          "description": "Collection of status of allowed actions, attached records, and indicators of the reservation.",
          "$ref": "#/definitions/checkResultsType"
        }
      }
    },
    "checkReservationsDetails": {
      "description": "Response for checking allowed actions, existence of attached records, or indicators of a reservation.",
      "type": "object",
      "properties": {
        "checkReservations": {
          "description": "Collection of reservations and the status of its allowed actions, attached records, and indicators.",
          "$ref": "#/definitions/checkReservationsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "checkReservationsType": {
      "description": "Collection of reservations and the status of its allowed actions, attached records, and indicators.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/checkReservationType"
      }
    },
    "checkResultType": {
      "description": "Status of allowed actions, attached records, and indicators of the reservation.",
      "type": "object",
      "properties": {
        "checkInstruction": {
          "description": "Indicates status of allowed actions, total number of attached records, or number of occurrences of indicator of a reservation.",
          "$ref": "#/definitions/checkInstructionType"
        },
        "exists": {
          "description": "Indicates status of allowed actions, total number of attached records, or number of occurrences of indicator of a reservation.",
          "type": "boolean"
        }
      }
    },
    "checkResultsType": {
      "description": "Collection of status of allowed actions, attached records, and indicators of the reservation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/checkResultType"
      }
    },
    "childAgeType": {
      "description": "Defines Child's Age.",
      "type": "object",
      "properties": {
        "age": {
          "description": "Age of a child in years.",
          "type": "integer"
        }
      }
    },
    "childAgesType": {
      "description": "Age of a child in years.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/childAgeType"
      }
    },
    "childBucketsType": {
      "description": "Defines children counts with Age Qualifying Group(Child Bucket) classification.",
      "type": "object",
      "properties": {
        "bucket1Count": {
          "description": "Number of children classified under the first Age Qualifying Group(Child Bucket#1).",
          "type": "integer"
        },
        "bucket2Count": {
          "description": "Number of children classified under the second Age Qualifying Group(Child Bucket#2).",
          "type": "integer"
        },
        "bucket3Count": {
          "description": "Number of children classified under the third Age Qualifying Group(Child Bucket#3).",
          "type": "integer"
        },
        "bucket4Count": {
          "description": "Number of children classified under the fourth Age Qualifying Group(Child Bucket#4).",
          "type": "integer"
        },
        "bucket5Count": {
          "description": "Number of children classified under the fifth Age Qualifying Group(Child Bucket#5).",
          "type": "integer"
        }
      }
    },
    "codeDescriptionType": {
      "description": "This contains a generic code and description information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "codeInfoType": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "maxLength": 20,
        "minLength": 0
      }
    },
    "codeType": {
      "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
      "type": "string",
      "maxLength": 20,
      "minLength": 0
    },
    "colorDefinitionType": {
      "description": "Color definition type. This color definition type is used to determine the defintion of color ",
      "type": "string",
      "enum": [
        "RESERVATION",
        "MARKET_CODE",
        "VIP_LEVEL",
        "MEMBERSHIP_LEVEL"
      ]
    },
    "colorType": {
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "type": "string",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "combineShareFromProfileType": {
      "description": "Type for the profile information to create a new share reservation. This is used to create sharers from profiles.",
      "type": "object",
      "properties": {
        "dailyRates": {
          "description": "Collection of room rate information on a daily basis.",
          "$ref": "#/definitions/dailyRatesType"
        },
        "guarantee": {
          "description": "Guarantee code information of the reservation.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "guestCounts": {
          "description": "The number of guests information to create the share reservation.",
          "$ref": "#/definitions/guestCountsType"
        },
        "newSharerId": {
          "description": "Collection of unique reservation identifiers. Currently supported are Reservation Id and/or Confirmation Number which may include the leg number.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reservationPaymentMethod": {
          "description": "Defines single payment method for the share reservation.",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationPaymentMethods": {
          "description": "Defines collection of payment methods for the share reservation.",
          "$ref": "#/definitions/copyReservationPaymentMethodsType"
        },
        "timeSpan": {
          "description": "Stay arrival and departure dates.",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "combineShareFromProfilesType": {
      "description": "Type for the profile information to create a new share reservation. This is used to create sharers from profiles.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/combineShareFromProfileType"
      }
    },
    "combineShareInstructionType": {
      "description": "Instructions for overriding checks during combine share operation.",
      "type": "object",
      "properties": {
        "distributionType": {
          "description": "Instruction to distribute rate on each share reservation.",
          "$ref": "#/definitions/shareDistributionInstructionType"
        },
        "effectiveRates": {
          "description": "Instruction to apply new effective rates to the reservations.",
          "$ref": "#/definitions/effectiveRatesType"
        },
        "overrideInstruction": {
          "description": "Contains user information for the override action performed while booking a reservation.",
          "$ref": "#/definitions/overrideInstructionType"
        },
        "overrideInventoryCheck": {
          "description": "Indicate to override the room inventory check if applicable.",
          "type": "boolean"
        },
        "overrideMaxOccupancyCheck": {
          "description": "Indicate to override the check on maximum room occupancy if applicable.",
          "type": "boolean"
        },
        "rateChangeInstruction": {
          "description": "Defines rate change instruction.",
          "$ref": "#/definitions/rateChangeInstructionType"
        },
        "roomMoveCheckedinResv": {
          "description": "If the joining sharer is checked in, do a room move to the main sharer's room.",
          "type": "boolean"
        }
      }
    },
    "combineShareReservations": {
      "description": "Request to combine sharer reservations. This request requires a Reservation Name Id(Joining to) and a Joining Reservation Id",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria required to combine the reservations.",
          "$ref": "#/definitions/combineShareReservationsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "combineShareReservationsDetails": {
      "description": "Response for the combine share reservation request. Based on the request, this will return all sharer reservations including the request reservation.",
      "type": "object",
      "properties": {
        "effectiveRates": {
          "description": "Collection of effective rates per stay dates per guest to be applied on reservation including its shares.",
          "$ref": "#/definitions/effectiveRatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "newRates": {
          "description": "Collection of new room rate information on a daily basis.",
          "$ref": "#/definitions/dailyRatesType"
        },
        "oldRates": {
          "description": "Collection of old room rate information on a daily basis.",
          "$ref": "#/definitions/dailyRatesType"
        },
        "shareReservations": {
          "description": "Collection of guests who share this reservation. Reservation information will only include the Room Information and Guest Information.",
          "$ref": "#/definitions/hotelReservationsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "combineShareReservationsType": {
      "description": "Record Type for Combining Share Reservations.",
      "type": "object",
      "properties": {
        "combineShareInstruction": {
          "description": "Instructions for overriding checks during combine share operation.",
          "$ref": "#/definitions/combineShareInstructionType"
        },
        "existingReservationId": {
          "description": "Id of an existing reservation which is going to be combined.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "fetchInstructions": {
          "description": "Collection of fetch reservation instructions to be returned.",
          "type": "object",
          "properties": {
            "fetchInstruction": {
              "description": "Instruction on what information has to be fetched.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationInstructionType"
              }
            },
            "returnShareReservations": {
              "description": "After the combine shares operation, return the new list of share reservations.",
              "type": "boolean"
            }
          }
        },
        "hotelId": {
          "description": "Opera Hotel/Resort code for the Combine Share Reservations request.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "newReservations": {
          "description": "Details for creating a new reservations from profiles which will be combined to create a sharer.",
          "$ref": "#/definitions/combineShareFromProfilesType"
        },
        "shareToReservation": {
          "description": "Collection of unique reservation identifiers. Currently supported are Reservation Id and/or Confirmation Number which may include the leg number.",
          "type": "object",
          "properties": {
            "dailyRates": {
              "description": "Collection of room rate information on a daily basis.",
              "$ref": "#/definitions/dailyRatesType"
            },
            "reservationIdList": {
              "$ref": "#/definitions/reservationIdList"
            }
          }
        }
      }
    },
    "combineShareValidations": {
      "description": "Request to validate a combine share operation. This would be done prior to the actual Combine Share operation. Based on the validations returned from this request, the appropriate values can be returned to the Combine Share operation request.",
      "type": "object",
      "properties": {
        "existingReservationId": {
          "description": "Reservation ID type of the reservation which is to be shared.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Opera Hotel/Resort code for the Combine Share Reservations request.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "newReservation": {
          "description": "Profile and new reservation information for the sharer. A new reservation will be created for the profile and shared with the main ShareToReservationId.",
          "$ref": "#/definitions/combineShareFromProfileType"
        },
        "shareToReservationId": {
          "description": "Collection of unique reservation identifiers. Currently supported are Reservation Id and/or Confirmation Number which may include the leg number.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "combineShareValidationsDetails": {
      "description": "Response for the Combine Share Validation request. This returns all validation messages which may be required for the combine share operation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "returnedValidations": {
          "description": "Validations returned after validating the combine share request.",
          "$ref": "#/definitions/validationsReturnType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commentInfoType": {
      "description": "Comment related to the profile/reservation.",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "commentType": {
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "type": "object",
      "properties": {
        "commentTitle": {
          "description": "Specifies Comment's Title.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "confidential": {
          "description": "When true, the comment may be confidential.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "If specified comment belongs to the Hotel, otherwise it is a global comment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "internal": {
          "description": "When true, the comment may not be shown to the consumer. When false, the comment may be shown to the consumer.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "notificationLocation": {
          "description": "Notification Location associated with the Note.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "overrideInternal": {
          "description": "When true, the note internal could be modified.",
          "type": "boolean"
        },
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "type": {
          "description": "Specifies type of the comment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Comment type Description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "commissionPaymentMethods": {
      "description": "Check",
      "type": "string",
      "enum": [
        "Cent",
        "Eft",
        "Chk"
      ]
    },
    "commissionPayoutToType": {
      "type": "string",
      "enum": [
        "TravelAgent",
        "Source",
        "TravelAgentSource",
        "None"
      ]
    },
    "communicationStatusType": {
      "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
      "type": "string",
      "enum": [
        "Pending",
        "Completed",
        "Failed",
        "Sent",
        "Received",
        "Cancelled",
        "PendingAvailability"
      ]
    },
    "compAccountingType": {
      "description": "Authorizer Information",
      "type": "object",
      "properties": {
        "aRNumber": {
          "description": "AR Account Number of the authorizer",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "compTypeCode": {
          "description": "The Comp Type for this Account. Used when using the Comp types functionality",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "compVoucherNo": {
          "description": "The coupon or voucher number used by the external gaming system to track postings made to this routing.",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "dateRange": {
          "description": "Arrival date range for comp routing",
          "$ref": "#/definitions/dateRangeType"
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        },
        "membershipId": {
          "description": "Membership number",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "membershipIdNo": {
          "description": "Unique Id of membership",
          "type": "integer"
        },
        "membershipNameOnCard": {
          "description": "Name displayed on the membership card",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "compAuthorizerInfoType": {
      "description": "Authorizer Information",
      "type": "object",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "compRoutingRequestType": {
      "description": "Type for the details of a Comp Routing Request",
      "type": "object",
      "properties": {
        "comments": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "declinedBy": {
          "description": "User information of user who declined comp routing request",
          "$ref": "#/definitions/userInfoType"
        },
        "requestedBy": {
          "description": "User who requested the Comp Routing",
          "$ref": "#/definitions/userInfoType"
        },
        "status": {
          "description": "Comp routing status",
          "$ref": "#/definitions/compRoutingStatusType"
        }
      }
    },
    "compRoutingStatusType": {
      "description": "Status which indicates that the Request of Comp Routing was declined",
      "type": "string",
      "enum": [
        "Request",
        "Comp",
        "Declined"
      ]
    },
    "companyDetails": {
      "description": "Company Details",
      "type": "object",
      "properties": {
        "companyId": {
          "description": "ID of the company for the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "companyName": {
          "description": "Name of the company for the reservation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "companyType": {
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Alternate Name of the Company. Mainly, it's the name of the company written in the Alternate Language.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "blacklist": {
          "description": "This element tells if profile is blacklisted or not.",
          "type": "boolean"
        },
        "commissionCode": {
          "description": "Commission code of the company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "corporateIdType": {
          "description": "The type of corporate ID",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "creditRating": {
          "description": "Credit Rating of the company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nationalityDescription": {
          "description": "Nationality code description",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "vipStatus": {
          "description": "VIP status of the company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "componentBlockOutDates": {
      "type": "object",
      "properties": {
        "dateTimeSpan": {
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "reservationIdList": {
          "$ref": "#/definitions/reservationIdList"
        }
      }
    },
    "computeCancellationPolicies": {
      "description": "Operation to fetch the details for cancellation rules, applicable to a reservation. Based on the criteria the rule information can be retrieved for all cancellation rules or for a particular rule.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for calculating the deposit/cancellation amount based on a reservation, policy code, amount or percentage.",
          "type": "object",
          "properties": {
            "amount": {
              "description": "A monetary amount.",
              "type": "number"
            },
            "currencyCode": {
              "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
              "type": "string",
              "maxLength": 3,
              "minLength": 3
            },
            "hotelId": {
              "description": "Property Code of the reservation.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "nights": {
              "description": "The number of nights used in the calculation of the cancellation amount.",
              "type": "integer"
            },
            "percentage": {
              "description": "The percentage based on which the calculation of the amount and due date is to be done.",
              "type": "number"
            },
            "policyCode": {
              "description": "The policy code based on which the calculation of the amount and due date is to be done.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "reservationId": {
              "description": "The reservation ID for which the deposit/cancellation should be calculated.",
              "$ref": "#/definitions/reservationId"
            },
            "revenueType": {
              "description": "The type to indicate what revenue should be used for calculation of the deposit/cancellation.",
              "$ref": "#/definitions/depositCancelRevenueType"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "computeCancellationPoliciesDetails": {
      "description": "Response for the cancellation rules configuration request. Contains computed details for the cancellation rules requested.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "policies": {
          "$ref": "#/definitions/resCancellationPoliciesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "computeDepositPolicies": {
      "description": "Operation to fetch the details for deposit rules, applicable to a reservation. Based on the criteria the rule information can be retrieved for all deposit rules or for a particular rule.",
      "type": "object",
      "properties": {
        "criteria": {
          "$ref": "#/definitions/depositCancelConfigCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "computeDepositPoliciesDetails": {
      "description": "Response for the deposit rules configuration request. Contains computed details for the deposit rules requested.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "policies": {
          "$ref": "#/definitions/resDepositPoliciesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "confDeliveryInfoType": {
      "type": "object",
      "properties": {
        "communicationType": {
          "description": "CommunicationType through which the confirmation letter was sent.",
          "$ref": "#/definitions/confDeliveryMethod"
        },
        "lastAttempted": {
          "description": "Date of last attempt to send confirmation letter.",
          "type": "string",
          "format": "date-time"
        },
        "lastStatus": {
          "description": "Status of last sent confirmation.",
          "$ref": "#/definitions/sentConfirmationStatus"
        },
        "successfulTries": {
          "description": "Number of success letter sent.",
          "type": "integer"
        }
      }
    },
    "confDeliveryInfoTypes": {
      "description": "List of confirmation letter delivery methods and their status",
      "type": "array",
      "maxItems": 4,
      "items": {
        "$ref": "#/definitions/confDeliveryInfoType"
      }
    },
    "confDeliveryMethod": {
      "type": "string",
      "enum": [
        "Print",
        "Email",
        "Fax",
        "Text",
        "NotConfigured"
      ]
    },
    "confRecipientInfoType": {
      "type": "object",
      "properties": {
        "addressInfo": {
          "description": "id of the address where to send confirmation letter.",
          "$ref": "#/definitions/addressInfoType"
        },
        "emailInfo": {
          "description": "id of the Email where to send confirmation letter.",
          "$ref": "#/definitions/emailInfoType"
        },
        "faxInfo": {
          "description": "id of the Fax where to send confirmation letter.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "formerName": {
          "description": "Last Name of recipient.",
          "$ref": "#/definitions/profileNameType"
        },
        "profileId": {
          "description": "name id of the recipient.",
          "$ref": "#/definitions/profileId"
        },
        "recipientType": {
          "$ref": "#/definitions/profileTypeType"
        },
        "telephoneInfo": {
          "description": "id of the Mobile where to send confirmation letter.",
          "$ref": "#/definitions/telephoneInfoType"
        }
      }
    },
    "configPackagePrimaryDetailsType": {
      "description": "A Config Package Info type.",
      "type": "object",
      "properties": {
        "arrangementCode": {
          "description": "Arrangement Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "beginSellDate": {
          "description": "Indicates the begin sell date of the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "description": {
          "description": "The description of the package.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "endSellDate": {
          "description": "Indicates the end sell date of the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "forecastGroup": {
          "description": "The Forecast group package belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "shortDescription": {
          "description": "The short description of the package.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "configPackageTransactionType": {
      "description": "A HotelPackageTransaction type.",
      "type": "object",
      "properties": {
        "allowance": {
          "description": "Package is marked as an allowance, in case charge is expected back to the guest account from external interface eg. POS. which need to be offset against a consumption allowance.",
          "type": "boolean"
        },
        "calculationRule": {
          "description": "The price calculation rule for this package.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "currency": {
          "description": "The currency code for this package.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "postingType": {
          "description": "The posting frequency for this package, e.g., daily, arrival, departure, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "configPostingAttributesType": {
      "description": "A config Package posting attributes type.",
      "type": "object",
      "properties": {
        "addToRate": {
          "description": "The package price is added to the room rate.",
          "type": "boolean"
        },
        "calculatedPrice": {
          "description": "Calculated Package Price based from Number of Adults, Children and Calculation Rule.",
          "type": "number"
        },
        "catering": {
          "description": "Is package used for catering?",
          "type": "boolean"
        },
        "endTime": {
          "description": "End time the package is valid.",
          "type": "string"
        },
        "forecastNextDay": {
          "description": "Package will be forecasted for consumption the next business day.",
          "type": "boolean"
        },
        "formula": {
          "description": "The custom formula used for this package, if any.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "inventoryItems": {
          "description": "Package Code Inventory Items type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/pkgInventoryItemType"
          }
        },
        "postNextDay": {
          "description": "package charges will be posted next business day.",
          "type": "boolean"
        },
        "postingRhythm": {
          "description": "The posting rhythm for this package.",
          "$ref": "#/definitions/packagePostingRhythmType"
        },
        "priceCalculationRule": {
          "description": "The price calculation rule for this package.",
          "$ref": "#/definitions/packageCalculationRuleType"
        },
        "printSeparateLine": {
          "description": "The package price is printed on separate line of the folio.",
          "type": "boolean"
        },
        "sellSeparate": {
          "description": "Can the package be sold separate from rate plan code?",
          "type": "boolean"
        },
        "startTime": {
          "description": "Start time the package is valid.",
          "type": "string"
        },
        "ticket": {
          "description": "Indicates whether a package is configured as a ticket or not.",
          "type": "boolean"
        }
      }
    },
    "confirmationLetters": {
      "description": "Request object to create a confirmation letter.",
      "type": "object",
      "properties": {
        "confLetters": {
          "description": "Confirmation letter.",
          "$ref": "#/definitions/confirmationsType"
        },
        "hotelId": {
          "description": "The resort of the reservation.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "description": "Reservation Id.",
          "$ref": "#/definitions/reservationId"
        },
        "responseInstruction": {
          "description": "Instruction indicating what is returned in the response.",
          "$ref": "#/definitions/responseInstructionsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "confirmationLettersDetails": {
      "description": "Response object after creating a confirmation letter.",
      "type": "object",
      "properties": {
        "confLetters": {
          "description": "List of confirmation records.",
          "$ref": "#/definitions/confirmationsType"
        },
        "hotelId": {
          "description": "The resort of the reservation.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "description": "Reservation Id.",
          "$ref": "#/definitions/reservationId"
        },
        "responseInstruction": {
          "description": "Instruction indicating what is returned in the response.",
          "$ref": "#/definitions/responseInstructionsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "confirmationStyle": {
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "style": {
          "description": "Name of the confirmation letter style.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "confirmationType": {
      "type": "object",
      "properties": {
        "confirmationStyleInfo": {
          "description": "Confirmation style.",
          "$ref": "#/definitions/confirmationStyle"
        },
        "deliveryInfo": {
          "description": "The status of the confirmation letter sent via the specified CommunicationType.",
          "$ref": "#/definitions/confDeliveryInfoTypes"
        },
        "fromEmail": {
          "description": "Senders Email address.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "recipientInfo": {
          "description": "Receipient's information.",
          "$ref": "#/definitions/confRecipientInfoType"
        },
        "sendTextMessage": {
          "description": "Flag to indicate sending confirmation letter as text message.",
          "type": "boolean"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "confirmationsType": {
      "description": "List of confirmation letters.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/confirmationType"
      }
    },
    "copyReservation": {
      "description": "Request for copying a reservation's information as a template for a new reservation.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for copying the reservation.",
          "$ref": "#/definitions/copyReservationType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyReservationPaymentMethodsType": {
      "description": "A collection of Reservation Payment Methods.",
      "type": "object",
      "properties": {
        "copyCreditCards": {
          "description": "Indicates copying of credit card payment methods. This flag will only be applied to payment method windows not sent in the collection.",
          "type": "boolean"
        },
        "copyOthers": {
          "description": "Indicates copying of other payment methods. This flag will only be applied to payment method windows not sent in the collection.",
          "type": "boolean"
        },
        "reservationPaymentMethod": {
          "description": "Defines reservation payment methods.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationPaymentMethodType"
          }
        }
      }
    },
    "copyReservationType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "instructions": {
          "description": "Flags which will be considered when copying from the template. If this element is not sent, all the flags will be assumed to be ignored.",
          "type": "object",
          "properties": {
            "includeComments": {
              "type": "boolean"
            },
            "includeCompRouting": {
              "type": "boolean"
            },
            "includeCreditCardPayments": {
              "type": "boolean"
            },
            "includeItemInventory": {
              "type": "boolean"
            },
            "includeNonCreditCardPayments": {
              "type": "boolean"
            },
            "includePackages": {
              "type": "boolean"
            },
            "includePayments": {
              "type": "boolean"
            },
            "includeRouting": {
              "type": "boolean"
            },
            "includeSpecials": {
              "type": "boolean"
            }
          }
        },
        "newReservation": {
          "description": "This reservation object will override the default items generated by the template.",
          "$ref": "#/definitions/hotelReservationInstructionType"
        },
        "sourceReservationId": {
          "description": "Source reservation's identifier where the template will be based.",
          "$ref": "#/definitions/uniqueIDListType"
        }
      }
    },
    "countryNameType": {
      "description": "Code for a country or a nationality.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Used for Character Strings, length 0 to 200.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "createGuestMessages": {
      "description": "Request object for creating the Guest Messages for a Reservation.",
      "type": "object",
      "properties": {
        "guestMessages": {
          "description": "List of Guest Messages to be created. Refer to Generic common types document.",
          "$ref": "#/definitions/guestMessagesType"
        },
        "hotelId": {
          "description": "Property where the reservation belongs to.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationIdList": {
          "description": "Collection of unique identifiers of the reservations of which the Guest Messages will be created.",
          "$ref": "#/definitions/reservationIdList"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "createReservation": {
      "description": "Request object to create reservations. Includes instructions for information which needs to be returned.",
      "type": "object",
      "properties": {
        "channelInformation": {
          "description": "Channel specific information to be received in case the reservation is being created through a channel.",
          "$ref": "#/definitions/channelResvRQInfoType"
        },
        "fetchInstructions": {
          "description": "Instruction on what has to be fetched. Refer to Generic common types document.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/reservationInstructionType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservations": {
          "description": "Collection of Reservations which have to be created.",
          "$ref": "#/definitions/hotelReservationsType"
        },
        "reservationsInstructionsType": {
          "description": "Collection of Reservations which have to be created.",
          "$ref": "#/definitions/reservationsInstructionsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "createReservationType": {
      "description": "Create Reservation Response Type",
      "type": "object",
      "properties": {
        "channelInformation": {
          "description": "Information to be returned, if the request is received through a channel",
          "$ref": "#/definitions/channelResvRSInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservations": {
          "description": "Collection of Reservations returned/fetched as per the criteria in the fetch request.",
          "$ref": "#/definitions/hotelReservationsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "currencyAmountType": {
      "description": "A monetary value expressed with a currency code.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        }
      }
    },
    "currentRoomInfoType": {
      "description": "Room information of the reservation for the current day.",
      "type": "object",
      "properties": {
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "roomDescription": {
          "description": "Current room description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "roomId": {
          "description": "Current room number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomOwnershipType": {
          "description": "Provides the information of the assigned reservation room is an Owner/Referral or Regular room.This value is returned when Room Rotation OPERA Control is active and room number is assigned to a reservation.",
          "$ref": "#/definitions/reservationRoomOwnershipType"
        },
        "roomType": {
          "description": "Current room type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomViewCode": {
          "description": "Represents the room view code like City view, River view, Ocean view etc.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "suggestedRoomNumbers": {
          "description": "Suggested room numbers.",
          "$ref": "#/definitions/codeListType"
        },
        "upgradedByAI": {
          "description": "Represents the room was upgraded by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "customChargeExemptionDateType": {
      "description": "Contains Custom Charge Exemption information for a day.",
      "type": "object",
      "properties": {
        "date": {
          "description": "Contains Custom Charge Exemption date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "guests": {
          "description": "List of guests.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/customChargeGuestInfoType"
          }
        },
        "quantity": {
          "description": "Contains number of Custom Charge Exemption for a day.",
          "type": "integer"
        }
      }
    },
    "customChargeExemptionDatesType": {
      "description": "Contains List of Custom Charge Exemption information for a day.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customChargeExemptionDateType"
      }
    },
    "customChargeExemptionType": {
      "description": "Contains custom charges exemption information.",
      "type": "object",
      "properties": {
        "customChargeDates": {
          "description": "Contains exemption detail information for each date.",
          "$ref": "#/definitions/customChargeExemptionDatesType"
        },
        "customChargeQuantity": {
          "description": "Contains exemption quantity for the stay. When this value is configured, daily exemption quantities are not permitted.",
          "$ref": "#/definitions/customChargeQuantityType"
        },
        "customChargesExemption": {
          "description": "Contains exemption code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "excludedDates": {
          "description": "Contains list of dates which are not valid for custom charge exemptions.",
          "$ref": "#/definitions/excludedDatesType"
        },
        "percentage": {
          "description": "Exemption Percentage",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "propertyExemption": {
          "description": "Flag specifying if custom charge exemptions is property level or not.",
          "type": "boolean"
        }
      }
    },
    "customChargeExemptionsType": {
      "description": "List of Custom Charge Exemptions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customChargeExemptionType"
      }
    },
    "customChargeGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "profileId": {
          "description": "Unique profile identifier.",
          "$ref": "#/definitions/profileId"
        }
      }
    },
    "customChargeQuantityType": {
      "description": "Contains quantity of custom charge exemptions.",
      "type": "object",
      "properties": {
        "available": {
          "description": "Indicates if Custom Charges Exemption information is editable.",
          "type": "boolean"
        },
        "guests": {
          "description": "List of guests.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/customChargeGuestInfoType"
          }
        },
        "quantity": {
          "description": "Contains number of Custom Charge Exemption for a day.",
          "type": "integer"
        }
      }
    },
    "customerType": {
      "description": "Contains basic data on the customer's identity, location, relationships, finances, memberships, etc.",
      "type": "object",
      "properties": {
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        },
        "birthPlace": {
          "description": "Place of birth.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "blacklist": {
          "description": "This element tells if profile is blacklisted or not.",
          "type": "boolean"
        },
        "creditRating": {
          "description": "Credit Rating of the customer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "customerValue": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "gender": {
          "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "identifications": {
          "description": "List of identification of the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "identificationInfo": {
              "description": "Collection of detailed information on the identification of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/identificationInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nationalityDescription": {
          "description": "Nationality code description",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "personName": {
          "description": "Detailed name information for the customer.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/personNameType"
          }
        },
        "privateProfile": {
          "description": "This element tells profile is property exclusive or not.",
          "type": "boolean"
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "vipStatus": {
          "description": "VIP status of the customer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "dailyPaceStatType": {
      "description": "An instance or a day of a reservation pace statistic.",
      "type": "object",
      "properties": {
        "channel": {
          "type": "string"
        },
        "consideredDate": {
          "description": "The day to which the information belongs.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "rooms": {
          "description": "Number of rooms reserved.",
          "type": "integer"
        }
      }
    },
    "dailyPaceStatsType": {
      "description": "a collection of reservation pace statistics.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dailyPaceStatType"
      }
    },
    "dailyRateDetailType": {
      "description": "Rate details for the different dates of a reservation.",
      "type": "object",
      "properties": {
        "changeAllSharers": {
          "description": "Indicates if all the share reservations will be changed. This is returned in the response after validation, indicating whether all shares will be changed (in the case of room type change or date change).",
          "type": "boolean"
        },
        "commissionCode": {
          "description": "The Commission Code used for the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "discountAllowed": {
          "description": "Indicates if the Rate Code is discountable i.e discounts are allowed on the rate code.",
          "type": "boolean"
        },
        "endDate": {
          "description": "The date of the reservation stay. If the same details need to be applied to a date range of the stay, then the Start Date and End Date would specify the range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fixedRate": {
          "description": "Indicates if the rate is fixed and could be different from the default rate amount of the rate code.",
          "type": "boolean"
        },
        "guestCounts": {
          "description": "The guest counts(adults or children) for the date of the stay.",
          "$ref": "#/definitions/guestCountsType"
        },
        "marketCode": {
          "description": "Market Code of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "promotions": {
          "description": "The list of Promotions that are attached to the reservation.",
          "$ref": "#/definitions/promotionsType"
        },
        "rate": {
          "description": "The Rate Amount details for the date of the stay.",
          "$ref": "#/definitions/amountType"
        },
        "ratePlanCode": {
          "description": "The Rate Code of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomId": {
          "description": "Room number of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "Room Type of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomTypeToCharge": {
          "description": "The Room Type on which the rate is based on. The reservation may use a different room type but is charged based on a different room type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCode": {
          "description": "Source Code of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "startDate": {
          "description": "The date of the reservation stay.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "dailyRateType": {
      "description": "The total amount charged for the service including additional amounts and fees.",
      "type": "object",
      "properties": {
        "amountAfterTax": {
          "description": "The total amount including all associated taxes (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "amountBeforeTax": {
          "description": "The total amount not including any associated tax (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "baseAmount": {
          "description": "The rate's base price. Amount excluding price for any add to rate combine line package attached to the rate.Also excludes any discounts",
          "type": "number"
        },
        "code": {
          "description": "Type of charge.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "discount": {
          "description": "Room rate discount percentage or amount, code and textual reason for discount.",
          "$ref": "#/definitions/discountType"
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "rateOverride": {
          "description": "When true indicates that the rate amount has been overridden.",
          "type": "boolean"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "taxes": {
          "description": "A collection of taxes.",
          "$ref": "#/definitions/taxesType"
        }
      }
    },
    "dailyRatesType": {
      "description": "Defines room rate information on a daily basis.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dailyRateType"
      }
    },
    "dailyStatType": {
      "description": "Statistics of one day.",
      "type": "object",
      "properties": {
        "blockStats": {
          "description": "Collection of block statistics.",
          "$ref": "#/definitions/blockStatsType"
        },
        "statisticDate": {
          "description": "Date of statistics.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "dailyStatsType": {
      "description": "Statistics of one day.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dailyStatType"
      }
    },
    "dateRangeType": {
      "description": "Date Range with Start and End dates.",
      "type": "object",
      "properties": {
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "dateTimeSpanType": {
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "type": "object",
      "properties": {
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "dateTimeStampGroupType": {
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "dateUDFType": {
      "description": "Used to hold user defined field of Date Type.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "description": "Used to hold user defined field of Date Type. It is highly recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "dateUDFsType": {
      "description": "Used to hold collection of user defined fields of Date Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dateUDFType"
      }
    },
    "deliveryHistoryLog": {
      "description": "Response that contains fetched reservation's delivery history.",
      "type": "object",
      "properties": {
        "deliveryHistoryLog": {
          "description": "Delivery History Information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/deliveryHistoryType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "deliveryHistoryType": {
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "deliveryDate": {
          "description": "Delivery Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "deliveryId": {
          "description": "Reservation Delivery ID",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "deliveryMethod": {
          "description": "Reservation Delivery Method",
          "$ref": "#/definitions/deliveryMethodType"
        },
        "deliveryStatus": {
          "description": "Reservation Delivery status",
          "$ref": "#/definitions/statusType"
        },
        "errorDescription": {
          "description": "The error Description Of Reservation Delivery status",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "interfaceId": {
          "description": "Interface Id.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "resvNameId": {
          "description": "Reservation ID for which the Delivery History belongs.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "retryCount": {
          "description": "Retry Count",
          "type": "integer"
        }
      }
    },
    "deliveryMethodType": {
      "description": "PRINT",
      "type": "string",
      "enum": [
        "Msmq",
        "Http",
        "Fax",
        "Email",
        "Print"
      ]
    },
    "depositCancelConfigCriteriaType": {
      "description": "Criteria for calculating the deposit/cancellation amount based on a reservation, policy code, amount or percentage.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "hotelId": {
          "description": "Property Code of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "percentage": {
          "description": "The percentage based on which the calculation of the amount and due date is to be done.",
          "type": "number"
        },
        "policyCode": {
          "description": "The policy code based on which the calculation of the amount and due date is to be done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationId": {
          "description": "The reservation ID for which the deposit/cancellation should be calculated.",
          "$ref": "#/definitions/reservationId"
        },
        "revenueType": {
          "description": "The type to indicate what revenue should be used for calculation of the deposit/cancellation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        }
      }
    },
    "depositCancelRevenueType": {
      "description": "The type to indicate what revenue is to be used for calculating deposit/cancellation amounts.",
      "type": "string",
      "enum": [
        "Rooms",
        "Catering",
        "All"
      ]
    },
    "depositPolicyType": {
      "description": "Used to define the deposit policy, guarantees policy, and/or accepted forms of payment.",
      "type": "object",
      "properties": {
        "amountPercent": {
          "description": "Payment expressed as a fixed amount, or a percentage of/or room nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "deadline": {
          "description": "Payment deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "depositReceiptNo": {
          "description": "Receipt number associated with the deposit policy",
          "type": "integer"
        },
        "depositReqReversed": {
          "description": "Flag to indicate if deposit policy is reversed",
          "type": "boolean"
        },
        "description": {
          "description": "Text description of the Payment in a given language.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the deposit policy.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        },
        "policyCode": {
          "description": "Deposit Policy Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date associated with the deposit policy",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "typeOfCharges": {
          "description": "Defines if the deposit amount is calculated based on Room Charges, Catering Charges or both",
          "$ref": "#/definitions/depositCancelRevenueType"
        }
      }
    },
    "discountType": {
      "description": "Identifies and provides details about the discount. This allows for both percentages and flat amounts. If one field is used, the other should be zero/not specified since logically.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "discountCode": {
          "description": "Specifies the type of discount (e.g., No condition, LOS, Deposit or Total amount spent).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "discountReason": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "percent": {
          "description": "Percentage discount.",
          "type": "number"
        }
      }
    },
    "distinctIDType": {
      "description": "Unique identifiers for both internal and external systems Eg: ReservationId, ConfirmationNumber, CancellationNumber, ExternalReferenceNumber etc",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system. Eg: ConfirmationLegNumber, ExternalLegNumber",
          "type": "integer"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element. Eg: Reservation, Confirmation, Cancellation, ExternalReference etc",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "downgradeType": {
      "description": "Do not downgrade membership when the next downgrade process runs. When the downgrade process runs, the membership will be automatically set to Grace.",
      "type": "string",
      "enum": [
        "Grace",
        "Never",
        "Period"
      ]
    },
    "eCertificateClassficationType": {
      "description": "Enumeration of the different type of Ecertificate.",
      "type": "string",
      "enum": [
        "Promotion",
        "Award",
        "Benefit",
        "Other"
      ]
    },
    "eCertificateConsumeSourceType": {
      "description": "Indicates that OPERA E-Certificate is consumed by hotelPMS.",
      "type": "string",
      "enum": [
        "Central",
        "Web",
        "Hotel"
      ]
    },
    "eCertificateConsumptionType": {
      "description": "E-Certificates details.",
      "type": "object",
      "properties": {
        "date": {
          "description": "Date the certificate was consumed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "email": {
          "description": "Email of the person who consumed the certificate.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "firstName": {
          "description": "First name of the person who consumed the certificate.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property where certificate was consumed for.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "middleName": {
          "description": "Middle name of the person who consumed the certificate.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "referenceId": {
          "description": "Any reference like reservation no etc against which the certificate was consumed.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "source": {
          "description": "Source of consumption.",
          "$ref": "#/definitions/eCertificateConsumeSourceType"
        },
        "surname": {
          "description": "Last name of the person who consumed the certificate..",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "userName": {
          "description": "Application user who created the consumption.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "eCertificateInfoType": {
      "description": "E-Certificates details.",
      "type": "object",
      "properties": {
        "awardCode": {
          "description": "Award type to which the certificate is linked to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "benefitSummary": {
          "description": "Summary of Benefits attached to this ECertificate.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "certificateType": {
          "description": "User defined certificate code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cost": {
          "description": "Cost of certificate.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "description": "Description about the certificate.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotels": {
          "description": "Hotel to which certificate is attached to.",
          "type": "object",
          "properties": {
            "code": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              }
            },
            "scope": {
              "description": "Scope of e-cert: global,single property or multi property.",
              "$ref": "#/definitions/eCertificateScopeType"
            }
          }
        },
        "label": {
          "description": "Label for the certificate.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "longDescription": {
          "description": "Detail description about the certificate.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "membershipType": {
          "description": "Membership type to which the certificate is linked to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "promotionCode": {
          "description": "Promotion code to which certificate is attached to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Value of the certificate for the guest.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "voucherBenefitCode": {
          "description": "Voucher benefit code attached to the certificate.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "eCertificateIssueSourceType": {
      "description": "Indicates that OPERA E-Certificate is issued by external system.",
      "type": "string",
      "enum": [
        "Opera",
        "Web",
        "Interface"
      ]
    },
    "eCertificateScopeType": {
      "description": "Indicates that OPERA E-Certificate is available for a specific list of hotels.",
      "type": "string",
      "enum": [
        "Global",
        "Hotel",
        "MultiHotel"
      ]
    },
    "eCertificateStatusType": {
      "description": "Indicates that OPERA E-Certificate is reserved.",
      "type": "string",
      "enum": [
        "Cancelled",
        "Consumed",
        "Deleted",
        "Expired",
        "Issued",
        "Reserved"
      ]
    },
    "eCertificateType": {
      "description": "E-Certificates details.",
      "type": "object",
      "properties": {
        "certificateNo": {
          "description": "Printed certificate no. This has to be unique.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "consumptionDetail": {
          "$ref": "#/definitions/eCertificateConsumptionType"
        },
        "eCertificateInfo": {
          "$ref": "#/definitions/eCertificateInfoType"
        },
        "expiryDate": {
          "description": "Date of expiry.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "issueDate": {
          "description": "Date when certificate was issued.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "printed": {
          "description": "Print status of the certificate.",
          "type": "boolean"
        },
        "profileId": {
          "description": "NameId.",
          "$ref": "#/definitions/profileId"
        },
        "source": {
          "description": "Source of e-certificate.",
          "$ref": "#/definitions/eCertificateIssueSourceType"
        },
        "status": {
          "description": "Status of the certificate.",
          "$ref": "#/definitions/eCertificateStatusType"
        },
        "voucherNo": {
          "description": "System generated unique voucher number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "eCertificatesType": {
      "description": "List of e-certificates for the profile.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eCertificateType"
      }
    },
    "eCouponType": {
      "description": "Reservation eCoupon Type Information.",
      "type": "object",
      "properties": {
        "autoAttached": {
          "description": "Determines whether the eCoupon is attached through the Rate Code or not.",
          "type": "boolean"
        },
        "code": {
          "description": "Code to attach the eCoupon to Reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the eCoupon attached to the Reservation.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "eCouponId": {
          "description": "ECouponID to attach the eCoupon to Reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "issuedQuantity": {
          "description": "Assigned Quantity for the eCoupon when attached to Reservation.",
          "type": "integer"
        },
        "ratePlanCode": {
          "description": "Rate plan of the attached eCoupon to Reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reason": {
          "description": "Reason for attaching/modifing eCoupon.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "usedQuantity": {
          "description": "Used Quantity of the eCoupon for the Reservation.",
          "type": "integer"
        },
        "welcomeOffer": {
          "description": "Determines whether this eCoupon is eligible for welcome offer or not.",
          "type": "boolean"
        }
      }
    },
    "eCoupons": {
      "description": "Response object for fetching the eCoupons attached to Reservation.",
      "type": "object",
      "properties": {
        "eCoupons": {
          "$ref": "#/definitions/eCouponsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eCouponsInfo": {
      "description": "Request object for changing the existing eCoupons attached to Reservation.",
      "type": "object",
      "properties": {
        "eCoupons": {
          "description": "Collection of eCoupons which have to be modified.",
          "$ref": "#/definitions/eCouponsType"
        },
        "hotelId": {
          "description": "Hotel Code of the Reservation.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "description": "The reservation id for which the eCoupons have to be modified.",
          "$ref": "#/definitions/reservationId"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eCouponsType": {
      "description": "Collection of ECouponType object.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eCouponType"
      }
    },
    "effectiveRateType": {
      "description": "Effective rate amount per guest on specific dates.",
      "type": "object",
      "properties": {
        "amountBeforeTax": {
          "description": "Rate amount Before Tax.",
          "type": "number"
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "extraChildRate": {
          "description": "Rate amount for each extra Child.",
          "type": "number"
        },
        "extraPersonRate": {
          "description": "Rate amount for each extra person.",
          "type": "number"
        },
        "fivePersonRate": {
          "description": "Rate amount for five persons.",
          "type": "number"
        },
        "fourChildrenRate": {
          "description": "Rate amount for four Children.",
          "type": "number"
        },
        "fourPersonRate": {
          "description": "Rate amount for four persons.",
          "type": "number"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "minimumChildrenForFreeStay": {
          "description": "Minimum number of children needed to get free stay.",
          "type": "integer"
        },
        "numberOfRooms": {
          "type": "integer"
        },
        "oneChildRate": {
          "description": "Rate amount for one Child.",
          "type": "number"
        },
        "onePersonRate": {
          "description": "Rate amount for one person.",
          "type": "number"
        },
        "overrideFloorAmount": {
          "description": "true if floor amount needs to be override",
          "type": "boolean"
        },
        "pointsRequired": {
          "description": "The number of award points required for applying this rate plan schedule.",
          "type": "number"
        },
        "rateByAgeBuckets": {
          "description": "Collection of rate amount by age bracket.",
          "$ref": "#/definitions/rateByAgeBucketsType"
        },
        "ratePlanCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "threeChildrenRate": {
          "description": "Rate amount for three Children.",
          "type": "number"
        },
        "threePersonRate": {
          "description": "Rate amount for three persons.",
          "type": "number"
        },
        "twoChildrenRate": {
          "description": "Rate amount for two Children.",
          "type": "number"
        },
        "twoPersonRate": {
          "description": "Rate amount for two persons.",
          "type": "number"
        }
      }
    },
    "effectiveRatesType": {
      "description": "Collection of effective rate amount per guest on specific dates.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/effectiveRateType"
      }
    },
    "emailInfoType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "emailType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "employeeInfoType": {
      "type": "object",
      "properties": {
        "addressInfo": {
          "$ref": "#/definitions/addressInfoType"
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        },
        "department": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "emailInfo": {
          "$ref": "#/definitions/emailInfoType"
        },
        "gender": {
          "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "personName": {
          "$ref": "#/definitions/personNameType"
        },
        "phoneInfo": {
          "$ref": "#/definitions/telephoneInfoType"
        },
        "profileId": {
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "entityType": {
      "description": "Indicates the rule is based on Minutes associated with the charge.",
      "type": "string",
      "enum": [
        "ThresholdCount",
        "ThresholdQuantity",
        "ThresholdMinutes"
      ]
    },
    "errorInstance": {
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "title": "Error Instance Details",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "eventId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "exceptionDetailType": {
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "title": "Error Detail",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "excludedDateType": {
      "description": "Specifies all the enabled dates.",
      "type": "object",
      "properties": {
        "date": {
          "description": "Contains exclusion date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reason": {
          "description": "Contains reason for exclusion.",
          "$ref": "#/definitions/exclusionReasonType"
        }
      }
    },
    "excludedDatesType": {
      "description": "Contains list of dates which are valid for custom charge exemptions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/excludedDateType"
      }
    },
    "excludedPreferenceType": {
      "description": "List of excluded preferences for a particular preference.",
      "type": "object",
      "properties": {
        "preference": {
          "description": "Preference code and its description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "priority": {
          "description": "Priority of the source system.",
          "type": "integer"
        },
        "source": {
          "description": "Source name of the preference.",
          "type": "string"
        }
      }
    },
    "excludedPreferencesType": {
      "description": "Collection of excluded preferences for a particular preference of a reservation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/excludedPreferenceType"
      }
    },
    "exclusionReasonType": {
      "description": "Custom Charge has already been Processed for this date within the reservation stay.",
      "type": "string",
      "enum": [
        "NotConfigured",
        "CustomChargeProcessed"
      ]
    },
    "extendReservationLock": {
      "description": "Operation for extending the lifetime of a lock on a reservation.",
      "type": "object",
      "properties": {
        "additionalTimeToLive": {
          "description": "The number of seconds to add to the lock's validity time.",
          "type": "number"
        },
        "hotelId": {
          "description": "Property code of the reservation.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "lockHandle": {
          "description": "The lock handle of the record lock we are attempting to release.",
          "type": "number"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "extendReservationLockDetails": {
      "description": "This response will indicate whether or not the extension was successful. This operation may return errors when the lock being requested to be extended no longer exists. This can happen when the lock has already expired and cleaned up.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationLock": {
          "description": "This contains the updated lock information for the reservation. The time to live will contain the updated lifetime of the lock.",
          "$ref": "#/definitions/operaRecordLock"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "externalReferenceType": {
      "description": "This type contains unique information of external reference.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique ID of external reference.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "ID context for external reference.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system for the external reference number. It is only applicable to reservation external references.",
          "type": "integer"
        }
      }
    },
    "externalReferencesType": {
      "description": "This type contains unique information of external reference.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/externalReferenceType"
      }
    },
    "facilitySchedulerOptionType": {
      "description": "Facility Scheduler Option value.",
      "type": "string",
      "enum": [
        "Default",
        "Update",
        "Noupdate"
      ]
    },
    "fetchActivityBookingsType": {
      "description": "Used in the request message to describe the \"filtering Criteria\" when executing an activity lookup.",
      "type": "object",
      "properties": {
        "activities": {
          "description": "The specific acitvity information to be used for filtering the Look-up.",
          "$ref": "#/definitions/activityList"
        },
        "address": {
          "description": "Detailed Address information for the customer.",
          "$ref": "#/definitions/addressType"
        },
        "hotelId": {
          "description": "Hotel Code, It is used to filter hotel specific children to this specific hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "personName": {
          "description": "Detailed name information for the customer.",
          "$ref": "#/definitions/personNameType"
        },
        "profileId": {
          "description": "ProfileID associated with the Activity under lookup.",
          "$ref": "#/definitions/uniqueIDListType"
        }
      }
    },
    "fetchReservations": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "masterInfoList": {
          "description": "Refer to Generic common types document.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "reservationInfoList": {
          "description": "List of reservations which can be shared.",
          "type": "object",
          "properties": {
            "reservationInfo": {
              "description": "Information of the reservation which can be shared.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/reservationInfoType"
              }
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fetchSellMessageConfig": {
      "description": "This is the fetch response message type for fetch operation of sell messages.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "sellMessageConfigs": {
          "description": "Sell Messages which are retrieved as per the criteria in the request message. Refer to the generic common types document for the SellMessagesType.",
          "type": "object",
          "properties": {
            "sellMessageConfigs": {
              "description": "Sell Messages which are retrieved as per the criteria in the request message. Refer to the generic common types document for the SellMessagesType.",
              "$ref": "#/definitions/sellMessageConfigsType"
            },
            "totalPages": {
              "description": "Evaluated total page count based on the requested max fetch count.",
              "type": "integer"
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalInfoType": {
      "description": "Fiscal related information for a reservation.",
      "type": "object",
      "properties": {
        "fiscalPayloadType": {
          "description": "Fiscal Payload Type.",
          "$ref": "#/definitions/payloadType"
        },
        "fiscalStatus": {
          "description": "OPERA Fiscal status.",
          "type": "string"
        },
        "partnerCode": {
          "description": "Fiscal partner code.",
          "type": "string"
        }
      }
    },
    "fixedChargeDetailType": {
      "description": "Fixed charge amount could be specified by flat fee or be a percentage of the rate amount.",
      "type": "object",
      "properties": {
        "article": {
          "description": "Holds related article code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "chargeAmount": {
          "description": "Price of the product.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "Percentage of the rate amount.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "quantity": {
          "description": "Quantity of the product.",
          "type": "integer"
        },
        "roomNights": {
          "description": "Holds number of comp or cash room night to allocate.",
          "type": "integer"
        },
        "supplement": {
          "description": "Additional information regarding the fixed charge.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transaction": {
          "description": "Transaction code and description of a fixed charge.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "fixedChargeFrequencyType": {
      "description": "Yearly.",
      "type": "string",
      "enum": [
        "O",
        "D",
        "W",
        "M",
        "Q",
        "Y"
      ]
    },
    "fixedChargeScheduleType": {
      "description": "Holds schedule of fixed charge.",
      "type": "object",
      "properties": {
        "dateToExecute": {
          "description": "Date of when to execute yearly fixed charge. Applicable when frequency is Yearly.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "dayToExecute": {
          "description": "Day of when to execute fixed charge. Applicable when frequency is Daily or Weekly.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency of a fixed charge.",
          "$ref": "#/definitions/fixedChargeFrequencyType"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "fixedChargeType": {
      "description": "Holds fixed charge information.",
      "type": "object",
      "properties": {
        "charge": {
          "description": "Holds specific details of fixed charge.",
          "$ref": "#/definitions/fixedChargeDetailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "schedule": {
          "description": "Holds schedule of fixed charge.",
          "$ref": "#/definitions/fixedChargeScheduleType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "fixedChargesType": {
      "description": "Holds fixed charge detail.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fixedChargeType"
      }
    },
    "folioShortInfoType": {
      "description": "This type contains information of generated bills.",
      "type": "object",
      "properties": {
        "autoGenerated": {
          "description": "Flag to indicate if the folio is auto generated or not.",
          "type": "boolean"
        },
        "folioNo": {
          "description": "Folio No of the bill generated.",
          "type": "number"
        },
        "folioType": {
          "description": "Folio type of the bill generated.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "folioTextsType": {
      "description": "This stores the description for the type of tax calculation especially with tax exemption, etc.",
      "type": "array",
      "maxItems": 2,
      "items": {
        "type": "object",
        "properties": {
          "row": {
            "description": "Row number of the additional text.",
            "type": "integer"
          },
          "text": {
            "description": "Additional text field to display on the folio.",
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          }
        }
      }
    },
    "foliosShortInfoType": {
      "description": "This type contains a list of generated bills for a reservation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioShortInfoType"
      }
    },
    "formattedTextTextType": {
      "description": "Provides text and indicates whether it is formatted or not.",
      "type": "object",
      "properties": {
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "frontOfficeRoomStatusType": {
      "description": "Simple type for front office room status instructions to be used in requests for fetching housekeeping rooms. Valid values are Vacant and Occupied.",
      "type": "string",
      "enum": [
        "Vacant",
        "Occupied"
      ]
    },
    "futureListType": {
      "description": "A collection of reservation history details attached to Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : Future reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "futureReservationsOrBlocksDetails": {
      "description": "This is the Response Message to information regarding existence of future reservation or business blocks.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "response": {
          "description": "response - whether there are future reservation or business blocks for the profile.",
          "type": "boolean"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "givenNameType": {
      "description": "Given name, first name or names",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "groupDetails": {
      "description": "Group Details",
      "type": "object",
      "properties": {
        "groupID": {
          "description": "ID of the group for the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "groupName": {
          "description": "Name of the group for the reservation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "guaranteePolicyType": {
      "description": "Specifies Guarantee Code attributes.",
      "type": "object",
      "properties": {
        "cancelPenalty": {
          "description": "The CancelPenalty class defines the cancellation policy of the hotel facility.",
          "type": "object",
          "properties": {
            "amountPercent": {
              "description": "Cancellation fee expressed as a fixed amount, or percentage of/or room nights.",
              "$ref": "#/definitions/policyAmountPercentType"
            },
            "deadline": {
              "description": "Cancellation deadline, absolute or relative.",
              "$ref": "#/definitions/policyDeadlineType"
            },
            "effective": {
              "description": "Indicator if Cancellation Penalty is currently applicable or not.",
              "type": "boolean"
            },
            "estimatedAmount": {
              "description": "Message.",
              "type": "number"
            },
            "formattedRule": {
              "description": "Formatted Text Rule of the Cancellation Penalty.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "manual": {
              "description": "Flag to indicate if the cancellation policy is manual.",
              "type": "boolean"
            },
            "nonRefundable": {
              "description": "Indicates if the amount is refundable if booking is canceled.",
              "type": "boolean"
            },
            "offsetUnit": {
              "$ref": "#/definitions/offsetUnitType"
            },
            "penaltyDescription": {
              "description": "Text description of the Penalty in a given language.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "policyCode": {
              "description": "Policy Code.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            }
          }
        },
        "defaultGuarantee": {
          "description": "If true indicates this can be the default guarantee type to be selected for a reservation.",
          "type": "boolean"
        },
        "depositPolicy": {
          "description": "A deposit policy attached with the reservation.",
          "type": "object",
          "properties": {
            "amountDue": {
              "description": "Total amount due against the reservation deposit.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "amountPaid": {
              "description": "Total amount paid against the reservation deposit.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "comments": {
              "description": "Comments attached with a deposit.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "estimatedAmount": {
              "description": "Message.",
              "type": "number"
            },
            "policy": {
              "description": "Reservation deposit policy details.",
              "$ref": "#/definitions/depositPolicyType"
            },
            "policyId": {
              "description": "Unique ID of the Reservation Policy.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "revenueType": {
              "description": "Type of reservation.",
              "$ref": "#/definitions/depositCancelRevenueType"
            }
          }
        },
        "description": {
          "description": "Description of the Guarantee Code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "guaranteeCode": {
          "description": "Code assigned to the Guarantee.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "lateArrival": {
          "description": "Represents the late arrival time.",
          "type": "string"
        },
        "onHold": {
          "description": "If true indicates this Guarantee Code is used only to hold the inventory during reservation process.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "paymentTypes": {
          "description": "Specifies various payment types for the guarantee code.",
          "$ref": "#/definitions/paymentTypesType"
        },
        "requirements": {
          "description": "Specifies various requirements for the guarantee code.",
          "$ref": "#/definitions/guaranteeRequirementsType"
        },
        "reserveInventory": {
          "description": "If true indicates inventory will be reserved/deducted when reservation uses this Guarantee Code.",
          "type": "boolean"
        },
        "shortDescription": {
          "description": "Brief description of the Guarantee Code.",
          "$ref": "#/definitions/translationTextType80"
        }
      }
    },
    "guaranteeRequirementsType": {
      "description": "Specifies various requirement for the guarantee code.",
      "type": "object",
      "properties": {
        "address": {
          "description": "When true indicates address on the reservation is required for this guarantee code.",
          "type": "boolean"
        },
        "arrivalTime": {
          "description": "When true indicates arrival Time on the reservation is required for this guarantee code.",
          "type": "boolean"
        },
        "cancellation": {
          "description": "When true indicates cancellation on the reservation is required for this guarantee code.",
          "type": "boolean"
        },
        "creditCard": {
          "description": "When true indicates Credit Card on the reservation is required for this guarantee code.",
          "type": "boolean"
        },
        "deposit": {
          "description": "When true indicates deposit is required for this guarantee code.",
          "type": "boolean"
        },
        "phoneNumber": {
          "description": "When true indicates phone number on the reservation is required for this guarantee code.",
          "type": "boolean"
        },
        "requirementCode": {
          "description": "Requirement Code.",
          "type": "string"
        }
      }
    },
    "guestCountsType": {
      "description": "A collection of GuestCount by age group.",
      "type": "object",
      "properties": {
        "adults": {
          "description": "Defines the number of Adults.",
          "type": "integer"
        },
        "childAges": {
          "description": "Defines Children's Ages. Number of children ages mentioned may mot match with children counts.",
          "$ref": "#/definitions/childAgesType"
        },
        "childBuckets": {
          "description": "Defines children counts with Age Qualifying Group(Child Bucket#1) classification.",
          "$ref": "#/definitions/childBucketsType"
        },
        "children": {
          "description": "Defines the number of Children.",
          "type": "integer"
        }
      }
    },
    "guestDetails": {
      "description": "Guest Details",
      "type": "object",
      "properties": {
        "alternateFirstName": {
          "description": "Alternate first name.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "alternateLastName": {
          "description": "Alternate last name.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "alternateSalutation": {
          "description": "Alternate salutation.",
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "emailAddress": {
          "description": "Email address of the Guest.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "firstName": {
          "description": "Reservation first name.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "guestNameId": {
          "description": "ID of the guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "guestTitle": {
          "description": "Guest title.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "lastName": {
          "description": "Reservation last name.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "phoneNumber": {
          "description": "Phone number of the Guest.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "guestHousekeepingServiceRequestType": {
      "description": "Possible values for the Guest Service Status.",
      "type": "string",
      "enum": [
        "DoNotDisturb",
        "MakeUpRoom",
        "NoStatusSelected"
      ]
    },
    "guestLastStayInfoType": {
      "description": "Contains last stay related details of the guest.",
      "type": "object",
      "properties": {
        "lastStayDate": {
          "description": "Guest's last stay date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastStayRate": {
          "description": "The Rate amount of the guest's last stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "lastStayRoom": {
          "description": "Room Number where the guest stayed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "totalStay": {
          "description": "The total number of previous stay of the guest.",
          "type": "integer"
        }
      }
    },
    "guestMessageType": {
      "description": "Holds the Message information for a Reservation",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "delivery": {
          "description": "Holds the Delivery Method Information",
          "$ref": "#/definitions/messageDeliveryType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "message": {
          "description": "Holds the Message Information",
          "$ref": "#/definitions/messageType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "guestMessages": {
      "description": "Response object to the request to retrieve Guest Messages for a Reservation.",
      "type": "object",
      "properties": {
        "guestMessages": {
          "description": "List of Guest Messages in for the requested Reservation. Refer to Generic common types document.",
          "$ref": "#/definitions/resvGuestMessagesType"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "guestMessagesDetails": {
      "description": "Response object to the request to create Guest Messages for a Reservation.",
      "type": "object",
      "properties": {
        "guestMessages": {
          "description": "List of Guest Messages updated. Refer to Generic common types document.",
          "$ref": "#/definitions/resvGuestMessagesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "guestMessagesType": {
      "description": "Holds the Message Information",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/guestMessageType"
      }
    },
    "historyListType": {
      "description": "A collection of reservation history details attached to Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "hotelInterfaceStatusType": {
      "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
      "type": "string",
      "enum": [
        "Stopped",
        "Running",
        "Waiting",
        "StopInitiated",
        "StartInitiated",
        "RebootInitiated",
        "Other"
      ]
    },
    "hotelInterfaceType": {
      "type": "object",
      "properties": {
        "activeFlag": {
          "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "interfaceName": {
          "description": "Name of the Hotel Interface",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "interfaceType": {
          "description": "Three letter code for each interface that identifies the interface.",
          "$ref": "#/definitions/hotelInterfaceTypeType"
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "machineName": {
          "description": "Unique machine name of the running IFC.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "status": {
          "description": "The current status of the IFC.",
          "$ref": "#/definitions/hotelInterfaceStatusType"
        }
      }
    },
    "hotelInterfaceTypeType": {
      "description": "XML Posting Interface",
      "type": "string",
      "enum": [
        "Bms",
        "Cas",
        "Ccw",
        "Dls",
        "Eft",
        "Exp",
        "Mak",
        "Mbs",
        "Msc",
        "Pbx",
        "Pos",
        "Svs",
        "Tik",
        "Vid",
        "Vms",
        "Www",
        "Xml"
      ]
    },
    "hotelReservationInstructionType": {
      "description": "The Reservation class contains the current reservation being created or altered.",
      "type": "object",
      "properties": {
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "accessRestrictionMessage": {
          "description": "Configurable Access Restriction Message for Excluded Block or Rate Code.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "additionalGuestInfo": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "$ref": "#/definitions/resGuestAdditionalInfoType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "alerts": {
          "description": "List of reservation alerts.",
          "$ref": "#/definitions/alertsType"
        },
        "allowAutoCheckin": {
          "description": "Flag to allow auto checkin",
          "type": "boolean"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "allowPreRegistration": {
          "description": "Flag containing true or false value for reservation to be eligible for prior check in by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile check in yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowedActions": {
          "description": "Collection of allowed actions for the reservation.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "associatedReservations": {
          "description": "Information regarding associated reservations.",
          "$ref": "#/definitions/associatedResType"
        },
        "attachments": {
          "description": "Collection of attachments available for that reservation",
          "$ref": "#/definitions/attachmentsType"
        },
        "autoBorrowFromHouse": {
          "description": "This flag will force to borrow from house if borrow required for number of rooms requested, this will only applicable when reservation is attached to a Block.",
          "type": "boolean"
        },
        "callHistory": {
          "description": "List of reservation calls.",
          "$ref": "#/definitions/callHistoryType"
        },
        "cancellation": {
          "description": "Information regarding why reservation has been/was cancelled. This could hold information as history even if reservation is no more in in Cancelled status.",
          "type": "object",
          "properties": {
            "cancellationNo": {
              "description": "Cancellation Number given when reservation was last cancelled.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "code": {
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "description": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          }
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "catering": {
          "description": "Catering event information if reservation is associated with the catering event.",
          "$ref": "#/definitions/cateringResInfoType"
        },
        "changeInstrunctions": {
          "description": "Collection of instructions for changing the reservation.",
          "$ref": "#/definitions/changeInstructionType"
        },
        "chargeCardNumber": {
          "description": "This attribute represents Hotel charge card number. This number is generated automatically in OPERA when a reservation is created in OPERA. It is part of a functionality that provide the guest with the convenience of placing all their charges directly on their reservation folio.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "comments": {
          "description": "List of Notes for the Guest related to the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "compAuthorizer": {
          "description": "Reservation Comp Authorizer.",
          "$ref": "#/definitions/compAuthorizerInfoType"
        },
        "computedReservationStatus": {
          "description": "Indicates the Computed status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "confirmationLetters": {
          "description": "List of reservation confirmation letters.",
          "$ref": "#/definitions/confirmationsType"
        },
        "createBusinessDate": {
          "description": "Business Date when the reservation was created.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "customChargeExemptionDetails": {
          "description": "List of Custom Charge Exemptions attached to the reservation.",
          "$ref": "#/definitions/customChargeExemptionsType"
        },
        "customNameValueDetail": {
          "description": "List of Custom Name Value Information attached to the reservation.",
          "$ref": "#/definitions/nameValueDetailType"
        },
        "customReference": {
          "description": "Custom Reference to identify reservation.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "displayColor": {
          "description": "The color to display this reservation on room grid displays.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "eCertificates": {
          "description": "List of ECertificates attached to the reservation.",
          "$ref": "#/definitions/reservationECertificatesType"
        },
        "eCoupons": {
          "description": "List of eCoupons.",
          "$ref": "#/definitions/eCouponsType"
        },
        "extSystemSync": {
          "type": "boolean"
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "fixedCharges": {
          "description": "List of reservation fixed charges.",
          "$ref": "#/definitions/fixedChargesType"
        },
        "folios": {
          "description": "This element returns any automatically generated folios during check-in, based on the Fetch Instruction \"AutoFolios\". When the parameter \"Auto Generate Credit Bill for Deposit upon Check In\" is enabled, during check-in credit bills are automatically generated for the deposits. The generated credit bill details are returned so that user can preview/print the folio. For some countries like Portugal, it is mandatory to print the folio and hence this information is needed",
          "$ref": "#/definitions/foliosShortInfoType"
        },
        "guestComments": {
          "description": "List of Notes for the Guest related to the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "guestMemberships": {
          "description": "List of Memberships for the Guest related to the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/membershipType"
          }
        },
        "guestMessages": {
          "description": "List of Messages.",
          "$ref": "#/definitions/guestMessagesType"
        },
        "hasOpenFolio": {
          "type": "boolean"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "housekeeping": {
          "description": "Holds rooms housekeeping information.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "inventoryItems": {
          "description": "A collection of inventory items attached to a reservation.",
          "$ref": "#/definitions/resInventoryItemsType"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "linkedReservation": {
          "description": "Reservations related to the current Reservation.",
          "$ref": "#/definitions/linkedReservationsInfoType"
        },
        "locators": {
          "description": "Collection of Locators available for that reservation",
          "$ref": "#/definitions/reservationLocatorsType"
        },
        "lockHandle": {
          "description": "An id representing the record lock for this reservation. When passed, update operation will verify that this lock is still valid.",
          "type": "number"
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this reservation as recently accessed.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Flag containing true or false value to determine if the guest has opted for communications pertaining to this reservation.Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is marked for communication. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "overrideBlockRestriction": {
          "type": "boolean"
        },
        "overrideExternalChecks": {
          "description": "Forcefully override the create/update action on the Reservation. For real-time CRS interfaces, this element is used as force selling indicator in case of Create or Update Reservation",
          "type": "boolean"
        },
        "overrideInstructions": {
          "description": "List of overrides done for the reservation.",
          "$ref": "#/definitions/overrideInstructionsType"
        },
        "overrideInventoryCheck": {
          "description": "Indicates to Override the Room Inventory Check if applicable.",
          "type": "boolean"
        },
        "overrideOutOfServiceCheck": {
          "description": "Indicates to Override the Room Out Of Service Check if applicable.",
          "type": "boolean"
        },
        "overrideRoomOwnership": {
          "description": "Override the room ownership of the room currently assigned to this reservation. This is applicable when Room Rotation OPERA Control is active.",
          "type": "boolean",
          "default": true
        },
        "overrideRotationRoom": {
          "description": "Override the rotation room that is next in the sequence with the room currently assigned to this reservation. This is applicable when Room Rotation OPERA Control is active.",
          "type": "boolean",
          "default": true
        },
        "party": {
          "description": "Party/PartyCode when reservation is part of a party(a small group).",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "preRegistered": {
          "description": "Is the reservation pre-registered.",
          "type": "boolean"
        },
        "preferenceCollection": {
          "description": "Collection of reservation preferences.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceTypeType"
          }
        },
        "prepaidCards": {
          "description": "Collection of Prepaid Cards available for that reservation",
          "$ref": "#/definitions/prepaidCardsType"
        },
        "primaryEnrollmentChain": {
          "description": "Name of the Chain for the primary enrollment",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "primaryEnrollmentResort": {
          "description": "Name Of the Resort/Hotel for the primary enrollment",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "printRate": {
          "description": "Indicates whether to show the rate or not on a printed document which includes the rate.",
          "type": "boolean"
        },
        "profileAwards": {
          "description": "Collection of profile awards available for that reservation",
          "$ref": "#/definitions/awardsType"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "reinstateDate": {
          "description": "Business Date when the reservation was last reinstated.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationActivities": {
          "description": "Collection of Reservation Activities available for that reservation",
          "$ref": "#/definitions/activityLookUpList"
        },
        "reservationAwards": {
          "description": "Collection of Awards,Certificates for the guest profile.",
          "$ref": "#/definitions/awardsType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "reservationGuests": {
          "description": "Collection of guests associated with the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/resGuestType"
          }
        },
        "reservationIdList": {
          "description": "Used to provide PMS and/or CRS identifiers.",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "reservationMemberships": {
          "description": "List of reservation memberships.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationMembershipType"
          }
        },
        "reservationPackages": {
          "description": "A Service object represents a non-room product provided to guests. Service products may have associated inventory and charges.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationPackageType"
          }
        },
        "reservationPaymentMethods": {
          "description": "A collection of Payment Method objects.",
          "$ref": "#/definitions/reservationPaymentMethodsType"
        },
        "reservationPolicies": {
          "description": "A collection of Cancellation Penalties objects.",
          "$ref": "#/definitions/reservationPoliciesType"
        },
        "reservationProfiles": {
          "description": "Collection of guests associated with the reservation.",
          "type": "object",
          "properties": {
            "commissionPayoutTo": {
              "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
              "$ref": "#/definitions/commissionPayoutToType"
            },
            "reservationProfile": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationProfileType"
              }
            }
          }
        },
        "reservationStatus": {
          "description": "Indicates the Actual status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "responseInstructions": {
          "description": "Collection of instructions to be returned as a set of reservation information.",
          "type": "object",
          "properties": {
            "confirmationOnly": {
              "description": "If this value is set to TRUE, then the operation will only return for a Success or Failed flag.",
              "type": "boolean"
            },
            "responseInstruction": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationInstructionType"
              }
            }
          }
        },
        "roomStay": {
          "description": "Room stays information.",
          "$ref": "#/definitions/roomStayType"
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "routingInstructions": {
          "description": "Set of Routing Instructions.",
          "$ref": "#/definitions/routingInfoListType"
        },
        "scheduledActivities": {
          "description": "Collection of Scheduled Activities available for that reservation",
          "$ref": "#/definitions/activityLookUpList"
        },
        "serviceRequests": {
          "description": "Collection of Service Requests available for that reservation",
          "$ref": "#/definitions/serviceRequests"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "shares": {
          "description": "Collection of share reservation available for that reservation",
          "$ref": "#/definitions/hotelReservationsType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "statisticalClassification": {
          "description": "Catering event information if reservation is associated with the catering event.",
          "$ref": "#/definitions/resStatClassificationType"
        },
        "tickets": {
          "description": "List of Reservation Tickets.",
          "$ref": "#/definitions/ticketsType"
        },
        "traces": {
          "description": "List of reservation Traces.",
          "$ref": "#/definitions/hotelReservationTracesType"
        },
        "trackItItems": {
          "description": "Collection of TrackIt Items available for that reservation",
          "$ref": "#/definitions/trackItItemsType"
        },
        "transactionDiversions": {
          "description": "List of transaction diversions attached to the reservation.",
          "type": "object",
          "properties": {
            "actionType": {
              "type": "string",
              "maxLength": 2000
            },
            "transactionDiversions": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationTransactionDiversionsType"
              }
            }
          }
        },
        "upgradeEligible": {
          "description": "Indicates whether the reservation is eligible for upgrade.",
          "type": "boolean"
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is no more in Waitlist status.",
          "$ref": "#/definitions/waitlistResType"
        },
        "walkIn": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "webRegistrationCards": {
          "description": "Collection of Web Registration Cards available for that reservation",
          "$ref": "#/definitions/attachmentsType"
        }
      }
    },
    "hotelReservationTraceType": {
      "description": "Extended Trace object to hold information for a reservation.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "departmentId": {
          "description": "Indicates the Department code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationId": {
          "description": "Reservation ID of the reservation for which the traces are to be retrieved.",
          "$ref": "#/definitions/reservationId"
        },
        "resolveInfo": {
          "description": "Information regarding the status of the trace",
          "$ref": "#/definitions/traceResolveType"
        },
        "timeInfo": {
          "description": "Date of the trace.",
          "$ref": "#/definitions/traceTimeInfoType"
        },
        "traceText": {
          "description": "The information this trace contains.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "hotelReservationTracesType": {
      "description": "List of Reservation Traces.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelReservationTraceType"
      }
    },
    "hotelReservationType": {
      "description": "The Reservation class contains the current reservation being created or altered.",
      "type": "object",
      "properties": {
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "accessRestrictionMessage": {
          "description": "Configurable Access Restriction Message for Excluded Block or Rate Code.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "additionalGuestInfo": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "$ref": "#/definitions/resGuestAdditionalInfoType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "alerts": {
          "description": "List of reservation alerts.",
          "$ref": "#/definitions/alertsType"
        },
        "allowAutoCheckin": {
          "description": "Flag to allow auto checkin",
          "type": "boolean"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "allowPreRegistration": {
          "description": "Flag containing true or false value for reservation to be eligible for prior check in by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile check in yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowedActions": {
          "description": "Collection of allowed actions for the reservation.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "attachments": {
          "description": "Collection of attachments available for that reservation",
          "$ref": "#/definitions/attachmentsType"
        },
        "autoBorrowFromHouse": {
          "description": "This flag will force to borrow from house if borrow required for number of rooms requested, this will only applicable when reservation is attached to a Block.",
          "type": "boolean"
        },
        "callHistory": {
          "description": "List of reservation calls.",
          "$ref": "#/definitions/callHistoryType"
        },
        "cancellation": {
          "description": "Information regarding why reservation has been/was cancelled. This could hold information as history even if reservation is no more in in Cancelled status.",
          "type": "object",
          "properties": {
            "cancellationNo": {
              "description": "Cancellation Number given when reservation was last cancelled.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "code": {
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "description": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          }
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "catering": {
          "description": "Catering event information if reservation is associated with the catering event.",
          "$ref": "#/definitions/cateringResInfoType"
        },
        "chargeCardNumber": {
          "description": "This attribute represents Hotel charge card number. This number is generated automatically in OPERA when a reservation is created in OPERA. It is part of a functionality that provide the guest with the convenience of placing all their charges directly on their reservation folio.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "comments": {
          "description": "List of Notes for the Guest related to the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "compAuthorizer": {
          "description": "Reservation Comp Authorizer.",
          "$ref": "#/definitions/compAuthorizerInfoType"
        },
        "computedReservationStatus": {
          "description": "Indicates the Computed status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "confirmationLetters": {
          "description": "List of reservation confirmation letters.",
          "$ref": "#/definitions/confirmationsType"
        },
        "createBusinessDate": {
          "description": "Business Date when the reservation was created.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "customChargeExemptionDetails": {
          "description": "List of Custom Charge Exemptions attached to the reservation.",
          "$ref": "#/definitions/customChargeExemptionsType"
        },
        "customNameValueDetail": {
          "description": "List of Custom Name Value Information attached to the reservation.",
          "$ref": "#/definitions/nameValueDetailType"
        },
        "customReference": {
          "description": "Custom Reference to identify reservation.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "displayColor": {
          "description": "The color to display this reservation on room grid displays.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "displayColorDetails": {
          "description": "Information of reservation display color, determined based on OPERA parameter RESERVATION_COLOR_DEFINITION ",
          "$ref": "#/definitions/reservationDisplayColorInfoType"
        },
        "eCertificates": {
          "description": "List of ECertificates attached to the reservation.",
          "$ref": "#/definitions/reservationECertificatesType"
        },
        "eCoupons": {
          "description": "List of eCoupons.",
          "$ref": "#/definitions/eCouponsType"
        },
        "extSystemSync": {
          "type": "boolean"
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "fixedCharges": {
          "description": "List of reservation fixed charges.",
          "$ref": "#/definitions/fixedChargesType"
        },
        "folios": {
          "description": "This element returns any automatically generated folios during check-in, based on the Fetch Instruction \"AutoFolios\". When the parameter \"Auto Generate Credit Bill for Deposit upon Check In\" is enabled, during check-in credit bills are automatically generated for the deposits. The generated credit bill details are returned so that user can preview/print the folio. For some countries like Portugal, it is mandatory to print the folio and hence this information is needed",
          "$ref": "#/definitions/foliosShortInfoType"
        },
        "guestComments": {
          "description": "List of Notes for the Guest related to the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "guestMemberships": {
          "description": "List of Memberships for the Guest related to the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/membershipType"
          }
        },
        "guestMessages": {
          "description": "List of Messages.",
          "$ref": "#/definitions/guestMessagesType"
        },
        "hasOpenFolio": {
          "type": "boolean"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "housekeeping": {
          "description": "Holds rooms housekeeping information.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "inventoryItems": {
          "description": "A collection of inventory items attached to a reservation.",
          "$ref": "#/definitions/resInventoryItemsType"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "linkedReservation": {
          "description": "Reservations related to the current Reservation.",
          "$ref": "#/definitions/linkedReservationsInfoType"
        },
        "locators": {
          "description": "Collection of Locators available for that reservation",
          "$ref": "#/definitions/reservationLocatorsType"
        },
        "lockHandle": {
          "description": "An id representing the record lock for this reservation. When passed, update operation will verify that this lock is still valid.",
          "type": "number"
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this reservation as recently accessed.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Flag containing true or false value to determine if the guest has opted for communications pertaining to this reservation.Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is marked for communication. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "overrideBlockRestriction": {
          "type": "boolean"
        },
        "overrideExternalChecks": {
          "description": "Forcefully override the create/update action on the Reservation. For real-time CRS interfaces, this element is used as force selling indicator in case of Create or Update Reservation",
          "type": "boolean"
        },
        "overrideInstructions": {
          "description": "List of overrides done for the reservation.",
          "$ref": "#/definitions/overrideInstructionsType"
        },
        "overrideInventoryCheck": {
          "description": "Indicates to Override the Room Inventory Check if applicable.",
          "type": "boolean"
        },
        "overrideOutOfServiceCheck": {
          "description": "Indicates to Override the Room Out Of Service Check if applicable.",
          "type": "boolean"
        },
        "overrideRoomOwnership": {
          "description": "Override the room ownership of the room currently assigned to this reservation. This is applicable when Room Rotation OPERA Control is active.",
          "type": "boolean",
          "default": true
        },
        "overrideRotationRoom": {
          "description": "Override the rotation room that is next in the sequence with the room currently assigned to this reservation. This is applicable when Room Rotation OPERA Control is active.",
          "type": "boolean",
          "default": true
        },
        "party": {
          "description": "Party/PartyCode when reservation is part of a party(a small group).",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "preRegistered": {
          "description": "Is the reservation pre-registered.",
          "type": "boolean"
        },
        "preferenceCollection": {
          "description": "Collection of reservation preferences.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceTypeType"
          }
        },
        "prepaidCards": {
          "description": "Collection of Prepaid Cards available for that reservation",
          "$ref": "#/definitions/prepaidCardsType"
        },
        "primaryEnrollmentChain": {
          "description": "Name of the Chain for the primary enrollment",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "primaryEnrollmentResort": {
          "description": "Name Of the Resort/Hotel for the primary enrollment",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "printRate": {
          "description": "Indicates whether to show the rate or not on a printed document which includes the rate.",
          "type": "boolean"
        },
        "profileAwards": {
          "description": "Collection of profile awards available for that reservation",
          "$ref": "#/definitions/awardsType"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "reinstateDate": {
          "description": "Business Date when the reservation was last reinstated.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationActivities": {
          "description": "Collection of Reservation Activities available for that reservation",
          "$ref": "#/definitions/activityLookUpList"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "reservationGuests": {
          "description": "Collection of guests associated with the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/resGuestType"
          }
        },
        "reservationIdList": {
          "description": "Used to provide PMS and/or CRS identifiers.",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "reservationMembershipAwards": {
          "description": "Collection of membership awards attached to a reservation",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationMembershipAwardType"
          }
        },
        "reservationMemberships": {
          "description": "List of reservation memberships.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationMembershipType"
          }
        },
        "reservationPackages": {
          "description": "A Service object represents a non-room product provided to guests. Service products may have associated inventory and charges.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationPackageType"
          }
        },
        "reservationPaymentMethods": {
          "description": "A collection of Payment Method objects.",
          "$ref": "#/definitions/reservationPaymentMethodsType"
        },
        "reservationPolicies": {
          "description": "A collection of Cancellation Penalties objects.",
          "$ref": "#/definitions/reservationPoliciesType"
        },
        "reservationProfiles": {
          "description": "Collection of guests associated with the reservation.",
          "type": "object",
          "properties": {
            "commissionPayoutTo": {
              "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
              "$ref": "#/definitions/commissionPayoutToType"
            },
            "reservationProfile": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationProfileType"
              }
            }
          }
        },
        "reservationStatus": {
          "description": "Indicates the Actual status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "roomStay": {
          "description": "Room stays information.",
          "$ref": "#/definitions/roomStayType"
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "routingInstructions": {
          "description": "Set of Routing Instructions.",
          "$ref": "#/definitions/routingInfoListType"
        },
        "scheduledActivities": {
          "description": "Collection of Scheduled Activities available for that reservation",
          "$ref": "#/definitions/activityLookUpList"
        },
        "serviceRequests": {
          "description": "Collection of Service Requests available for that reservation",
          "$ref": "#/definitions/serviceRequests"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "tickets": {
          "description": "List of Reservation Tickets.",
          "$ref": "#/definitions/ticketsType"
        },
        "traces": {
          "description": "List of reservation Traces.",
          "$ref": "#/definitions/hotelReservationTracesType"
        },
        "trackItItems": {
          "description": "Collection of TrackIt Items available for that reservation",
          "$ref": "#/definitions/trackItItemsType"
        },
        "transactionDiversions": {
          "description": "List of transaction diversions attached to the reservation.",
          "type": "object",
          "properties": {
            "actionType": {
              "type": "string",
              "maxLength": 2000
            },
            "transactionDiversions": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationTransactionDiversionsType"
              }
            }
          }
        },
        "upgradeEligible": {
          "description": "Indicates whether the reservation is eligible for upgrade.",
          "type": "boolean"
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is no more in Waitlist status.",
          "$ref": "#/definitions/waitlistResType"
        },
        "walkIn": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "webRegistrationCards": {
          "description": "Collection of Web Registration Cards available for that reservation",
          "$ref": "#/definitions/attachmentsType"
        }
      }
    },
    "hotelReservationsType": {
      "description": "A collection of Reservation objects and Unique IDs of Reservation.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservation": {
          "description": "A collection of Reservations.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelReservationType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "housekeepingRoomStatusType": {
      "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
      "type": "string",
      "enum": [
        "Clean",
        "Dirty",
        "Pickup",
        "Inspected",
        "OutOfOrder",
        "OutOfService"
      ]
    },
    "identificationInfoType": {
      "description": "Information on the identification of the customer.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "identification": {
          "description": "Detailed information on the identification of the customer.",
          "$ref": "#/definitions/identificationType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "identificationType": {
      "description": "Identification information of the customer.",
      "type": "object",
      "properties": {
        "expirationDate": {
          "description": "Expiration date of Identification.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "idNumber": {
          "description": "Identification Number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idNumberMasked": {
          "description": "Masked Identification Number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idType": {
          "description": "Identification Type. Eg Passport, Driving License etc.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "issuedCountry": {
          "description": "The country where Identification was issued.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "issuedDate": {
          "description": "Issued date of Identification.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "issuedPlace": {
          "description": "The place where Identification was issued.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "registeredProperty": {
          "description": "Property where the identification belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "imageSetType": {
      "description": "Represents on image set record.",
      "type": "object",
      "properties": {
        "description": {
          "description": "The image set description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "The image set hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "imageSet": {
          "description": "The image set name.",
          "type": "string",
          "maxLength": 800,
          "minLength": 0
        },
        "imageStyle": {
          "description": "The image set enumerated style.",
          "$ref": "#/definitions/imageStyleType"
        },
        "imageURL": {
          "description": "The image set URL.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        }
      }
    },
    "imageStyleType": {
      "description": "An enumeration of image styles.",
      "type": "string",
      "enum": [
        "Full",
        "Thumbnail",
        "Icon",
        "Square",
        "Banner",
        "Button",
        "Lowres",
        "Highres"
      ]
    },
    "indicatorType": {
      "description": "Lamp indicator Type.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        },
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "indicatorsType": {
      "description": "Collection of lamp indicators.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "instanceLink": {
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "type": "object",
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ],
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "interfaceRightsStatusType": {
      "type": "object",
      "properties": {
        "category": {
          "description": "Category code of this interface right.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "description": {
          "description": "User defined description for an Interface Right.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "right": {
          "description": "Internal code for each allowed right of a Hotel Interface record.",
          "type": "integer"
        },
        "statusCode": {
          "description": "User defined code for an Interface Right.",
          "type": "string",
          "maxLength": 5,
          "minLength": 0
        }
      }
    },
    "inventoryItems": {
      "description": "Return object to the request for information regarding inventory Items reserved for a reservation.",
      "type": "object",
      "properties": {
        "inventoryItems": {
          "description": "Collection of inventory items attached to a reservation.",
          "$ref": "#/definitions/resInventoryItemsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "itemHoldIDListType": {
      "description": "ID of an Hold Item",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "number"
      }
    },
    "itemInfoType": {
      "description": "Basic information regarding an Item.",
      "type": "object",
      "properties": {
        "availabilityPeriod": {
          "description": "Defines a Time period when the item is available.",
          "$ref": "#/definitions/timeWindowType"
        },
        "code": {
          "description": "Item Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "defaultDuration": {
          "description": "Define the default duration in days when booking the item.",
          "type": "integer"
        },
        "description": {
          "description": "Detail description of an item.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fixedCharge": {
          "description": "If true indicates that item has fixed charge when it is attached to a reservation.",
          "type": "boolean"
        },
        "itemHoldId": {
          "description": "ID reference for the hold Item",
          "type": "number"
        },
        "itemPool": {
          "description": "Indicates if it is an item pool. Not applicable for Item within the Item Pool.",
          "type": "boolean"
        },
        "name": {
          "description": "Name of an item.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "outsideStay": {
          "description": "If true indicates that item could be held outside of the reservation stay days.",
          "type": "boolean"
        },
        "quantity": {
          "description": "Quantity of hold Item",
          "type": "integer"
        },
        "requiredForBooking": {
          "description": "If true indicates that item is required for the reservation.",
          "type": "boolean"
        },
        "sellInEvent": {
          "description": "If true indicates that item can be sold in event.",
          "type": "boolean"
        },
        "sellInReservation": {
          "description": "If true indicates that item can be sold in reservation.",
          "type": "boolean"
        },
        "sellSeparate": {
          "description": "If true indicates that item is allowed to sell separately.",
          "type": "boolean"
        },
        "timeSpan": {
          "description": "Date Range to get the inventories of the items.",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "languageType": {
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "lastStayInfoType": {
      "description": "Contains last stay related details for the profile",
      "type": "object",
      "properties": {
        "lastRoom": {
          "description": "Used to hold last room information for the profile.",
          "type": "string"
        },
        "totalStay": {
          "description": "The total number of previous stay of the profile.",
          "type": "integer"
        }
      }
    },
    "linkReservationInstructionType": {
      "description": "Instructions for a linked reservation.",
      "type": "object",
      "properties": {
        "link": {
          "type": "boolean"
        },
        "linkFromReservationId": {
          "description": "Child reservation id where reservations to be linked.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "linkToReservationId": {
          "description": "Parent reservation id where reservations to be linked.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "linkReservationsCriteria": {
      "description": "Request to link a list of reservations with another existing reservation.",
      "type": "object",
      "properties": {
        "linkToReservationId": {
          "description": "Unique identifier of the reservation to be linked with.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationIdList": {
          "description": "Collection of unique identifiers of the reservations to be linked with another reservation.",
          "$ref": "#/definitions/reservationIdList"
        },
        "responseInstruction": {
          "description": "Response instruction for the operation.",
          "type": "object",
          "properties": {
            "fetchLinkedReservations": {
              "description": "If set to TRUE, response will have the list of linked reservations.",
              "type": "boolean"
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "linkedHotelReservationType": {
      "description": "The Reservation class contains the current reservation being created or altered.",
      "type": "object",
      "properties": {
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "accessRestrictionMessage": {
          "description": "Configurable Access Restriction Message for Excluded Block or Rate Code.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "additionalGuestInfo": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "$ref": "#/definitions/resGuestAdditionalInfoType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "alerts": {
          "description": "List of reservation alerts.",
          "$ref": "#/definitions/alertsType"
        },
        "allowAutoCheckin": {
          "description": "Flag to allow auto checkin",
          "type": "boolean"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "allowPreRegistration": {
          "description": "Flag containing true or false value for reservation to be eligible for prior check in by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile check in yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowedActions": {
          "description": "Collection of allowed actions for the reservation.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "associatedReservations": {
          "description": "Information regarding associated reservations.",
          "$ref": "#/definitions/associatedResType"
        },
        "attachments": {
          "description": "Collection of attachments available for that reservation",
          "$ref": "#/definitions/attachmentsType"
        },
        "autoBorrowFromHouse": {
          "description": "This flag will force to borrow from house if borrow required for number of rooms requested, this will only applicable when reservation is attached to a Block.",
          "type": "boolean"
        },
        "callHistory": {
          "description": "List of reservation calls.",
          "$ref": "#/definitions/callHistoryType"
        },
        "cancellation": {
          "description": "Information regarding why reservation has been/was cancelled. This could hold information as history even if reservation is no more in in Cancelled status.",
          "type": "object",
          "properties": {
            "cancellationNo": {
              "description": "Cancellation Number given when reservation was last cancelled.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "code": {
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "description": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          }
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "catering": {
          "description": "Catering event information if reservation is associated with the catering event.",
          "$ref": "#/definitions/cateringResInfoType"
        },
        "chargeCardNumber": {
          "description": "This attribute represents Hotel charge card number. This number is generated automatically in OPERA when a reservation is created in OPERA. It is part of a functionality that provide the guest with the convenience of placing all their charges directly on their reservation folio.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "comments": {
          "description": "List of Notes for the Guest related to the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "compAuthorizer": {
          "description": "Reservation Comp Authorizer.",
          "$ref": "#/definitions/compAuthorizerInfoType"
        },
        "computedReservationStatus": {
          "description": "Indicates the Computed status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "confirmationLetters": {
          "description": "List of reservation confirmation letters.",
          "$ref": "#/definitions/confirmationsType"
        },
        "createBusinessDate": {
          "description": "Business Date when the reservation was created.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "customChargeExemptionDetails": {
          "description": "List of Custom Charge Exemptions attached to the reservation.",
          "$ref": "#/definitions/customChargeExemptionsType"
        },
        "customNameValueDetail": {
          "description": "List of Custom Name Value Information attached to the reservation.",
          "$ref": "#/definitions/nameValueDetailType"
        },
        "customReference": {
          "description": "Custom Reference to identify reservation.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "displayColor": {
          "description": "The color to display this reservation on room grid displays.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "eCertificates": {
          "description": "List of ECertificates attached to the reservation.",
          "$ref": "#/definitions/reservationECertificatesType"
        },
        "eCoupons": {
          "description": "List of eCoupons.",
          "$ref": "#/definitions/eCouponsType"
        },
        "extSystemSync": {
          "type": "boolean"
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "fixedCharges": {
          "description": "List of reservation fixed charges.",
          "$ref": "#/definitions/fixedChargesType"
        },
        "folios": {
          "description": "This element returns any automatically generated folios during check-in, based on the Fetch Instruction \"AutoFolios\". When the parameter \"Auto Generate Credit Bill for Deposit upon Check In\" is enabled, during check-in credit bills are automatically generated for the deposits. The generated credit bill details are returned so that user can preview/print the folio. For some countries like Portugal, it is mandatory to print the folio and hence this information is needed",
          "$ref": "#/definitions/foliosShortInfoType"
        },
        "guestComments": {
          "description": "List of Notes for the Guest related to the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "guestMemberships": {
          "description": "List of Memberships for the Guest related to the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/membershipType"
          }
        },
        "guestMessages": {
          "description": "List of Messages.",
          "$ref": "#/definitions/guestMessagesType"
        },
        "hasOpenFolio": {
          "type": "boolean"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "housekeeping": {
          "description": "Holds rooms housekeeping information.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "inventoryItems": {
          "description": "A collection of inventory items attached to a reservation.",
          "$ref": "#/definitions/resInventoryItemsType"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "linkReservationType": {
          "description": "Linked reservation type.",
          "$ref": "#/definitions/linkedReservationType"
        },
        "linkedReservation": {
          "description": "Reservations related to the current Reservation.",
          "$ref": "#/definitions/linkedReservationsInfoType"
        },
        "locators": {
          "description": "Collection of Locators available for that reservation",
          "$ref": "#/definitions/reservationLocatorsType"
        },
        "lockHandle": {
          "description": "An id representing the record lock for this reservation. When passed, update operation will verify that this lock is still valid.",
          "type": "number"
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this reservation as recently accessed.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Flag containing true or false value to determine if the guest has opted for communications pertaining to this reservation.Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is marked for communication. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "overrideBlockRestriction": {
          "type": "boolean"
        },
        "overrideExternalChecks": {
          "description": "Forcefully override the create/update action on the Reservation. For real-time CRS interfaces, this element is used as force selling indicator in case of Create or Update Reservation",
          "type": "boolean"
        },
        "overrideInstructions": {
          "description": "List of overrides done for the reservation.",
          "$ref": "#/definitions/overrideInstructionsType"
        },
        "overrideInventoryCheck": {
          "description": "Indicates to Override the Room Inventory Check if applicable.",
          "type": "boolean"
        },
        "overrideOutOfServiceCheck": {
          "description": "Indicates to Override the Room Out Of Service Check if applicable.",
          "type": "boolean"
        },
        "party": {
          "description": "Party/PartyCode when reservation is part of a party(a small group).",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "preRegistered": {
          "description": "Is the reservation pre-registered.",
          "type": "boolean"
        },
        "preferenceCollection": {
          "description": "Collection of reservation preferences.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceTypeType"
          }
        },
        "prepaidCards": {
          "description": "Collection of Prepaid Cards available for that reservation",
          "$ref": "#/definitions/prepaidCardsType"
        },
        "primaryEnrollmentChain": {
          "description": "Name of the Chain for the primary enrollment",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "primaryEnrollmentResort": {
          "description": "Name Of the Resort/Hotel for the primary enrollment",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "printRate": {
          "description": "Indicates whether to show the rate or not on a printed document which includes the rate.",
          "type": "boolean"
        },
        "profileAwards": {
          "description": "Collection of profile awards available for that reservation",
          "$ref": "#/definitions/awardsType"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "reinstateDate": {
          "description": "Business Date when the reservation was last reinstated.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationActivities": {
          "description": "Collection of Reservation Activities available for that reservation",
          "$ref": "#/definitions/activityLookUpList"
        },
        "reservationAwards": {
          "description": "Collection of Awards,Certificates for the guest profile.",
          "$ref": "#/definitions/awardsType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "reservationGuests": {
          "description": "Collection of guests associated with the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/resGuestType"
          }
        },
        "reservationIdList": {
          "description": "Used to provide PMS and/or CRS identifiers.",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "reservationMemberships": {
          "description": "List of reservation memberships.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationMembershipType"
          }
        },
        "reservationPackages": {
          "description": "A Service object represents a non-room product provided to guests. Service products may have associated inventory and charges.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationPackageType"
          }
        },
        "reservationPaymentMethods": {
          "description": "A collection of Payment Method objects.",
          "$ref": "#/definitions/reservationPaymentMethodsType"
        },
        "reservationPolicies": {
          "description": "A collection of Cancellation Penalties objects.",
          "$ref": "#/definitions/reservationPoliciesType"
        },
        "reservationProfiles": {
          "description": "Collection of guests associated with the reservation.",
          "type": "object",
          "properties": {
            "commissionPayoutTo": {
              "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
              "$ref": "#/definitions/commissionPayoutToType"
            },
            "reservationProfile": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationProfileType"
              }
            }
          }
        },
        "reservationStatus": {
          "description": "Indicates the Actual status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "roomStay": {
          "description": "Room stays information.",
          "$ref": "#/definitions/roomStayType"
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "routingInstructions": {
          "description": "Set of Routing Instructions.",
          "$ref": "#/definitions/routingInfoListType"
        },
        "scheduledActivities": {
          "description": "Collection of Scheduled Activities available for that reservation",
          "$ref": "#/definitions/activityLookUpList"
        },
        "serviceRequests": {
          "description": "Collection of Service Requests available for that reservation",
          "$ref": "#/definitions/serviceRequests"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "shares": {
          "description": "Collection of share reservation available for that reservation",
          "$ref": "#/definitions/hotelReservationsType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "statisticalClassification": {
          "description": "Catering event information if reservation is associated with the catering event.",
          "$ref": "#/definitions/resStatClassificationType"
        },
        "tickets": {
          "description": "List of Reservation Tickets.",
          "$ref": "#/definitions/ticketsType"
        },
        "traces": {
          "description": "List of reservation Traces.",
          "$ref": "#/definitions/hotelReservationTracesType"
        },
        "trackItItems": {
          "description": "Collection of TrackIt Items available for that reservation",
          "$ref": "#/definitions/trackItItemsType"
        },
        "transactionDiversions": {
          "description": "List of transaction diversions attached to the reservation.",
          "type": "object",
          "properties": {
            "actionType": {
              "type": "string",
              "maxLength": 2000
            },
            "transactionDiversions": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationTransactionDiversionsType"
              }
            }
          }
        },
        "upgradeEligible": {
          "description": "Indicates whether the reservation is eligible for upgrade.",
          "type": "boolean"
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is no more in Waitlist status.",
          "$ref": "#/definitions/waitlistResType"
        },
        "walkIn": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "webRegistrationCards": {
          "description": "Collection of Web Registration Cards available for that reservation",
          "$ref": "#/definitions/attachmentsType"
        }
      }
    },
    "linkedHotelReservations": {
      "description": "Return object for retrieving linked reservations.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservations": {
          "description": "Collection of linked reservations fetched.",
          "$ref": "#/definitions/linkedHotelReservationsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "linkedHotelReservationsType": {
      "description": "A collection of Linked Reservation objects and Unique IDs of Reservation.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "linkedReservation": {
          "description": "A collection of Linked Reservations.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/linkedHotelReservationType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "linkedReservationInfoType": {
      "type": "object",
      "properties": {
        "allowedActions": {
          "description": "Collection of allowed actions for the linked reservation.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "displayColor": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "givenName": {
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "guarantee": {
          "$ref": "#/definitions/resGuaranteeType"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "linkReservationType": {
          "$ref": "#/definitions/linkedReservationType"
        },
        "rate": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "ratePlanCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationBlock": {
          "description": "Key information about the block for the linked reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "reservationIdList": {
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationStatus": {
          "description": "Indicates the Actual status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "room": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomNumberLocked": {
          "description": "This attribute is to verify if room number is locked for the reservation. When true the room number cannot be changed",
          "type": "boolean"
        },
        "roomType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "suppressRate": {
          "description": "This attribute checks if rate is suppressed or not in order to properly show strike through.",
          "type": "boolean"
        },
        "surname": {
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "title": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "linkedReservationType": {
      "description": "Enumeration of the different Linked Reservation Types.",
      "type": "string",
      "enum": [
        "Linked",
        "Shared",
        "Default"
      ]
    },
    "linkedReservationsInfo": {
      "type": "object",
      "properties": {
        "linkedReservationList": {
          "description": "Set of reservations linked to the requested Reservation.",
          "$ref": "#/definitions/linkedReservationsInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "linkedReservationsInfoType": {
      "description": "Linked Reservations.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "reservationInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/linkedReservationInfoType"
          }
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "marketingPolicyType": {
      "description": "Indicates the channel policy type like deposit,cancel etc.",
      "type": "string",
      "enum": [
        "Deposit",
        "Commission",
        "Cancel",
        "Guarantee",
        "General",
        "Penalty",
        "Tax",
        "Promotion"
      ]
    },
    "masterAccount": {
      "description": "Request for CreateMasterAccount operation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "masterAccount": {
          "description": "Details of the posting master reservation to be created.",
          "$ref": "#/definitions/masterAccountType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "masterAccountInfoType": {
      "type": "object"
    },
    "masterAccountSummary": {
      "description": "Response for ChangeMasterAccount operation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "masterAccount": {
          "description": "Summary information of the changed posting master reservation that can be used to identify it uniquely.",
          "$ref": "#/definitions/masterAccountSummaryType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "masterAccountSummaryType": {
      "description": "Minimal information of the posting master reservation that can be used to identify the reservation uniquely.",
      "type": "object",
      "properties": {
        "createBusinessDate": {
          "description": "Business Date when the reservation was created.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationIdList": {
          "description": "Indicates PMS and/or CRS identifiers of active and cancelled reservations.",
          "$ref": "#/definitions/reservationIdList"
        }
      }
    },
    "masterAccountType": {
      "description": "Details of the posting master reservation.",
      "type": "object",
      "properties": {
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "comments": {
          "description": "List of Notes for the Guest related to the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "customReference": {
          "description": "Custom Reference to identify reservation.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationBlock": {
          "description": "Information of the block associated with the reservation.",
          "type": "object",
          "properties": {
            "blockIdList": {
              "description": "Unique ID of the business block to which this reservation will be associated.",
              "$ref": "#/definitions/blockIdList"
            },
            "transactionCode": {
              "description": "Transaction code of the block.",
              "$ref": "#/definitions/codeListType"
            }
          }
        },
        "reservationGuest": {
          "description": "Guest associated with the reservation.",
          "$ref": "#/definitions/resGuestType"
        },
        "reservationIdList": {
          "description": "Indicates OPERA and/or external identifiers.",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationPaymentMethods": {
          "description": "A collection of Payment Method objects.",
          "$ref": "#/definitions/reservationPaymentMethodsType"
        },
        "reservationProfiles": {
          "description": "Collection of non-guest profiles associated with the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationProfileType"
          }
        },
        "reservationStatus": {
          "description": "Indicates the Actual status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "roomRate": {
          "description": "Posting master reservation room and rate information.",
          "type": "object",
          "properties": {
            "marketCode": {
              "description": "Market Code of the reservation.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "ratePlanCode": {
              "description": "The Rate Code of the reservation.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "roomType": {
              "description": "Room Type of the reservation.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "sourceCode": {
              "description": "Source Code of the reservation.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            }
          }
        },
        "timeSpan": {
          "description": "Dates indicating the duration of the account.",
          "$ref": "#/definitions/timeSpanType"
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        }
      }
    },
    "masterInfoType": {
      "type": "object",
      "properties": {
        "codeInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeInfoType"
          }
        },
        "codeType": {
          "$ref": "#/definitions/masterType"
        }
      }
    },
    "masterType": {
      "type": "string",
      "enum": [
        "Country",
        "State",
        "AddressType",
        "PhoneType",
        "RateCategory",
        "CalculationRule",
        "PostingRythym",
        "BillingInstruction",
        "TransactionCode",
        "DisplaySet",
        "MailingActions",
        "DistanceType",
        "District",
        "Territory",
        "FiscalRegion",
        "InventoryItem",
        "Package",
        "RoomFeaturePreference",
        "SpecialPreference",
        "Promotion",
        "Department",
        "ReservationPreference",
        "FacilityTask",
        "RoomType",
        "RateCode",
        "OutOfOrderReason",
        "Block"
      ]
    },
    "membershipDetails": {
      "description": "Membership Details",
      "type": "object",
      "properties": {
        "membershipId": {
          "description": "Membership Internal ID.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipLevel": {
          "description": "Membership Level.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "membershipNumber": {
          "description": "Membership number.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "membershipType": {
          "description": "Membership Type.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "multipleMemberships": {
          "description": "Multiple Memberships.",
          "type": "boolean"
        }
      }
    },
    "membershipEarningPreferenceType": {
      "description": "The earning preference of a membership, it depends on the type of property. eg. when the property is a airline it should be Miles, other than Points.",
      "type": "string",
      "enum": [
        "Points",
        "Miles"
      ]
    },
    "membershipInfoType": {
      "description": "The Membership object identifies the frequent customer reward program.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The account identification number for this particular member in this particular program.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "bonusCode": {
          "description": "The code or name of the bonus program. BonusCode can be used to indicate the level of membership (Gold Club, Platinum member, etc.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Membership ID (Unique ID from the memberships table).",
          "type": "number"
        },
        "membershipLevel": {
          "description": "The code or name of the membership level and indicates the level of membership (Gold Club, Platinum member, etc.). This is same as the BonusCode.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipLevelDesc": {
          "description": "The description of the Bonus Code.(Platinum for code P)",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "membershipTypeDesc": {
          "description": "The description of the ProgramCode.(Delta Previlige for code DP)",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "programCode": {
          "description": "The code or name of the membership program ('Hertz', 'AAdvantage', etc.).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "membershipType": {
      "description": "Detailed information of the memberships.",
      "type": "object",
      "properties": {
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        }
      }
    },
    "membershipTypeLevelType": {
      "type": "object",
      "properties": {
        "level": {
          "description": "Description type for Rule Details",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Code type for Rule Details",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "mergeReservationsStatus": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "messageDeliveryType": {
      "description": "Holds the Delivery Information of the Message",
      "type": "object",
      "properties": {
        "deliveredBy": {
          "description": "User who delivered the message (who marked message as received)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "deliveryDate": {
          "description": "Date the message has been delivered (marked as received)",
          "type": "string",
          "format": "date-time"
        },
        "deliveryStatus": {
          "description": "Status of the Message (Received or Not Received)",
          "$ref": "#/definitions/messageStatusType"
        },
        "printDate": {
          "description": "Date when message has been printed",
          "type": "string",
          "format": "date-time"
        },
        "textMessageRecipientNo": {
          "description": "Number in which the message is to be sent.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "textMessageSentBy": {
          "description": "User who sent the message",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "textMessageSentById": {
          "description": "User Id of who sent the message",
          "type": "integer"
        },
        "textMessageSentDate": {
          "description": "Date when message has been sent via SMS",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "messageStatusType": {
      "description": "Status of the Message.",
      "type": "string",
      "enum": [
        "Mr",
        "Nr"
      ]
    },
    "messageType": {
      "description": "Holds the Message Information",
      "type": "object",
      "properties": {
        "messageDate": {
          "description": "Date the message was created",
          "type": "string",
          "format": "date-time"
        },
        "messageText": {
          "description": "Message Content",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "operator": {
          "description": "User who created the Message",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "recipient": {
          "description": "Recipient of the Message",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "typeOfMessage": {
          "description": "Type of message (Voice/Text)",
          "$ref": "#/definitions/typeOfMessageType"
        }
      }
    },
    "moveReservationHotel": {
      "description": "Request for moving a reservation and its valid sharers to a different hotel.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for moving the reservation.",
          "$ref": "#/definitions/moveReservationHotelCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "moveReservationHotelCriteriaType": {
      "type": "object",
      "properties": {
        "configuredReservation": {
          "description": "This reservation object will be the configured/reconfigured reservation which will be generated on the DestinationHotel.",
          "$ref": "#/definitions/hotelReservationInstructionType"
        },
        "destinationHotelCode": {
          "description": "Hotel code for the hotel which the reservation will be moved.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "includedSharers": {
          "description": "Valid share reservation identifier. This ID will be verified against the SourceHotel.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationIdList"
          }
        },
        "moveReasonCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationId": {
          "description": "Main identifier of the reservation being moved based on the SourceHotel.",
          "$ref": "#/definitions/reservationId"
        },
        "sourceHotelCode": {
          "description": "Hotel code for the current reservation being moved.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "moveReservationHotelDetails": {
      "description": "This API will potentially remove the following information to a moved reservation: - Routing Instructions - All routing information will have to be configured in the new hotel. - Packages - All packages will need to be re-configured, if it exist, in the new hotel. - Imperfect Share - An imperfect share was requested to be moved and has been ignored.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservation": {
          "description": "Reservation response will be returned in the case of a successful move - ConfirmationOnly flag in the criteria will be ignored.",
          "$ref": "#/definitions/hotelReservationType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "namePrefixType": {
      "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "nameTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Agent",
        "Contact",
        "Source",
        "Group",
        "Employee",
        "Hotel",
        "Purge"
      ]
    },
    "nameValueDataTypeType": {
      "type": "string",
      "enum": [
        "String",
        "Number",
        "Date",
        "Datetime",
        "Time",
        "Integer"
      ]
    },
    "nameValueDetailType": {
      "description": "Detailed information returned during name value search.",
      "type": "object",
      "properties": {
        "nameValues": {
          "description": "Name Value List.",
          "$ref": "#/definitions/nameValuesType"
        }
      }
    },
    "nameValueModuleType": {
      "type": "string",
      "enum": [
        "Reservation",
        "Folio",
        "Profile",
        "Fintrix"
      ]
    },
    "nameValueOriginType": {
      "description": "Contains origin details.",
      "type": "object",
      "properties": {
        "destination": {
          "description": "Contains destination column for Origin.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "originName": {
          "description": "Contains origin i.e. Reseravtion, Profile, Folio or FinTrx.",
          "$ref": "#/definitions/nameValueModuleType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "nameValueType": {
      "description": "Contains name value pair.",
      "type": "object",
      "properties": {
        "dataType": {
          "description": "Contains data type for values.",
          "$ref": "#/definitions/nameValueDataTypeType"
        },
        "formatString": {
          "description": "Contains format string for values.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "name": {
          "description": "Contains unique key which represents for record field.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "origin": {
          "description": "Contains Origin information.",
          "$ref": "#/definitions/nameValueOriginType"
        },
        "usageInstruction": {
          "description": "Contains value(s) to identify the reports to include the collected information in e.g. PFH=Print Folio Header, PFD=Print Folio Detail.",
          "$ref": "#/definitions/codeListType"
        },
        "value": {
          "description": "Contains value for the record/column.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        }
      }
    },
    "nameValuesType": {
      "description": "List of name value pairs.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/nameValueType"
      }
    },
    "numericCategorySummaryType": {
      "description": "This element has count data for each count category such as number of guests, rooms occupied, etc.",
      "type": "object",
      "properties": {
        "numericCategoryCode": {
          "description": "The representation of a numeric category such as Guests : Number of guests, RoomsOcc : Rooms occupied.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "numericSummary": {
          "description": "The total count for the category in NumericCategoryCode.",
          "type": "number"
        }
      }
    },
    "numericUDFType": {
      "description": "Used to hold user defined field of Numeric Type. It is highly recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "description": "Name of user defined field.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "number"
        }
      }
    },
    "numericUDFsType": {
      "description": "Used to hold collection of user defined fields of Numeric Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/numericUDFType"
      }
    },
    "offsetUnitType": {
      "description": "Indicates deadline offset unit type.",
      "type": "string",
      "enum": [
        "Year",
        "Month",
        "Day",
        "Hour"
      ]
    },
    "operaLockRecordType": {
      "type": "string",
      "enum": [
        "Reservation",
        "Cashier"
      ]
    },
    "operaRecordLock": {
      "description": "This type contains information about a record lock.",
      "type": "object",
      "properties": {
        "createdBy": {
          "description": "This is the user name of the current owner of the locked record.",
          "type": "string"
        },
        "createdOn": {
          "description": "This is the time when the record was locked.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expiresOn": {
          "description": "This is the estimated expiry time of the lock.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "internal": {
          "description": "Notification flag to specify if the lock is based on an Internal Opera9 lock versus an External lock.",
          "type": "boolean"
        },
        "lockHandle": {
          "description": "This is the identifier of the lock. This will be null when the requesting user does not own the lock.",
          "type": "number"
        },
        "recordId": {
          "description": "This is the id of the locked record.",
          "type": "string"
        },
        "recordType": {
          "description": "This is the record type of the locked record.",
          "$ref": "#/definitions/operaLockRecordType"
        },
        "timeToLive": {
          "description": "This is the validity of the lock in seconds.",
          "type": "number"
        }
      }
    },
    "overlappingStay": {
      "description": "Request to check for overlapping stays of reservations.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "overlappingStayInfo": {
          "description": "Overlapping stay information pertaining to the reservations to be checked.",
          "$ref": "#/definitions/overlappingStayInfoListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "overlappingStayDetails": {
      "description": "Response for checking overlapping stays of reservations.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "overlappingStayMessages": {
          "description": "Collection of validation messages pertaining to overlapping stay.",
          "$ref": "#/definitions/validationsReturnType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "overlappingStayInfoListType": {
      "description": "Overlapping stay information of a reservation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/overlappingStayInfoType"
      }
    },
    "overlappingStayInfoType": {
      "description": "Possible overlapping stay information of a reservation.",
      "type": "object",
      "properties": {
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "excludedReservations": {
          "description": "List of unique reservation identifiers that should be excluded from the overlapping stay check.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "hotelId": {
          "description": "Hotel Code of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "profileId": {
          "description": "Unique identifier of the guest.",
          "$ref": "#/definitions/profileId"
        },
        "reservationId": {
          "description": "Unique identifier of the reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "overrideInstructionType": {
      "description": "Type for Overrides. Contains information for the override action performed while booking a reservation.",
      "type": "object",
      "properties": {
        "date": {
          "description": "The date when the override was done.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "description": {
          "description": "The description of the restriction for which the override was done.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reasonCode": {
          "description": "The override reason code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonDescription": {
          "description": "The override reason description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "type": {
          "description": "The type of override done. If done for Availability, then it will be AVAILABILITY.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "userId": {
          "description": "Login ID of the user who performed the override.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "overrideInstructionsType": {
      "description": "List of override actions done.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/overrideInstructionType"
      }
    },
    "ownerType": {
      "description": "Generic type for information about an owner.",
      "type": "object",
      "properties": {
        "department": {
          "description": "Department to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "email": {
          "description": "Email information of the owner.",
          "$ref": "#/definitions/emailInfoType"
        },
        "hotel": {
          "description": "Hotel to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "name": {
          "description": "Provides name information of the owner.",
          "$ref": "#/definitions/personNameType"
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phone": {
          "description": "Information on the telephone number of the owner.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "primary": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        },
        "profileId": {
          "description": "Unique owner profile information.",
          "$ref": "#/definitions/profileId"
        },
        "relationship": {
          "description": "Relationship of the owner within the profile or block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "userId": {
          "description": "Unique application user ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "userName": {
          "description": "Unique application user name of the owner.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "pMS_ResStatusType": {
      "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "type": "string",
      "enum": [
        "Reserved",
        "Requested",
        "NoShow",
        "Cancelled",
        "InHouse",
        "CheckedOut",
        "Waitlisted",
        "DueIn",
        "DueOut",
        "Walkin",
        "PendingCheckout"
      ]
    },
    "packageCalculationRuleType": {
      "description": "Simple type for package caluculation rules.",
      "type": "string",
      "enum": [
        "FlatRate",
        "PerPerson",
        "PerAdult",
        "PerChild",
        "PerRoom"
      ]
    },
    "packageCodeHeaderType": {
      "type": "object",
      "properties": {
        "postingAttributes": {
          "description": "Package code posting attributes.",
          "$ref": "#/definitions/configPostingAttributesType"
        },
        "primaryDetails": {
          "description": "Package code header primary details.",
          "$ref": "#/definitions/configPackagePrimaryDetailsType"
        },
        "transactionDetails": {
          "description": "Package code header transaction information.",
          "$ref": "#/definitions/configPackageTransactionType"
        }
      }
    },
    "packageConsumptionType": {
      "description": "Package Consumption Information. Includes information on quantity of the package used, allowance consumption etc.",
      "type": "object",
      "properties": {
        "allowanceConsumed": {
          "description": "Indicates if Allowance(for POS packages) has been consumed/posted for today.",
          "type": "boolean"
        },
        "defaultQuantity": {
          "description": "The default quantity attached in the package.",
          "type": "integer"
        },
        "excludedQuantity": {
          "description": "The quantity which has been excluded in the package.",
          "type": "integer"
        },
        "totalQuantity": {
          "description": "The total quantity of the package, calculated based on the calculation rule as defined in the PackageHeaderType.",
          "type": "integer"
        }
      }
    },
    "packageElementType": {
      "type": "object",
      "properties": {
        "addRateCombinedLine": {
          "type": "boolean"
        },
        "addRateSeprateLine": {
          "type": "boolean"
        },
        "allowance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "amount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "calculationRule": {
          "type": "string"
        },
        "description": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          }
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endTime": {
          "type": "string"
        },
        "includedInRate": {
          "type": "boolean"
        },
        "packageCode": {
          "type": "string"
        },
        "postingRhythm": {
          "type": "string"
        },
        "quantity": {
          "type": "integer"
        },
        "sellSeparate": {
          "type": "boolean"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "startTime": {
          "type": "string"
        }
      }
    },
    "packagePostingRhythmType": {
      "description": "Package Posting rhythm type.",
      "type": "object",
      "properties": {
        "certainNightsOfTheWeek": {
          "description": "Post the package on certain nights of the week.",
          "type": "object",
          "properties": {
            "friday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            },
            "sunday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            }
          }
        },
        "customNightSchedule": {
          "description": "The start and end of the posting period is determined as follows: If the package is attached to a rate code: The period starts with the date when the rate code to which the package is attached becomes effective for the stay. The period ends with the date of the last night for that rate code (or the last night of the stay if the rate code remains in effect until the departure date). If the package is attached separately to the reservation: The Begin Date specified on the reservation when the package was attached is the start date for the period. The End Date specified on the reservation when the package was attached is the end date for the period. If no Begin Date and/or End Date are specified when the package is attached to the reservation, the Begin Date is assumed to be the arrival date and the End Date is assumed to be the departure date of the reservation, irrespective of when the package is attached to the reservation.",
          "type": "object",
          "properties": {
            "night1": {
              "description": "Night 1 indicator.",
              "type": "boolean"
            },
            "night10": {
              "description": "Night 10 indicator.",
              "type": "boolean"
            },
            "night11": {
              "description": "Night 11 indicator.",
              "type": "boolean"
            },
            "night12": {
              "description": "Night 12 indicator.",
              "type": "boolean"
            },
            "night13": {
              "description": "Night 13 indicator.",
              "type": "boolean"
            },
            "night14": {
              "description": "Night 14 indicator.",
              "type": "boolean"
            },
            "night2": {
              "description": "Night 2 indicator.",
              "type": "boolean"
            },
            "night3": {
              "description": "Night 3 indicator.",
              "type": "boolean"
            },
            "night4": {
              "description": "Night 4 indicator.",
              "type": "boolean"
            },
            "night5": {
              "description": "Night 5 indicator.",
              "type": "boolean"
            },
            "night6": {
              "description": "Night 6 indicator.",
              "type": "boolean"
            },
            "night7": {
              "description": "Night 7 indicator.",
              "type": "boolean"
            },
            "night8": {
              "description": "Night 8 indicator.",
              "type": "boolean"
            },
            "night9": {
              "description": "Night 9 indicator.",
              "type": "boolean"
            }
          }
        },
        "customStaySchedule": {
          "description": "This user defined schedule lets you enter a posting rhythm over a 14-day period, starting with the arrival date, by assigning the day (number) within a guest stay for posting this package price.",
          "type": "object",
          "properties": {
            "night1": {
              "description": "Night 1 indicator.",
              "type": "boolean"
            },
            "night10": {
              "description": "Night 10 indicator.",
              "type": "boolean"
            },
            "night11": {
              "description": "Night 11 indicator.",
              "type": "boolean"
            },
            "night12": {
              "description": "Night 12 indicator.",
              "type": "boolean"
            },
            "night13": {
              "description": "Night 13 indicator.",
              "type": "boolean"
            },
            "night14": {
              "description": "Night 14 indicator.",
              "type": "boolean"
            },
            "night2": {
              "description": "Night 2 indicator.",
              "type": "boolean"
            },
            "night3": {
              "description": "Night 3 indicator.",
              "type": "boolean"
            },
            "night4": {
              "description": "Night 4 indicator.",
              "type": "boolean"
            },
            "night5": {
              "description": "Night 5 indicator.",
              "type": "boolean"
            },
            "night6": {
              "description": "Night 6 indicator.",
              "type": "boolean"
            },
            "night7": {
              "description": "Night 7 indicator.",
              "type": "boolean"
            },
            "night8": {
              "description": "Night 8 indicator.",
              "type": "boolean"
            },
            "night9": {
              "description": "Night 9 indicator.",
              "type": "boolean"
            }
          }
        },
        "everyXNightsStartingNightY": {
          "description": "Post the package every X nights Staring from Night Y.",
          "type": "object",
          "properties": {
            "postEveryXNights": {
              "description": "Occurance of nights when the package needs to be posted and consumed.",
              "type": "integer"
            },
            "startOnNightY": {
              "description": "Starting night for consumption and posting prices.",
              "type": "integer"
            }
          }
        },
        "type": {
          "description": "Posting Rhythm for the package.",
          "$ref": "#/definitions/postingRhythmType"
        }
      }
    },
    "packages": {
      "description": "Response to fetch package availability with the data, success and warnings or errors.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationPackages": {
          "description": "A collection of Service objects. This is the collection of all services associated with any part of this reservation (the reservation in its entirety, one or more guests, or one or more room stays). Which services are attributable to which part is determined by each object's ServiceRPHs collection.",
          "type": "object",
          "properties": {
            "inventoryItems": {
              "description": "A collection of items that are available and successfully held.",
              "$ref": "#/definitions/resInventoryItemsType"
            },
            "reservationPackage": {
              "description": "A Service object represents a package provided to guests. Service packages may have associated inventory and charges.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationPackageType"
              }
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "paragraphType": {
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "type": "object",
      "properties": {
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        }
      }
    },
    "parameterType": {
      "description": "Name value pair type that will hold generic parameter information. Only use this type when the parameters being passed are too dynamic to be defined.",
      "type": "object",
      "properties": {
        "parameterName": {
          "description": "Name of the parameter.",
          "type": "string"
        },
        "parameterValue": {
          "description": "Value of the parameter.",
          "type": "string"
        }
      }
    },
    "parametersType": {
      "description": "Collection of generic Name-Value-Pair parameters.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/parameterType"
      }
    },
    "payeeInfoType": {
      "description": "Payee information.",
      "type": "object",
      "properties": {
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeName": {
          "description": "Name of the payee.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "payloadType": {
      "description": "Fiscal Payload Type.",
      "type": "string",
      "enum": [
        "CheckOut",
        "FolioGeneration"
      ]
    },
    "paymentTypesType": {
      "description": "Payment card code like AX,VI etc.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "maxLength": 20,
        "minLength": 0
      }
    },
    "personNameType": {
      "description": "This provides name information for a person.",
      "type": "object",
      "properties": {
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        },
        "salutation": {
          "description": "Salutation of the profile",
          "type": "string"
        },
        "surname": {
          "description": "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "personNameTypeType": {
      "description": "Person's name in an external system.",
      "type": "string",
      "enum": [
        "Primary",
        "Alternate",
        "Incognito",
        "External",
        "Phonetic"
      ]
    },
    "phoneNumberType": {
      "description": "Phone number",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "pkgInventoryItemType": {
      "type": "object",
      "properties": {
        "articleNumber": {
          "description": "Article Number of the inventory item.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the inventory item.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "itemId": {
          "description": "Identifier for the inventory item.",
          "type": "integer"
        },
        "quantity": {
          "description": "Quantity of the inventory item allocated to the package.",
          "type": "integer"
        }
      }
    },
    "pointsType": {
      "description": "The Redeem Points contains the number of points required to book a room type.",
      "type": "object",
      "properties": {
        "awardsType": {
          "description": "Awards type for the award type rate code.",
          "type": "string"
        },
        "points": {
          "description": "No of points required to book this Room Stay.",
          "type": "integer"
        }
      }
    },
    "policyAmountPercentType": {
      "description": "Defines the percentage basis for calculating the fee amount or the amount.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "basisType": {
          "description": "Provides the basis for how the amount of the guarantee is calculated.",
          "$ref": "#/definitions/policyBasisTypeType"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "nights": {
          "description": "The number of nights of the hotel stay that are used to calculate the fee amount.",
          "type": "integer"
        },
        "percent": {
          "description": "The percentage used to calculate the amount.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        }
      }
    },
    "policyBasisTypeType": {
      "description": "Full Amount.",
      "type": "string",
      "enum": [
        "FlatAmount",
        "Percentage",
        "Nights",
        "NightPercentage",
        "FullAmount"
      ]
    },
    "policyDeadlineType": {
      "description": "Cancellation deadline, absolute or relative.",
      "type": "object",
      "properties": {
        "absoluteDeadline": {
          "description": "Defines the absolute deadline. Either this or the offset attributes may be used.",
          "type": "string",
          "format": "date-time"
        },
        "offsetDropTime": {
          "description": "Time on offset day the cancellation penalties applies.",
          "type": "string",
          "format": "date-time"
        },
        "offsetFromArrival": {
          "description": "The number of days before arrival that allows cancellation without penalties.",
          "type": "integer"
        },
        "offsetFromBookingDate": {
          "description": "The number of days after booking deposit must be paid.",
          "type": "integer"
        }
      }
    },
    "postingRhythmType": {
      "description": "Simple type for posting Rhythm types.",
      "type": "string",
      "enum": [
        "EveryNight",
        "ArrivalNight",
        "EveryXNightsStartingNightY",
        "CertainNightsOfTheWeek",
        "LastNight",
        "EveryNightExceptArrivalNight",
        "EveryNightExceptLast",
        "EveryNightExceptFirstAndLast",
        "CustomStaySchedule",
        "CustomNightSchedule",
        "FloatingAllowancePerStay",
        "TicketPosting"
      ]
    },
    "preArrivalMemberReservationType": {
      "type": "object",
      "properties": {
        "arrivalDate": {
          "description": "Arrival Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createDateTime": {
          "description": "Date on which Reservation is Created.",
          "type": "string",
          "format": "date-time"
        },
        "membershipId": {
          "description": "Membership Card number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "reservationIdList": {
          "description": "Reservation Confirmation Number of the External System.",
          "$ref": "#/definitions/reservationIdList"
        }
      }
    },
    "preArrivalMemberReservationsDetails": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "preArrivalMemberReservationType": {
          "description": "Collection of PreArrivalMemberReservations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/preArrivalMemberReservationType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "preCheckInDetailsType": {
      "description": "Type describing the different details regarding a pre-registered reservation.",
      "type": "object",
      "properties": {
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "arrival": {
          "description": "The time at which the guest arrives at the hotel.",
          "$ref": "#/definitions/reservationArrivalInfoType"
        },
        "arrivalTransport": {
          "description": "The arrival transportation details of the reservation.",
          "$ref": "#/definitions/transportInfoType"
        },
        "guestPreferredCurrency": {
          "description": "Currency code preferred by guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationPaymentMethods": {
          "description": "The payment methods of the reservation.",
          "$ref": "#/definitions/reservationPaymentMethodsType"
        },
        "roomId": {
          "description": "Room Number to be assigned to the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "preCheckInReservation": {
      "description": "Request to pre-register a reservation eligible for pre-registration and change arrival details.",
      "type": "object",
      "properties": {
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservation": {
          "description": "The reservation desired to change with its relevant pre-registration details.",
          "$ref": "#/definitions/reservationPreCheckInDetailsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "preConfiguredRoutingInstrListType": {
      "description": "Set of Pre-Configured Routing Instructions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/preConfiguredRoutingInstrType"
      }
    },
    "preConfiguredRoutingInstrType": {
      "description": "Routing can be promotion code complimentary routing or profile routing.",
      "type": "object",
      "properties": {
        "autoPopulateRouting": {
          "description": "A flag which determines whether the Pre-configured Routing Instruction has to be automatically populated for this profile or not.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "billingInstructions": {
          "description": "Set of Billing Instruction codes as part of the Pre-configured Routing Instructions.",
          "$ref": "#/definitions/billingInstructionsType"
        },
        "compRoutingInstructionType": {
          "description": "PromotionCode RoutingInstruction Details for CompilementaryRouting",
          "$ref": "#/definitions/promoCodeCompRoutingType"
        },
        "ratePlanCode": {
          "description": "This is the actual rate code. This will be populated only for Pre-configured Routing Instructions for RateCodes.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationProfile": {
          "description": "Profile on the reservation.",
          "$ref": "#/definitions/resAttachedProfileType"
        },
        "transactionCodes": {
          "description": "Set of transaction codes as part of the Pre-configured Routing Instructions.",
          "$ref": "#/definitions/trxCodesInfoType"
        }
      }
    },
    "preConfiguredRoutingInstructions": {
      "description": "This is the Response Message to the request for Pre-Configured Routing Instructions.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "routingInstructions": {
          "description": "Collection of Routing Instructions which have been Pre-Configured.",
          "$ref": "#/definitions/preConfiguredRoutingInstrListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "preferenceType": {
      "description": "Guest Preference details for the profile.",
      "type": "object",
      "properties": {
        "copyToProfile": {
          "description": "Specifies whether to copy the reservation preference to the profile or not.",
          "type": "boolean"
        },
        "description": {
          "description": "Preference Description for display purposes.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "excludedPreferencesCount": {
          "description": "Specifies the count of preferences excluded for the attached reservation preference.",
          "type": "integer"
        },
        "global": {
          "description": "Whether this preference is property specific or not.",
          "type": "boolean"
        },
        "hotels": {
          "description": "If specified preference belongs to the Hotels listed, otherwise it is a global preference.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "preferenceId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferenceValue": {
          "description": "Preference value for display purposes.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "source": {
          "description": "Source of the preference.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "preferenceTypeType": {
      "description": "Preference details for the profile.",
      "type": "object",
      "properties": {
        "availableQuantity": {
          "description": "Available quantity of preferences (maximum quantity - Existing preferences)per preference group.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "maxQuantity": {
          "description": "Maximum quantity of preferences allowed per preference group.",
          "type": "integer"
        },
        "maxResortUsedQuantity": {
          "description": "Maximum quantity of preferences used by any resort per preference group.",
          "type": "integer"
        },
        "preference": {
          "description": "Collection of Preferences for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceType"
          }
        },
        "preferenceType": {
          "description": "Preference group code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferenceTypeDescription": {
          "description": "Preference group description.",
          "type": "string"
        },
        "reservationPreference": {
          "description": "Whether this preference is reservation preference or not.",
          "type": "boolean"
        },
        "sequence": {
          "description": "Preference Sequence.",
          "type": "string"
        }
      }
    },
    "prepaidCardType": {
      "description": "Holds fixed charge information.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Prepaid Card Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cardNo": {
          "description": "Prepaid card / account number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberMasked": {
          "description": "Masked Prepaid card / account number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "firstName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "giftCard": {
          "description": "Indicates a gift card type.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel context for the Reservations.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "interfaceId": {
          "description": "The unique ID for the Interface.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "profileId": {
          "description": "Card / Account holder name ID",
          "$ref": "#/definitions/profileId"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationId": {
          "description": "The unique ID of the reservation to which this record applies.",
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "prepaidCardsType": {
      "description": "Holds fixed charge detail.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/prepaidCardType"
      }
    },
    "primaryShareTypeType": {
      "type": "string",
      "enum": [
        "Primary",
        "NonPrimary"
      ]
    },
    "productSourceType": {
      "description": "Sources of Products",
      "type": "string",
      "enum": [
        "Reservation",
        "RateHeader",
        "RateDetail"
      ]
    },
    "profileCashieringDetailType": {
      "description": "The type contains routing instructions for the profile.",
      "type": "object",
      "properties": {
        "fiscalGuestType": {
          "description": "Guest type code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code for which the routing instructions are provided for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "paymentMethod": {
          "description": "Payment Method Details.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "routingInstructions": {
          "description": "Set of preconfigured transaction codes.",
          "$ref": "#/definitions/profileRoutingInstructionsType"
        },
        "taxType": {
          "description": "Tax type code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "profileCashieringType": {
      "description": "Contains cashiering related details for the profile",
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        }
      }
    },
    "profileCommissionType": {
      "description": "This is the preconfigured routing instruction type.",
      "type": "object",
      "properties": {
        "bankAccount": {
          "description": "Bank account used for the commission for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "commissionCode": {
          "description": "commission Code for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "hotelId": {
          "description": "Hotel Code for the commission being used for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "paymentMethod": {
          "description": "Type of payment associated with the bank account.",
          "$ref": "#/definitions/commissionPaymentMethods"
        }
      }
    },
    "profileDeliveryMethod": {
      "description": "Delivery Information type to the profile.",
      "type": "object",
      "properties": {
        "deliveryId": {
          "description": "Delivery ID. It will be empty in case of new delivery method.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "deliveryModule": {
          "description": "Module where this delivery type will be used. Example : EFolio Export, EInvoice , Fiscal, etc..",
          "$ref": "#/definitions/profileDeliveryModuleType"
        },
        "deliveryType": {
          "description": "Delivery type can have a value EMAIL, ELECTRONIC etc and it depends on the parameter set in OPERA Control.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "deliveryValue": {
          "description": "Delivery value holds the corresponding value of the delivery type..",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property that has delivery methods configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        }
      }
    },
    "profileDeliveryModuleType": {
      "description": "Module where this delivery type will be used. Example : EFolio Export, EInvoice , Fiscal, etc..",
      "type": "string",
      "enum": [
        "EfolioExport"
      ]
    },
    "profileId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "profileIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "profileMembershipType": {
      "description": "Detailed information of the memberships.",
      "type": "object",
      "properties": {
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        }
      }
    },
    "profileNameType": {
      "description": "This provides name information for a person.",
      "type": "object",
      "properties": {
        "fullName": {
          "description": "Full display Name.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        }
      }
    },
    "profileRestrictions": {
      "type": "object",
      "properties": {
        "reason": {
          "description": "Restriction reason associated with the current profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonDescription": {
          "description": "Description of restriction reason.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "restricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        }
      }
    },
    "profileRoutingInstructionsType": {
      "description": "The type contains routing instructions for the profile.",
      "type": "object",
      "properties": {
        "autoPopulateRouting": {
          "description": "A flag which determines whether the instructions has to be automatically populated for this profile or not.",
          "type": "boolean"
        },
        "billingInstructions": {
          "description": "Set of preconfigured Billing Instruction results.",
          "$ref": "#/definitions/billingInstructionsType"
        },
        "transactionCodes": {
          "description": "Set of preconfigured transaction codes.",
          "$ref": "#/definitions/trxCodesInfoType"
        }
      }
    },
    "profileStatusType": {
      "type": "string",
      "enum": [
        "Active",
        "Inactive"
      ]
    },
    "profileType": {
      "description": "Type provides the detailed information about the profile and its children.",
      "type": "object",
      "properties": {
        "addresses": {
          "description": "List of customer addresses.",
          "type": "object",
          "properties": {
            "addressInfo": {
              "description": "Collection of Detailed information on an address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/addressInfoType"
              }
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "cashiering": {
          "description": "Contains cashiering related details for the profile",
          "$ref": "#/definitions/profileCashieringType"
        },
        "comments": {
          "description": "List of Notes for the customer.",
          "type": "object",
          "properties": {
            "commentInfo": {
              "description": "Collection of Detailed information on comments for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/commentInfoType"
              }
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "commissionInfoList": {
          "description": "Contains commission related details for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/profileCommissionType"
          }
        },
        "company": {
          "description": "Detailed company information for this profile.",
          "$ref": "#/definitions/companyType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "customer": {
          "description": "Detailed customer information for this profile.",
          "$ref": "#/definitions/customerType"
        },
        "eCertificates": {
          "description": "E-Certificate assosiated with the profile.",
          "$ref": "#/definitions/eCertificatesType"
        },
        "eligibleForFiscalFolio": {
          "description": "Eligible for Fiscal Folio/Payload generation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "hasCommission": {
          "description": "Populates true if the profile has commission configured false otherwise.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastStayInfo": {
          "description": "Information on last stay of the profile.",
          "$ref": "#/definitions/lastStayInfoType"
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this profile as recently accessed.",
          "type": "boolean"
        },
        "markForHistory": {
          "description": "\"true\" setting marks the profile to be kept from being purged, once the profile is marked inactive.",
          "type": "boolean"
        },
        "ownerCode": {
          "description": "Owner Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "preferenceCollection": {
          "description": "List of customer preferences.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "preferenceType": {
              "description": "Collection of Detailed information on preferences of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/preferenceTypeType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "profileDeliveryMethods": {
          "description": "List of Delivery methods configured against a Property for this Profile.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "profileDeliveryMethod": {
              "description": "Collection of delivery methods for this Profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileDeliveryMethod"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "profileImage": {
          "description": "The profile image.",
          "$ref": "#/definitions/imageSetType"
        },
        "profileMemberships": {
          "description": "List of loyalty program(s) the profile is subscribed to.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "profileMembership": {
              "description": "Collection of Detailed information on memberships for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileMembershipType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "profileRestrictions": {
          "description": "Detailed information on restrictions associated with the profile.",
          "$ref": "#/definitions/profileRestrictions"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "protectedBy": {
          "description": "What level this profile is protected.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "registeredProperty": {
          "description": "Hotel which this profile is registered with. This attribute is not used for configuration.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "relationships": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "relationship": {
              "description": "A collection of the profiles that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "relationshipsSummary": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "relationship": {
              "description": "A collection of the profiles summary that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoSummaryType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "requestForHotel": {
          "description": "Hotel which this profile is to be registered. This attribute is only used during creation of profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationInfoList": {
          "description": "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref": "#/definitions/reservationHistoryFutureInfoType"
        },
        "roomOwnershipsList": {
          "description": "Room Ownership records.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "roomOwnershipInfo": {
              "description": "Collection of Detailed information on Room Ownership records.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/roomOwnershipType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "showInactiveRoomOwners": {
          "description": "Flag to show inactive Room Owners.",
          "type": "boolean"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "stayReservationInfoList": {
          "description": "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref": "#/definitions/reservationStayHistoryFutureInfoType"
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "traceCode": {
          "description": "Trace Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "uRLs": {
          "description": "List of Information on a URL for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "uRLInfo": {
              "description": "Collection of Detailed information on web url/address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/uRLInfoType"
              }
            }
          }
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        }
      }
    },
    "profileTypeType": {
      "description": "The types of Profile handled by the web service.",
      "type": "string",
      "enum": [
        "Guest",
        "Agent",
        "Company",
        "Group",
        "Source",
        "Employee",
        "Hotel",
        "Vendor",
        "Contact",
        "Purge",
        "BusinessHeader",
        "BillingAccount",
        "Activity",
        "Potential",
        "Account"
      ]
    },
    "promoCodeCompRoutingType": {
      "description": "Promotion Code Complimentary Routing limit can be one of the three: Credit Limit, Percetage Limit, Covers Limit",
      "type": "object",
      "properties": {
        "authorizerInfo": {
          "description": "The authorizer information for promotion code complimentary routing",
          "$ref": "#/definitions/authorizerInfoType"
        },
        "comments": {
          "description": "User Defined Comments. Used for promotion code Complimentary Routing.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "compPreApprovalRequired": {
          "description": "Flag to indicate that pre approval is required for promotion code complimentary routing .",
          "type": "boolean"
        },
        "covers": {
          "description": "Number of covers for this promotion code complimentary routing instruction.",
          "type": "number"
        },
        "creditLimit": {
          "description": "Allowable credit amount for this promotion code complimentary routing instruction. Null value means no limit, 0 equals zero.",
          "type": "number"
        },
        "duration": {
          "description": "Duration of this instruction for promotion code complimentary Routing",
          "type": "object",
          "properties": {
            "daily": {
              "description": "Flag to indicate if the routing instruction is a daily instruction for promotion code complimentary routing",
              "type": "boolean"
            },
            "friday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            },
            "sunday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "timeSpan": {
              "$ref": "#/definitions/timeSpanType"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            }
          }
        },
        "folioNo": {
          "description": "The folio number where it is applied for promotion code complimentary routing.",
          "type": "integer"
        },
        "membershipId": {
          "description": "Membership number for promotion code complimentary routing",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "percentageLimit": {
          "description": "The promotion code complimentary routing limit percentage allowed for this routing instruction.",
          "type": "number"
        },
        "promotionCode": {
          "description": "Promotion code for Complimentary Routing",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "promptForAuthorizer": {
          "description": "Flag to indicate to prompt the Authorizer for promotion code complimentary routing.",
          "type": "boolean"
        }
      }
    },
    "promotionType": {
      "description": "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "type": "object",
      "properties": {
        "couponCode": {
          "description": "Promotion Coupon Code when promotion is setup to have a valid coupon code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "promotionCode": {
          "description": "Promotion code associated with the rate plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "promotionName": {
          "description": "Promotion code Name associated with the rate plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "promotionsType": {
      "description": "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/promotionType"
      }
    },
    "queueTextInfoType": {
      "description": "Information regarding the message sent to guest.",
      "type": "object",
      "properties": {
        "sentBy": {
          "description": "User name of the user who sent message.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "sentTime": {
          "description": "Time the text was last sent to the user.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "rateByAgeBucketType": {
      "description": "Rate amount by age bucket.",
      "type": "object",
      "properties": {
        "maximumAge": {
          "description": "Maximum age for age bucket.",
          "type": "integer"
        },
        "minimumAge": {
          "description": "Minimum age for age bucket.",
          "type": "integer"
        },
        "rateAmount": {
          "description": "Rate amount by age bucket.",
          "type": "number"
        }
      }
    },
    "rateByAgeBucketsType": {
      "description": "Rate amount by age bucket.",
      "type": "array",
      "maxItems": 3,
      "items": {
        "$ref": "#/definitions/rateByAgeBucketType"
      }
    },
    "rateChangeInstructionType": {
      "description": "Defines override rate type.",
      "type": "object",
      "properties": {
        "discount": {
          "description": "Discount percentage and/or amount, code and textual reason for discount.",
          "$ref": "#/definitions/discountType"
        },
        "rateChange": {
          "description": "Rate change type.",
          "$ref": "#/definitions/rateChangeType"
        }
      }
    },
    "rateChangeType": {
      "description": "Simple type for rate change type.",
      "type": "string",
      "enum": [
        "Verify",
        "OldRate",
        "NewRate"
      ]
    },
    "rateInfo": {
      "description": "Response will either be Summary or Detail type, but not both. See the request for the summary attribute flag.",
      "type": "object",
      "properties": {
        "detail": {
          "description": "The revenue information for the rate code.",
          "type": "object",
          "properties": {
            "packages": {
              "description": "Package information for the rate code.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/totalType"
              }
            },
            "rateSuppressed": {
              "description": "Indicates if the rate is to be hidden.",
              "type": "boolean"
            },
            "revenue": {
              "description": "The revenue information for the rate code.",
              "$ref": "#/definitions/totalType"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "summary": {
          "$ref": "#/definitions/reservationRateSummaryType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ratesType": {
      "description": "Individual rate amount.",
      "type": "object",
      "properties": {
        "rate": {
          "description": "The Rate contains a collection of elements that define the amount of the rate, associated fees, additional occupant amounts. Taxes can be broken out or included within the various amounts. A currency can be associated to each amount.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/amountType"
          }
        }
      }
    },
    "recentlyAccessedReservationType": {
      "description": "A recently used reservation record.",
      "type": "object",
      "properties": {
        "accessDate": {
          "description": "The date the record was accessed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "guestFirstName": {
          "description": "Guest First Name.",
          "$ref": "#/definitions/givenNameType"
        },
        "guestLastName": {
          "description": "Guest Last Name.",
          "$ref": "#/definitions/surnameType"
        },
        "hotelId": {
          "description": "The resort of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelName": {
          "description": "A text field used to communicate the proper name of the hotel.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "reservationIdList": {
          "description": "List of unique ids, consisting of the reservation name id and the confirmation number.",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationStatus": {
          "description": "Indicates the Actual status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "timeSpan": {
          "description": "The begin and end date of the reservation.",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "recentlyAccessedReservations": {
      "description": "Response with the fetched recently accessed reservations.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservations": {
          "description": "List of recently accessed reservations.",
          "$ref": "#/definitions/recentlyAccessedReservationsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "recentlyAccessedReservationsType": {
      "description": "A single recently accessed reservation.",
      "type": "array",
      "maxItems": 10,
      "items": {
        "$ref": "#/definitions/recentlyAccessedReservationType"
      }
    },
    "registerCall": {
      "description": "Request to register call. Either creates a new call or updates an existing call.",
      "type": "object",
      "properties": {
        "call": {
          "description": "Call information including caller info, reservation info and comments. Refer to the Generic common types document for information on CallType.",
          "$ref": "#/definitions/callType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "registerTurnaway": {
      "description": "Request to register turn away reservation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "turnaway": {
          "description": "Detailed turn away information including guest info, turn away reason and comments. Refer to the Generic common types document for information on TurnawayType.",
          "$ref": "#/definitions/turnawayType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reinstateReservation": {
      "description": "Overriding the validation check will log the supposed errors in the warnings log if they would fail.",
      "type": "object",
      "properties": {
        "additionalReservationIdList": {
          "description": "Collection of unique reservation identifiers to be sent as Shared reservation. Each Unique ID element represents one reservation.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "effectiveRates": {
          "description": "Instruction to apply new effective rates among shares.",
          "$ref": "#/definitions/effectiveRatesType"
        },
        "hotelId": {
          "description": "Property code of the reservation.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "overrideInventory": {
          "description": "Flag that indicates if room inventory check should be skipped when the reservation is being reinstated.",
          "type": "boolean"
        },
        "overrideRates": {
          "description": "Flag that indicates if rate code inventory check should be skipped when the reservation is being reinstated.",
          "type": "boolean"
        },
        "overrideRoomAllocation": {
          "description": "Flag that indicates if the check on room allocation should be skipped.",
          "type": "boolean"
        },
        "overrideRoomOutOfService": {
          "description": "Flag that indicates if the check on the housekeeping status for out of service should be skipped.",
          "type": "boolean"
        },
        "reservation": {
          "description": "Reservation Information of the reservation that is to be reinstated.",
          "$ref": "#/definitions/hotelReservationType"
        },
        "reservationIdList": {
          "description": "Unique internal Id of the reservation that is to be reinstated.",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationLockHandle": {
          "type": "number"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reinstateReservationDetails": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "relationshipAddressType": {
      "description": "Provides address information for a Relationship.",
      "type": "object",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "maxLength": 80,
            "minLength": 0
          }
        },
        "city": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "relationshipInfoSummaryType": {
      "description": "RelationshipInfoSummaryType contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "type": "object",
      "properties": {
        "masterAccountDetails": {
          "description": "Refer to Master Profile type document.",
          "$ref": "#/definitions/masterAccountInfoType"
        },
        "relationshipID": {
          "description": "Relationship identifier.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "relationshipProfile": {
          "description": "Refer to Relationship Profile Summary type document.",
          "$ref": "#/definitions/relationshipProfileSummaryType"
        },
        "sourceRelation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceRelationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "relationshipInfoType": {
      "description": "Relationship Type contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "relation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "relationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "relationshipProfile": {
          "description": "Refer to Relationship Profile type document.",
          "$ref": "#/definitions/relationshipProfileType"
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "relationshipProfileSummaryType": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Information on address details for the customer/company",
          "$ref": "#/definitions/relationshipAddressType"
        },
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "customerName": {
          "description": "Name of the customer",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "boolean"
        },
        "primaryOwnerCode": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        },
        "profileIdList": {
          "description": "Original profile details for which the relationships was created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "profileStatus": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "telephoneNumber": {
          "description": "Telephone number assigned to a single location",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "relationshipProfileType": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Information on address details for the customer/company",
          "$ref": "#/definitions/addressInfoType"
        },
        "company": {
          "description": "Detailed information of the Company.",
          "$ref": "#/definitions/companyType"
        },
        "customer": {
          "description": "Detailed information of the customer",
          "$ref": "#/definitions/customerType"
        },
        "email": {
          "description": "Information on email address for the customer/company",
          "$ref": "#/definitions/emailInfoType"
        },
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "primaryOwner": {
          "description": "Primary Owner of the profile",
          "$ref": "#/definitions/ownerType"
        },
        "profileIdList": {
          "description": "Original profile details for which the relationships was created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "telephone": {
          "description": "Information on telephone details for the customer/company",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "uRLs": {
          "description": "Information on web url/address for the customer/company",
          "$ref": "#/definitions/uRLInfoType"
        }
      }
    },
    "requestActionType": {
      "type": "string",
      "enum": [
        "Create",
        "Remove",
        "Query"
      ]
    },
    "resAccessRestrictionType": {
      "description": "Indicates any Updates/Changes on the reservation as well as Reservation Cancellation are not allowed.",
      "type": "string",
      "enum": [
        "Change",
        "Cancel",
        "ChangeOrCancel"
      ]
    },
    "resAccompanyGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "resAccompanyGuestListType": {
      "description": "Collection of accompany guests",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAccompanyGuestInfoType"
      }
    },
    "resAttachedProfileListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAttachedProfileType"
      }
    },
    "resAttachedProfileType": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Attached profile name",
          "type": "string"
        },
        "profileIdList": {
          "description": "Collection of unique profile identifiers",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "resAwardsType": {
      "description": "Membership Awards code applied on the reservation.",
      "type": "object",
      "properties": {
        "membershipNo": {
          "description": "Membership program under which the award is applied.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "originalRoomType": {
          "description": "Room Type before the Upgrade Award.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "upgradeRoomType": {
          "description": "Room Type after the Upgrade Award.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resCancelPenaltyType": {
      "description": "The CancelPenalty class defines the cancellation policy of the hotel facility.",
      "type": "object",
      "properties": {
        "amountPercent": {
          "description": "Cancellation fee expressed as a fixed amount, or percentage of/or room nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "deadline": {
          "description": "Cancellation deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "effective": {
          "description": "Indicator if Cancellation Penalty is currently applicable or not.",
          "type": "boolean"
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the Cancellation Penalty.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        },
        "nonRefundable": {
          "description": "Indicates if the amount is refundable if booking is canceled.",
          "type": "boolean"
        },
        "offsetUnit": {
          "$ref": "#/definitions/offsetUnitType"
        },
        "penaltyDescription": {
          "description": "Text description of the Penalty in a given language.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "policyCode": {
          "description": "Policy Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resCancellationPoliciesType": {
      "description": "A list of reservation cancellation policies.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resCancellationPolicyType"
      }
    },
    "resCancellationPolicyType": {
      "description": "A cancellation policy attached with the reservation.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "Comments attached with the reservation cancellation.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "percentageDue": {
          "description": "The percentage amount due for reservation cancellation.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "policy": {
          "description": "Cancellation policy details.",
          "$ref": "#/definitions/resCancelPenaltyType"
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        }
      }
    },
    "resCashieringType": {
      "description": "Cashiering Information for the reservation.",
      "type": "object",
      "properties": {
        "bedTaxReporting": {
          "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
          "$ref": "#/definitions/bedTaxReportingType"
        },
        "billingPrivileges": {
          "description": "Billing privileges set on the reservation.",
          "$ref": "#/definitions/billingPrivilegesType"
        },
        "compAccounting": {
          "description": "Information regarding comp accounting on the reservation.",
          "$ref": "#/definitions/resCompAccountingType"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "lastRoomAndTaxPostedDate": {
          "description": "Date of the last Room And Tax posting. Used primarily to know the date in case of Advance Billing.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationPreConfiguredRoutingInstruction": {
          "description": "Information regarding the selected preconfigured routing instruction on the reservation.",
          "$ref": "#/definitions/resPreConfiguredRoutingInstrType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "reverseAdvanceCheckInAllowed": {
          "description": "This attribute is to verify if reverse advance check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "taxType": {
          "$ref": "#/definitions/reservationTaxTypeInfo"
        },
        "transactionsPosted": {
          "description": "Specifies whether reservation has a financial transaction associated with it.",
          "type": "boolean"
        }
      }
    },
    "resCommunicationType": {
      "description": "Communication details for a reservation.",
      "type": "object",
      "properties": {
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        }
      }
    },
    "resCompAccountingType": {
      "description": "Information regarding comp accounting on the reservation.",
      "type": "object",
      "properties": {
        "authorizer": {
          "description": "ID of the employee who will act as the host for this guest.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "compPostings": {
          "description": "Indicates if the Comp Billing/posting Exist",
          "type": "string",
          "maxLength": 5,
          "minLength": 0
        },
        "compType": {
          "description": "Code used to identify the casino comp type and ranking of a guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resDepositPoliciesType": {
      "description": "A list of deposit policies attached with the reservation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resDepositPolicyType"
      }
    },
    "resDepositPolicyType": {
      "description": "A deposit policy attached with the reservation.",
      "type": "object",
      "properties": {
        "amountDue": {
          "description": "Total amount due against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amountPaid": {
          "description": "Total amount paid against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "comments": {
          "description": "Comments attached with a deposit.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "policy": {
          "description": "Reservation deposit policy details.",
          "$ref": "#/definitions/depositPolicyType"
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        }
      }
    },
    "resExpectedTimesType": {
      "description": "Holds the Arrival and Departure Time Information",
      "type": "object",
      "properties": {
        "reservationExpectedArrivalTime": {
          "description": "Arrival Time",
          "type": "string",
          "format": "date-time"
        },
        "reservationExpectedDepartureTime": {
          "description": "Departure Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "resGuaranteeType": {
      "description": "Validations type record returned after Validations are done.",
      "type": "object",
      "properties": {
        "guaranteeCode": {
          "description": "Guarantee Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "onHold": {
          "description": "Guarantee Code.",
          "type": "boolean"
        },
        "shortDescription": {
          "description": "Guarantee Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "resGuestAdditionalInfoType": {
      "type": "object",
      "properties": {
        "dateOfEntry": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "guestClassification": {
          "description": "Guest Classification for the data export.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "guestStatus": {
          "description": "Guest Status for the data export.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "lastStay": {
          "description": "Last Stay information of the guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "nextDestination": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "type": "string"
        },
        "portOfEntry": {
          "description": "Entry point into the country. (Croatian Requirements).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "preferredRoomType": {
          "description": "Preferred Room Type of the guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "purposeOfStay": {
          "description": "Purpose of stay.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resGuestInfoType": {
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "type": "object",
      "properties": {
        "accompanyGuests": {
          "description": "List of guest names that are accompanying the reservation guest",
          "$ref": "#/definitions/resAccompanyGuestListType"
        },
        "address": {
          "description": "Address information that is attached to the reservation guest",
          "$ref": "#/definitions/addressSearchType"
        },
        "alternateGivenName": {
          "description": "Alternate given name, first name or names",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "alternateSurname": {
          "description": "Alternate family name, last name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "birthDate": {
          "description": "Date of birth",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "email": {
          "description": "Email address",
          "$ref": "#/definitions/basicEmailType"
        },
        "fullName": {
          "description": "Full display name",
          "type": "string"
        },
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "guestLastStayInformation": {
          "description": "Contains information regarding the last stay of this guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "guestRestricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        },
        "guestRestrictedCode": {
          "description": "Guest profile restricted reason code",
          "type": "string"
        },
        "guestRestrictedReasonDesc": {
          "description": "Guest profile restricted reason description",
          "type": "string"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "membership": {
          "description": "The Membership object identifying the frequent customer reward program.",
          "$ref": "#/definitions/membershipInfoType"
        },
        "middleName": {
          "description": "The middle name of the person name",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
          "$ref": "#/definitions/namePrefixType"
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nameType": {
          "$ref": "#/definitions/nameTypeType"
        },
        "nationality": {
          "description": "Affiliation or ethnicity to a particular country.",
          "$ref": "#/definitions/countryNameType"
        },
        "phoneNumber": {
          "description": "Phone number",
          "$ref": "#/definitions/phoneNumberType"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "vip": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "$ref": "#/definitions/vIPType"
        }
      }
    },
    "resGuestType": {
      "description": "A collection of ResGuest objects, identifying the guests associated with this reservation. Which guests are in which room is determined by each RoomStays ResGuestRPHs collection.",
      "type": "object",
      "properties": {
        "arrivalTransport": {
          "$ref": "#/definitions/transportInfoType"
        },
        "departureTransport": {
          "$ref": "#/definitions/transportInfoType"
        },
        "primary": {
          "description": "When true indicates this is the primary guest.",
          "type": "boolean"
        },
        "profileInfo": {
          "description": "A collection of Profiles or Unique IDs of Profiles.",
          "type": "object",
          "properties": {
            "externalReference": {
              "description": "External Reference information for Profile.",
              "$ref": "#/definitions/externalReferenceType"
            },
            "profile": {
              "description": "Provides detailed information regarding either a company or a customer profile.",
              "$ref": "#/definitions/profileType"
            },
            "profileCashieringDetail": {
              "description": "Cashiering details for the profile.",
              "$ref": "#/definitions/profileCashieringDetailType"
            },
            "profileIdList": {
              "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
              "$ref": "#/definitions/profileIdList"
            },
            "registrationCardNo": {
              "description": "Unique identifier of the police registration card number.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            }
          }
        },
        "reservationGuestRPH": {
          "description": "This is a reference placeholder, used as an index for this guest in this reservation. In the ResGuest object it is used like all other RPH attributes to send the delta of a reservation. It is used by the RoomStay and Service objects to indicate which guests are associated with that room stay or service.",
          "type": "string",
          "maxLength": 8,
          "minLength": 1
        },
        "visaInfo": {
          "$ref": "#/definitions/visaInfoType"
        }
      }
    },
    "resHousekeepingType": {
      "description": "Holds housekeeping turndown service information for the room.",
      "type": "object",
      "properties": {
        "expectedServiceTime": {
          "description": "Expected Start Time for housekeeping task(s).",
          "type": "string"
        },
        "frontOfficeStatus": {
          "description": "Front office status ( Occupied/Vacant ).",
          "$ref": "#/definitions/frontOfficeRoomStatusType"
        },
        "housekeepingStatus": {
          "description": "Housekeeping status ( Occupied/Vacant ).",
          "$ref": "#/definitions/frontOfficeRoomStatusType"
        },
        "instructions": {
          "description": "Turndown instructions for the room.",
          "type": "string"
        },
        "roomStatus": {
          "description": "Current room status. Current room status is populated only if room is assigned to the reservation and reservation is due in or in house.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "turndownRequested": {
          "description": "Indicates whether guest wants turndown facility or not.",
          "type": "boolean"
        }
      }
    },
    "resInventoryItemSourceType": {
      "description": "Defines whether the item is setup due to a Rate Plan, Package or a Block.",
      "type": "object",
      "properties": {
        "blockId": {
          "description": "Block Unique ID, If populated specifies that the item is setup due to a Block.",
          "$ref": "#/definitions/blockId"
        },
        "packageCode": {
          "description": "Package Code, If populated specifies that the item is setup due to a Package.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "packageInternalId": {
          "description": "Source Reservation Package Opera Internal Unique Id. This is the unique Id used for the reservation package associated with this item.",
          "type": "number"
        },
        "ratePlanCode": {
          "description": "Rate Plan Code, If populated specifies that the item is setup due to a Rate Plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "welcomeOffer": {
          "description": "If true, it implies that the item has been attached to the reservation as part of a Welcome Offer",
          "type": "boolean"
        }
      }
    },
    "resInventoryItemType": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "item": {
          "description": "Specifies Items and its attributes. When used for data manipulation for Items setup on reservation, etc only code is considered. Other Attributes are for used to provide information during fetch operation.",
          "$ref": "#/definitions/itemInfoType"
        },
        "quantity": {
          "description": "Number of items booked.",
          "type": "integer"
        },
        "source": {
          "description": "If exists specifies whether the item is setup due to a Rate Plan, Package or a Block.",
          "$ref": "#/definitions/resInventoryItemSourceType"
        },
        "timeSpan": {
          "description": "Begin and end date and time of the items applicability.",
          "$ref": "#/definitions/dateRangeType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "resInventoryItemsType": {
      "description": "Defines a collection of inventory items attached to a reservation.",
      "type": "object",
      "properties": {
        "item": {
          "description": "Inventory item attached to a reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/resInventoryItemType"
          }
        },
        "itemClassCode": {
          "description": "The Item Class ID which the item belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resMobileNotificationsType": {
      "description": "Contains the status of Room Ready and Key Ready messages.",
      "type": "object",
      "properties": {
        "checkoutMessageReceived": {
          "description": "Indicates if the Mobile checkout message is received.",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Error message when Mobile Notification has failed.",
          "type": "string"
        },
        "keyReady": {
          "description": "Denotes the status of Key Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "requiresAction": {
          "description": "Indicates if user action is required. The action could be for sending Room Ready or Key Ready Notification. It could also be for initiating Checkout",
          "type": "boolean"
        },
        "roomReady": {
          "description": "Denotes the status of Room Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        }
      }
    },
    "resPaymentCardType": {
      "description": "Information on a credit card for the customer.",
      "type": "object",
      "properties": {
        "approvalAmountNeeded": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "Approval code sent by the credit card company on a successful authorization.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cardHolderName": {
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cardNumber": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberMasked": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardOrToken": {
          "description": "This contains information on whether credit card is tokenized (token enabled). A value of 'Token' indicates credit card is token enabled and 'CardNumber' indicates non token environment for this payment card type.",
          "$ref": "#/definitions/cardNumberTypeType"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
          "type": "boolean"
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "currentAuthorizedAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "expirationDate": {
          "description": "Expiration date of the credit card",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expirationDateExpired": {
          "type": "boolean"
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "storeToCreditCardWallet": {
          "description": "Indicate whether the credit card will be stored to the credit card wallet or not.",
          "type": "boolean"
        },
        "swiped": {
          "type": "boolean"
        },
        "userDefinedCardType": {
          "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
          "type": "string",
          "maxLength": 2,
          "minLength": 0
        }
      }
    },
    "resPreConfiguredRoutingInstrType": {
      "description": "Instruction to attach Pre-Configured Routing Instructions to a Reservation.",
      "type": "object",
      "properties": {
        "authorizerInfo": {
          "description": "The authorizer information for Promotion Code with attached Complimentary Routing",
          "$ref": "#/definitions/authorizerInfoType"
        },
        "profileType": {
          "description": "Profile Type with attached Routing Instruction.",
          "$ref": "#/definitions/resProfileTypeType"
        },
        "promotionCode": {
          "description": "Promotion Code with attached Complimentary Routing.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "Rate Code with attached Routing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resProfileTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Group",
        "TravelAgent",
        "Source",
        "ReservationContact",
        "BillingContact",
        "Addressee"
      ]
    },
    "resRevenueBalanceType": {
      "description": "Revenue and Balance Amount summary for the reservation.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "Balance amount on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "foodAndBevRevenue": {
          "description": "Food and Beverage Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "nonRevenue": {
          "description": "Total Non Revenue posted on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "otherRevenue": {
          "description": "Other Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomRevenue": {
          "description": "Room Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalFixedCharge": {
          "description": "Total Fixed Charges on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPayment": {
          "description": "Total payment received for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalRevenue": {
          "description": "Total Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "resSharedGuestInfoType": {
      "description": "Contains information regarding the share reservation.",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "profileId": {
          "$ref": "#/definitions/profileId"
        }
      }
    },
    "resSharedGuestListType": {
      "description": "Collection of shared guest reservations.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resSharedGuestInfoType"
      }
    },
    "resStatClassificationType": {
      "description": "Statistical Classification information for the reservation.",
      "type": "object",
      "properties": {
        "rateTier": {
          "description": "Rate Tier used calculate statistics for export(DRS).",
          "type": "integer"
        },
        "roomType": {
          "description": "Room Type used to calculate statistics for export(DRS).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservation": {
      "description": "Return object to the request for information regarding a reservation.",
      "type": "object",
      "properties": {
        "channelInfo": {
          "description": "Channel specific information to be received in case the reservation is being created through a channel.",
          "$ref": "#/definitions/reservationChannelInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "masterInfoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "reservations": {
          "description": "Collection of Reservations returned/fetched as per the criteria in the fetch request.",
          "$ref": "#/definitions/hotelReservationsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationAlerts": {
      "description": "Request object to create or update multiple alerts information for multiple reservations in bulk.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservations": {
          "description": "A bulk Reservations with multiple alerts information for each reservation, that needs to be created or updated.",
          "$ref": "#/definitions/reservationAlertsListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationAlertsListType": {
      "description": "Holds multiple alerts for a single reservation. Reservation will be identified by a unique identifier/ list of unique identifiers.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationAlertsType"
      }
    },
    "reservationAlertsType": {
      "description": "Hold the multiple alerts for a single reservation which is identified by a unique identifier.",
      "type": "object",
      "properties": {
        "alert": {
          "description": "List of alerts.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/alertType"
          }
        },
        "hotelId": {
          "description": "Property code where the reservation belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationId": {
          "description": "Unique identifier for a reservation.",
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "reservationAllowedActionType": {
      "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
      "type": "string",
      "enum": [
        "Cancel",
        "Move",
        "PreCharge",
        "PostCharge",
        "FacilitySchedule",
        "Upsell",
        "PreCheckIn",
        "PostToNoShowCancel",
        "NoShow",
        "NameChange",
        "Discount",
        "HouseKeeping",
        "EnrollToPrimaryMembership",
        "EnrollInProgress",
        "MemberAwardAttached",
        "UpgradeAwardAttached"
      ]
    },
    "reservationAllowedActionsType": {
      "description": "Allowed action.",
      "type": "array",
      "maxItems": 11,
      "items": {
        "$ref": "#/definitions/reservationAllowedActionType"
      }
    },
    "reservationArrivalInfoType": {
      "description": "Type describing information regarding the arrival of a reservation.",
      "type": "object",
      "properties": {
        "arrivalTime": {
          "description": "The time at which the guest arrives at the hotel.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "reservationAttachments": {
      "description": "Return object to the request for information regarding reservation attachments.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationAttachments": {
          "description": "Collection of information about reservation attachments returned/fetched as per the criteria in the fetch request.",
          "$ref": "#/definitions/attachmentsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationAwards": {
      "description": "Response of fetch awards for a reservation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationAwards": {
          "description": "Reservation awards and certificates.",
          "$ref": "#/definitions/awardsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationBlockType": {
      "description": "Key information about the block for a reservation.",
      "type": "object",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers for the reservation.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "The Name of the block that is attached to the reservation.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "This is the HotelCode of the Block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationCancellationPolicyCriteria": {
      "description": "Request type to create a cancellation policy for a reservation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "policy": {
          "description": "Policy information used to create a Cancellation policy on the reservation.",
          "$ref": "#/definitions/reservationCancellationPolicyCriteriaType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationCancellationPolicyCriteriaType": {
      "description": "A cancellation policy attached with the reservation.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "Comments attached with the reservation cancellation.",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property where the reservation exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "percentageDue": {
          "description": "The percentage amount due for reservation cancellation.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "policy": {
          "description": "Cancellation policy details.",
          "$ref": "#/definitions/resCancelPenaltyType"
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reservationId": {
          "description": "Unique Id of the reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        }
      }
    },
    "reservationCertificateType": {
      "description": "Certificate is incentive.",
      "type": "string",
      "enum": [
        "Reward",
        "Incentive"
      ]
    },
    "reservationChannelInfoType": {
      "description": "Holds all the channel reservation specific information.",
      "type": "object",
      "properties": {
        "channelResvStatus": {
          "description": "Holds the reservation status to be returned to channel.",
          "$ref": "#/definitions/channelResvStatusType"
        },
        "channelSummaryInfo": {
          "description": "Holds channel details such as type, code",
          "$ref": "#/definitions/channelSummaryInfoType"
        }
      }
    },
    "reservationCommissionInfoType": {
      "type": "object",
      "properties": {
        "commissionNotesAvailable": {
          "type": "boolean"
        },
        "commissionsPaid": {
          "type": "boolean"
        }
      }
    },
    "reservationConfLettersListType": {
      "description": "Reservations information and the confirmation letters type attached with them.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationConfLettersType"
      }
    },
    "reservationConfLettersType": {
      "description": "Reservation information and the confirmation letters type attached with it.",
      "type": "object",
      "properties": {
        "confLetters": {
          "description": "The letters attached with the reservation.",
          "$ref": "#/definitions/confirmationsType"
        },
        "reservation": {
          "description": "Reservation details.",
          "$ref": "#/definitions/reservationInfoType"
        }
      }
    },
    "reservationConfirmationLetters": {
      "description": "Response object to the request to fetch a list of reservations for which confirmation letters need to be sent.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "resrvationInfoList": {
          "description": "Contains details of the reservation and the confirmations letters attached with them..",
          "$ref": "#/definitions/reservationConfLettersListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationDailyRateDetail": {
      "description": "Request for validating Daily Rate Details modifications.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property where the reservation belongs to.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "newDetail": {
          "description": "The changed details which is required to be validated.",
          "$ref": "#/definitions/dailyRateDetailType"
        },
        "reservationIdList": {
          "description": "List of Reservation Ids (Reservation Name Id and/or Confirmation No) of the reservation whose details are to be validated.",
          "$ref": "#/definitions/reservationIdList"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationDailyRateDetailDetails": {
      "description": "Response after validating the changes for Daily Rate Details modifications.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "newDetail": {
          "description": "Daily detail information with changes for Market Code, Source Code, Rate amount and Currency code, based on the validations done.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/dailyRateDetailType"
          }
        },
        "returnedValidations": {
          "description": "Collection of validation messages after the daily rate details are validated.",
          "$ref": "#/definitions/validationsReturnType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationDates": {
      "description": "Reservation Dates",
      "type": "object",
      "properties": {
        "arrivalDate": {
          "description": "Date of arrival.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "cancelledOn": {
          "description": "Date when reservation(s) was cancelled.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createDateTime": {
          "description": "Date when reservation(s) was created.",
          "type": "string",
          "format": "date-time"
        },
        "departureDate": {
          "description": "Date of departure.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioClosedOn": {
          "description": "Date when folio was closed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastModifyDateTime": {
          "description": "Date when reservation(s) was updated.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "reservationDepositPolicyCriteria": {
      "description": "Request type to create a deposit policy on a reservation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "policy": {
          "description": "Policy information used to create a deposit policy on the reservation.",
          "$ref": "#/definitions/reservationDepositPolicyCriteriaType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationDepositPolicyCriteriaType": {
      "description": "A deposit policy attached with the reservation.",
      "type": "object",
      "properties": {
        "amountDue": {
          "description": "Total amount due against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amountPaid": {
          "description": "Total amount paid against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "comments": {
          "description": "Comments attached with a deposit.",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property where the reservation exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "policy": {
          "description": "Reservation deposit policy details.",
          "$ref": "#/definitions/depositPolicyType"
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reservationId": {
          "description": "Unique ID of the reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        }
      }
    },
    "reservationDepositType": {
      "description": "Reservation Deposit Type.",
      "type": "object",
      "properties": {
        "amountPaid": {
          "description": "Deposit Amount Paid.",
          "type": "number"
        },
        "dueDate": {
          "description": "Deposit Due Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hasOutstanding": {
          "description": "Resolves whether reservation has outstanding deposit.",
          "type": "boolean"
        },
        "hasPaid": {
          "description": "Resolves whether reservation has paid deposit.",
          "type": "boolean"
        },
        "postingDate": {
          "description": "Deposit Posting Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "reservationDisplayColorInfoType": {
      "description": "Information of reservation display color, determined based on OPERA parameter RESERVATION_COLOR_DEFINITION ",
      "type": "object",
      "properties": {
        "colorDefinition": {
          "description": "Definition populated based on OPERA setting RESERVATION_COLOR_DEFINITION.",
          "$ref": "#/definitions/colorDefinitionType"
        },
        "colorDescription": {
          "description": "Description populated based on DisplayColor.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "displayColor": {
          "description": "Display Color of Reservation.",
          "$ref": "#/definitions/colorType"
        }
      }
    },
    "reservationECertificateType": {
      "description": "Reservation ECertificate Type Information.",
      "type": "object",
      "properties": {
        "actionType": {
          "description": "ECertificate status for the reservation.",
          "$ref": "#/definitions/requestActionType"
        },
        "eCertificateNo": {
          "description": "ECertificate Number for the reservation.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "eCertificateType": {
          "description": "ECertificate Type where value can be PROMOTION,AWARD,BENEFIT and OTHER",
          "$ref": "#/definitions/eCertificateClassficationType"
        }
      }
    },
    "reservationECertificatesType": {
      "description": "Collection of ECertificateType object.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationECertificateType"
      }
    },
    "reservationExcludedPreferences": {
      "description": "Response for the excluded preferences request.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationExcludedPreferences": {
          "description": "The collection of preferences that have been excluded for a specific preference attached to a reservation.",
          "$ref": "#/definitions/excludedPreferencesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationFolioWindowType": {
      "description": "Folio window view which holds the set of folios for a reservation.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "Running balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "payeeInfo": {
          "description": "The window's configured payee information.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "paymentMethod": {
          "description": "Payment Method Type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationFolioWindowsType": {
      "description": "Collection of reservation folio windows.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationFolioWindowType"
      }
    },
    "reservationHistoryFutureInfoType": {
      "description": "Information of History and Future Reservation details attached to Profiles.",
      "type": "object",
      "properties": {
        "futureList": {
          "description": "Refer to Future list type document.",
          "$ref": "#/definitions/futureListType"
        },
        "historyList": {
          "description": "Refer to History list type document.",
          "$ref": "#/definitions/historyListType"
        }
      }
    },
    "reservationId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "reservationIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "reservationInfoType": {
      "description": "The Reservation class contains the current reservation being created or altered.",
      "type": "object",
      "properties": {
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "allowedActions": {
          "description": "Collection of reservation allowed actions.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "cancellationInfo": {
          "description": "Information regarding why reservation has been/was cancelled.",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "description": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          }
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "commissionPayoutTo": {
          "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
          "$ref": "#/definitions/commissionPayoutToType"
        },
        "commissionsInfo": {
          "description": "Information related to commissions",
          "$ref": "#/definitions/reservationCommissionInfoType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "deposit": {
          "description": "Holds reservation deposit information.",
          "$ref": "#/definitions/reservationDepositType"
        },
        "displayColor": {
          "description": "Color setting of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "displayColorDetails": {
          "description": "Information of reservation display color, determined based on OPERA parameter RESERVATION_COLOR_DEFINITION ",
          "$ref": "#/definitions/reservationDisplayColorInfoType"
        },
        "expectedServiceTime": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "fiscalInfo": {
          "description": "Fiscal related informatin for a reservation.",
          "$ref": "#/definitions/fiscalInfoType"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "housekeeping": {
          "description": "Information regarding housekeeping for this reservation.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "keyCount": {
          "description": "Number of keys created for the reservation.",
          "type": "integer"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready, Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "openFolio": {
          "description": "Returns true when reservation has an open folio.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.",
          "type": "boolean"
        },
        "paymentMethod": {
          "description": "Payment Method.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preRegistered": {
          "description": "Defines if the reservation is pre-registered or not.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "reservationFolioWindows": {
          "description": "Collection of reservation folio windows.",
          "$ref": "#/definitions/reservationFolioWindowsType"
        },
        "reservationGuest": {
          "description": "Collection of guests associated with the reservation.",
          "$ref": "#/definitions/resGuestInfoType"
        },
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "reservationPaymentMethod": {
          "description": "Payment method used for this reservation",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "roomFeatures": {
          "description": "Set of reservation preferences which belongs to the Room Features.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "roomStatus": {
          "description": "Current room status",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "specials": {
          "description": "Set of reservation preferences which belongs to the Specials group.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/taxTypeType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is not in Waitlist status anymore.",
          "$ref": "#/definitions/waitlistResType"
        },
        "walkInIndicator": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "welcomeOffer": {
          "description": "This flag will determine wheather the reservation is eligible for Welcome Offer or not.",
          "type": "boolean"
        }
      }
    },
    "reservationInstructionType": {
      "description": "Simple type for reservation instructions that can be used in requests for information which needs to be returned.",
      "type": "string",
      "enum": [
        "Reservation",
        "Comments",
        "GuestComments",
        "ReservationMembershipAwards",
        "Packages",
        "InventoryItems",
        "ReservationPaymentMethods",
        "RoutingInstructions",
        "Preferences",
        "Memberships",
        "Alerts",
        "Traces",
        "ConfirmationLetters",
        "CallHistory",
        "FixedCharges",
        "GuestMessages",
        "ReservationPolicies",
        "Indicators",
        "LinkedReservations",
        "RevenuesAndBalances",
        "GuestLastStay",
        "ECoupons",
        "TrackItItems",
        "TotalCostOfStay",
        "ReservationAwards",
        "WebRegistrationCards",
        "ServiceRequests",
        "ReservationActivities",
        "ScheduledActivities",
        "PrepaidCards",
        "Shares",
        "Attachments",
        "Locators",
        "ProfileAwards",
        "TransactionDiversions",
        "Tickets",
        "GuestMemberships",
        "ECertificates",
        "UpsellInfo",
        "RoomAssignedByAI",
        "CustomNameValue",
        "CustomChargeExemptions",
        "FiscalInfo"
      ]
    },
    "reservationInterfaceStatusType": {
      "description": "Hotel Interface Type for a reservation and status of the various services",
      "type": "object",
      "properties": {
        "hotelInterface": {
          "description": "Hotel interface information for the reservation",
          "$ref": "#/definitions/hotelInterfaceType"
        },
        "interfaceRights": {
          "description": "Contains a list of status/rights for the various services under this interface",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceRightsStatusType"
          }
        },
        "roomExtension": {
          "description": "Identifier for the room extension",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationLocatorType": {
      "description": "Holds the information for a Reservation Guest Locator",
      "type": "object",
      "properties": {
        "dateSpan": {
          "description": "Begin and End date range of the Guest Locator.",
          "$ref": "#/definitions/dateRangeType"
        },
        "locatorBy": {
          "description": "User that entered this Guest Locator.",
          "type": "string"
        },
        "locatorId": {
          "description": "Unique Id of the Guest Locator ( Locator Id )",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "locatorOn": {
          "description": "Date and time of the Guest Locator.",
          "type": "string",
          "format": "date-time"
        },
        "locatorText": {
          "description": "The Locator Text for the guest.",
          "type": "string"
        },
        "timeSpan": {
          "description": "Time span for the Guest Locator.",
          "$ref": "#/definitions/dateTimeSpanType"
        }
      }
    },
    "reservationLocators": {
      "description": "Response object response to retrieve Guest Messages for a Reservation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationLocators": {
          "description": "Collection of hotel notes to be created.",
          "$ref": "#/definitions/reservationLocatorsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationLocatorsDetails": {
      "description": "Response object for creating new Notes for the hotel.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationLocators": {
          "description": "Collection of hotel notes to be created.",
          "$ref": "#/definitions/reservationLocatorsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationLocatorsDetailsInfo": {
      "description": "Request object for creating new Notes for the hotels",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property Code of the reservation.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationIdList": {
          "description": "Collection of unique identifiers of the reservations of which the Guest Messages will be created.",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationLocators": {
          "description": "Collection of hotel notes to be created.",
          "$ref": "#/definitions/reservationLocatorsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationLocatorsInfo": {
      "description": "Request object for changing hotel Notes for hotels.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property Code of the reservation.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "description": "Reservation Id for which the Guest Messages will be retrieved from.",
          "$ref": "#/definitions/reservationId"
        },
        "reservationLocators": {
          "description": "Collection of Hotel Notes to be modified.",
          "$ref": "#/definitions/reservationLocatorsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationLocatorsStatus": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationLocatorsType": {
      "description": "Holds the Locator Information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationLocatorType"
      }
    },
    "reservationLock": {
      "description": "Operation for requesting a lock on a reservation.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property code of the reservation.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "lockHandle": {
          "description": "An identifier representing the record lock for the reservation under process.When passed,then it will verify that if the lock is still valid and return same lock handle.Else it will create new lock.",
          "type": "number"
        },
        "overrideIfLockedByRequestingUser": {
          "description": "If true, the operation will try to break the existing lock if the requesting user is the same as the owner of the lock.",
          "type": "boolean"
        },
        "reservationId": {
          "description": "The id of the reservation we are requesting a lock for.",
          "$ref": "#/definitions/reservationId"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationLockDetails": {
      "description": "This response will indicate whether the requested lock has been granted or some other user owns the lock.",
      "type": "object",
      "properties": {
        "acquiredReservationLock": {
          "description": "This contains the lock information for the reservation.",
          "$ref": "#/definitions/operaRecordLock"
        },
        "existingReservationLock": {
          "description": "This will contain information about the reservation lock that is currently held by another user. Lock handle will be null.",
          "$ref": "#/definitions/operaRecordLock"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationMembership": {
      "description": "Method to create a reservation membership on an existing reservation.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property code of the Reservation.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "description": "Reservation Id for which the membership information has to be created.",
          "$ref": "#/definitions/reservationId"
        },
        "reservationMemberships": {
          "description": "Membership information for the membership card which has to be attached to the reservation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/reservationMembershipType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationMembershipAwardType": {
      "description": "This type contains information of a membership award attached to a reservation.",
      "type": "object",
      "properties": {
        "actualCancelPoints": {
          "description": "The number of points actually deducted from the member's total award points if there is a penalty points restriction associated with the award cancellation.",
          "type": "number",
          "minimum": 0,
          "maxLength": 20
        },
        "arrivalDate": {
          "description": "The arrival date of the stay for when the award is associated.",
          "type": "string",
          "format": "date"
        },
        "awardBasedOn": {
          "description": "Indicates if the Award is based on RATE, PRODUCT or UPGRADE.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "awardCancelDate": {
          "description": "If the reservation associated with the award was cancelled, the reservation cancellation date appears here.",
          "type": "string",
          "format": "date"
        },
        "awardCancellationNo": {
          "description": "Unique ID for the award cancellation if cancelled.",
          "type": "number",
          "minimum": 0,
          "maxLength": 20
        },
        "awardType": {
          "description": "Unique code that identifies this award.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "cancelPenaltyDays": {
          "description": "The cancel days, set up in awards configuration that establishes the number of days before arrival when a reservation may be cancelled without an award points penalty.",
          "type": "number",
          "minimum": 0,
          "maxLength": 20
        },
        "cancelPenaltyPoints": {
          "description": "The award points that will be deducted (based on a cancel days restriction) if the award is cancelled. (Cancel days, set up in awards configuration, and establish the number of days before arrival when a reservation may be cancelled without an award points penalty).",
          "type": "number",
          "minimum": 0,
          "maxLength": 20
        },
        "dateAwarded": {
          "description": "Date when the award was issued.",
          "type": "string",
          "format": "date"
        },
        "membershipCardNo": {
          "description": "The card number associated with this membership.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "membershipType": {
          "description": "Membership type for which awards are defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "pointsRequired": {
          "description": "Number of points required for the award.",
          "type": "number",
          "minimum": 0,
          "maxLength": 20
        }
      }
    },
    "reservationMembershipType": {
      "description": "Detailed information of the memberships.",
      "type": "object",
      "properties": {
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "linkMembership": {
          "type": "boolean"
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "primary": {
          "type": "boolean"
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        }
      }
    },
    "reservationPace": {
      "description": "FetchReservationPace response.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationPace": {
          "description": "Contains data returned from ReservationPace Web Service call.",
          "$ref": "#/definitions/reservationPaceRSType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationPaceRSType": {
      "description": "Contains reservation pace report data.",
      "type": "object",
      "properties": {
        "businessDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "dailyPaceStats": {
          "description": "Contains the statistical data.",
          "$ref": "#/definitions/dailyPaceStatsType"
        },
        "hotelId": {
          "type": "string"
        }
      }
    },
    "reservationPackageScheduleType": {
      "description": "A HotelPackageSchedule type.",
      "type": "object",
      "properties": {
        "computedResvPrice": {
          "description": "Computed Reservation Price of the package. Calculation Will Be Performed Based On Other Parameters.",
          "type": "number"
        },
        "consumptionDate": {
          "description": "The date the package was used or can be used.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "originalUnitAllowance": {
          "description": "The original allowance per unit of the package if it has been changed.",
          "type": "number"
        },
        "originalUnitPrice": {
          "description": "The original price per unit of the package if it has been changed.",
          "type": "number"
        },
        "reservationDate": {
          "description": "The date of the Reservation when this package is applicable. This can be different from the date the package will be consumed. Example are next day packages. Reservation date is when the package is applied to the guest and Consumption date is when the guest can consume the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "totalQuantity": {
          "description": "The total quantity of the package for this date, calculated based on the calculation rule as defined in the PackageHeaderType",
          "type": "integer"
        },
        "unitAllowance": {
          "description": "The allowance per unit of the package.",
          "type": "number"
        },
        "unitPrice": {
          "description": "The price per unit of the package.",
          "type": "number"
        }
      }
    },
    "reservationPackageType": {
      "description": "A ReservationPackageType class.",
      "type": "object",
      "properties": {
        "awardCode": {
          "description": "This is the Award code used to redeem the package if the package is a redemption package.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "consumptionDetails": {
          "description": "Package consumption details. Includes information for quantity , allowance etc.",
          "$ref": "#/definitions/packageConsumptionType"
        },
        "endDate": {
          "description": "Required value when changing a reservation package. If the original end date was null, then null is required.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "internalId": {
          "description": "Reservation Package Opera Internal Unique Id. This is the unique Id used for this reservation package.",
          "type": "number"
        },
        "newTimeSpan": {
          "description": "The changed dates(Start and End dates) for this product.",
          "$ref": "#/definitions/timeSpanType"
        },
        "packageCode": {
          "description": "Package code. This is the unique code used for the package and is a required element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "packageGroup": {
          "description": "Package group code. If this package is part of a package group, the group code is indicated here. This is a required element and is part of the key to fetch the correct package record .",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "packageHeaderType": {
          "description": "Package information from configuration.",
          "$ref": "#/definitions/packageCodeHeaderType"
        },
        "points": {
          "description": "Indicates the points used to redeem the redemption package.",
          "type": "integer"
        },
        "ratePlanCode": {
          "description": "The rate code which contains this package. If the package is not part of a rate code, this will be empty. Required element and part of the key to fetch the correct package record on the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "scheduleList": {
          "description": "A HotelPackageSchedule type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationPackageScheduleType"
          }
        },
        "source": {
          "description": "Indicates if the source of the product is Rate header, Rate Detail or Reservation. For new development this field is to be used for passing the product scource",
          "$ref": "#/definitions/productSourceType"
        },
        "startDate": {
          "description": "Required value when changing a reservation package. If the original start date was null, then null is required.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "reservationPackagesInfo": {
      "description": "Request method to attach a package to an existing reservation.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property Code of the reservation.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "description": "The reservation id for which the package has to be changed.",
          "$ref": "#/definitions/reservationId"
        },
        "reservationPackages": {
          "description": "A Service object represents a package provided to guests. Service packages may have associated inventory and charges.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/reservationPackageType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationPaymentMethodType": {
      "type": "object",
      "properties": {
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            }
          }
        },
        "folioView": {
          "type": "integer"
        },
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "paymentMethod": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationPaymentMethods": {
      "description": "Method to create a reservation's payment methods.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property code of the reservation.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "description": "Reservation Id for which the payment method is to be applied.",
          "$ref": "#/definitions/reservationId"
        },
        "reservationPaymentMethods": {
          "description": "List of payment methods which are to be attached to the reservation.",
          "$ref": "#/definitions/reservationPaymentMethodsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationPaymentMethodsType": {
      "description": "Defines reservation payment methods.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationPaymentMethodType"
      }
    },
    "reservationPolicies": {
      "description": "Response that contains deposit and cancellation policies attached with the reservation.",
      "type": "object",
      "properties": {
        "cancellationPolicies": {
          "description": "Cancellation policies associated with a reservation.",
          "$ref": "#/definitions/resCancellationPoliciesType"
        },
        "depositPolicies": {
          "description": "Deposit policies associated with a reservation.",
          "$ref": "#/definitions/resDepositPoliciesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationPoliciesType": {
      "description": "A collection of reservation deposit and cancellation policies.",
      "type": "object",
      "properties": {
        "cancellationPolicies": {
          "description": "A collection of reservation cancellation policies..",
          "$ref": "#/definitions/resCancellationPoliciesType"
        },
        "depositPolicies": {
          "description": "A collection of reservation deposit policies.",
          "$ref": "#/definitions/resDepositPoliciesType"
        },
        "name": {
          "description": "Name identifier for the reservation.",
          "type": "string"
        },
        "reservationIdList": {
          "description": "A list of Ids for reservation.",
          "$ref": "#/definitions/uniqueIDListType"
        }
      }
    },
    "reservationPreCheckInDetailsType": {
      "description": "Type describing the different details regarding a pre-registered reservation including ID.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of this reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preCheckInDetails": {
          "description": "The time at which the guest arrives at the hotel.",
          "$ref": "#/definitions/preCheckInDetailsType"
        },
        "reservationId": {
          "description": "The id of this reservation.",
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "reservationPreference": {
      "description": "Response for the reservation's preferences.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationPreferences": {
          "description": "For reservation preferences, you will want to send ReservationPreferenceType as the preferenceType object to acknowledge any reservation related process with the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/preferenceTypeType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationPreferenceDetails": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationPreferenceInfo": {
      "description": "Method to change a reservation preference on an existing reservation.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property Code of the reservation.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "description": "Reservation Id of the reservation for which the preference has to be changed.",
          "$ref": "#/definitions/reservationId"
        },
        "reservationPreferences": {
          "description": "Preference information for the reservation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/preferenceTypeType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationProfileType": {
      "type": "object",
      "properties": {
        "profile": {
          "description": "Provides detailed information regarding either a company or a customer profile.",
          "$ref": "#/definitions/profileType"
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "reservationQueueInformationType": {
      "description": "Information regarding the Date, Duration and Priority of the reservation on Queue for Check in.",
      "type": "object",
      "properties": {
        "averageQueueTimeCurrentReservations": {
          "description": "The average time, in seconds, of the reservations currently in queue.",
          "type": "integer"
        },
        "averageQueueTimeToCheckIn": {
          "description": "The average time, in seconds, a reservation was on queue prior to Check-In.",
          "type": "integer"
        },
        "guestTextInfo": {
          "description": "Information for the message sent to the user",
          "$ref": "#/definitions/queueTextInfoType"
        },
        "priority": {
          "description": "The Queue Priority given to this reservation.",
          "type": "integer"
        },
        "queueDate": {
          "description": "The Business date on which the reservation was due to arrive and is currently placed on Queue for Check In.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "timeSpan": {
          "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
          "type": "object",
          "properties": {
            "duration": {
              "type": "string"
            },
            "durationInSeconds": {
              "description": "The total duration, in seconds, the reservation is on Queue.",
              "type": "integer"
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        }
      }
    },
    "reservationRateSummaryDetailType": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "Currency revenue calculation is based on.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "gross": {
          "description": "Amount of revenue and package excluding tax.",
          "type": "number"
        },
        "net": {
          "description": "Amount of revenue and package including tax.",
          "type": "number"
        },
        "package": {
          "description": "Amount of an additional product or service that is sold as part of the rate or in addition to the rate.",
          "type": "number"
        },
        "ratePlanCode": {
          "description": "Rate code calculation is based on.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateSuppressed": {
          "description": "Indicates if the rate is to be hidden.",
          "type": "boolean"
        },
        "revenue": {
          "description": "Base Amount of rate.",
          "type": "number"
        },
        "revenueSimulationDate": {
          "description": "Date revenue calculation is based on.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "summaryDate": {
          "description": "Stay date for which revenue calculation is done.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "tax": {
          "description": "Amount of tax generated separately on the revenue and package.",
          "type": "number"
        }
      }
    },
    "reservationRateSummaryType": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "Currency revenue calculation is based on.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "deposit": {
          "description": "Amount paid prior to the stay.",
          "type": "number"
        },
        "details": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationRateSummaryDetailType"
          }
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fixedCharges": {
          "description": "Amount of automatically posted charges along with room and taxes.",
          "type": "number"
        },
        "gross": {
          "description": "Amount of revenue and package excluding tax.",
          "type": "number"
        },
        "guestPay": {
          "description": "Amount to be paid by Guest.",
          "type": "number"
        },
        "hasSuppressedRate": {
          "description": "Whether suppressed rate is present or not.",
          "type": "boolean"
        },
        "net": {
          "description": "Amount of revenue and package including tax.",
          "type": "number"
        },
        "outStandingCostOfStay": {
          "description": "Remaining amount to be paid.",
          "type": "number"
        },
        "routing": {
          "description": "Amount of automatically forwarded charges for specific transaction codes.",
          "type": "number"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "totalCostOfStay": {
          "description": "Amount of total cost of stay.",
          "type": "number"
        }
      }
    },
    "reservationReversePolicyCriteriaType": {
      "description": "Reverse policy information of a reservation.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property where the reservation exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reservationId": {
          "description": "Unique Id of the reservation.",
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "reservationRoomOwnershipType": {
      "description": "Indicates if the assigned reservation room is an Owner/Referral or Regular room.",
      "type": "string",
      "enum": [
        "Owner",
        "Referral",
        "Regular"
      ]
    },
    "reservationRoutingCriteria": {
      "description": "Request to create a routing instruction.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Reservation routing criteria defining the routing information to be created.",
          "$ref": "#/definitions/resvRoutingCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationStatistics": {
      "description": "FetchReservationStatistics response",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "statisticsType": {
          "description": "Collection of statistic data of a reservation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/statisticType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationStayHistoryFutureInfoType": {
      "description": "Information of History and Future Reservation details attached to Profiles.",
      "type": "object",
      "properties": {
        "futureList": {
          "description": "Refer to Future list type document.",
          "$ref": "#/definitions/stayFutureListType"
        },
        "historyList": {
          "description": "Refer to History list type document.",
          "$ref": "#/definitions/stayHistoryListType"
        }
      }
    },
    "reservationSummaryListType": {
      "description": "List of Reservations.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationSummaryType"
      }
    },
    "reservationSummaryType": {
      "type": "object",
      "properties": {
        "guarantee": {
          "description": "Guarantee Information for Reservation.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "guestFirstName": {
          "description": "Guest First Name.",
          "$ref": "#/definitions/givenNameType"
        },
        "guestLastName": {
          "description": "Guest Last Name.",
          "$ref": "#/definitions/surnameType"
        },
        "reservationIdList": {
          "description": "Unique reservation identifiers.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "stayPeriod": {
          "description": "Stay Duration of the reservation.",
          "$ref": "#/definitions/dateRangeType"
        }
      }
    },
    "reservationTaxTypeInfo": {
      "description": "Provides information about the Tax Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "taxExemptNo": {
          "description": "Tax exempt number on the profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationTransactionDiversionType": {
      "description": "A Transaction Diversion Rule Type",
      "type": "object",
      "properties": {
        "code": {
          "description": "Transaction Diversion Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "dailyDetails": {
          "description": "Collection of daily details of a Transaction diversion rule for a particular reservation.",
          "$ref": "#/definitions/transactionDiversionDailyDetailsType"
        },
        "description": {
          "description": "User defined message for the Transaction Diversion Rule.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "displaySequence": {
          "description": "User configured Sequence number.",
          "type": "number"
        },
        "diverted": {
          "description": "Transaction diversions that are diverted .",
          "type": "integer"
        },
        "hotelId": {
          "description": "Hotel code with which Transaction Diversion Rule is associated.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicator that tells whether the transaction diversion rule is active or not.",
          "type": "boolean"
        },
        "level": {
          "description": "Level of the Transaction Diversion rule that can be Property or Reservation.",
          "$ref": "#/definitions/transactionDiversionRuleLevelType"
        },
        "membership": {
          "description": "Membership type to consider while applying Diversion Instruction.",
          "$ref": "#/definitions/membershipTypeLevelType"
        },
        "notes": {
          "description": "The Note details related to the Transaction Diversion Rule.",
          "$ref": "#/definitions/commentInfoType"
        },
        "posted": {
          "description": "Transaction diversions that are posted.",
          "type": "integer"
        },
        "targetRoom": {
          "description": "Room number to receive all the diverted transactions configured for this instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "thresholds": {
          "description": "Threshold Details related to the Transaction diversion rule.",
          "$ref": "#/definitions/thresholdDetailsType"
        },
        "transactionCodes": {
          "description": "Collection of Transaction Code List",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "type": {
          "description": "Transaction Diversion Rule Types",
          "$ref": "#/definitions/transactionDiversionRuleTypeType"
        },
        "vipCode": {
          "description": "VIP code to consider while applying Diversion Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationTransactionDiversionsType": {
      "description": "List of Transaction Diversion rules.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationTransactionDiversionType"
      }
    },
    "reservationTurndownInfoType": {
      "description": "Turndown information for a reservation",
      "type": "object",
      "properties": {
        "allowed": {
          "description": "Indicates if turndown is allowed or not",
          "type": "boolean"
        },
        "status": {
          "description": "Indicates turndown status, values could be required, not required, completed",
          "$ref": "#/definitions/turndownStatusType"
        }
      }
    },
    "reservationUpsellInfo": {
      "description": "Response object to the that contains information for a reservation prior to upgrade.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "upsellInfo": {
          "description": "Reservation Upsale information.",
          "$ref": "#/definitions/upsellInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationValidationInstructionType": {
      "description": "Instruction to validate CompRouting Instructions attached to a reservation.",
      "type": "string",
      "enum": [
        "StayHeader",
        "StayDates",
        "OverlappingStay",
        "Packages",
        "RefreshPackages",
        "Preferences",
        "AccessRestrictions",
        "Ecertificates",
        "Promotions",
        "TrackItItems",
        "TotalCostOfStay",
        "ReservationAwards",
        "WebRegistrationCards",
        "ServiceRequests",
        "ReservationActivities",
        "ScheduledActivities",
        "PrepaidCards",
        "Shares",
        "Attachments",
        "Locators",
        "ProfileAwards",
        "RefreshRates",
        "ReservationGuarantee",
        "UpsellsAvailable",
        "InventoryItems",
        "CompRouting"
      ]
    },
    "reservations": {
      "description": "Unique identifier for a reservation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationId"
      }
    },
    "reservationsDetails": {
      "description": "Response object to the Fetch Reservation Request operation. Based on the criteria, reservation information is returned.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "masterInfoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "reservations": {
          "description": "Collection of Reservations and their information.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "limit": {
              "description": "Indicates maximum number of records a Web Service should return.",
              "type": "integer"
            },
            "offset": {
              "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
              "type": "integer"
            },
            "reservationInfo": {
              "description": "Contains details of the reservation.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationInfoType"
              }
            },
            "totalPages": {
              "description": "Evaluated total page count based on the requested max fetch count.",
              "type": "integer"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationsInformationType": {
      "description": "Reservations Information.",
      "type": "object",
      "properties": {
        "adults": {
          "description": "Total number of adults.",
          "type": "integer"
        },
        "advancedCheckedIn": {
          "description": "Indicates if the reservation has performed an Advance Check In.",
          "type": "boolean"
        },
        "amount": {
          "description": "Total share amount.",
          "type": "number"
        },
        "arrivalTime": {
          "description": "Arrival Time of reservation.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "balance": {
          "description": "Balance.",
          "type": "number"
        },
        "blockIdList": {
          "description": "Unique identifiers for Blocks. Eg: BlockId, BlockCode",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/distinctIDType"
          }
        },
        "bookedRoomType": {
          "description": "Booked Room Type.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "children": {
          "description": "Number of children.",
          "type": "integer"
        },
        "companyDetails": {
          "description": "Company Details",
          "$ref": "#/definitions/companyDetails"
        },
        "computedReservationStatus": {
          "description": "Computed reservation status.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "creatorId": {
          "description": "Internal User ID used to create reservation.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "currencyCode": {
          "description": "Currency code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "departureTime": {
          "description": "Departure Time of reservation.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "externalReferences": {
          "description": "This type stores the External Reference information for Reservation. Confirmation Number is also supported here if its having a valid non default leg number identifiable via idContext as OPERA",
          "$ref": "#/definitions/externalReferencesType"
        },
        "groupDetails": {
          "description": "Group Details",
          "$ref": "#/definitions/groupDetails"
        },
        "guaranteeCode": {
          "description": "Reservation guarantee code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "guestDetails": {
          "description": "Guest Information",
          "$ref": "#/definitions/guestDetails"
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Internal User ID used to update the reservation details.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "linkCode": {
          "description": "Party code.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "marketCode": {
          "description": "Market code of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipDetails": {
          "description": "Membership Details",
          "$ref": "#/definitions/membershipDetails"
        },
        "nights": {
          "description": "Number of Nights",
          "type": "integer"
        },
        "noOfRooms": {
          "description": "Number of rooms.",
          "type": "integer"
        },
        "originCode": {
          "description": "Channel used to create the reservation.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "paymentType": {
          "description": "Payment method used for the reservation.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "preRegistered": {
          "description": "Indicates whether the reservation is pre-registered for internet check-in or not.",
          "type": "boolean"
        },
        "promotionCode": {
          "description": "Promotion Code for the Reservation.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "rateCode": {
          "description": "Rate code used for the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "registrationCardNumber": {
          "description": "Registration card number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "reservationDates": {
          "description": "Reservation Dates",
          "$ref": "#/definitions/reservationDates"
        },
        "reservationIdList": {
          "description": "Unique identifiers for both internal and external systems Eg: ReservationId, ConfirmationNumber, CancellationNumber, ExternalReferenceNumber etc",
          "type": "array",
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/distinctIDType"
          }
        },
        "reservationStatus": {
          "description": "Reservation status.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomId": {
          "description": "Room Number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "Room Type.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "shared": {
          "description": "Indicates if the reservation is shared or not.",
          "type": "boolean"
        },
        "sourceCode": {
          "description": "Source of the created reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "travelAgentDetails": {
          "description": "Travel Agent Details",
          "$ref": "#/definitions/travelAgentDetails"
        },
        "vipStatus": {
          "description": "VIP Status.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationsInstructionsType": {
      "description": "Instructions for a reservation.",
      "type": "object",
      "properties": {
        "linkReservations": {
          "description": "Instructions for linked reservations.",
          "$ref": "#/definitions/linkReservationInstructionType"
        },
        "shareReservations": {
          "description": "Instruction to assign rate on each share reservation. This can be FULL: Full Rate for each Sharer. SPLIT: Split the Rate amount between Sharer Reservations. ENTIRE: This Sharer provided as ShareToReservationID will get the total amount of the rate code for all the Sharer Reservations.",
          "$ref": "#/definitions/shareReservationInstructionType"
        }
      }
    },
    "reservationsSummary": {
      "description": "Response object to the Fetch Reservations information. Based on the criteria, reservation information is returned.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationsSummaryInformation": {
          "description": "Collection of reservations summary fetched.",
          "$ref": "#/definitions/reservationsSummaryInformationType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationsSummaryInformationType": {
      "description": "Reservations Summary.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Indicates number of records the API has returned actually as per the API request criteria.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether there are more records available to be returned as per the API request criteria or not.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates number of records the API can return as per the API request limit sent. A maximum of 200 records can be only returned at a time.",
          "type": "integer"
        },
        "offset": {
          "description": "Indicates the index of the next applicable set(page).",
          "type": "integer"
        },
        "reservationsInformation": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationsInformationType"
          }
        },
        "totalResults": {
          "description": "Indicates total number of records available that can be returned as per the API request criteria.",
          "type": "integer"
        }
      }
    },
    "reservationsToMerge": {
      "description": "Request method to Merge reservations.",
      "type": "object",
      "properties": {
        "fromReservationID": {
          "description": "Unique identifier of the reservation to be merged with.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Property code of the reservation.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "toReservationIDList": {
          "description": "Collection of unique reservation identifiers",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationsUpgradeEligibility": {
      "description": "Request object containing a list of reservation name ids, hotel code and eligibility flag.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "upgradeEligibilityListType": {
          "description": "List of unique identifiers of the reservations to be checked.",
          "$ref": "#/definitions/upgradeEligibilityListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationsUpgradeEligibilityDetails": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reserveInventoryItems": {
      "description": "Request object to reserve inventory Items for a reservation.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property Code of the reservation.",
          "$ref": "#/definitions/codeType"
        },
        "inventoryItems": {
          "description": "Collection of inventory items to be reserved for the reservation.",
          "$ref": "#/definitions/resInventoryItemsType"
        },
        "itemHoldIdList": {
          "description": "List of Item Hold IDs to reserve the inventory items",
          "$ref": "#/definitions/itemHoldIDListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "description": "The reservation id for which the package has to be changed.",
          "$ref": "#/definitions/reservationId"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservedInventoryItemsInfo": {
      "description": "Request object to change the reserved inventory Items for a reservation.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property Code of the reservation.",
          "$ref": "#/definitions/codeType"
        },
        "inventoryItems": {
          "description": "Collection of reserved inventory items to be changed.",
          "$ref": "#/definitions/resInventoryItemsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "description": "The reservation id for which the package has to be changed.",
          "$ref": "#/definitions/reservationId"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "responseInstructionsType": {
      "description": "Enumaration of the different return modes of a response.",
      "type": "string",
      "enum": [
        "Id",
        "FullInfo",
        "ErrorsWarnings"
      ]
    },
    "resvGuestMessageType": {
      "description": "List of Guest Messages",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "delivery": {
          "description": "Holds the Delivery Method Information",
          "$ref": "#/definitions/messageDeliveryType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "message": {
          "description": "Holds the Message Information",
          "$ref": "#/definitions/resvMessageType"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "resvGuestMessagesType": {
      "description": "Holds the Message Information",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resvGuestMessageType"
      }
    },
    "resvMessageType": {
      "description": "Holds the Message Information",
      "type": "object",
      "properties": {
        "arrivalDate": {
          "description": "Display the arrival date of the guest.",
          "type": "string",
          "format": "date-time"
        },
        "blockCode": {
          "description": "Display the block code associated with the reservation.",
          "type": "string"
        },
        "blockId": {
          "description": "Display the block Id associated with the reservation.",
          "$ref": "#/definitions/blockId"
        },
        "confirmationNo": {
          "description": "Confirmation number of the reservation.",
          "type": "string"
        },
        "departureDate": {
          "description": "Display the departure date of the guest.",
          "type": "string",
          "format": "date-time"
        },
        "guaranteeCode": {
          "description": "Guarantee Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "guestNameId": {
          "description": "shows the Id of the Guest.",
          "type": "integer"
        },
        "messageDate": {
          "description": "Date the message was created",
          "type": "string",
          "format": "date-time"
        },
        "messageText": {
          "description": "Message Content",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "noOfNights": {
          "description": "shows the number of nights for the reservation.",
          "type": "integer"
        },
        "operator": {
          "description": "User who created the Message",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "recipient": {
          "description": "Recipient of the Message",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "reservationId": {
          "description": "Unique identifier of the reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "reservationStatus": {
          "description": "Status of the reservation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "roomId": {
          "description": "Display room number if it has been assigned.",
          "type": "string"
        },
        "roomStatus": {
          "description": "Display the status of the Room.",
          "type": "string"
        },
        "typeOfMessage": {
          "description": "Type of message (Voice/Text)",
          "$ref": "#/definitions/typeOfMessageType"
        }
      }
    },
    "resvRoutingCriteriaType": {
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding object.",
      "type": "object",
      "properties": {
        "comp": {
          "description": "Comp Accounting Routing Info",
          "type": "object",
          "properties": {
            "compAccountingInfo": {
              "$ref": "#/definitions/compAccountingType"
            },
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            }
          }
        },
        "folio": {
          "description": "Folio routing type.",
          "type": "object",
          "properties": {
            "aRNumber": {
              "description": "Accounts Receivable.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "guestInfo": {
              "description": "Guest details",
              "type": "object",
              "properties": {
                "profileIdList": {
                  "description": "Unique identifiers for the Profile for both internal and external systems.",
                  "$ref": "#/definitions/profileIdList"
                }
              }
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            },
            "paymentMethod": {
              "type": "string",
              "maxLength": 2000
            }
          }
        },
        "hotelId": {
          "description": "Hotel context of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "refreshFolio": {
          "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
          "type": "boolean"
        },
        "request": {
          "description": "Comp Accounting Request routing",
          "type": "object",
          "properties": {
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        },
        "reservationId": {
          "description": "Unique ID of a reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "retrievePostingsForRoomRouting": {
          "description": "This flag indicates if postings that can be refreshed need to be part of the response when a routing instruction is created, updated or deleted.",
          "type": "boolean"
        },
        "room": {
          "description": "Room routing type.",
          "type": "object",
          "properties": {
            "guestDisplayName": {
              "description": "Display Name for the guest.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "guestNameId": {
              "description": "Guest unique identifier to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "reservationNameId": {
              "description": "Reservation name id to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "roomId": {
              "description": "Room number to route the instructions.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            }
          }
        }
      }
    },
    "revenueCategorySummaryType": {
      "description": "This element has revenue amount data for its revenue category such as Room Revenue, Food and Beverage Revenue.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "revenueCategoryCode": {
          "description": "The representation of a revenue category.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "reverseDepositPolicy": {
      "description": "Request type to reverse deposit policy of a reservation.(This is applicable only when advance deposit handling is set to '17') ReverseDepositPolicy operation will reverse the policy by creating a new request with same opposite amount.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "policy": {
          "description": "Policy information used to reverse deposit policy of the reservation.",
          "$ref": "#/definitions/reservationReversePolicyCriteriaType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "rewardCertificateType": {
      "description": "Point Saver reward.",
      "type": "string",
      "enum": [
        "Regular",
        "StayAnytime",
        "PointSaver"
      ]
    },
    "roomCalendar": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "roomCalendar": {
          "description": "Room Calendar Information.",
          "$ref": "#/definitions/roomCalendarType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomCalendarDisplayType": {
      "description": "Display Information for the Room Calendar.",
      "type": "object",
      "properties": {
        "displayColor": {
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "displayLabel": {
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "roomCalendarInfoType": {
      "description": "Holds hotel Room and Reservation Information.",
      "type": "object",
      "properties": {
        "componentRoomReservationsForSuite": {
          "description": "If room is a component suite , holds information about component room reservations",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/componentBlockOutDates"
          }
        },
        "componentSuite": {
          "description": "Indicates if a room is a Component Suite or not.",
          "type": "boolean"
        },
        "houseKeeping": {
          "description": "Indicates true/false. When this flag is set to true indicates room type of the room is flagged as housekeeping.",
          "type": "boolean"
        },
        "pseudo": {
          "description": "Indicates if a room is a Pseudo room or not.",
          "type": "boolean"
        },
        "roomId": {
          "description": "Room Number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomInfo": {
          "description": "Holds the Schedule and Reservations.",
          "$ref": "#/definitions/roomInfo"
        },
        "roomOrder": {
          "description": "Order the Room is displayed based on the Room Display Room settings.",
          "type": "integer"
        },
        "roomSchedule": {
          "description": "Holds the Schedule and Reservations.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomScheduleType"
          }
        }
      }
    },
    "roomCalendarResType": {
      "description": "Reservation Information for a Reservation Item in the Calendar.",
      "type": "object",
      "properties": {
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "assignedByAI": {
          "description": "Indicates whether the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "dateTimeSpan": {
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "givenName": {
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "guarantee": {
          "$ref": "#/definitions/resGuaranteeType"
        },
        "hasLinkedReservations": {
          "description": "Indicates whether the reservation has any linked reservation.",
          "$ref": "#/definitions/linkedReservationType"
        },
        "noOfRooms": {
          "type": "integer"
        },
        "reservationIdList": {
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationStatus": {
          "description": "Indicates the Actual status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "roomMoveHistory": {
          "description": "Room Move History for the reservation.",
          "$ref": "#/definitions/roomMoveDetailsType"
        },
        "roomNumberLocked": {
          "description": "Verify if the room number is locked for the reservation. When true the room number cannot be changed.",
          "type": "boolean"
        },
        "roomScheduleDisplay": {
          "description": "Display configuration for this reservation.",
          "$ref": "#/definitions/roomCalendarDisplayType"
        },
        "surname": {
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "title": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "upgradedByAI": {
          "description": "Indicates whether the room assigned by AI Room Assignment was an upgrade.",
          "type": "boolean"
        },
        "vipStatus": {
          "description": "VIP status of the guest.",
          "$ref": "#/definitions/vIPStatusType"
        }
      }
    },
    "roomCalendarType": {
      "description": "Room Calendar entry that holds Room and Reservation Information.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "The resort of the Room Calendar.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "pageIndex": {
          "description": "Current Page the group of Rooms is included in.",
          "type": "integer"
        },
        "recordsPerPage": {
          "description": "Number of records per page.",
          "type": "integer"
        },
        "room": {
          "description": "Holds the Room Information.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomCalendarInfoType"
          }
        },
        "totalRooms": {
          "description": "Total Numebr of Rooms.",
          "type": "integer"
        }
      }
    },
    "roomFeatureType": {
      "description": "Room Feature Information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "A code representing a room feature.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "A code representing a room feature.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "quantity": {
          "description": "Indicates quantity.",
          "type": "integer"
        }
      }
    },
    "roomFeaturesType": {
      "description": "A recurring element that identifies the room features.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomFeatureType"
      }
    },
    "roomInfo": {
      "description": "Room details",
      "type": "object",
      "properties": {
        "componentRoomNumber": {
          "description": "Component Room Number.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "componentSuiteRoomNumbers": {
          "description": "Component Suite Room Numbers.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "connectingRooms": {
          "description": "Room number.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "roomCondition": {
          "description": "Room Condition information if the room has an associated Room Condition.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomStatus": {
          "description": "Status of the room (Dirty/Clean/Inspected/Pickup).",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "roomType": {
          "description": "Room Type of the Room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "roomMoveDetailType": {
      "description": "Room move history information.",
      "type": "object",
      "properties": {
        "date": {
          "description": "Business date on which room is moved.",
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "description": "Description of why room is moved.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fromRoom": {
          "description": "Room from which guest is moved.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Identifies the hotel code under which room is moved.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "movedBy": {
          "description": "The user who moved the guest.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "reasonCode": {
          "description": "Identifies the room move reason code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationId": {
          "description": "Unique identifier of the reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "toRoom": {
          "description": "Room to which guest is moved.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "roomMoveDetailsType": {
      "description": "List of room move details",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomMoveDetailType"
      }
    },
    "roomOwnershipType": {
      "description": "Define the search criteria for retrieving room ownership records",
      "type": "object",
      "properties": {
        "contractNumber": {
          "description": "Contract number for room owner.",
          "type": "string"
        },
        "endDate": {
          "description": "End Date of the room ownership record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "profileId": {
          "description": "Profile ID of the room ownership record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "roomCategory": {
          "description": "Room Category of the room ownership record.",
          "type": "string"
        },
        "roomId": {
          "description": "Room Id of room owner.",
          "type": "string"
        },
        "roomOwnershipId": {
          "description": "Unique Id for Room Owner record.",
          "type": "integer"
        },
        "roomType": {
          "description": "Room Type of the room ownership record.",
          "type": "string"
        },
        "startDate": {
          "description": "Start Date of the room ownership record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "status": {
          "description": "Status of the room ownership record.",
          "type": "string"
        }
      }
    },
    "roomPoolStatType": {
      "description": "Statistics of one room pool.",
      "type": "object",
      "properties": {
        "compRooms": {
          "description": "Number of complementary rooms.",
          "type": "integer"
        },
        "paidRooms": {
          "description": "Number of non-complementary rooms.",
          "type": "integer"
        },
        "roomPool": {
          "description": "Room pool (room pool represents a group of room types).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomRevenue": {
          "description": "Room revenue amount.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "roomPoolStatsType": {
      "description": "Statistics of one room pool.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomPoolStatType"
      }
    },
    "roomRateType": {
      "type": "object",
      "properties": {
        "allowAutoCheckIn": {
          "description": "It represents whether auto check-in is enabled or not for psuedo room types.",
          "type": "boolean"
        },
        "awardCode": {
          "description": "Used by 3rd party CRS, the Award Code defines if this day/rate was booked as an Award in the Loyalty System.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "awardNumber": {
          "description": "Used by 3rd party CRS, the Award Number defines if this day/rate was booked as an Award in the Loyalty System.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "awards": {
          "description": "Membership Awards code applied on the reservation.",
          "$ref": "#/definitions/resAwardsType"
        },
        "barRanking": {
          "description": "Best Available rates ranking.",
          "type": "integer"
        },
        "bogoDiscount": {
          "description": "Indicates if the Rate Code has BOGO(Bye one Get one) indicator.",
          "type": "boolean"
        },
        "commissionAmount": {
          "description": "Indicates commission amount used by the rate plan.",
          "type": "integer"
        },
        "commissionCode": {
          "description": "Commission Code applicable for commission calculation for Travel Agent/Company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "commissionPercentage": {
          "description": "Indicates commission percentage used by the rate plan.",
          "type": "integer"
        },
        "commissionable": {
          "description": "Indicates Commission is applicable for commission calculation for Travel Agent/Company.",
          "type": "boolean"
        },
        "complimentary": {
          "description": "Indicates this reservation rate is complimentary.",
          "type": "boolean"
        },
        "discountAllowed": {
          "description": "Indicates if the Rate Code is discountable i.e discounts are allowed on the rate code.",
          "type": "boolean"
        },
        "eligibilityCode": {
          "description": "Used by 3rd party CRS, the Eligible Reservation Code defines if this day/rate is eligible for points in the Loyalty System.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fixedRate": {
          "description": "Fixed Rate Indicator.",
          "type": "boolean"
        },
        "guestCounts": {
          "description": "A collection of Guest Counts associated with the room rate.",
          "$ref": "#/definitions/guestCountsType"
        },
        "houseUseOnly": {
          "description": "Indicates this reservation is for House use.",
          "type": "boolean"
        },
        "inventoryLender": {
          "description": "Indicates whether the room type inventory was taken from the allotment or House availability.",
          "type": "string"
        },
        "marketCode": {
          "description": "The code that relates to the market being sold to (e.g., the corporate market, packages).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketCodeDescription": {
          "description": "Description of the market code.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "numberOfUnits": {
          "description": "The number of rooms.",
          "type": "integer"
        },
        "packages": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/packageElementType"
          }
        },
        "promotionCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "rateGroup": {
          "description": "For RatePlanSet equals BESTAVAILABLERATE, in case Rate Groups are enabled the element provides the rate group for the rate plan code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateLevel": {
          "description": "Rate plan type like Corporate,Regular,Military,Weekend etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rates": {
          "$ref": "#/definitions/ratesType"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "roomId": {
          "description": "A string value representing the unique identification of a room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomRateInfo": {
          "description": "Information about the Room Rate Combination.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "roomType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomTypeCharged": {
          "description": "Room Type used for the Rate calculation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCode": {
          "description": "To specify where the business came from e.g. radio, newspaper ad, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "stayProfiles": {
          "description": "Profile associated with the room Stay.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationProfileType"
          }
        },
        "suppressRate": {
          "type": "boolean"
        },
        "taxFreeGuestCounts": {
          "description": "A collection of Tax Free Guest Counts associated with the room rate. This list does not add to the guest count but just indicates number of tax free guests out of guest counts.",
          "$ref": "#/definitions/guestCountsType"
        },
        "taxIncluded": {
          "description": "If true, indicates if tax is included in the rate code.",
          "type": "boolean"
        },
        "total": {
          "$ref": "#/definitions/totalType"
        },
        "totalPoints": {
          "$ref": "#/definitions/pointsType"
        }
      }
    },
    "roomScheduleCategoryType": {
      "description": "Enumeration of the different Room Schedule Types.",
      "type": "string",
      "enum": [
        "Reservation",
        "Ooo",
        "Oos",
        "Default"
      ]
    },
    "roomScheduleType": {
      "description": "Holds TimeSpan and Reservation Information.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description for the the Room Schedule.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "end": {
          "description": "The ending value of the time span.",
          "type": "string",
          "format": "date-time"
        },
        "roomCalendarResList": {
          "description": "List of Reservations under this schedule.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomCalendarResType"
          }
        },
        "roomScheduleCategory": {
          "description": "Tells the type of Schedule Item this record is.",
          "$ref": "#/definitions/roomScheduleCategoryType"
        },
        "roomScheduleDisplay": {
          "description": "Display configuration for this schedule.",
          "$ref": "#/definitions/roomCalendarDisplayType"
        },
        "start": {
          "description": "The starting value of the time span.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "roomStayType": {
      "type": "object",
      "properties": {
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "availableUpsellOfferCount": {
          "description": "Number of Upsell Offers Available for this stay. This will only be populated if the Upsell Instruction is included in the Allowed Instruction request",
          "type": "integer"
        },
        "bookingMedium": {
          "description": "Classifies the medium(Channel field on reservation screen) through which the reservation is made.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bookingMediumDescription": {
          "description": "Description of the booking medium.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "currentRoomInfo": {
          "description": "Room information of the reservation for the current day.",
          "$ref": "#/definitions/currentRoomInfoType"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "expectedTimes": {
          "description": "The Expected Arrival and Departure Times.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "guestCounts": {
          "$ref": "#/definitions/guestCountsType"
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready and Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "multiValueAttrs": {
          "description": "Informative indicators indicating different values of an attribute exists over the stay.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 2000
          }
        },
        "originalTimeSpan": {
          "description": "The Original Time Span(Arrival, Departure) which covers the Room Stay. In case of Rolling No Show TimeSpan's StratDate moves forward but OriginalTimeSpan's StratDate remains the same.",
          "$ref": "#/definitions/timeSpanType"
        },
        "primaryShareType": {
          "description": "This is populated in case of primary share scenario. This indicates whether this reservation is primary or non primary. Changes or postings to the 'non-primary' share reservation is not allowed.",
          "$ref": "#/definitions/primaryShareTypeType"
        },
        "printRate": {
          "description": "This control whether rate info will be printed in confirmation letter.",
          "type": "boolean"
        },
        "promotion": {
          "description": "Promotions applied to the reservation to get the promotional rate.",
          "$ref": "#/definitions/promotionType"
        },
        "registrationNumber": {
          "description": "Registration Number of the reservation for the current day.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "remoteCheckInAllowed": {
          "description": "Indicates whether the reservation is pre-registered for internet check-in or not.",
          "type": "boolean"
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "roomRates": {
          "description": "A collection of Room Rates associated with a particular Room Stay. Each Room Rate combination can have multiple rates. Example King room, Rack rate plan, Monday through Thursday, weekday amount, Friday and Saturday, weekend amount.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomRateType"
          }
        },
        "suiteWith": {
          "description": "Connecting Rooms.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "total": {
          "description": "The total amount charged for the Room Stay.",
          "$ref": "#/definitions/totalType"
        },
        "totalPoints": {
          "description": "The total number of Points charged for the Room Stay.",
          "$ref": "#/definitions/pointsType"
        },
        "upsellInfo": {
          "description": "Indicates Upsell Information to be applied on Reservation.",
          "$ref": "#/definitions/upsellInfoType"
        }
      }
    },
    "roomTypeAttributesType": {
      "description": "Attributes of property room type.",
      "type": "object",
      "properties": {
        "defaultOccupancy": {
          "description": "Default occupancy of property room type.",
          "type": "integer"
        },
        "maximumAdults": {
          "description": "Maximum adult occupancy of property room type.",
          "type": "integer"
        },
        "maximumChildren": {
          "description": "Maximum children occupancy of property room type.",
          "type": "integer"
        },
        "maximumOccupancy": {
          "description": "Max occupancy of property room type.",
          "type": "integer"
        },
        "minimumOccupancy": {
          "description": "Minimum occupancy of property room type.",
          "type": "integer"
        },
        "noOfPhysicalRooms": {
          "description": "Number of physical rooms of property room type.",
          "type": "integer"
        }
      }
    },
    "roomTypeInfoType": {
      "type": "object",
      "properties": {
        "accessible": {
          "description": "Indicates whether room type is accessible or not.",
          "type": "boolean"
        },
        "bedType": {
          "description": "Information regarding the bed type associated with the room type.",
          "$ref": "#/definitions/bedTypeInfoType"
        },
        "bedTypeCodes": {
          "description": "Bed type code associated with room.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "bookingChannelMappings": {
          "description": "Booking Channels mapping for the Room Type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/bookingChannelMappingType"
          }
        },
        "component": {
          "description": "Indicates room type is a Component Room.",
          "type": "boolean"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invBlockCode": {
          "description": "Block code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "longDescription": {
          "description": "Detail description of the Room Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "promotionCode": {
          "description": "Represents the promotional code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "roomClass": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomFeatures": {
          "description": "Collection of room features.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "roomQualifierCode": {
          "description": "Represents the room qualifier code like Deluxe,Economy,Suite etc.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "roomQualifierMatchIndicator": {
          "description": "Represents the match indicator of room qualifier code returned in the response with the requested room qualifier code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomTypeAttributes": {
          "description": "Room type attributes.",
          "$ref": "#/definitions/roomTypeAttributesType"
        },
        "roomViewCode": {
          "description": "Represents the room view code like City view, River view, Ocean view etc.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "suite": {
          "description": "Indicates room type is a suite.",
          "type": "boolean"
        },
        "webName": {
          "description": "Name corresponding to a RoomType.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "webPage": {
          "description": "URL providing more information about the Room Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "routingInfoListType": {
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding instructions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/routingInfoType"
      }
    },
    "routingInfoType": {
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding object.",
      "type": "object",
      "properties": {
        "comp": {
          "description": "Comp Accounting Routing Info",
          "type": "object",
          "properties": {
            "compAccountingInfo": {
              "$ref": "#/definitions/compAccountingType"
            },
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            }
          }
        },
        "folio": {
          "description": "Folio routing type.",
          "type": "object",
          "properties": {
            "aRNumber": {
              "description": "Accounts Receivable.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "guestInfo": {
              "description": "Guest details",
              "type": "object",
              "properties": {
                "profileIdList": {
                  "description": "Unique identifiers for the Profile for both internal and external systems.",
                  "$ref": "#/definitions/profileIdList"
                }
              }
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            },
            "paymentMethod": {
              "type": "string",
              "maxLength": 2000
            }
          }
        },
        "refreshFolio": {
          "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
          "type": "boolean"
        },
        "request": {
          "description": "Comp Accounting Request routing",
          "type": "object",
          "properties": {
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        },
        "room": {
          "description": "Room routing type.",
          "type": "object",
          "properties": {
            "guestDisplayName": {
              "description": "Display Name for the guest.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "guestNameId": {
              "description": "Guest unique identifier to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "reservationNameId": {
              "description": "Reservation name id to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "roomId": {
              "description": "Room number to route the instructions.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            }
          }
        }
      }
    },
    "routingInstructionType": {
      "description": "Routing limit can be one of the three: Credit Limit, Percetage Limit, Covers Limit",
      "type": "object",
      "properties": {
        "billingInstructions": {
          "description": "Set of Billing Instructions configured in this time span.",
          "$ref": "#/definitions/billingInstructionsType"
        },
        "covers": {
          "description": "Number of covers for this routing instruction.",
          "type": "number"
        },
        "creditLimit": {
          "description": "Allowable credit amount for this routing instruction. Null value means no limit, 0 equals zero.",
          "type": "number"
        },
        "duration": {
          "description": "Duration of this instruction.",
          "type": "object",
          "properties": {
            "daily": {
              "description": "Flag to indicate if the routing instruction is a daily instruction.",
              "type": "boolean"
            },
            "friday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            },
            "sunday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "timeSpan": {
              "$ref": "#/definitions/timeSpanType"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            }
          }
        },
        "limitUsed": {
          "description": "Amount of Credit used for this routing instruction.",
          "type": "number"
        },
        "percentageLimit": {
          "description": "The routing limit percentage allowed for this routing instruction.",
          "type": "number"
        },
        "routingLinkId": {
          "description": "Internal Routing Link Id identifier to which limit group the instruction belongs.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "transactionCodes": {
          "description": "Set of Transaction Codes configured in this time span.",
          "$ref": "#/definitions/trxCodesInfoType"
        }
      }
    },
    "routingInstructions": {
      "description": "Response object containing routing instructions for a reservation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "routingInstructions": {
          "description": "Set of Routing Instructions.",
          "$ref": "#/definitions/routingInfoListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "routingInstructionsInfo": {
      "description": "Request when changing a routing instruction.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Transactions and scheduled instructions included in this routing element will be replaced with the new element.",
          "type": "object",
          "properties": {
            "comp": {
              "description": "Comp Accounting Routing Info",
              "type": "object",
              "properties": {
                "compRequestInfo": {
                  "$ref": "#/definitions/compRoutingRequestType"
                },
                "instructions": {
                  "description": "Set of routing instructions associated to this routing type.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/routingInstructionType"
                  }
                },
                "payeeInfo": {
                  "$ref": "#/definitions/payeeInfoType"
                }
              }
            },
            "folio": {
              "description": "Folio routing type.",
              "type": "object",
              "properties": {
                "aRNumber": {
                  "description": "Accounts Receivable.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "guestInfo": {
                  "description": "Guest details",
                  "type": "object",
                  "properties": {
                    "profileIdList": {
                      "description": "Unique identifiers for the Profile for both internal and external systems.",
                      "$ref": "#/definitions/profileIdList"
                    }
                  }
                },
                "instructions": {
                  "description": "Set of routing instructions associated to this routing type.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/routingInstructionType"
                  }
                },
                "payeeInfo": {
                  "$ref": "#/definitions/payeeInfoType"
                },
                "paymentMethod": {
                  "type": "string",
                  "maxLength": 2000
                }
              }
            },
            "hotelId": {
              "description": "Hotel context of the reservation.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "newRoutingInfo": {
              "description": "Transactions and schedule instructions which will replace the base element.",
              "$ref": "#/definitions/routingInfoType"
            },
            "refreshFolio": {
              "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
              "type": "boolean"
            },
            "request": {
              "description": "Comp Accounting Request routing",
              "type": "object",
              "properties": {
                "compRequestInfo": {
                  "$ref": "#/definitions/compRoutingRequestType"
                },
                "instructions": {
                  "description": "Set of routing instructions associated to this routing type.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/routingInstructionType"
                  }
                }
              }
            },
            "reservationId": {
              "description": "Unique ID of a reservation.",
              "$ref": "#/definitions/reservationId"
            },
            "retrievePostingsForRoomRouting": {
              "description": "This flag indicates if postings that can be refreshed need to be part of the response when a routing instruction is created, updated or deleted.",
              "type": "boolean"
            },
            "room": {
              "description": "Room routing type.",
              "type": "object",
              "properties": {
                "guestDisplayName": {
                  "description": "Display Name for the guest.",
                  "type": "string",
                  "maxLength": 80,
                  "minLength": 0
                },
                "guestNameId": {
                  "description": "Guest unique identifier to which the instruction will be routed.",
                  "$ref": "#/definitions/uniqueID_Type"
                },
                "instructions": {
                  "description": "Set of routing instructions associated to this routing type.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/routingInstructionType"
                  }
                },
                "reservationNameId": {
                  "description": "Reservation name id to which the instruction will be routed.",
                  "$ref": "#/definitions/uniqueID_Type"
                },
                "roomNumber": {
                  "description": "Room number to route the instructions.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                }
              }
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "scopeType": {
      "description": "Minimum required and complimentary values are applicable Per Stay.",
      "type": "string",
      "enum": [
        "PerDay",
        "PerStay"
      ]
    },
    "script": {
      "description": "Script for a Reservation based on its StayDetails as well as itinerary.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "script": {
          "description": "The script for the reservation, which was requested.",
          "type": "string",
          "format": "byte"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "searchMatchType": {
      "description": "Search match indicating attribute and the matching value.",
      "type": "object",
      "properties": {
        "attribute": {
          "description": "Search match attribute.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "value": {
          "description": "Search match value.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "searchMatchesType": {
      "description": "List of Generic Name-Value-Pair Parameters used for super search matches.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/searchMatchType"
      }
    },
    "sellMessageConfig": {
      "description": "This is the request message type for sell message update operation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "sellMessageConfigs": {
          "description": "A collection of Service objects. This is the collection of all services associated with any part of this reservation (the reservation in its entirety, one or more guests, or one or more room stays). Which services are attributable to which part is determined by each object's ServiceRPHs collection.",
          "$ref": "#/definitions/sellMessageConfigsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "sellMessageConfigType": {
      "description": "Only one of the following can hold a value: HotelCode, CROCode or ChainCode",
      "type": "object",
      "properties": {
        "blockCode": {
          "description": "Block Code to which the sell message is defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "blockId": {
          "description": "Unique OPERA Block ID which is used to find a Block from OPERA. This ID is a primary identification of a Block in OPERA.",
          "$ref": "#/definitions/blockId"
        },
        "chainCode": {
          "description": "Chain Code for which the sell message is defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "croCode": {
          "description": "CRO Code for which the sell message is defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code for which the sell message is defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "languageCode": {
          "description": "Language in which the sell message is defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "message": {
          "description": "Sell message text.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "Rate Plan Code for which the sell message is defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "Room type for which the sell message is defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sellSequence": {
          "description": "This number indicates the display order of the sell message.",
          "type": "number"
        },
        "stickyFlag": {
          "description": "Sticky flag is used to define if the sell message should display on the block screen by default.",
          "type": "boolean"
        },
        "timespan": {
          "description": "Begin and End date for the sell message.",
          "$ref": "#/definitions/timeSpanType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "usedInModule": {
          "description": "This represents the moduleType where we want to display this SellMessage.",
          "type": "array",
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/usedInModuleType"
          }
        }
      }
    },
    "sellMessageConfigsType": {
      "description": "The SellMessageConfigsType is the list of sell messages, each comprising of all the sell message attributes and other details.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "sellMessageConfig": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/sellMessageConfigType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "sellMessageType": {
      "description": "The SellMessagesType defines the standard attributes that will be retrieved with the sell message.",
      "type": "object",
      "properties": {
        "beginDate": {
          "description": "This is the Begin date for the configured SellMessage.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "chainCode": {
          "description": "This is the chain code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "croCode": {
          "description": "This is the Central Reservation office code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "This is the hotel code or resort.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "languageCode": {
          "description": "This is the language code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "message": {
          "description": "This is the message text.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "This represents the rate plan code of the room type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "This represents the room type code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "stickyFlagYn": {
          "description": "Flag which tells if this message is Sticky (Y/N).",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "usedInModule": {
          "description": "This represents the correct moduletype which should be used for fetching SellMessages.",
          "$ref": "#/definitions/usedInModuleType"
        }
      }
    },
    "sellMessages": {
      "description": "This is the Response Message Type to the request for retrieving Sell Messages.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "sellMessages": {
          "description": "Sell Messages which are retrieved as per the criteria in the request message. Refer to the generic common types document for the SellMessagesType.",
          "$ref": "#/definitions/sellMessagesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "sellMessagesType": {
      "description": "The SellMessagesType is the list of message and attributes returned by web service.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "sellMessage": {
          "description": "This is the message text.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/sellMessageType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "sentConfirmationStatus": {
      "type": "string",
      "enum": [
        "Pending",
        "Succeeded",
        "Failed"
      ]
    },
    "serviceRequest": {
      "description": "Service request.",
      "type": "object",
      "properties": {
        "action": {
          "description": "Description of the action taken to complete the request.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "code": {
          "description": "Service request code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "comment": {
          "description": "Description of the service request.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "department": {
          "description": "The department that is associated with the service request code.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "guestName": {
          "description": "The guest name.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code of the service request.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "priority": {
          "description": "The priority level of the service request.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "profileId": {
          "description": "Unique identifier of the guest.",
          "$ref": "#/definitions/profileId"
        },
        "reservationIdList": {
          "description": "Unique identifier of the reservation.",
          "$ref": "#/definitions/reservationIdList"
        },
        "room": {
          "description": "The room number in which the service request was created.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "status": {
          "description": "The status of the service request.",
          "$ref": "#/definitions/serviceRequestStatusType"
        }
      }
    },
    "serviceRequestStatusType": {
      "type": "string",
      "enum": [
        "Open",
        "PendingFollowUp",
        "Closed",
        "DoNotDisturb",
        "MakeUpRoom"
      ]
    },
    "serviceRequests": {
      "description": "Service request.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/serviceRequest"
      }
    },
    "shareDistributionCriteria": {
      "description": "Extended Reservation object to hold additional instructions along with the reservation. This should be used for updates on the reservation.",
      "type": "object",
      "properties": {
        "distributionType": {
          "description": "Type Of Rate Change for the Sharer Reservation. Valid Types are Full, Entire and Zero.",
          "$ref": "#/definitions/shareDistributionInstructionType"
        },
        "shareReservations": {
          "description": "Collection of instructions to be returned as a set of reservation information.",
          "$ref": "#/definitions/shareReservationsType"
        }
      }
    },
    "shareDistributionInstructionType": {
      "description": "The type of Rate Amount Change to be done on the Sharer reservation. This can be FULL -> Full Rate for each Sharer. SPLIT-> Split the Rate amount between Sharer Reservations. ENTIRE -> This Sharer will get the total amount of the rate code for all the Sharer Reservations.",
      "type": "string",
      "enum": [
        "Full",
        "Entire",
        "Split",
        "CustomSplit"
      ]
    },
    "shareReservationInstructionType": {
      "type": "object",
      "properties": {
        "effectiveRates": {
          "description": "Effective rates to apply on share reservations.",
          "$ref": "#/definitions/effectiveRatesType"
        },
        "fixedRate": {
          "description": "Indicates whether fixed rate will be applied to all shares.",
          "type": "boolean"
        },
        "paymentMethod": {
          "description": "Payment Method to be applied to any sharing reservation that has a reservation type that requires a credit card and does not have a credit card.",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "rateAmountShare": {
          "description": "Instruction to assign rate on each share reservation. This can be FULL: Full Rate for each Sharer. SPLIT: Split the Rate amount between Sharer Reservations. ENTIRE: This Sharer provided as ShareToReservationID will get the total amount of the rate code for all the Sharer Reservations.",
          "$ref": "#/definitions/shareDistributionInstructionType"
        },
        "shareType": {
          "description": "Indicates the share instruction to process from the reservation request object.",
          "$ref": "#/definitions/shareTypeType"
        }
      }
    },
    "shareReservationType": {
      "type": "object",
      "properties": {
        "dailyRates": {
          "description": "Collection of room rate information on a daily basis.",
          "$ref": "#/definitions/dailyRatesType"
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "shareReservations": {
      "description": "Response for the fetch share reservation request. This returns all sharer reservations including the request reservation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "shareReservations": {
          "description": "Collection of guests who share this reservation. Reservation information will only include the Room Information and Guest Information.",
          "$ref": "#/definitions/hotelReservationsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "shareReservationsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/shareReservationType"
      }
    },
    "shareTypeType": {
      "description": "Indicates that only profile information will be retrieved from the reservation request object and the rest will be provided from the master reservation.",
      "type": "string",
      "enum": [
        "Reservation",
        "Profile"
      ]
    },
    "sharingGuestType": {
      "description": "The Reservation class contains the current reservation with the guest counts(adults or children).",
      "type": "object",
      "properties": {
        "guestCounts": {
          "description": "Holds the guest counts(adults or children) associated with this Reservation.",
          "$ref": "#/definitions/guestCountsType"
        },
        "hotelId": {
          "description": "Hotel Code of this reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationId": {
          "description": "The id of this reservation.",
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "sourceOfSaleType": {
      "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
      "type": "object",
      "properties": {
        "sourceCode": {
          "description": "The entity/channel who made the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceType": {
          "description": "Type of entity/channel who made the reservation..",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "splitMultiRoomReservation": {
      "description": "Request to split multi-room reservation into separate reservations.",
      "type": "object",
      "properties": {
        "copyPaymentInformation": {
          "description": "Flag to instruct the operation to copy payment methods of the original reservation to the new reservation to be created.",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "lockHandle": {
          "description": "An identifier representing the record lock for the reservation under process. When passed, the operation will verify that the lock is still valid.",
          "type": "number"
        },
        "reservationId": {
          "description": "Unique identifier of the multi-room reservation that is to be split.",
          "$ref": "#/definitions/reservationId"
        },
        "reservationPaymentMethods": {
          "description": "Defines collection of payment methods that will be copied from original reservation to the new reservation to be created.",
          "$ref": "#/definitions/copyReservationPaymentMethodsType"
        },
        "responseInstructions": {
          "description": "Response instruction for the operation.",
          "type": "object",
          "properties": {
            "fetchLinkedReservations": {
              "description": "If set to TRUE, response will have the list of linked reservations.",
              "type": "boolean"
            },
            "fetchNewReservationIDs": {
              "description": "If set to TRUE, response will have the list of unique identifiers of the reservations that were created.",
              "type": "boolean"
            }
          }
        },
        "splitAll": {
          "description": "If set to TRUE, the reservation will be separated into number of rooms that it currently has. Otherwise, only 1 single room reservation will be created and the original reservation will be deducted with 1 room.",
          "type": "boolean"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "splitMultiRoomReservationDetails": {
      "description": "Response for splitting multi-room reservation into separate reservations.",
      "type": "object",
      "properties": {
        "linkedReservations": {
          "description": "Collection of linked reservations which includes itinerary, shared, and created reservations from split operation. This will be returned depending on the response instruction.",
          "$ref": "#/definitions/linkedReservationsInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "newReservationIdList": {
          "description": "Collection of unique identifiers of the reservations that were created by the split operation. This will be returned depending on the response instruction.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "statisticCodeType": {
      "description": "Defines the codes and corresponding categories for which the data in the other elements has been gathered.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Statistic code description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "statCategoryCode": {
          "description": "Category Code category of StatCode attribute (e.g. Market Segment).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "statCode": {
          "description": "Actual code used by the system to collect the statistics (e.g. CORP, RACK if category is Market Segment).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "statCodeClass": {
          "description": "Class grouping of StatCode attribute.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "statisticSetsType": {
          "description": "Collection of statistic summary data.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/statisticSetType"
          }
        }
      }
    },
    "statisticSetType": {
      "description": "An instance of a statistic, which is a set containing revenue category and number category summaries.",
      "type": "object",
      "properties": {
        "numericCategorySummariesType": {
          "description": "Collection of CountCategorySummary elements. Used if count values reported.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/numericCategorySummaryType"
          }
        },
        "revenueCategorySummariesType": {
          "description": "Collection of RevenueCategorySummary elements. Used if revenue values reported.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/revenueCategorySummaryType"
          }
        },
        "statisticDate": {
          "description": "Date of the statistic.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "weekendDate": {
          "description": "Determines whether statistic date is a weekend date.",
          "type": "boolean"
        }
      }
    },
    "statisticType": {
      "description": "Defines all details needed to create a statistical report.",
      "type": "object",
      "properties": {
        "chainCode": {
          "description": "The code that identifies a hotel chain or management group. The hotel chain code is decided between vendors. This attribute is optional if the hotel is an independent property that can be identified by the HotelCode attribute.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "chainName": {
          "description": "The name of the hotel chain (e.g., Hilton, Marriott, Hyatt).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "description": {
          "description": "This element has revenue amount data for its revenue category such as Room Revenue, Food and Beverage Revenue.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fiscalDate": {
          "description": "Hotel fiscal date for statistics.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotelCityCode": {
          "description": "The IATA city code; for example DCA, ORD.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelCodeContext": {
          "description": "A text field used to communicate the context (or source of - ex Sabre, Galileo, Worldspan, Amadeus) the HotelReferenceGroup codes.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "The code that uniquely identifies a single hotel property. The hotel code is decided between vendors.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelName": {
          "description": "A text field used to communicate the proper name of the hotel.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "reportCode": {
          "description": "Identifies the type of statistics collected. Each ReportCode corresponds to a set of category summaries based upon a predetermined agreement.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "statisticCodesType": {
          "description": "Statistic Codes.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/statisticCodeType"
          }
        }
      }
    },
    "status": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "statusType": {
      "description": "Status of the batch process.",
      "type": "string",
      "enum": [
        "Success",
        "Error",
        "Running",
        "Stopped",
        "Warning",
        "Failed",
        "Started",
        "CompletedWithLogs"
      ]
    },
    "stayFutureListType": {
      "description": "A collection of reservation history details attached to Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : Future reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "stayHistoryListType": {
      "description": "A collection of reservation history details attached to Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "stayInfoType": {
      "description": "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.",
      "type": "object",
      "properties": {
        "adultCount": {
          "description": "A collection of Guest Counts associated with Room Stay.",
          "type": "integer"
        },
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "balance": {
          "description": "Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "bookingChannelCode": {
          "description": "Booking channel code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "childCount": {
          "description": "A collection of Child Counts associated with Room Stay.",
          "type": "integer"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "depositPayments": {
          "description": "A collection of deposit and/or payments for the Room Stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "expectedTimes": {
          "description": "The expected arrival, return and departure times of the guest.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "fixedRate": {
          "description": "True if the rate is a fixed rate, otherwise false",
          "type": "boolean"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "guestServiceStatus": {
          "description": "Service Status of In House guest like DND or MUP",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "linkCode": {
          "description": "Party code",
          "type": "string",
          "maxLength": 2000
        },
        "marketCode": {
          "description": "Market code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "numberOfRooms": {
          "description": "Room Id",
          "type": "integer"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "points": {
          "description": "The Points contains the number of points used to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "promotion": {
          "description": "Promotion Codes",
          "$ref": "#/definitions/promotionType"
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "ratePlanCode": {
          "description": "Rate plan code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateSuppressed": {
          "description": "Whether this rate should be suppressed from view",
          "type": "boolean"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "roomAvailableNights": {
          "description": "Number of nights this room is avaiable if room is assigned to reservation",
          "type": "integer"
        },
        "roomClass": {
          "description": "Room class code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomId": {
          "description": "Room Id",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "roomOwnershipType": {
          "description": "Provides the information of the assigned reservation room is an Owner, Referral or regular room.This value is returned when Room Rotation OPERA Control is active and room number is assigned to a reservation.",
          "$ref": "#/definitions/reservationRoomOwnershipType"
        },
        "roomType": {
          "description": "Room type code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomTypeCharged": {
          "description": "Room type code that was charged",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "scheduledCheckoutTime": {
          "description": "Indicates that this reservation is scheduled for automated check out.",
          "type": "string",
          "format": "date"
        },
        "sourceCode": {
          "description": "Source of business",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "totalAmount": {
          "description": "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "upgradedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "stayReservationInfoType": {
      "description": "The Reservation class contains the current reservation being created or altered.",
      "type": "object",
      "properties": {
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        }
      }
    },
    "surnameType": {
      "description": "Family name, last name.",
      "type": "string",
      "maxLength": 80,
      "minLength": 0
    },
    "taxType": {
      "description": "Applicable tax element. This element allows for both percentages and flat amounts. If one field is used, the other should be zero since logically, taxes should be calculated in only one of the two ways.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "code": {
          "description": "Code identifying the fee (e.g.,agency fee, municipality fee).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "type": {
          "description": "Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).",
          "$ref": "#/definitions/amountDeterminationType"
        }
      }
    },
    "taxTypeType": {
      "description": "Provides information about the Tax Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "taxesType": {
      "description": "A collection of taxes.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "tax": {
          "description": "An individual tax.",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/taxType"
          }
        }
      }
    },
    "telephoneInfoType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "telephoneType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "extension": {
          "description": "Extension to reach a specific party at the phone number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        }
      }
    },
    "thresholdDetailsType": {
      "description": "Type for the threshold elements.",
      "type": "object",
      "properties": {
        "complimentary": {
          "description": "The number of quantities, counts or minutes for which transaction diversion is allowed .",
          "type": "integer"
        },
        "entity": {
          "description": "Diversion entity type associated with the charge for the transaction diversion rule .",
          "$ref": "#/definitions/entityType"
        },
        "isEditable": {
          "description": "Configuring this flag to be TRUE will make the thresholds editable.",
          "type": "boolean"
        },
        "minRequired": {
          "description": "Minimum required number of quantities, counts or minutes that must be posted.",
          "type": "integer"
        },
        "scope": {
          "description": "Diversion scope for the transaction diversion rule.",
          "$ref": "#/definitions/scopeType"
        }
      }
    },
    "ticketType": {
      "description": "Reservation Ticket Type Information.",
      "type": "object",
      "properties": {
        "consumptionDate": {
          "description": "Tickets comsumption date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "description": {
          "description": "Package description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "issueDate": {
          "description": "Tickets issue date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "packageCode": {
          "description": "Package Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "price": {
          "description": "Tickets price.",
          "type": "number"
        },
        "quantity": {
          "description": "Number of tickets used to create multiple tickets.",
          "type": "integer"
        },
        "rateCode": {
          "description": "The Rate Code to which tickets belong to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reference": {
          "description": "Free text field for reference information.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reservationProductId": {
          "description": "Reference to the reservation product.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "status": {
          "description": "The Status Code for outbound WS call.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "statusDescription": {
          "description": "The Status Description for outbound WS call.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "ticketId": {
          "description": "Internal Unique ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "ticketNumber": {
          "description": "Ticket number.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "tickets": {
      "description": "Common tickets request base type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "tickets": {
          "description": "Collection of inquired tickets.",
          "$ref": "#/definitions/ticketsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ticketsInfo": {
      "description": "Common tickets request base type.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the Reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "description": "The reservation id for which the tickets has to be created.",
          "$ref": "#/definitions/reservationId"
        },
        "tickets": {
          "description": "Collection of tickets which have to be created.",
          "$ref": "#/definitions/ticketsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ticketsType": {
      "description": "Collection of TicketType objects.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/ticketType"
      }
    },
    "tierAdministrationType": {
      "description": "Do not upgrade membership. The membership may be downgraded.",
      "type": "string",
      "enum": [
        "Disabled",
        "NoUpgrade"
      ]
    },
    "timeSpanType": {
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "type": "object",
      "properties": {
        "duration": {
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "timeWindowType": {
      "description": "Defines a Time period with start time and an end time.",
      "type": "object",
      "properties": {
        "endTime": {
          "description": "End Time of the Time window.",
          "type": "string"
        },
        "startTime": {
          "description": "Start Time of the Time window.",
          "type": "string"
        }
      }
    },
    "totalType": {
      "description": "The total amount charged for the service including additional amounts and fees.",
      "type": "object",
      "properties": {
        "amountAfterTax": {
          "description": "The total amount including all associated taxes (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "amountBeforeTax": {
          "description": "The total amount not including any associated tax (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "baseAmount": {
          "description": "The rate's base price. Amount excluding price for any add to rate combine line package attached to the rate.Also excludes any discounts",
          "type": "number"
        },
        "code": {
          "description": "Type of charge.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "rateOverride": {
          "description": "When true indicates that the rate amount has been overridden.",
          "type": "boolean"
        },
        "taxes": {
          "description": "A collection of taxes.",
          "$ref": "#/definitions/taxesType"
        }
      }
    },
    "traceResolveType": {
      "type": "object",
      "properties": {
        "resolvedBy": {
          "description": "User that resolved the trace",
          "type": "string"
        },
        "resolvedOn": {
          "description": "Date the trace was resolved",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "traceTimeInfoType": {
      "type": "object",
      "properties": {
        "dateTimeSpan": {
          "description": "Time span for the trace.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "enteredBy": {
          "description": "User that entered this trace.",
          "type": "string"
        },
        "traceOn": {
          "description": "Date of the trace.",
          "type": "string",
          "format": "date-time"
        },
        "traceTime": {
          "description": "Time of the trace",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "traces": {
      "description": "Return object to the request for information regarding traces.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "traces": {
          "description": "List of traces returned/fetched as per the criteria in the fetch request.",
          "$ref": "#/definitions/hotelReservationTracesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trackItActionType": {
      "description": "Identifies the response expected from staff or other parties relative to a Track It ticket.",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/actionStatusType"
        },
        "trackItAction": {
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "trackItGroup": {
      "description": "Group to which the Track It items belong.",
      "type": "string",
      "enum": [
        "Parcel",
        "Valet",
        "Baggage",
        "Lost"
      ]
    },
    "trackItId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "trackItItemType": {
      "description": "Detailed information of a Track It item.",
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/trackItActionType"
        },
        "assignedTo": {
          "$ref": "#/definitions/applicationUserType"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "followUpDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "group": {
          "$ref": "#/definitions/trackItGroup"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "location": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "quantity": {
          "type": "integer"
        },
        "referenceNumber": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationInfo": {
          "$ref": "#/definitions/trackItReservationInfoType"
        },
        "ticketNumber": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "trackItId": {
          "$ref": "#/definitions/trackItId"
        },
        "trackItLogList": {
          "$ref": "#/definitions/trackItLogListType"
        },
        "type": {
          "$ref": "#/definitions/trackItType"
        }
      }
    },
    "trackItItemsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItItemType"
      }
    },
    "trackItLogListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItLogType"
      }
    },
    "trackItLogType": {
      "description": "Individual activity log related to the Track It ticket.",
      "type": "object",
      "properties": {
        "businessDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "description": {
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "logDate": {
          "type": "string",
          "format": "date-time"
        },
        "logUserId": {
          "type": "integer"
        },
        "logUserName": {
          "type": "string"
        },
        "trackItId": {
          "$ref": "#/definitions/trackItId"
        },
        "trackItLogId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "type": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "trackItReservationInfoType": {
      "description": "Reservation info associated with a Track It item.",
      "type": "object",
      "properties": {
        "computedReservationStatus": {
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "guarantee": {
          "$ref": "#/definitions/resGuaranteeType"
        },
        "guestInfo": {
          "$ref": "#/definitions/resGuestInfoType"
        },
        "reservationIdList": {
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationStatus": {
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "roomId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomStatus": {
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "roomType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "trackItType": {
      "description": "Identifies the kind of Parcel, Baggage, or Lost items or Valet-managed vehicles or services.",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "url": {
          "$ref": "#/definitions/uRLType"
        }
      }
    },
    "transactionDiversionDailyDetailType": {
      "description": "List of daily details for Transaction Diversion rule.",
      "type": "object",
      "properties": {
        "date": {
          "description": "Daily details Date about when the rules are posted or diverted.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "diverted": {
          "description": "Transaction diversion rules that are diverted .",
          "type": "integer"
        },
        "posted": {
          "description": "Transaction diversion rules that are posted.",
          "type": "integer"
        }
      }
    },
    "transactionDiversionDailyDetailsType": {
      "description": "List of daily details for Transaction Diversion rule.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionDiversionDailyDetailType"
      }
    },
    "transactionDiversionRuleLevelType": {
      "description": "Reservation level.",
      "type": "string",
      "enum": [
        "Property",
        "Reservation"
      ]
    },
    "transactionDiversionRuleTypeType": {
      "description": "The rule type on which the Transaction Diversion Rule is based. If a reservation has any of the following code, Transaction Diversion rule gets active for that reservation",
      "type": "string",
      "enum": [
        "Vip",
        "Membership"
      ]
    },
    "transactionDiversions": {
      "description": "Response to fetch the transaction diversion rules attached to a reservation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactionDiversions": {
          "description": "A collection of transaction diversion rules.",
          "$ref": "#/definitions/reservationTransactionDiversionsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionDiversionsDetails": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionDiversionsInfo": {
      "description": "Request to modify transaction diversion rules attached to a reservation.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property code of the reservation for which the transaction diversion rules are to be modified.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "description": "Reservation Id for which the transaction diversion rules is to be modified.",
          "$ref": "#/definitions/reservationId"
        },
        "transactionDiversions": {
          "description": "A collection of transaction diversion rules that are to be modified.",
          "$ref": "#/definitions/reservationTransactionDiversionsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "translationTextType2000": {
      "description": "Contains Multiple translated texts and language codes.",
      "type": "object",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 2000.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationTextType80": {
      "description": "Contains Multiple translated texts and language codes.",
      "type": "object",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 80.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType": {
      "description": "Language code for the translation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "description": "Language code for the translation.",
        "type": "object",
        "properties": {
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          },
          "value": {
            "description": "Used for Character Strings, length 0 to 2000.",
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          }
        }
      }
    },
    "transportInfoType": {
      "type": "object",
      "properties": {
        "carrierCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "comments": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "dateTime": {
          "type": "string",
          "format": "date-time"
        },
        "stationCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transportCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transportationReqd": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "travelAgentDetails": {
      "description": "Travel Agent Details",
      "type": "object",
      "properties": {
        "travelAgentID": {
          "description": "ID of the travel agent for the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "travelAgentName": {
          "description": "Name of the travel agent for the reservation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "trxCodesInfoType": {
      "description": "List of Transaction codes info.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxInfoType"
      }
    },
    "trxInfoType": {
      "description": "Transaction codes info.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "turnawayDetailsType": {
      "description": "Holds detailed information of a prospect reservation to be turned away.",
      "type": "object",
      "properties": {
        "guestCounts": {
          "description": "Holds the guest counts(adults or children) for the date of the stay.",
          "$ref": "#/definitions/guestCountsType"
        },
        "hotelId": {
          "description": "Holds Opera Hotel/Resort code of turn away reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketCode": {
          "description": "Holds the code that relates to the market being sold to (e.g., the corporate market, packages).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "numberOfRooms": {
          "description": "Holds the number of rooms.",
          "type": "integer"
        },
        "rateAmount": {
          "description": "Holds the Rate Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "ratePlanCode": {
          "description": "Holds the Rate Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "Holds the Room Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "timeSpan": {
          "description": "Holds Arrival and Departure Dates which covers the prospect reservation to be turned away.",
          "$ref": "#/definitions/timeSpanType"
        },
        "yieldMarketCode": {
          "description": "Holds the Yield Market Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "turnawayType": {
      "description": "Holds information related to prospect reservation to be turned away.",
      "type": "object",
      "properties": {
        "address": {
          "description": "Holds guest's address information.",
          "$ref": "#/definitions/addressType"
        },
        "callId": {
          "description": "Holds unique call ID of prospect reservation to be turned away.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "comments": {
          "description": "Holds comments for a prospect reservation to be turned away.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "details": {
          "description": "Holds detailed information of a prospect reservation to be turned away.",
          "$ref": "#/definitions/turnawayDetailsType"
        },
        "profileIdList": {
          "description": "Holds unique guest name id of prospect reservation to be turned away.",
          "$ref": "#/definitions/profileIdList"
        },
        "reasonCode": {
          "description": "Holds turn away code pertaining to reason of turning away prospect reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "turndownStatusType": {
      "description": "Simple type for turndown status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Required, Not Required and Completed.",
      "type": "string",
      "enum": [
        "Required",
        "NotRequired",
        "Compeleted"
      ]
    },
    "typeOfMessageType": {
      "description": "The type of Message for Guest Messages.",
      "type": "string",
      "enum": [
        "Tm",
        "Vm"
      ]
    },
    "uRLInfoType": {
      "description": "Web site address.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "url": {
          "description": "Provides URL information.",
          "$ref": "#/definitions/uRLType"
        }
      }
    },
    "uRLType": {
      "description": "Web site address, in IETF(The Internet Engineering Task Force) specified format.",
      "type": "object",
      "properties": {
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "type": {
          "description": "Defines the purpose of the URL address, such as personal, business, public, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "uniqueIDListType": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "uniqueID_Type": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "upgradeElgibilityStatusType": {
      "description": "Simple type for upgrade eligibility status.",
      "type": "string",
      "enum": [
        "Eligible",
        "NotEligible",
        "Unknown"
      ]
    },
    "upgradeEligibilityListType": {
      "description": "List of upgrade Eligibility Types.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/upgradeEligibilityType"
      }
    },
    "upgradeEligibilityReservations": {
      "description": "Response object to the Fetch UpgradeEligibilityReservations Request operation. Based on the criteria, reservation information is returned.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationIdList": {
          "description": "Collection of unique identifiers of the reservations to be linked with another reservation.",
          "$ref": "#/definitions/reservationIdList"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "upgradeEligibilityType": {
      "description": "Reservation name ids, hotel code and eligibility flag.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationId": {
          "description": "Unique identifier of the reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "upgradeElgibilityStatus": {
          "description": "Upgrade Eligibility status, it can be either Eligible, Not Eligible and unknown.",
          "$ref": "#/definitions/upgradeElgibilityStatusType"
        }
      }
    },
    "upsellDailyRateType": {
      "description": "Reservation date and its corresponding upsell rate amount",
      "type": "object",
      "properties": {
        "date": {
          "description": "Reservation date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "requiredAmount": {
          "description": "Amount / number of points required to upgrade",
          "$ref": "#/definitions/amountPointsType"
        }
      }
    },
    "upsellDailyRatesType": {
      "description": "Reservation date and its corresponding upsell rate amount",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/upsellDailyRateType"
      }
    },
    "upsellInfoType": {
      "description": "Information regarding upsell for a reservation.",
      "type": "object",
      "properties": {
        "originalInfo": {
          "description": "Original Values of the reservation prior to upgrade.",
          "type": "object",
          "properties": {
            "nights": {
              "description": "The number of nights of the reservation before being upgraded.",
              "type": "integer"
            },
            "rateCode": {
              "description": "The Rate Code of the Reservation before it was upgraded",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "roomType": {
              "description": "Original Reservation Room Type before being upgraded.",
              "$ref": "#/definitions/codeDescriptionType"
            },
            "totalAmount": {
              "description": "Total Amount of the reservation before it was upgraded.",
              "$ref": "#/definitions/currencyAmountType"
            }
          }
        },
        "upsellInfo": {
          "description": "Information of a reservation during the process of upgrade.",
          "type": "object",
          "properties": {
            "firstNightUpsellAmount": {
              "description": "First Night Total Amount including Upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "firstNightUpsellCharge": {
              "description": "First Night Upsell Charges.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "percentageSavings": {
              "description": "Percentage savings resulting from accepting upsell offer. This will be calculated as the ratio of the amount saved by accepting the upsell offer to the actual room rate (i.e. room rate when upsell is not offered)",
              "type": "number",
              "maximum": 100,
              "minimum": 0
            },
            "roomLongDescription": {
              "description": "Detail description of the Room Type.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "roomType": {
              "description": "Reservation Room Type for Upsell.",
              "$ref": "#/definitions/codeDescriptionType"
            },
            "ruleCode": {
              "description": "Upsell rule code",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "ruleDescription": {
              "description": "Upsell rule description",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "ruleId": {
              "description": "Upsell Rule Id.",
              "type": "integer"
            },
            "totalActualRateAmount": {
              "description": "Actual Total Room Rate for the Target Upsell Room Type.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellCharge": {
              "description": "Amount that was charged for the upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellMoneyAmount": {
              "description": "Total Amount that was charged including upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellPoints": {
              "description": "Total Upsell Points.",
              "type": "integer"
            },
            "upsellDate": {
              "description": "The date on which reservation is upgraded.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "upsellUser": {
              "description": "User who upgraded the reservation.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            }
          }
        }
      }
    },
    "upsellRateInstructionType": {
      "description": "Instruction to remove the upsell and recalculate the rate based on the upsell target room type.",
      "type": "string",
      "enum": [
        "HonorUpsellRateForAdditionalNights",
        "OriginalRoomType",
        "TargetRoomType"
      ]
    },
    "upsellReservation": {
      "description": "Request to upsell a reservation.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property Code of the reservation.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "override": {
          "description": "Indicates whether to override validation or not.",
          "type": "boolean"
        },
        "reservationId": {
          "description": "Unique identifier of the reservation to be upsold.",
          "$ref": "#/definitions/reservationId"
        },
        "upsell": {
          "description": "Upsell information to be applied to the reservation.",
          "$ref": "#/definitions/upsellType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "upsellType": {
      "description": "Holds upsell information",
      "type": "object",
      "properties": {
        "firstNightAmount": {
          "description": "First night upsell amount / number of points required",
          "$ref": "#/definitions/amountPointsType"
        },
        "percentageSavings": {
          "description": "Percentage savings resulting from accepting upsell offer. This will be calculated as the ratio of the amount saved by accepting the upsell offer to the actual room rate (i.e. room rate when upsell is not offered)",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "ratePlanCode": {
          "description": "Rate code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rates": {
          "description": "List of reservation date and its corresponding upsell rate amount",
          "$ref": "#/definitions/upsellDailyRatesType"
        },
        "roomType": {
          "description": "Detailed information regarding room type to upsell to",
          "$ref": "#/definitions/roomTypeInfoType"
        },
        "ruleCode": {
          "description": "Upsell rule code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ruleDescription": {
          "description": "Upsell rule description",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "ruleId": {
          "description": "Rule unique identifier",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "totalStayAmount": {
          "description": "Total stay upsell amount / number of points required",
          "$ref": "#/definitions/amountPointsType"
        },
        "upsellType": {
          "description": "Rate code redemption type.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        }
      }
    },
    "usedInModuleType": {
      "description": "Simple type for indicating the module for which user wants to create the SellMessage. Valid module types are Look To Book Sales,Reservations,Blocks,Function Diary and Group Rooms Control.",
      "type": "string",
      "enum": [
        "Blocks",
        "Reservations",
        "FunctionDiary",
        "LookToBookSales",
        "GroupRoomsControl"
      ]
    },
    "userDefinedFieldsType": {
      "description": "A common type used to hold user defined fields(UDFs). This type should be used to handle UDFs on RReservation, Profiles, etc.",
      "type": "object",
      "properties": {
        "characterUDFs": {
          "description": "Collection of user defined fields of Character/String Type.",
          "$ref": "#/definitions/characterUDFsType"
        },
        "dateUDFs": {
          "description": "Collection of user defined fields of Date Type.",
          "$ref": "#/definitions/dateUDFsType"
        },
        "numericUDFs": {
          "description": "Collection of user defined fields of Numeric Type.",
          "$ref": "#/definitions/numericUDFsType"
        }
      }
    },
    "userInfoType": {
      "description": "Opera User Information",
      "type": "object",
      "properties": {
        "userId": {
          "description": "User Id of the Opera User",
          "type": "integer"
        },
        "userName": {
          "description": "Name of the Opera User",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "userSessionDefaultsType": {
      "type": "object",
      "properties": {
        "baseLanguage": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyFormat": {
          "type": "string"
        },
        "dbDateFormat": {
          "type": "string"
        },
        "defaultLanguage": {
          "type": "string"
        },
        "javaDateFormat": {
          "type": "string"
        },
        "javaTimeFormat": {
          "type": "string"
        },
        "oracleDateFormat": {
          "type": "string"
        },
        "oracleTimeFormat": {
          "type": "string"
        }
      }
    },
    "userSessionInfoType": {
      "type": "object",
      "properties": {
        "businessDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "cROCountryCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "chain": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cro": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "hotel": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "parameters": {
          "$ref": "#/definitions/parametersType"
        },
        "runningApp": {
          "type": "string"
        },
        "sessionDefaults": {
          "$ref": "#/definitions/userSessionDefaultsType"
        },
        "shareProfiles": {
          "type": "boolean"
        },
        "systemDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "terminal": {
          "type": "string"
        }
      }
    },
    "vIPStatusType": {
      "description": "VIP status of the customer.",
      "type": "object",
      "properties": {
        "code": {
          "description": "VIP status of the customer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Used for Character Strings, length 0 to 2000.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "vIPType": {
      "description": "The supplier's ranking of the customer.",
      "type": "object",
      "properties": {
        "vipCode": {
          "description": "VIP Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "vipDescription": {
          "description": "VIP Description.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "validateRateInfo": {
      "description": "Retrieve either the reservation's rate information or make a quotation for a rate information. SummaryInfo attribute specifies if the item being requested is of detail or summary type.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Search type can either be based on a reservation or based on a quotation. If a reservation name id is passed then most criteria are ignored.",
          "type": "object",
          "properties": {
            "blockId": {
              "description": "Block Id for which the rate info has to be fetched.",
              "$ref": "#/definitions/blockId"
            },
            "currencyCode": {
              "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "currencySymbol": {
              "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
              "type": "string",
              "maxLength": 10,
              "minLength": 0
            },
            "decimalPlaces": {
              "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
              "type": "integer"
            },
            "detailDate": {
              "description": "This field is only required when the criteria is meant for a detailed results. The date for the rate detail is needed.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "effectiveRates": {
              "description": "Instruction to apply new effective rates to the reservations.",
              "$ref": "#/definitions/effectiveRatesType"
            },
            "guestCounts": {
              "$ref": "#/definitions/guestCountsType"
            },
            "quantity": {
              "type": "integer"
            },
            "ratePlanCode": {
              "description": "Rate Code for which the rate information is required.",
              "$ref": "#/definitions/codeType"
            },
            "reservationId": {
              "description": "Reservation ID for which the rate info is required.",
              "$ref": "#/definitions/reservationId"
            },
            "reservationPackages": {
              "description": "A Service object represents a non-room product provided to guests. Service products may have associated inventory and charges.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationPackageType"
              }
            },
            "reservationProfiles": {
              "description": "Refer to Generic common types document.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationProfileType"
              }
            },
            "resvRateAmount": {
              "description": "Rate amount Before Tax to calculate the total rate on event of rate change.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "roomType": {
              "description": "Room type for which the rate information is required.",
              "$ref": "#/definitions/codeType"
            },
            "summaryInfo": {
              "description": "Flag to indicate if summary information is required.",
              "type": "boolean"
            },
            "timeSpan": {
              "$ref": "#/definitions/timeSpanType"
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "validateReservationChanges": {
      "description": "Request to validate reservation changes.",
      "type": "object",
      "properties": {
        "instructions": {
          "description": "Collection of validation instructions.",
          "type": "object",
          "properties": {
            "copyOperation": {
              "description": "Whether the current operation is copy reservation or not.",
              "type": "boolean"
            },
            "instruction": {
              "description": "Reservation validation instruction.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/reservationValidationInstructionType"
              }
            },
            "upsellRateInstruction": {
              "description": "Instruction for recalculation of rate when the reservations has already been upsold.",
              "$ref": "#/definitions/upsellRateInstructionType"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservation": {
          "description": "Reservation to be validated.",
          "$ref": "#/definitions/hotelReservationType"
        },
        "timeSpan": {
          "description": "Stay Duration to validate.",
          "$ref": "#/definitions/timeSpanType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "validateReservationChangesDetails": {
      "description": "Response for validating reservation changes.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservation": {
          "description": "Contains validated reservation.",
          "$ref": "#/definitions/hotelReservationType"
        },
        "reservationGuarantee": {
          "description": "Guarantee Code information with cancellation penalty and deposit policy information.",
          "$ref": "#/definitions/guaranteePolicyType"
        },
        "validationMessages": {
          "description": "Collection of validation messages.",
          "$ref": "#/definitions/validationsReturnType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "validationActionType": {
      "description": "Validation Actions returned after validations are done. STOP-PROCESSING implies that the user cannot continue with the operation as some validation failed. USER-RESPONSE-REQUIRED implies that some validations can be overridden and the User can continue if they wish to override.",
      "type": "string",
      "enum": [
        "StopProcessing",
        "UserResponseRequired"
      ]
    },
    "validationReturnType": {
      "description": "Validations type record returned after Validations are done.",
      "type": "object",
      "properties": {
        "invalidReservations": {
          "description": "List of Reservations for which this validation type is applicable.",
          "$ref": "#/definitions/reservationSummaryListType"
        },
        "validationAction": {
          "$ref": "#/definitions/validationActionType"
        },
        "validationCode": {
          "description": "The code returned after validation.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "validationMessage": {
          "description": "The message returned after validating.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "validationType": {
          "description": "The type of Validation Record. Example would be OVERBOOK_INVENTORY, OVERRIDE_MAX_OCCUPANCY, CREDIT_CARD_REQUIRED In some cases this will match a permission.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "validationsReturnType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/validationReturnType"
      }
    },
    "visaInfoType": {
      "type": "object",
      "properties": {
        "visaExpiryDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaIssueDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaNumber": {
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "waitlistResType": {
      "description": "Information regarding why reservation is being /has been waitlisted.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description why the reservation is being /has been waitlisted.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "priorityCode": {
          "description": "Waitlist Priority Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "priorityDescription": {
          "description": "Waitlist priority Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reasonCode": {
          "description": "Waitlist Reason Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonDescription": {
          "description": "Waitlist Reason Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "telephone": {
          "description": "Guest telephone number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "warningType": {
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "type": "object",
      "properties": {
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "maxLength": 8,
          "minLength": 1
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "description": "Used in conjunction with the Success element to define a business error.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "welcomeOfferOptionsType": {
      "description": "None of the Welcome Offer option is selected.",
      "type": "string",
      "enum": [
        "BonusPoints",
        "Ecoupons",
        "Items",
        "PostIt",
        "NotSelected"
      ]
    },
    "welcomeOfferType": {
      "type": "object",
      "properties": {
        "status": {
          "description": "Determines the status of the welcome offer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Determines the welcome offer option selected while availing the welcome offer.",
          "$ref": "#/definitions/welcomeOfferOptionsType"
        }
      }
    }
  },
  "tags": [
    {
      "description": " The REST APIs allow you to perform all actions related to reservations from creating a new reservation, to adding on sharers, updating packages, item inventory and even pre-checking in a reservation.",
      "name": "Reservation"
    },
    {
      "description": "The Reservation Statistics Service provides statistical data for reservations that exist in OPERA Cloud.",
      "name": "RSVStats"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}