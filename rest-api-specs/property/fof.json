{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "title": "OPERA Cloud Front Desk Operations Service",
    "version": "23.2",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality-integrations_ww@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "basePath": "/fof/v1",
  "paths": {
    "/hotels/{hotelId}/authorizationReservations": {
      "get": {
        "description": "This API is used to get reservations for batch CC Authorization. <p><strong>OperationId:</strong>getResvForBatchCCAuth</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Get resrvation for batch CCAuth",
        "operationId": "getResvForBatchCCAuth",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used for Character Strings, length 0 to 80.",
            "name": "guestName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "room",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Ab",
                "Am",
                "Ax",
                "Cb",
                "Dc",
                "Ds",
                "Dt",
                "Ec",
                "Er",
                "Jc",
                "Jl",
                "Mc",
                "Nb",
                "So",
                "St",
                "Sw",
                "Va",
                "Xy",
                "Zz",
                "Cp",
                "Cu"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "name": "cardType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Listing of user defined credit card types.",
            "name": "userDefinedCardType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response which contains a listing of reservations, and associated payment methods, that require credit card authorization.",
            "schema": {
              "$ref": "#/definitions/resvForBatchCCAut"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ResvForBatchCCAuth not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/bankAccounts": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getBankAccounts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ],
        "summary": "Operation to fetch bank accounts.",
        "operationId": "getBankAccounts",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Property of the bank accounts.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Either full or first part of the bank name.",
            "name": "bankName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Either full or first part of the bank account number.",
            "name": "bankAccountNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Currency used by the bank account.",
            "name": "currency",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns bank accounts that match the request criteria.",
            "schema": {
              "$ref": "#/definitions/bankAccountsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "BankAccounts not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/bankAccounts/{bankAccountId}/agents/{agentId}/reservationsForCommissions": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getReservationsForCommissions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ],
        "summary": "Operation to fetch Reservations for Commissions associated to a Travel Agent",
        "operationId": "getReservationsForCommissions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Reservations for commissions.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "A unique identifying value(ID) to represent the Bank.",
            "name": "bankAccountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "A unique identifying value(ID) to represent the Travel Agent associated with the commission.",
            "name": "agentId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Indicates the guest name of the reservation that is to be returned ",
            "name": "guestName",
            "in": "query"
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Indicates the confirmation number of the reservation that is to be returned ",
            "name": "confirmationNo",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Cancelled",
                "CheckedOut",
                "NoShow"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Indicates the status of the reservations that is to be returned ",
            "name": "reservationStatus",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "description": "When set to true only reservations flagged for account receivables are returned",
            "name": "accountReceivableOffset",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "description": "When set to true only reservations having a commission hold code are returned",
            "name": "onHold",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Commissions for the requested account or agent id.",
            "schema": {
              "$ref": "#/definitions/commissionsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Commissions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/bankAccounts/{bankAccountId}/commissionChecks": {
      "put": {
        "description": " <p><strong>OperationId:</strong>changeCommissionCheck</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ],
        "summary": "Operation to change commission check.",
        "operationId": "changeCommissionCheck",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique id of bank account.",
            "name": "bankAccountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Property of the commission record.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type for updating commission check.",
            "name": "commissionCheckToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/commissionCheckToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/commissionCheckStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/bankAccounts/{bankAccountId}/commissionPayments": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getCommissionPaymentsActivity</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ],
        "summary": "Operation to fetch commission payments activity.",
        "operationId": "getCommissionPaymentsActivity",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique id of bank account.",
            "name": "bankAccountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Property of the commission record.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "batchId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "batchIdIdExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "batchIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "batchIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "File name if payment method is EFT.",
            "name": "fileName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "File name if payment method is EFT.",
            "name": "payee",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Check no of payment.",
            "name": "checkNo",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Outstanding",
                "Reconciled",
                "Unpresented",
                "Void",
                "Failed"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for payment activity status type. Valid values are Outstanding, Reconciled, Unpresented and Void.",
            "name": "status",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response type for commission payments activity.",
            "schema": {
              "$ref": "#/definitions/commissionPaymentsActivityDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CommissionPaymentsActivity not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": " <p><strong>OperationId:</strong>changeCommissionPaymentActivityByRange</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ],
        "summary": "Operation to change commission payment activity by range.",
        "operationId": "changeCommissionPaymentActivityByRange",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique id of bank account.",
            "name": "bankAccountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Property of the commission record.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type for updating a range of payments activity.",
            "name": "commissionPaymentActivityByRangeToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/commissionPaymentActivityByRangeToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/commissionPaymentActivityByRangeStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/bankAccounts/{bankAccountId}/reprintCommission": {
      "put": {
        "description": " <p><strong>OperationId:</strong>reprintCommissionCheckByRange</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ],
        "summary": "Operation to reprint commission check by range.",
        "operationId": "reprintCommissionCheckByRange",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique id of bank account",
            "name": "bankAccountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Property of the commission record.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type for reprinting a range of check payments.",
            "name": "reprintCommissionCheckByRange",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reprintCommissionCheckByRange"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response type for reprinting a range of check payments.",
            "schema": {
              "$ref": "#/definitions/reprintCommissionCheckByRangeStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/bankAccounts/{bankAccountId}/travelAgentsForCommissions": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getTravelAgentsForCommissions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ],
        "summary": "Operation to fetch Travel Agents associated with commissions for the given bank Account.",
        "operationId": "getTravelAgentsForCommissions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Property of the Travel Agent records.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "A unique identifying value(ID) to represent the Bank",
            "name": "bankAccountId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Travel Agents for the requested Bank ID.",
            "schema": {
              "$ref": "#/definitions/commissionsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Travel Agents not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/batchReservationAuthorizations": {
      "put": {
        "description": "This API is used to process batch CC Authorization. <p><strong>OperationId:</strong>processBatchCCAuth</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Process batch CC Auth",
        "operationId": "processBatchCCAuth",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to start a batch job that will process a list of reservation, and their associated payment methods, that require credit card authorizations.",
            "name": "batchCCAuth",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/batchCCAuth"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for starting a credit card authorization batch job, which contains the batch ID upon success.",
            "schema": {
              "$ref": "#/definitions/batchCCAuthToProcess"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/billingReservations": {
      "get": {
        "description": "You can use this API to fetch the reservations for billing. <p><strong>OperationId:</strong>getReservationsForBilling</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Get Reservations for billing",
        "operationId": "getReservationsForBilling",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Any",
              "DayUse",
              "Arrival",
              "Arrived",
              "Departure",
              "WaitList",
              "Cancellation",
              "CheckedOut",
              "NoShow",
              "Complimentary",
              "InHouse",
              "PostStayPendingBalance",
              "PreRegistered",
              "PostToRoom",
              "OpenFolio",
              "ScheduledCheckOut",
              "Queued",
              "MobileCheckout",
              "RegisteredAndInHouse",
              "ResvBlockTraces",
              "GuestMessages",
              "MassCancellation",
              "Operator",
              "Turndown",
              "WalkIn",
              "AdvanceCheckedIn",
              "OpenBalance",
              "AutoFolioSettlement",
              "Routing",
              "PlayerSnapshot"
            ],
            "type": "string",
            "description": "Represents Reservation search type Player Snapshot.",
            "name": "searchType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "multipleHotelsSearchList",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Free form text field for searching all reservation fields",
            "name": "superSearch",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The number of nights on a reservation.",
            "name": "nights",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "arrivalEnd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "arrivalStart",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "departureEnd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "departureStart",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Guest",
                "Company",
                "Group",
                "TravelAgent",
                "Source",
                "ReservationContact",
                "BillingContact",
                "Addressee"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "reservationProfileType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Attached profile name",
            "name": "attachedProfileName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "attachedProfileId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "attachedProfileIdContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "attachedProfileIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "resGuestId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "resGuestIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "resGuestIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Membership ID criteria.",
            "name": "membershipId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "membershipLevelCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "membershipTypeCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Family name, last name.",
            "name": "surname",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names",
            "name": "givenName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
            "name": "cityName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Post Office Code number.",
            "name": "postalCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "State or Province name (e.g., Texas).",
            "name": "state",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code for a country or a nationality.",
            "name": "countryCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "First Line of Street Address. For profile search it matches the first Address line.",
            "name": "streetAddress",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Booking Channel Code",
            "name": "bookingChannelCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Hotel Code of the Block.",
            "name": "blockHotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "blockId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "blockIdContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "blockIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "GDS Record Locator for reservation.",
            "name": "recordLocator",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "orderByAttributeName",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Asc",
                "Desc"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "orderType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room number of the reservation to search by.",
            "name": "roomId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Type.",
            "name": "roomType",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Reservation",
                "ReservationID",
                "Indicators",
                "Deposits",
                "RevenuesAndBalances",
                "GuestServiceStatus",
                "MasterInfo",
                "CancellationInfo",
                "BlockReservations",
                "TaxType",
                "GuestDeviceNotification",
                "RoomAssignedByAI"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Instruction to fetch whether the room was assigned/upgraded by AI. This will also include Reservation instruction.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that reservations with No Post flag should not be expected from the result.",
            "name": "excludeNoPost",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that reservations with PM room type should not be expected from the result.",
            "name": "excludePMRooms",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that only reservations with open folio should be expected from the result.",
            "name": "hasOpenFolio",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "excludedReservationIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "excludedReservationIdsContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "excludedReservationIdsType",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates to exclude Advance Checked In Reservations from search result.",
            "name": "advanceCheckedIn",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Any",
                "DayUse",
                "Arrival",
                "Arrived",
                "Departure",
                "WaitList",
                "Cancellation",
                "CheckedOut",
                "NoShow",
                "Complimentary",
                "InHouse",
                "PostStayPendingBalance",
                "PreRegistered",
                "PostToRoom",
                "OpenFolio",
                "ScheduledCheckOut",
                "Queued",
                "MobileCheckout",
                "RegisteredAndInHouse",
                "ResvBlockTraces",
                "GuestMessages",
                "MassCancellation",
                "Operator",
                "Turndown",
                "WalkIn",
                "AdvanceCheckedIn",
                "OpenBalance",
                "AutoFolioSettlement",
                "Routing",
                "PlayerSnapshot"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Represents Reservation search type Player Snapshot.",
            "name": "searchTypesSearchType",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Cancelled",
                "CheckedOut",
                "CheckedIn",
                "DueIn",
                "DueOut",
                "InHouse",
                "NoShow",
                "WaitList"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Reservation status type for reservations search.",
            "name": "reservationStatus",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to the Fetch Reservation Request operation. Based on the criteria, reservation information is returned.",
            "schema": {
              "$ref": "#/definitions/reservationsInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "links": [
                  {
                    "href": "string",
                    "method": "GET",
                    "operationId": "string",
                    "rel": "string",
                    "targetSchema": "string",
                    "templated": false,
                    "title": "string"
                  }
                ],
                "masterInfoList": [
                  {
                    "codeInfo": [
                      {
                        "addtionalCodeInfo": {
                          "code": [
                            {
                              "name": "LongDescription",
                              "value": "string"
                            }
                          ]
                        },
                        "code": "string",
                        "description": "string",
                        "hotelId": "string"
                      }
                    ],
                    "codeType": "Country"
                  }
                ],
                "reservationInfoList": {
                  "reservationInfo": [
                    {
                      "accessRestriction": "Change",
                      "advanceCheckIn": {
                        "advanceCheckedIn": true,
                        "eTRComments": "string",
                        "expectedReturnTime": "2020-07-14T09:58:05.725Z"
                      },
                      "allowMobileCheckout": true,
                      "allowMobileViewFolio": true,
                      "allowedActions": [
                        "Cancel"
                      ],
                      "attachedProfiles": [
                        {
                          "name": "string",
                          "profileIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ],
                          "reservationProfileType": "Company"
                        }
                      ],
                      "cancellationInfo": {
                        "code": "string",
                        "date": "2020-07-14",
                        "description": "string"
                      },
                      "cashiering": {
                        "bedTaxReporting": {
                          "taxRegistrationNo": 0,
                          "taxableDays": 0,
                          "visaExpiryDate": "2020-07-14",
                          "visaIssueDate": "2020-07-14",
                          "visaNumber": "string"
                        },
                        "billingPrivileges": {
                          "allowAutoCheckin": true,
                          "autoSettlement": true,
                          "autoSettlementFreq": 0,
                          "autoSettlementType": "string",
                          "creditLimitAutoPay": true,
                          "directBillAuthorized": true,
                          "folioCloseDate": "2020-07-14",
                          "postStayCharging": true,
                          "postingRestriction": true,
                          "preStayCharging": true,
                          "scheduledCheckout": true,
                          "scheduledCheckoutTime": "2020-07-14",
                          "videoCheckout": true
                        },
                        "compAccounting": {
                          "authorizer": "string",
                          "compType": "string"
                        },
                        "financiallyResponsible": true,
                        "folioTexts": {
                          "folioText": [
                            {
                              "row": 0,
                              "text": "string"
                            }
                          ]
                        },
                        "lastRoomAndTaxPostedDate": "2020-07-14",
                        "periodicFolio": {
                          "frequency": 0,
                          "lastFolioDate": "2020-07-14",
                          "lastSettlementDate": "2020-07-14"
                        },
                        "proratedBilling": true,
                        "reservationPreConfiguredRoutingInstruction": {
                          "authorizerInfo": {
                            "authorizerId": {
                              "id": "string",
                              "type": "string"
                            },
                            "authorizerName": "string",
                            "authorizerRateCode": "string",
                            "authorizerUserName": "string",
                            "inheritAuthorizerRateCode": true
                          },
                          "profileType": "Company",
                          "promotionCode": "string",
                          "ratePlanCode": "string"
                        },
                        "revenuesAndBalances": {
                          "balance": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "foodAndBevRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "nonRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "otherRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "roomRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "totalFixedCharge": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "totalPayment": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "totalRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          }
                        },
                        "reverseAdvanceCheckInAllowed": true,
                        "reverseCheckInAllowed": true,
                        "taxType": {
                          "code": "string",
                          "collectingAgentTax": true,
                          "description": "string",
                          "hotelId": "string",
                          "minimumLengthOfStay": 0,
                          "printAutoAdjust": true,
                          "reportExemptDays": 0,
                          "reportTaxPercentage": 0,
                          "taxExemptNo": "string"
                        },
                        "transactionsPosted": true
                      },
                      "commissionPayoutTo": "TravelAgent",
                      "computedReservationStatus": "Reserved",
                      "createDateTime": "2020-07-14T09:58:05.725Z",
                      "creatorId": "string",
                      "deposit": {
                        "amountOwed": 0,
                        "amountPaid": 0,
                        "amountRequired": 0,
                        "dueDate": "2020-07-14",
                        "hasOutstanding": true,
                        "hasPaid": true,
                        "postingDate": "2020-07-14"
                      },
                      "displayColor": "string",
                      "expectedServiceTime": "string",
                      "guestPreferredCurrency": "string",
                      "hotelId": "string",
                      "hotelInterfaceStatusList": [
                        {
                          "hotelInterface": {
                            "activeFlag": true,
                            "hotelId": "string",
                            "interfaceId": {
                              "id": "string",
                              "type": "string"
                            },
                            "interfaceName": "string",
                            "interfaceType": "Bms",
                            "logo": "string",
                            "machineName": "string",
                            "status": "Stopped"
                          },
                          "interfaceRights": [
                            {
                              "category": "string",
                              "description": "string",
                              "right": 0,
                              "statusCode": "string"
                            }
                          ],
                          "roomExtension": "string"
                        }
                      ],
                      "hotelName": "string",
                      "housekeeping": {
                        "expectedServiceTime": "string",
                        "facilityTaskInfo": {
                          "date": "2020-07-14",
                          "supplies": [
                            {
                              "code": "string",
                              "description": "string",
                              "quantity": 0
                            }
                          ],
                          "task": {
                            "code": "string",
                            "description": "string",
                            "facilityDepartureTask": true,
                            "hotelId": "string",
                            "instructions": "string",
                            "linenChange": true,
                            "sequence": 0
                          }
                        },
                        "instructions": "string",
                        "linenChange": true,
                        "roomStatus": "Clean",
                        "serviceTime": "2020-07-14",
                        "turndownRequested": true
                      },
                      "keyCount": 0,
                      "lastModifierId": "string",
                      "lastModifyDateTime": "2020-07-14T09:58:05.725Z",
                      "lastPrivacyPromptDate": "2020-07-14",
                      "mobileNotifications": {
                        "checkoutMessageReceived": true,
                        "errorMessage": "string",
                        "keyReady": "Pending",
                        "requiresAction": true,
                        "roomReady": "Pending"
                      },
                      "openFolio": true,
                      "optedForCommunication": true,
                      "paymentMethod": "string",
                      "preRegistered": true,
                      "purgeDate": "2020-07-14",
                      "queue": {
                        "averageQueueTimeCurrentReservations": 0,
                        "averageQueueTimeToCheckIn": 0,
                        "guestTextInfo": {
                          "sentBy": "string",
                          "sentTime": "2020-07-14T09:58:05.724Z"
                        },
                        "priority": 0,
                        "queueDate": "2020-07-14",
                        "timeSpan": {
                          "duration": "string",
                          "durationInSeconds": 0,
                          "endDate": "2020-07-14",
                          "startDate": "2020-07-14"
                        }
                      },
                      "reservationCommunication": {
                        "emails": {
                          "count": 0,
                          "emailInfo": [
                            {
                              "email": {
                                "createDateTime": "2020-07-14T09:58:05.725Z",
                                "creatorId": "string",
                                "emailAddress": "string",
                                "emailFormat": "Html",
                                "lastModifierId": "string",
                                "lastModifyDateTime": "2020-07-14T09:58:05.725Z",
                                "orderSequence": 0,
                                "primaryInd": true,
                                "purgeDate": "2020-07-14",
                                "type": "string",
                                "typeDescription": "string"
                              },
                              "id": "string",
                              "type": "string"
                            }
                          ],
                          "hasMore": true,
                          "totalResults": 0
                        },
                        "telephones": {
                          "count": 0,
                          "hasMore": true,
                          "telephoneInfo": [
                            {
                              "id": "string",
                              "telephone": {
                                "createDateTime": "2020-07-14T09:58:05.725Z",
                                "creatorId": "string",
                                "extension": "string",
                                "lastModifierId": "string",
                                "lastModifyDateTime": "2020-07-14T09:58:05.725Z",
                                "orderSequence": 0,
                                "phoneNumber": "string",
                                "phoneTechType": "string",
                                "phoneUseType": "string",
                                "phoneUseTypeDescription": "string",
                                "primaryInd": true,
                                "purgeDate": "2020-07-14"
                              },
                              "type": "string"
                            }
                          ],
                          "totalResults": 0
                        }
                      },
                      "reservationFolioWindows": [
                        {
                          "balance": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "folioWindowNo": 0,
                          "payeeInfo": {
                            "payeeAccountInfo": {
                              "accountId": {
                                "id": "string",
                                "type": "string"
                              },
                              "accountName": "string",
                              "accountNo": "string",
                              "status": {
                                "description": "string",
                                "restricted": true,
                                "restriction": "string"
                              }
                            },
                            "payeeAddress": {
                              "address": {
                                "addressLine": [
                                  "string"
                                ],
                                "barCode": "string",
                                "cityExtension": "string",
                                "cityName": "string",
                                "country": {
                                  "code": "string",
                                  "value": "string"
                                },
                                "county": "string",
                                "createDateTime": "2020-07-14T09:58:05.724Z",
                                "creatorId": "string",
                                "language": "string",
                                "lastModifierId": "string",
                                "lastModifyDateTime": "2020-07-14T09:58:05.724Z",
                                "postalCode": "string",
                                "primaryInd": true,
                                "purgeDate": "2020-07-14",
                                "state": "string",
                                "type": "string",
                                "typeDescription": "string",
                                "updateReservations": true
                              },
                              "id": "string",
                              "type": "string"
                            },
                            "payeeAddressCount": 0,
                            "payeeId": {
                              "id": "string",
                              "type": "string"
                            },
                            "payeeName": "string",
                            "payeeReferenceCurrency": "string",
                            "payeeTaxNumber": "string"
                          },
                          "paymentMethod": "string"
                        }
                      ],
                      "reservationGuest": {
                        "accompanyGuests": [
                          {
                            "firstName": "string",
                            "fullName": "string",
                            "lastName": "string",
                            "profileIdList": [
                              {
                                "id": "string",
                                "type": "string"
                              }
                            ],
                            "registrationCardNo": "string"
                          }
                        ],
                        "address": {
                          "cityName": "string",
                          "country": {
                            "code": "string",
                            "value": "string"
                          },
                          "excludeNoCity": true,
                          "postalCode": "string",
                          "state": "string",
                          "streetAddress": "string"
                        },
                        "alternateFullName": "string",
                        "alternateGivenName": "string",
                        "alternateSurname": "string",
                        "anonymization": {
                          "anonymizationDate": "2020-07-14T09:58:05.724Z",
                          "anonymizationStatus": "Requested"
                        },
                        "birthDate": "2020-07-14",
                        "email": "string",
                        "externalInfo": {
                          "givenName": "string",
                          "surname": "string"
                        },
                        "fullName": "string",
                        "givenName": "string",
                        "guestLastStayInfo": {
                          "lastStayDate": "2020-07-14",
                          "lastStayRate": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "lastStayRoom": "string",
                          "totalStay": 0
                        },
                        "guestRestricted": true,
                        "guestRestrictedCode": "string",
                        "guestRestrictedReasonDesc": "string",
                        "id": "string",
                        "language": "string",
                        "membership": {
                          "accountId": "string",
                          "bonusCode": "string",
                          "membershipId": 0,
                          "membershipLevel": "string",
                          "membershipLevelDesc": "string",
                          "membershipTypeDesc": "string",
                          "playerRanking": 0,
                          "programCode": "string"
                        },
                        "middleName": "string",
                        "namePrefix": "string",
                        "nameSuffix": "string",
                        "nameTitle": "string",
                        "nameType": "Guest",
                        "nationality": {
                          "code": "string",
                          "value": "string"
                        },
                        "phoneNumber": "string",
                        "registrationCardNo": "string",
                        "surname": "string",
                        "surnamePrefix": "string",
                        "type": "string",
                        "vip": {
                          "vipCode": "string",
                          "vipDescription": "string"
                        }
                      },
                      "reservationIdList": [
                        {
                          "id": "string",
                          "type": "string"
                        }
                      ],
                      "reservationIndicators": [
                        {
                          "count": 0,
                          "indicatorName": "string"
                        }
                      ],
                      "reservationPaymentMethod": {
                        "authorizationRule": {
                          "amount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "code": 0,
                          "percent": 0
                        },
                        "balance": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "description": "string",
                        "emailFolioInfo": {
                          "email": {
                            "createDateTime": "2020-07-14T09:58:05.724Z",
                            "creatorId": "string",
                            "emailAddress": "string",
                            "emailFormat": "Html",
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-14T09:58:05.724Z",
                            "orderSequence": 0,
                            "primaryInd": true,
                            "purgeDate": "2020-07-14",
                            "type": "string",
                            "typeDescription": "string"
                          },
                          "emailFolio": true,
                          "id": "string",
                          "type": "string"
                        },
                        "folioView": 0,
                        "paymentCard": {
                          "approvalAmountNeeded": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "attachCreditCardToProfile": true,
                          "cardHolderName": "string",
                          "cardId": {
                            "id": "string",
                            "type": "string"
                          },
                          "cardNumber": "string",
                          "cardNumberLast4Digits": "string",
                          "cardNumberMasked": "string",
                          "cardOrToken": "CardNumber",
                          "cardType": "Ab",
                          "currentAuthorizedAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "expirationDate": "2020-07-14",
                          "expirationDateExpired": true,
                          "expirationDateMasked": "string",
                          "processing": "Eft",
                          "swiped": true,
                          "userDefinedCardType": "string"
                        },
                        "paymentMethod": "string"
                      },
                      "reservationStatus": "Reserved",
                      "revenuesAndBalances": {
                        "balance": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "foodAndBevRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "nonRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "otherRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "roomRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalFixedCharge": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalPayment": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        }
                      },
                      "roomStatus": "Clean",
                      "roomStay": {
                        "adultCount": 0,
                        "arrivalDate": "2020-07-14",
                        "balance": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "bookingChannelCode": "string",
                        "childCount": 0,
                        "compBalance": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "departureDate": "2020-07-14",
                        "depositPayments": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "expectedTimes": {
                          "reservationExpectedArrivalTime": "2020-07-14T09:58:05.723Z",
                          "reservationExpectedDepartureTime": "2020-07-14T09:58:05.723Z"
                        },
                        "fixedRate": true,
                        "guarantee": {
                          "guaranteeCode": "string",
                          "onHold": true,
                          "shortDescription": "string"
                        },
                        "guestServiceStatus": "DoNotDisturb",
                        "marketCode": "string",
                        "numberOfRooms": 0,
                        "originalTimeSpan": {
                          "duration": "string",
                          "endDate": "2020-07-14",
                          "startDate": "2020-07-14"
                        },
                        "partyCode": "string",
                        "points": {
                          "awardsType": "string",
                          "points": 0
                        },
                        "promotion": {
                          "couponCode": "string",
                          "promotionCode": "string",
                          "promotionName": "string"
                        },
                        "pseudoRoom": true,
                        "rateAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "ratePlanCode": "string",
                        "rateSuppressed": true,
                        "reservationBlock": {
                          "blockIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ],
                          "blockName": "string",
                          "hotelId": "string"
                        },
                        "roomClass": "string",
                        "roomNumber": "string",
                        "roomNumberLocked": true,
                        "roomType": "string",
                        "roomTypeCharged": "string",
                        "scheduledCheckoutTime": "2020-07-14",
                        "sourceOfBusiness": "string",
                        "sourceOfBusinessDescription": "string",
                        "totalAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        }
                      },
                      "roomStayReservation": true,
                      "searchMatches": [
                        {
                          "attribute": "string",
                          "value": "string"
                        }
                      ],
                      "sharedGuests": [
                        {
                          "firstName": "string",
                          "fullName": "string",
                          "lastName": "string",
                          "profileId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          }
                        }
                      ],
                      "sourceOfSale": {
                        "sourceCode": "string",
                        "sourceType": "string"
                      },
                      "specials": "string",
                      "taxType": {
                        "code": "string",
                        "collectingAgentTax": true,
                        "description": "string",
                        "hotelId": "string",
                        "minimumLengthOfStay": 0,
                        "printAutoAdjust": true,
                        "reportExemptDays": 0,
                        "reportTaxPercentage": 0
                      },
                      "turndownInfo": {
                        "allowed": true,
                        "status": "Required"
                      },
                      "waitlist": {
                        "description": "string",
                        "priorityCode": "string",
                        "priorityDescription": "string",
                        "reasonCode": "string",
                        "reasonDescription": "string",
                        "telephone": "string"
                      },
                      "walkInIndicator": true,
                      "welcomeOffer": true
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "ReservationsForBilling not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/commissionAgent/{commissionAgentId}/commissions": {
      "put": {
        "description": " <p><strong>OperationId:</strong>associateCommissionAgentToReservations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ],
        "summary": "Operation to associate commission agent to reservations.",
        "operationId": "associateCommissionAgentToReservations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Id of the Commission Agent.",
            "name": "commissionAgentId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "All reservation ids in the list must belong to this property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type for associating reservations to Travel Agent or Source Profile.",
            "name": "associateCommissionAgentToReservations",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/associateCommissionAgentToReservations"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response type for associating reservations to Travel Agent or Source Profile.",
            "schema": {
              "$ref": "#/definitions/associateCommissionAgentToReservationsStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": " <p><strong>OperationId:</strong>removeCommissionAgentFromReservations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ],
        "summary": "Operation to remove commission agent from reservations.",
        "operationId": "removeCommissionAgentFromReservations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Id of the Commission Agent.",
            "name": "commissionAgentId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "All reservation ids in the list must belong to this property.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "enum": [
              "Agent",
              "Source"
            ],
            "type": "string",
            "description": "Simple type for commission agent type. Valid values are Agent and Source.",
            "name": "commissionAgentType",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "reservationIdIdExtension",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdIdContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/commissionChecks": {
      "delete": {
        "description": " <p><strong>OperationId:</strong>discardCommissionChecks</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ],
        "summary": "Operation to discard commission checks.",
        "operationId": "discardCommissionChecks",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Property of the commission record.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "bankAccountId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "BatchId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "batchIdIdExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "batchIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "batchIdType",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The range start value of checks to be discarded.",
            "name": "fromCheck",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/commissionPayments": {
      "put": {
        "description": " <p><strong>OperationId:</strong>processCommissionPayments</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ],
        "summary": "Operation to process commission payments.",
        "operationId": "processCommissionPayments",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Property of the commission record.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type for processing commission payments.",
            "name": "processCommissionPayments",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/processCommissionPayments"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response type for processing commission payments.",
            "schema": {
              "$ref": "#/definitions/processCommissionPaymentsStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/commissions": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getCommissions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ],
        "summary": "Operation to fetch commissions.",
        "operationId": "getCommissions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Property of the commission record.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "bankAccountId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "agentId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "agentIdIdExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "agentIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "agentIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "resvNameId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "resvNameIdIdExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "resvNameIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "resvNameIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "commissionId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "commissionIdIdExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "commissionIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "commissionIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "batchId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "batchIdIdExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "batchIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "batchIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Commissions for the requested account or agent id.",
            "schema": {
              "$ref": "#/definitions/commissionsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Commissions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": " <p><strong>OperationId:</strong>calculateCommissions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ],
        "summary": "Operation to calculate commissions.",
        "operationId": "calculateCommissions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Property of the commissions to be calculated.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type for calculation of commission for all Travel Agent and/or Source.",
            "name": "calculateCommissions",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/calculateCommissions"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/calculateCommissionsStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/commissions/instructions": {
      "post": {
        "description": " <p><strong>OperationId:</strong>setProcessingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ],
        "summary": "Operation to set processing instructions.",
        "operationId": "setProcessingInstructions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Property from which the agent will be on hold for commission.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request Type for setting instructions for commission processing on Agent or Reservation level.",
            "name": "setProcessingInstructions",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/setProcessingInstructions"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/commissions/{commissionId}": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getCommission</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ],
        "summary": "Operation to fetch commission.",
        "operationId": "getCommission",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique id of the commission.",
            "name": "commissionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Property of the commission record.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response type for fetch commission detail.",
            "schema": {
              "$ref": "#/definitions/commissionDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Commission not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": " <p><strong>OperationId:</strong>changeCommission</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ],
        "summary": "Operation to change commission.",
        "operationId": "changeCommission",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique id of the commission.",
            "name": "commissionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Property of the commission record.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type for update of commission detail.",
            "name": "commissionToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/commissionToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/commissionStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": " <p><strong>OperationId:</strong>removeCommission</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ],
        "summary": "Operation to remove commission.",
        "operationId": "removeCommission",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique id of the commission.",
            "name": "commissionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Property of the commission record.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used for Character Strings, length 0 to 2000.",
            "name": "detachDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/commissions/{commissionId}/commissionCodes/{commissionCode}/recalculate": {
      "put": {
        "description": " <p><strong>OperationId:</strong>recalculateCommissionOnCodeChange</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ],
        "summary": "Operation to recalculate commission on code change.",
        "operationId": "recalculateCommissionOnCodeChange",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "New commission code.",
            "name": "commissionCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique id of the commission.",
            "name": "commissionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Property of the commission record.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type for recalculating commission amount when commission code of unpaid commission is changed.",
            "name": "recalculateCommissionOnCodeChange",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/recalculateCommissionOnCodeChange"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response type for recalculating commission amount when commission code of unpaid commission is changed",
            "schema": {
              "$ref": "#/definitions/recalculateCommissionOnCodeChangeStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/dailyDocket": {
      "get": {
        "description": "Use this API to fetch Daily Dockets. <p><strong>OperationId:</strong>getDailyDocket</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Get Daily Docket",
        "operationId": "getDailyDocket",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "log book date.",
            "name": "docketDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Department code the log book entries belong to.",
            "name": "department",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching log book entries.",
            "schema": {
              "$ref": "#/definitions/dailyDocket"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "DailyDocket not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to change Daily Docket. <p><strong>OperationId:</strong>putDailyDocket</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Change Daily Docket ",
        "operationId": "putDailyDocket",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Change log book entries.",
            "name": "dailyDocket",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/dailyDocket"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create a Daily Docket. <p><strong>OperationId:</strong>postDailyDocket</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Create Daily Docket ",
        "operationId": "postDailyDocket",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Add log book entries.",
            "name": "dailyDocket",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/dailyDocket"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/dailyDocket/{docketId}": {
      "delete": {
        "description": "Use this API to delete a Daily Docket. <p><strong>OperationId:</strong>deleteDailyDocket</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Delete Daily Docket ",
        "operationId": "deleteDailyDocket",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "docketId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/floorPlans": {
      "get": {
        "description": "Use this API to get Floor Plans for a property. Floor Plans provide a graphical layout of floors, rooms, and other physical features such as stairways, HVAC closets, elevators, and more <p><strong>OperationId:</strong>getFloorPlans</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Get floor plans",
        "operationId": "getFloorPlans",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Room filter.",
            "name": "room",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "List of suggested rooms for room assignment.",
            "schema": {
              "$ref": "#/definitions/floorPlans"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "floorPlansDetails": [
                  {
                    "hotelId": "string",
                    "links": [
                      {
                        "href": "string",
                        "method": "GET",
                        "operationId": "string",
                        "rel": "string",
                        "targetSchema": "string",
                        "templated": false,
                        "title": "string"
                      }
                    ],
                    "rooms": [
                      {
                        "accessible": true,
                        "attendant": [
                          {
                            "activeFlag": "string",
                            "appUser": {
                              "actAs": "string",
                              "actAt": "string",
                              "appUser": "string",
                              "appUserId": {
                                "id": "string",
                                "type": "string"
                              },
                              "attendantInfo": {
                                "attendantId": "string",
                                "hotelId": "string"
                              },
                              "cashierId": 0,
                              "cashierTitle": "string",
                              "department": "string",
                              "departmentLocation": "string",
                              "disabledUntil": "2020-07-14",
                              "expiryDate": "2020-07-14",
                              "hotel": {
                                "code": "string",
                                "description": "string"
                              },
                              "lDAPUser": "string",
                              "passwordChangeDate": "2020-07-14",
                              "salesRepCode": "string",
                              "userDefaultLanguage": "string",
                              "userInfo": {
                                "addressInfo": {
                                  "address": {
                                    "addressLine": [
                                      "string"
                                    ],
                                    "barCode": "string",
                                    "cityExtension": "string",
                                    "cityName": "string",
                                    "country": {
                                      "code": "string",
                                      "value": "string"
                                    },
                                    "county": "string",
                                    "createDateTime": "2020-07-14T09:57:07.589Z",
                                    "creatorId": "string",
                                    "language": "string",
                                    "lastModifierId": "string",
                                    "lastModifyDateTime": "2020-07-14T09:57:07.589Z",
                                    "postalCode": "string",
                                    "primaryInd": true,
                                    "purgeDate": "2020-07-14",
                                    "state": "string",
                                    "type": "string",
                                    "typeDescription": "string",
                                    "updateReservations": true
                                  },
                                  "id": "string",
                                  "type": "string"
                                },
                                "birthDate": "2020-07-14",
                                "birthDateMasked": "string",
                                "department": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "emailInfo": {
                                  "email": {
                                    "createDateTime": "2020-07-14T09:57:07.589Z",
                                    "creatorId": "string",
                                    "emailAddress": "string",
                                    "emailFormat": "Html",
                                    "lastModifierId": "string",
                                    "lastModifyDateTime": "2020-07-14T09:57:07.589Z",
                                    "orderSequence": 0,
                                    "primaryInd": true,
                                    "purgeDate": "2020-07-14",
                                    "type": "string",
                                    "typeDescription": "string"
                                  },
                                  "id": "string",
                                  "type": "string"
                                },
                                "gender": "Male",
                                "personName": {
                                  "envelopeGreeting": "string",
                                  "externalSystem": "string",
                                  "givenName": "string",
                                  "language": "string",
                                  "middleName": "string",
                                  "namePrefix": "string",
                                  "nameSuffix": "string",
                                  "nameTitle": "string",
                                  "nameTitleSuffix": 0,
                                  "nameType": "Primary",
                                  "salutation": "string",
                                  "surname": "string"
                                },
                                "phoneInfo": {
                                  "id": "string",
                                  "telephone": {
                                    "createDateTime": "2020-07-14T09:57:07.589Z",
                                    "creatorId": "string",
                                    "extension": "string",
                                    "lastModifierId": "string",
                                    "lastModifyDateTime": "2020-07-14T09:57:07.589Z",
                                    "orderSequence": 0,
                                    "phoneNumber": "string",
                                    "phoneTechType": "string",
                                    "phoneUseType": "string",
                                    "phoneUseTypeDescription": "string",
                                    "primaryInd": true,
                                    "purgeDate": "2020-07-14"
                                  },
                                  "type": "string"
                                },
                                "profileId": {
                                  "id": "string",
                                  "type": "string"
                                }
                              },
                              "userSessionInfo": {
                                "businessDate": "2020-07-14",
                                "cROCountryCode": "string",
                                "chain": "string",
                                "cro": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "hotel": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "parameters": [
                                  {
                                    "parameterName": "string",
                                    "parameterValue": "string"
                                  }
                                ],
                                "runningApp": "string",
                                "sessionDefaults": {
                                  "baseLanguage": "string",
                                  "currencyCode": "string",
                                  "currencyFormat": "string",
                                  "dbDateFormat": "string",
                                  "defaultLanguage": "string",
                                  "javaDateFormat": "string",
                                  "javaTimeFormat": "string",
                                  "oracleDateFormat": "string",
                                  "oracleTimeFormat": "string"
                                },
                                "shareProfiles": true,
                                "systemDate": "2020-07-14",
                                "terminal": "string"
                              }
                            },
                            "attendantId": "string",
                            "attendantName": "string",
                            "floor": "string",
                            "friday": true,
                            "hotelId": "string",
                            "monday": true,
                            "saturday": true,
                            "section": {
                              "code": "string",
                              "description": "string",
                              "hotelId": "string",
                              "inactive": true,
                              "roomCredits": 0,
                              "rooms": 0,
                              "sectionGroup": "string",
                              "sequence": 0,
                              "targetCredits": 0
                            },
                            "startTime": "2020-07-14T09:57:07.589Z",
                            "status": "Standby",
                            "sunday": true,
                            "thursday": true,
                            "tuesday": true,
                            "wednesday": true
                          }
                        ],
                        "building": "string",
                        "componentRoomNumber": "string",
                        "componentRoomNumbers": {
                          "roomId": [
                            "string"
                          ]
                        },
                        "componentRooms": [
                          {
                            "accessible": true,
                            "building": "string",
                            "description": {
                              "defaultText": "string",
                              "translatedTexts": {
                                "text": [
                                  {
                                    "language": "string",
                                    "value": "string"
                                  }
                                ]
                              }
                            },
                            "floor": "string",
                            "floorDescription": "string",
                            "meetingRoom": true,
                            "roomAssignmentRating": "MostImportant",
                            "roomCondition": {
                              "code": "string",
                              "description": "string"
                            },
                            "roomDescription": "string",
                            "roomFeatures": [
                              {
                                "code": "string",
                                "description": "string",
                                "orderSequence": 0,
                                "quantity": 0
                              }
                            ],
                            "roomId": "string",
                            "roomType": {
                              "accessible": true,
                              "building": "string",
                              "houseKeeping": true,
                              "maximumOccupancy": 0,
                              "meetingRoom": true,
                              "minimumOccupancy": 0,
                              "pseudo": true,
                              "roomAssignmentRating": "MostImportant",
                              "roomClass": "string",
                              "roomFeatures": [
                                {
                                  "code": "string",
                                  "description": "string",
                                  "orderSequence": 0,
                                  "quantity": 0
                                }
                              ],
                              "roomType": "string",
                              "shortDescription": "string",
                              "smokingPreference": "string",
                              "suite": true
                            },
                            "smokingPreference": "string",
                            "smokingPreferenceDescription": "string"
                          }
                        ],
                        "connectingRooms": [
                          {
                            "accessible": true,
                            "building": "string",
                            "description": {
                              "defaultText": "string",
                              "translatedTexts": {
                                "text": [
                                  {
                                    "language": "string",
                                    "value": "string"
                                  }
                                ]
                              }
                            },
                            "floor": "string",
                            "floorDescription": "string",
                            "meetingRoom": true,
                            "roomAssignmentRating": "MostImportant",
                            "roomCondition": {
                              "code": "string",
                              "description": "string"
                            },
                            "roomDescription": "string",
                            "roomFeatures": [
                              {
                                "code": "string",
                                "description": "string",
                                "orderSequence": 0,
                                "quantity": 0
                              }
                            ],
                            "roomId": "string",
                            "roomType": {
                              "accessible": true,
                              "building": "string",
                              "houseKeeping": true,
                              "maximumOccupancy": 0,
                              "meetingRoom": true,
                              "minimumOccupancy": 0,
                              "pseudo": true,
                              "roomAssignmentRating": "MostImportant",
                              "roomClass": "string",
                              "roomFeatures": [
                                {
                                  "code": "string",
                                  "description": "string",
                                  "orderSequence": 0,
                                  "quantity": 0
                                }
                              ],
                              "roomType": "string",
                              "shortDescription": "string",
                              "smokingPreference": "string",
                              "suite": true
                            },
                            "smokingPreference": "string",
                            "smokingPreferenceDescription": "string"
                          }
                        ],
                        "description": {
                          "defaultText": "string",
                          "translatedTexts": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "discrepancy": [
                          "Sleep"
                        ],
                        "floor": "string",
                        "floorDescription": "string",
                        "guests": [
                          {
                            "arrival": "2020-07-14",
                            "confirmationNo": "string",
                            "departure": "2020-07-14",
                            "firstName": "string",
                            "lastName": "string",
                            "shareID": "string"
                          }
                        ],
                        "hold": {
                          "comments": "string",
                          "holdUntil": "2020-07-14T09:57:07.589Z",
                          "holdUser": "string"
                        },
                        "housekeeping": {
                          "cleaningPriority": {
                            "prioritySequence": 0
                          },
                          "facilityTaskCode": [
                            "string"
                          ],
                          "guestServiceRequest": "DoNotDisturb",
                          "linenChange": true,
                          "roomCondition": {
                            "assignmentType": "Available",
                            "remarks": "string",
                            "roomCondition": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "roomPersons": {
                            "frontOfficePersons": 0,
                            "houseKeepingPersons": 0
                          },
                          "roomStatus": {
                            "frontOfficeStatus": "Vacant",
                            "housekeepingStatus": "Vacant",
                            "reservationStatusList": [
                              "Arrival"
                            ],
                            "roomStatus": "Clean"
                          }
                        },
                        "meetingRoom": true,
                        "outOfOrder": [
                          {
                            "end": "2020-07-14",
                            "newDateRange": {
                              "end": "2020-07-14",
                              "start": "2020-07-14"
                            },
                            "reasonCode": "string",
                            "reasonDesc": "string",
                            "repairRemarks": "string",
                            "returnStatus": "Clean",
                            "roomStatus": "Clean",
                            "start": "2020-07-14"
                          }
                        ],
                        "resvInfo": [
                          {
                            "guestName": "string",
                            "profileId": {
                              "id": "string",
                              "type": "string"
                            },
                            "reservationId": {
                              "id": "string",
                              "idContext": "string",
                              "idExtension": 0,
                              "instance": "string",
                              "type": "string",
                              "url": "string"
                            },
                            "reservationStatusInfo": "Arrival",
                            "stayDateInfo": {
                              "expectedTimes": {
                                "reservationExpectedArrivalTime": "2020-07-14T09:57:07.590Z",
                                "reservationExpectedDepartureTime": "2020-07-14T09:57:07.590Z"
                              },
                              "timeSpan": {
                                "duration": "string",
                                "endDate": "2020-07-14",
                                "startDate": "2020-07-14"
                              }
                            },
                            "vipStatus": {
                              "code": "string",
                              "value": "string"
                            }
                          }
                        ],
                        "roomAssignmentRating": "MostImportant",
                        "roomDescription": "string",
                        "roomFeatures": [
                          {
                            "code": "string",
                            "description": "string",
                            "orderSequence": 0,
                            "quantity": 0
                          }
                        ],
                        "roomId": "string",
                        "roomSection": {
                          "daySectionCode": "string",
                          "eveningSectionCode": "string"
                        },
                        "roomType": {
                          "accessible": true,
                          "building": "string",
                          "houseKeeping": true,
                          "maximumOccupancy": 0,
                          "meetingRoom": true,
                          "minimumOccupancy": 0,
                          "pseudo": true,
                          "roomAssignmentRating": "MostImportant",
                          "roomClass": "string",
                          "roomFeatures": [
                            {
                              "code": "string",
                              "description": "string",
                              "orderSequence": 0,
                              "quantity": 0
                            }
                          ],
                          "roomType": "string",
                          "shortDescription": "string",
                          "smokingPreference": "string",
                          "suite": true
                        },
                        "sitePlanSection": {
                          "coordinates": "string",
                          "description": "string",
                          "linkCode": "string",
                          "sectionCode": "string",
                          "sectionType": "string"
                        },
                        "smokingPreference": "string",
                        "smokingPreferenceDescription": "string",
                        "turndownInfo": {
                          "turndownStatusInfo": "Required"
                        }
                      }
                    ],
                    "siteCode": "string",
                    "siteDescription": "string"
                  }
                ],
                "links": [
                  {
                    "href": "string",
                    "method": "GET",
                    "operationId": "string",
                    "rel": "string",
                    "targetSchema": "string",
                    "templated": false,
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "FloorPlans not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/frontOfficeStatistics/{statisticsCode}": {
      "get": {
        "description": "Use this API to return front office statistics for a specific hotel based on search criteria such as statisticsCode, hotelId, date, parameterNames, parameterValues, room Classes.<p><strong>OperationId:</strong>getFrontOfficeStatistics</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FOFStats"
        ],
        "summary": "Get front office statistics",
        "operationId": "getFrontOfficeStatistics",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "enum": [
              "AdvanceCheckIn",
              "AIRoomAssignment",
              "AvailableRooms",
              "CheckIns",
              "CheckOuts",
              "ComplimentaryOrHouseUse",
              "DailyProjection",
              "HouseSummary",
              "HouseSummaryMonthToDate",
              "HouseSummaryYearToDate",
              "InHouse",
              "LastHourStatus",
              "ReservationActivity",
              "ReservationActivityDaily",
              "ReservationActivityMonthToDate",
              "ReservationActivityYearToDate",
              "ReservationsCancellationsToday",
              "ReservationStatistics",
              "RoomMaintenance",
              "RoomStatus",
              "Turndown",
              "VIPGuests",
              "CompRouting"
            ],
            "type": "string",
            "description": "Below are the Statistics Code mapping for valid metric code.<p><strong>AdvanceCheckIn:</strong></p>IndividualAdvanceCheckedInCurrent,BlockAdvanceCheckedInInhouse,BlockAdvanceCheckedInTotal,IndividualAdvanceCheckedInInhouse,IndividualAdvanceCheckedInTotal,BlockAdvanceCheckedInCurrent;<p><strong>AIRoomAssignment:</strong></p>MaxPercentageOccupiedTonightRooms,ArrivalResvs,ArrivalVIPResvs,ArrivalMemberResvs,ArrivalUnallocResvs,ArrivalManualAssgnResvs,ArrivalAIAssgnResvs,ArrivalAIUpgResvs,ArrivalAIAssgnVIPResvs,ArrivalAIAssgnMemberResvs,ArrivalAIAssgnOverridden;<p><strong>AvailableRooms:</strong></p>MinAvailableTonightRooms;<p><strong>CheckIns:</strong></p>ArrivalsTotal,CheckedInsTotal,ExpectedCheckInsTotal,QueueRooms;CheckOuts:DeparturesTotal,CheckedOutsTotal,AdultsDeparted,ChildrenDeparted,ExpectedCheckOutsTotal,AdultsExpectedCheckedOut,ChildrenExpectedCheckedOut,ScheduledCheckOutsTotal;<p><strong>ComplimentaryOrHouseUse:</strong></p>ComplimentaryArrivalRooms,ComplimentaryArrivalPersons,ComplimentaryArrivalVIP,ComplimentaryStayoverRooms,ComplimentaryStayoverPersons,ComplimentaryStayoverVIP,ComplimentaryDepartureRooms,ComplimentaryDeparturePersons,ComplimentaryDepartureVIP,HouseUseArrivalRooms,HouseUseArrivalPersons,HouseUseArrivalVIP,HouseUseStayoverRooms,HouseUseStayoverPersons,HouseUseStayoverVIP,HouseUseDepartureRooms,HouseUseDeparturePersons,HouseUseDepartureVIP;<p><strong>DailyProjection:</strong></p>IndividualRooms,IndividualPersons,IndividualVIP,GroupAndBlockRooms,GroupAndBlockPersons,GroupAndBlockVIP,MaxOccupiedTonightRooms,MaxOccupiedTonightPersons,MaxOccupiedTonightVIP,BlocksNotPickedUp,MaxPercentageOccupiedTonightRooms,MinAvailableTonightRooms,RoomRevenue,TotalRevenue,AverageRoomRevenue,RevPar;<p><strong>HouseSummary:</strong></p>TotalPhysicalRooms,TotalOutOfOrder,TotalOutOfService,TotalRoomsToSell,MaxOccupiedTonightRooms,PercentRoomsOccupied,RoomRevenue,TotalRevenue,RevPar,AverageRoomRevenue;<p><strong>HouseSummaryMonthToDate:</strong></p>TotalPhysicalRooms,TotalOutOfOrder,TotalOutOfService,TotalRoomsToSell,MaxOccupiedTonightRooms,PercentRoomsOccupied,RoomRevenue,RevPar,TotalRevenue,AverageRoomRevenue;<p><strong>HouseSummaryYearToDate:</strong></p>TotalPhysicalRooms,TotalOutOfOrder,TotalOutOfService,TotalRoomsToSell,MaxOccupiedTonightRooms,PercentRoomsOccupied,RoomRevenue,RevPar,TotalRevenue,AverageRoomRevenue;<p><strong>InHouse:</strong></p>AdultsInHouse,ChildrenInHouse,InHouseRooms,InHouse;<p><strong>LastHourStatus:</strong></p>ArrivalsInLastHour,DeparturesInLastHour,InspectedRooms,CleanedRooms;<p><strong>ReservationActivity:</strong></p>StayoverRooms,StayoverPersons,StayoverVIP,DeparturesExpectedRooms,DeparturesExpectedPersons,DeparturesExpectedVIP,DeparturesActualRooms,DeparturesActualPersons,DeparturesActualVIP,ArrivalsExpectedRooms,ArrivalsExpectedPersons,ArrivalsExpectedVIP,ArrivalsActualRooms,ArrivalsActualPersons,ArrivalsActualVIP,ArrivalsExpectedRoomsMadeToday,ArrivalsExpectedPersonsMadeToday,ArrivalsExpectedVIPMadeToday,ExtendedStaysRooms,ExtendedStaysPersons,ExtendedStaysVIP,EarlyDeparturesRooms,EarlyDeparturesPersons,EarlyDeparturesVIP,DayUseRooms,DayUsePersons,DayUseVIP,WalkInRooms,WalkInPersons,WalkInVIP,CanceledOnArrivalRooms,CanceledOnArrivalPersons,CanceledOnArrivalVIP,AverageCheckInTime;<p><strong>ReservationActivityDaily:</strong></p>AdultsInHouse,ChildrenInHouse,ArrivalsTotal,TurndownRequired,DeparturesTotal,MaxOccupancyPercentage,Stayover,TotalRoomsReserved;<p><strong>ReservationActivityMonthToDate:</strong></p>ArrivalsActualRooms,ArrivalsActualPersons,DeparturesActualRooms,DeparturesActualPersons,ExtendedStaysRooms,ExtendedStaysPersons,EarlyDeparturesRooms,EarlyDeparturesPersons,DayUseRooms,DayUsePersons;<p><strong>ReservationActivityYearToDate:</strong></p>ArrivalsActualRooms,ArrivalsActualPersons,DeparturesActualRooms,DeparturesActualPersons,ExtendedStaysRooms,ExtendedStaysPersons,EarlyDeparturesRooms,EarlyDeparturesPersons,DayUseRooms,DayUsePersons;<p><strong>ReservationsCancellationsToday:</strong></p>CancellationsTotal,NewReservationsTotal;<p><strong>ReservationStatistics:</strong></p>PreRegisteredTotal,VIPPreRegisteredTotal,TurndownTotal,VIPTurndownTotal,OpenFolioTotal,ExpectedCheckOutsTotal;<p><strong>RoomMaintenance:</strong></p>RoomMaintenanceResolvedTotal,RoomMaintenanceUnResolvedTotal;<p><strong>RoomStatus:</strong></p>InspectedVacant,InspectedAssigned,InspectedOccupied,CleanVacant,CleanAssigned,CleanOccupied,DirtyVacant,DirtyAssigned,DirtyOccupied,PickupVacant,PickupAssigned,PickupOccupied,OutOfOrderVacant,OutOfOrderAssigned,OutOfOrderOccupied,OutOfServiceVacant,OutOfServiceAssigned,OutOfServiceOccupied,TotalOutOfOrder,TotalOutOfService,QueueRooms,CurrentAveWaitTime,SkipRooms,SleepRooms;<p><strong>Turndown:</strong></p>TurndownRequired,TurndownNotRequired,TurndownCompletedRequired;<p><strong>VIPGuests:</strong></p>VIPGuestsArriving,VIPGuestsDeparting;",
            "name": "statisticsCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "Start date of the report.",
            "name": "date",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "AdultsDeparted",
                "AdultsExpectedCheckedOut",
                "AdultsInHouse",
                "ArrivalAIAssgnMemberResvs",
                "ArrivalAIAssgnOverridden",
                "ArrivalAIAssgnResvs",
                "ArrivalAIAssgnVIPResvs",
                "ArrivalAIUpgResvs",
                "ArrivalManualAssgnResvs",
                "ArrivalMemberResvs",
                "ArrivalResvs",
                "ArrivalsActualPersons",
                "ArrivalsActualRooms",
                "ArrivalsActualVIP",
                "ArrivalsExpectedPersons",
                "ArrivalsExpectedPersonsMadeToday",
                "ArrivalsExpectedRooms",
                "ArrivalsExpectedRoomsMadeToday",
                "ArrivalsExpectedVIP",
                "ArrivalsExpectedVIPMadeToday",
                "ArrivalsInLastHour",
                "ArrivalsTotal",
                "ArrivalUnallocResvs",
                "ArrivalVIPResvs",
                "AverageCheckInTime",
                "AverageRoomRevenue",
                "BlockAdvanceCheckedInCurrent",
                "BlockAdvanceCheckedInInhouse",
                "BlockAdvanceCheckedInTotal",
                "BlocksNotPickedUp",
                "CanceledOnArrivalPersons",
                "CanceledOnArrivalRooms",
                "CanceledOnArrivalVIP",
                "CancellationsTotal",
                "CheckedInsTotal",
                "CheckedOutsTotal",
                "ChildrenDeparted",
                "ChildrenExpectedCheckedOut",
                "ChildrenInHouse",
                "CleanAssigned",
                "CleanedRooms",
                "CleanOccupied",
                "CleanVacant",
                "ComplimentaryArrivalPersons",
                "ComplimentaryArrivalRooms",
                "ComplimentaryArrivalVIP",
                "ComplimentaryDeparturePersons",
                "ComplimentaryDepartureRooms",
                "ComplimentaryDepartureVIP",
                "ComplimentaryStayoverPersons",
                "ComplimentaryStayoverRooms",
                "ComplimentaryStayoverVIP",
                "CurrentAveWaitTime",
                "DayUsePersons",
                "DayUseRooms",
                "DayUseVIP",
                "DeparturesActualPersons",
                "DeparturesActualRooms",
                "DeparturesActualVIP",
                "DeparturesExpectedPersons",
                "DeparturesExpectedRooms",
                "DeparturesExpectedVIP",
                "DeparturesInLastHour",
                "DeparturesTotal",
                "DirtyAssigned",
                "DirtyOccupied",
                "DirtyVacant",
                "EarlyDeparturesPersons",
                "EarlyDeparturesRooms",
                "EarlyDeparturesVIP",
                "ExpectedCheckInsTotal",
                "ExpectedCheckOutsTotal",
                "ExtendedStaysPersons",
                "ExtendedStaysRooms",
                "ExtendedStaysVIP",
                "GroupAndBlockPersons",
                "GroupAndBlockRooms",
                "GroupAndBlockVIP",
                "HouseUseArrivalPersons",
                "HouseUseArrivalRooms",
                "HouseUseArrivalVIP",
                "HouseUseDeparturePersons",
                "HouseUseDepartureRooms",
                "HouseUseDepartureVIP",
                "HouseUseStayoverPersons",
                "HouseUseStayoverRooms",
                "HouseUseStayoverVIP",
                "IndividualAdvanceCheckedInCurrent",
                "IndividualAdvanceCheckedInInhouse",
                "IndividualAdvanceCheckedInTotal",
                "IndividualPersons",
                "IndividualRooms",
                "IndividualVIP",
                "InHouse",
                "InHouseBlocksTotal",
                "InHouseRooms",
                "InspectedAssigned",
                "InspectedOccupied",
                "InspectedRooms",
                "InspectedVacant",
                "MaxOccupancyPercentage",
                "MaxOccupiedTonightPersons",
                "MaxOccupiedTonightRooms",
                "MaxOccupiedTonightVIP",
                "MaxPercentageOccupiedTonightRooms",
                "MinAvailableTonightRooms",
                "NewReservationsTotal",
                "OpenFolioTotal",
                "OutOfOrderAssigned",
                "OutOfOrderOccupied",
                "OutOfOrderVacant",
                "OutOfServiceAssigned",
                "OutOfServiceOccupied",
                "OutOfServiceVacant",
                "PercentRoomsOccupied",
                "PickupAssigned",
                "PickupOccupied",
                "PickupVacant",
                "PreRegisteredTotal",
                "QueueRooms",
                "RevPar",
                "RoomMaintenanceResolvedTotal",
                "RoomMaintenanceUnResolvedTotal",
                "RoomRevenue",
                "ScheduledCheckOutsTotal",
                "SkipRooms",
                "SleepRooms",
                "Stayover",
                "StayoverPersons",
                "StayoverRooms",
                "StayoverVIP",
                "TotalOutOfOrder",
                "TotalOutOfService",
                "TotalPhysicalRooms",
                "TotalRevenue",
                "TotalRoomsReserved",
                "TotalRoomsToSell",
                "TurndownCompletedRequired",
                "TurndownNotRequired",
                "TurndownRequired",
                "TurndownTotal",
                "VIPGuestsArriving",
                "VIPGuestsDeparting",
                "VIPGuestsTotal",
                "VIPPreRegisteredTotal",
                "VIPTurndownTotal",
                "WalkInPersons",
                "WalkInRooms",
                "ApprovedCompPostings",
                "StagedCompPostings",
                "DeclinedCompPostings",
                "CompRoutingInstructionsRequests",
                "WalkInVIP"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Supported housekeeping statistical codes.",
            "name": "metric",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Required when statisticsCode is ReservationsCancellationsToday",
            "name": "parameterNames",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Required when statisticsCode is ReservationsCancellationsToday",
            "name": "parameterValues",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Class of the Room.",
            "name": "roomClasses",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response element for housekeeping statistics.",
            "schema": {
              "$ref": "#/definitions/statistics"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "calendarDate": "2020-05-25",
                "metricSet": [
                  {
                    "metrics": [
                      {
                        "category": "Numeric",
                        "code": "ArrivalsTotal",
                        "value": "10"
                      },
                      {
                        "category": "Numeric",
                        "code": "QueueRooms",
                        "value": "0"
                      },
                      {
                        "category": "Numeric",
                        "code": "CheckedInsTotal",
                        "value": "5"
                      },
                      {
                        "category": "Numeric",
                        "code": "ExpectedCheckInsTotal",
                        "value": "10"
                      }
                    ]
                  }
                ],
                "statisticsCode": "CheckIns"
              }
            }
          },
          "204": {
            "description": "FrontOfficeStatistics not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/frontOfficeStatisticsRange/{statisticsCode}": {
      "get": {
        "description": "This API is useful to retrieve statistics regarding front office operations <p><strong>OperationId:</strong>getFrontOfficeStatisticsWithDateRange</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FOFStats"
        ],
        "summary": "Get front office Statistics",
        "operationId": "getFrontOfficeStatisticsWithDateRange",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "enum": [
              "ReservationActivityDaily"
            ],
            "type": "string",
            "description": "Below are the Statistics Code mapping for valid metric code.<p><strong>ReservationActivityDaily:</strong></p>AdultsInHouse,ChildrenInHouse,ArrivalsTotal,TurndownRequired,DeparturesTotal,MaxOccupancyPercentage,Stayover,TotalRoomsReserved;",
            "name": "statisticsCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "End date of the report.",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Start date of the report.",
            "name": "date",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "AdultsDeparted",
                "AdultsExpectedCheckedOut",
                "AdultsInHouse",
                "ArrivalAIAssgnMemberResvs",
                "ArrivalAIAssgnOverridden",
                "ArrivalAIAssgnResvs",
                "ArrivalAIAssgnVIPResvs",
                "ArrivalAIUpgResvs",
                "ArrivalManualAssgnResvs",
                "ArrivalMemberResvs",
                "ArrivalResvs",
                "ArrivalsActualPersons",
                "ArrivalsActualRooms",
                "ArrivalsActualVIP",
                "ArrivalsExpectedPersons",
                "ArrivalsExpectedPersonsMadeToday",
                "ArrivalsExpectedRooms",
                "ArrivalsExpectedRoomsMadeToday",
                "ArrivalsExpectedVIP",
                "ArrivalsExpectedVIPMadeToday",
                "ArrivalsInLastHour",
                "ArrivalsTotal",
                "ArrivalUnallocResvs",
                "ArrivalVIPResvs",
                "AverageCheckInTime",
                "AverageRoomRevenue",
                "BlockAdvanceCheckedInCurrent",
                "BlockAdvanceCheckedInInhouse",
                "BlockAdvanceCheckedInTotal",
                "BlocksNotPickedUp",
                "CanceledOnArrivalPersons",
                "CanceledOnArrivalRooms",
                "CanceledOnArrivalVIP",
                "CancellationsTotal",
                "CheckedInsTotal",
                "CheckedOutsTotal",
                "ChildrenDeparted",
                "ChildrenExpectedCheckedOut",
                "ChildrenInHouse",
                "CleanAssigned",
                "CleanedRooms",
                "CleanOccupied",
                "CleanVacant",
                "ComplimentaryArrivalPersons",
                "ComplimentaryArrivalRooms",
                "ComplimentaryArrivalVIP",
                "ComplimentaryDeparturePersons",
                "ComplimentaryDepartureRooms",
                "ComplimentaryDepartureVIP",
                "ComplimentaryStayoverPersons",
                "ComplimentaryStayoverRooms",
                "ComplimentaryStayoverVIP",
                "CurrentAveWaitTime",
                "DayUsePersons",
                "DayUseRooms",
                "DayUseVIP",
                "DeparturesActualPersons",
                "DeparturesActualRooms",
                "DeparturesActualVIP",
                "DeparturesExpectedPersons",
                "DeparturesExpectedRooms",
                "DeparturesExpectedVIP",
                "DeparturesInLastHour",
                "DeparturesTotal",
                "DirtyAssigned",
                "DirtyOccupied",
                "DirtyVacant",
                "EarlyDeparturesPersons",
                "EarlyDeparturesRooms",
                "EarlyDeparturesVIP",
                "ExpectedCheckInsTotal",
                "ExpectedCheckOutsTotal",
                "ExtendedStaysPersons",
                "ExtendedStaysRooms",
                "ExtendedStaysVIP",
                "GroupAndBlockPersons",
                "GroupAndBlockRooms",
                "GroupAndBlockVIP",
                "HouseUseArrivalPersons",
                "HouseUseArrivalRooms",
                "HouseUseArrivalVIP",
                "HouseUseDeparturePersons",
                "HouseUseDepartureRooms",
                "HouseUseDepartureVIP",
                "HouseUseStayoverPersons",
                "HouseUseStayoverRooms",
                "HouseUseStayoverVIP",
                "IndividualAdvanceCheckedInCurrent",
                "IndividualAdvanceCheckedInInhouse",
                "IndividualAdvanceCheckedInTotal",
                "IndividualPersons",
                "IndividualRooms",
                "IndividualVIP",
                "InHouse",
                "InHouseBlocksTotal",
                "InHouseRooms",
                "InspectedAssigned",
                "InspectedOccupied",
                "InspectedRooms",
                "InspectedVacant",
                "MaxOccupancyPercentage",
                "MaxOccupiedTonightPersons",
                "MaxOccupiedTonightRooms",
                "MaxOccupiedTonightVIP",
                "MaxPercentageOccupiedTonightRooms",
                "MinAvailableTonightRooms",
                "NewReservationsTotal",
                "OpenFolioTotal",
                "OutOfOrderAssigned",
                "OutOfOrderOccupied",
                "OutOfOrderVacant",
                "OutOfServiceAssigned",
                "OutOfServiceOccupied",
                "OutOfServiceVacant",
                "PercentRoomsOccupied",
                "PickupAssigned",
                "PickupOccupied",
                "PickupVacant",
                "PreRegisteredTotal",
                "QueueRooms",
                "RevPar",
                "RoomMaintenanceResolvedTotal",
                "RoomMaintenanceUnResolvedTotal",
                "RoomRevenue",
                "ScheduledCheckOutsTotal",
                "SkipRooms",
                "SleepRooms",
                "Stayover",
                "StayoverPersons",
                "StayoverRooms",
                "StayoverVIP",
                "TotalOutOfOrder",
                "TotalOutOfService",
                "TotalPhysicalRooms",
                "TotalRevenue",
                "TotalRoomsReserved",
                "TotalRoomsToSell",
                "TurndownCompletedRequired",
                "TurndownNotRequired",
                "TurndownRequired",
                "TurndownTotal",
                "VIPGuestsArriving",
                "VIPGuestsDeparting",
                "VIPGuestsTotal",
                "VIPPreRegisteredTotal",
                "VIPTurndownTotal",
                "WalkInPersons",
                "WalkInRooms",
                "ApprovedCompPostings",
                "StagedCompPostings",
                "DeclinedCompPostings",
                "CompRoutingInstructionsRequests",
                "WalkInVIP"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Supported housekeeping statistical codes.",
            "name": "metric",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Required when statisticsCode is ReservationsCancellationsToday",
            "name": "parameterNames",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Required when statisticsCode is ReservationsCancellationsToday",
            "name": "parameterValues",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Class of the Room.",
            "name": "roomClasses",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response element for housekeeping statistics.",
            "schema": {
              "$ref": "#/definitions/statistics"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FrontOfficeStatisticsWithDateRange not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/fulfillmentActivityLogs": {
      "get": {
        "description": "You can use this API to get the fullfillment activity log. <p><strong>OperationId:</strong>getFulfillmentActivityLog</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Get the fullfillment activity log",
        "operationId": "getFulfillmentActivityLog",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Reservation",
              "Contract",
              "Allotment",
              "Outlookview",
              "Profile",
              "Accountreceivables",
              "GdsConvRateCodes",
              "RateCode",
              "Billing",
              "Activity"
            ],
            "type": "string",
            "description": "Activity module.",
            "name": "module",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Name of the parameter.",
            "name": "parameterName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Value of the parameter.",
            "name": "parameterValue",
            "in": "query"
          },
          {
            "type": "string",
            "name": "activityGroup",
            "in": "query"
          },
          {
            "type": "string",
            "name": "activityType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Search from date for the user activity log.",
            "name": "fromDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Search to date for the user activity log.",
            "name": "toDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search text for the user activity log.",
            "name": "searchText",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "integer"
            },
            "collectionFormat": "multi",
            "name": "userByIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "integer"
            },
            "collectionFormat": "multi",
            "name": "userForIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Fulfillment activity log response.",
            "schema": {
              "$ref": "#/definitions/activityLog"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FulfillmentActivityLog not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/houseKeepingStatistics": {
      "get": {
        "description": "This Api will get the housekeeping statistics for your property. <p><strong>OperationId:</strong>getTaskSheetStatistics</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FOFStats"
        ],
        "summary": "Get housekeeping statistics",
        "operationId": "getTaskSheetStatistics",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": true,
            "description": "This flag, if true, enables fetching statistics for all the housekeeping tasks assigned.",
            "name": "includeAllAssignedTasks",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "includeTaskSheetsDetails",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Task code of the task sheet.",
            "name": "taskCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response element for housekeeping statistics.",
            "schema": {
              "$ref": "#/definitions/taskSheetStatistics"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TaskSheetStatistics not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/interfaces/{interfaceId}/roomStatuses": {
      "get": {
        "description": "This Api will getch the room interface status. <p><strong>OperationId:</strong>getRoomInterfaceStatus</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Get room interface status",
        "operationId": "getRoomInterfaceStatus",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "interfaceId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Name of the Hotel Interface",
            "name": "interfaceName",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Bms",
              "Cas",
              "Ccw",
              "Dls",
              "Eft",
              "Exp",
              "Mak",
              "Mbs",
              "Msc",
              "Pbx",
              "Pos",
              "Svs",
              "Tik",
              "Vid",
              "Vms",
              "Www",
              "Xml"
            ],
            "type": "string",
            "description": "XML Posting Interface",
            "name": "interfaceType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
            "name": "logo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Unique machine name of the running IFC.",
            "name": "machineName",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Stopped",
              "Running",
              "Waiting",
              "StopInitiated",
              "StartInitiated",
              "RebootInitiated",
              "Other"
            ],
            "type": "string",
            "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
            "name": "status",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
            "name": "activeFlag",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "blockId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "blockIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "blockIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wild card search value for Room number",
            "name": "roomId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wild card search value to lookup reservations with this last name",
            "name": "lastName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wild card search value to lookup reservations with this first name",
            "name": "firstName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdsContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationIdsType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "arrivalEnd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "arrivalStart",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The ending value of the time span.",
            "name": "expectedArrivalEndTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The starting value of the time span.",
            "name": "expectedArrivalStartTime",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "specialCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "floorCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomFeatureCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomClassCodes",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Clean",
                "Dirty",
                "Pickup",
                "Inspected",
                "OutOfOrder",
                "OutOfService"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
            "name": "roomStatus",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Include reservations that have Guarantee Code(Reservation Type) only.",
            "name": "guaranteeCode",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Cancelled",
                "CheckedOut",
                "CheckedIn",
                "DueIn",
                "DueOut",
                "InHouse",
                "NoShow",
                "WaitList"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Reservation status type for reservations search.",
            "name": "reservationStatus",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Include linked reservations.",
            "name": "includeLinkedReservations",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Include reservations attached to a block.",
            "name": "includeBlocks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "RoomNo",
              "Name",
              "ArrivalDateETR",
              "ArrivalDate"
            ],
            "type": "string",
            "description": "A collection of supported sorting for Room Interface Status search results.",
            "name": "orderBy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Asc",
              "Desc"
            ],
            "type": "string",
            "name": "orderType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The ending value of the time span.",
            "name": "expectedReturnEndTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The starting value of the time span.",
            "name": "expectedReturnStartTime",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Shows whether reservation is in Advance CheckIn state.",
            "name": "advanceCheckedIn",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching room interface status",
            "schema": {
              "$ref": "#/definitions/roomInterfaceStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "links": [
                  {
                    "href": "string",
                    "method": "GET",
                    "operationId": "string",
                    "rel": "string",
                    "targetSchema": "string",
                    "templated": false,
                    "title": "string"
                  }
                ],
                "roomInterfaceStatusList": [
                  {
                    "accessRestriction": "Change",
                    "advanceCheckIn": {
                      "advanceCheckedIn": true,
                      "eTRComments": "string",
                      "expectedReturnTime": "2020-07-14T09:52:51.965Z"
                    },
                    "allowMobileCheckout": true,
                    "allowMobileViewFolio": true,
                    "allowedActions": [
                      "Cancel"
                    ],
                    "attachedProfiles": [
                      {
                        "name": "string",
                        "profileIdList": [
                          {
                            "id": "string",
                            "type": "string"
                          }
                        ],
                        "reservationProfileType": "Company"
                      }
                    ],
                    "cancellationInfo": {
                      "code": "string",
                      "date": "2020-07-14",
                      "description": "string"
                    },
                    "cashiering": {
                      "bedTaxReporting": {
                        "taxRegistrationNo": 0,
                        "taxableDays": 0,
                        "visaExpiryDate": "2020-07-14",
                        "visaIssueDate": "2020-07-14",
                        "visaNumber": "string"
                      },
                      "billingPrivileges": {
                        "allowAutoCheckin": true,
                        "autoSettlement": true,
                        "autoSettlementFreq": 0,
                        "autoSettlementType": "string",
                        "creditLimitAutoPay": true,
                        "directBillAuthorized": true,
                        "folioCloseDate": "2020-07-14",
                        "postStayCharging": true,
                        "postingRestriction": true,
                        "preStayCharging": true,
                        "scheduledCheckout": true,
                        "scheduledCheckoutTime": "2020-07-14",
                        "videoCheckout": true
                      },
                      "compAccounting": {
                        "authorizer": "string",
                        "compType": "string"
                      },
                      "financiallyResponsible": true,
                      "folioTexts": {
                        "folioText": [
                          {
                            "row": 0,
                            "text": "string"
                          }
                        ]
                      },
                      "lastRoomAndTaxPostedDate": "2020-07-14",
                      "periodicFolio": {
                        "frequency": 0,
                        "lastFolioDate": "2020-07-14",
                        "lastSettlementDate": "2020-07-14"
                      },
                      "proratedBilling": true,
                      "reservationPreConfiguredRoutingInstruction": {
                        "authorizerInfo": {
                          "authorizerId": {
                            "id": "string",
                            "type": "string"
                          },
                          "authorizerName": "string",
                          "authorizerRateCode": "string",
                          "authorizerUserName": "string",
                          "inheritAuthorizerRateCode": true
                        },
                        "profileType": "Company",
                        "promotionCode": "string",
                        "ratePlanCode": "string"
                      },
                      "revenuesAndBalances": {
                        "balance": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "foodAndBevRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "nonRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "otherRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "roomRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalFixedCharge": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalPayment": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        }
                      },
                      "reverseAdvanceCheckInAllowed": true,
                      "reverseCheckInAllowed": true,
                      "taxType": {
                        "code": "string",
                        "collectingAgentTax": true,
                        "description": "string",
                        "hotelId": "string",
                        "minimumLengthOfStay": 0,
                        "printAutoAdjust": true,
                        "reportExemptDays": 0,
                        "reportTaxPercentage": 0,
                        "taxExemptNo": "string"
                      },
                      "transactionsPosted": true
                    },
                    "commissionPayoutTo": "TravelAgent",
                    "computedReservationStatus": "Reserved",
                    "createDateTime": "2020-07-14T09:52:51.965Z",
                    "creatorId": "string",
                    "deposit": {
                      "amountOwed": 0,
                      "amountPaid": 0,
                      "amountRequired": 0,
                      "dueDate": "2020-07-14",
                      "hasOutstanding": true,
                      "hasPaid": true,
                      "postingDate": "2020-07-14"
                    },
                    "displayColor": "string",
                    "expectedServiceTime": "string",
                    "guestPreferredCurrency": "string",
                    "hotelId": "string",
                    "hotelInterfaceStatusList": [
                      {
                        "hotelInterface": {
                          "activeFlag": true,
                          "hotelId": "string",
                          "interfaceId": {
                            "id": "string",
                            "type": "string"
                          },
                          "interfaceName": "string",
                          "interfaceType": "Bms",
                          "logo": "string",
                          "machineName": "string",
                          "status": "Stopped"
                        },
                        "interfaceRights": [
                          {
                            "category": "string",
                            "description": "string",
                            "right": 0,
                            "statusCode": "string"
                          }
                        ],
                        "roomExtension": "string"
                      }
                    ],
                    "hotelName": "string",
                    "housekeeping": {
                      "expectedServiceTime": "string",
                      "facilityTaskInfo": {
                        "date": "2020-07-14",
                        "supplies": [
                          {
                            "code": "string",
                            "description": "string",
                            "quantity": 0
                          }
                        ],
                        "task": {
                          "code": "string",
                          "description": "string",
                          "facilityDepartureTask": true,
                          "hotelId": "string",
                          "instructions": "string",
                          "linenChange": true,
                          "sequence": 0
                        }
                      },
                      "instructions": "string",
                      "linenChange": true,
                      "roomStatus": "Clean",
                      "serviceTime": "2020-07-14",
                      "turndownRequested": true
                    },
                    "keyCount": 0,
                    "lastModifierId": "string",
                    "lastModifyDateTime": "2020-07-14T09:52:51.965Z",
                    "lastPrivacyPromptDate": "2020-07-14",
                    "mobileNotifications": {
                      "checkoutMessageReceived": true,
                      "errorMessage": "string",
                      "keyReady": "Pending",
                      "requiresAction": true,
                      "roomReady": "Pending"
                    },
                    "openFolio": true,
                    "optedForCommunication": true,
                    "paymentMethod": "string",
                    "preRegistered": true,
                    "purgeDate": "2020-07-14",
                    "queue": {
                      "averageQueueTimeCurrentReservations": 0,
                      "averageQueueTimeToCheckIn": 0,
                      "guestTextInfo": {
                        "sentBy": "string",
                        "sentTime": "2020-07-14T09:52:51.965Z"
                      },
                      "priority": 0,
                      "queueDate": "2020-07-14",
                      "timeSpan": {
                        "duration": "string",
                        "durationInSeconds": 0,
                        "endDate": "2020-07-14",
                        "startDate": "2020-07-14"
                      }
                    },
                    "reservationCommunication": {
                      "emails": {
                        "count": 0,
                        "emailInfo": [
                          {
                            "email": {
                              "createDateTime": "2020-07-14T09:52:51.965Z",
                              "creatorId": "string",
                              "emailAddress": "string",
                              "emailFormat": "Html",
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-14T09:52:51.965Z",
                              "orderSequence": 0,
                              "primaryInd": true,
                              "purgeDate": "2020-07-14",
                              "type": "string",
                              "typeDescription": "string"
                            },
                            "id": "string",
                            "type": "string"
                          }
                        ],
                        "hasMore": true,
                        "totalResults": 0
                      },
                      "telephones": {
                        "count": 0,
                        "hasMore": true,
                        "telephoneInfo": [
                          {
                            "id": "string",
                            "telephone": {
                              "createDateTime": "2020-07-14T09:52:51.965Z",
                              "creatorId": "string",
                              "extension": "string",
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-14T09:52:51.965Z",
                              "orderSequence": 0,
                              "phoneNumber": "string",
                              "phoneTechType": "string",
                              "phoneUseType": "string",
                              "phoneUseTypeDescription": "string",
                              "primaryInd": true,
                              "purgeDate": "2020-07-14"
                            },
                            "type": "string"
                          }
                        ],
                        "totalResults": 0
                      }
                    },
                    "reservationFolioWindows": [
                      {
                        "balance": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "folioWindowNo": 0,
                        "payeeInfo": {
                          "payeeAccountInfo": {
                            "accountId": {
                              "id": "string",
                              "type": "string"
                            },
                            "accountName": "string",
                            "accountNo": "string",
                            "status": {
                              "description": "string",
                              "restricted": true,
                              "restriction": "string"
                            }
                          },
                          "payeeAddress": {
                            "address": {
                              "addressLine": [
                                "string"
                              ],
                              "barCode": "string",
                              "cityExtension": "string",
                              "cityName": "string",
                              "country": {
                                "code": "string",
                                "value": "string"
                              },
                              "county": "string",
                              "createDateTime": "2020-07-14T09:52:51.965Z",
                              "creatorId": "string",
                              "language": "string",
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-14T09:52:51.965Z",
                              "postalCode": "string",
                              "primaryInd": true,
                              "purgeDate": "2020-07-14",
                              "state": "string",
                              "type": "string",
                              "typeDescription": "string",
                              "updateReservations": true
                            },
                            "id": "string",
                            "type": "string"
                          },
                          "payeeAddressCount": 0,
                          "payeeId": {
                            "id": "string",
                            "type": "string"
                          },
                          "payeeName": "string",
                          "payeeReferenceCurrency": "string",
                          "payeeTaxNumber": "string"
                        },
                        "paymentMethod": "string"
                      }
                    ],
                    "reservationGuest": {
                      "accompanyGuests": [
                        {
                          "firstName": "string",
                          "fullName": "string",
                          "lastName": "string",
                          "profileIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ],
                          "registrationCardNo": "string"
                        }
                      ],
                      "address": {
                        "cityName": "string",
                        "country": {
                          "code": "string",
                          "value": "string"
                        },
                        "excludeNoCity": true,
                        "postalCode": "string",
                        "state": "string",
                        "streetAddress": "string"
                      },
                      "alternateFullName": "string",
                      "alternateGivenName": "string",
                      "alternateSurname": "string",
                      "anonymization": {
                        "anonymizationDate": "2020-07-14T09:52:51.964Z",
                        "anonymizationStatus": "Requested"
                      },
                      "birthDate": "2020-07-14",
                      "email": "string",
                      "externalInfo": {
                        "givenName": "string",
                        "surname": "string"
                      },
                      "fullName": "string",
                      "givenName": "string",
                      "guestLastStayInfo": {
                        "lastStayDate": "2020-07-14",
                        "lastStayRate": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "lastStayRoom": "string",
                        "totalStay": 0
                      },
                      "guestRestricted": true,
                      "guestRestrictedCode": "string",
                      "guestRestrictedReasonDesc": "string",
                      "id": "string",
                      "language": "string",
                      "membership": {
                        "accountId": "string",
                        "bonusCode": "string",
                        "membershipId": 0,
                        "membershipLevel": "string",
                        "membershipLevelDesc": "string",
                        "membershipTypeDesc": "string",
                        "playerRanking": 0,
                        "programCode": "string"
                      },
                      "middleName": "string",
                      "namePrefix": "string",
                      "nameSuffix": "string",
                      "nameTitle": "string",
                      "nameType": "Guest",
                      "nationality": {
                        "code": "string",
                        "value": "string"
                      },
                      "phoneNumber": "string",
                      "registrationCardNo": "string",
                      "surname": "string",
                      "surnamePrefix": "string",
                      "type": "string",
                      "vip": {
                        "vipCode": "string",
                        "vipDescription": "string"
                      }
                    },
                    "reservationIdList": [
                      {
                        "id": "string",
                        "type": "string"
                      }
                    ],
                    "reservationIndicators": [
                      {
                        "count": 0,
                        "indicatorName": "string"
                      }
                    ],
                    "reservationPaymentMethod": {
                      "authorizationRule": {
                        "amount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "code": 0,
                        "percent": 0
                      },
                      "balance": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "description": "string",
                      "emailFolioInfo": {
                        "email": {
                          "createDateTime": "2020-07-14T09:52:51.965Z",
                          "creatorId": "string",
                          "emailAddress": "string",
                          "emailFormat": "Html",
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-14T09:52:51.965Z",
                          "orderSequence": 0,
                          "primaryInd": true,
                          "purgeDate": "2020-07-14",
                          "type": "string",
                          "typeDescription": "string"
                        },
                        "emailFolio": true,
                        "id": "string",
                        "type": "string"
                      },
                      "folioView": 0,
                      "paymentCard": {
                        "approvalAmountNeeded": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "attachCreditCardToProfile": true,
                        "cardHolderName": "string",
                        "cardId": {
                          "id": "string",
                          "type": "string"
                        },
                        "cardNumber": "string",
                        "cardNumberLast4Digits": "string",
                        "cardNumberMasked": "string",
                        "cardOrToken": "CardNumber",
                        "cardType": "Ab",
                        "currentAuthorizedAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "expirationDate": "2020-07-14",
                        "expirationDateExpired": true,
                        "expirationDateMasked": "string",
                        "processing": "Eft",
                        "swiped": true,
                        "userDefinedCardType": "string"
                      },
                      "paymentMethod": "string"
                    },
                    "reservationStatus": "Reserved",
                    "revenuesAndBalances": {
                      "balance": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "foodAndBevRevenue": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "nonRevenue": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "otherRevenue": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "roomRevenue": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "totalFixedCharge": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "totalPayment": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "totalRevenue": {
                        "amount": 0,
                        "currencyCode": "string"
                      }
                    },
                    "roomStatus": "Clean",
                    "roomStay": {
                      "adultCount": 0,
                      "arrivalDate": "2020-07-14",
                      "balance": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "bookingChannelCode": "string",
                      "childCount": 0,
                      "compBalance": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "departureDate": "2020-07-14",
                      "depositPayments": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "expectedTimes": {
                        "reservationExpectedArrivalTime": "2020-07-14T09:52:51.964Z",
                        "reservationExpectedDepartureTime": "2020-07-14T09:52:51.964Z"
                      },
                      "fixedRate": true,
                      "guarantee": {
                        "guaranteeCode": "string",
                        "onHold": true,
                        "shortDescription": "string"
                      },
                      "guestServiceStatus": "DoNotDisturb",
                      "marketCode": "string",
                      "numberOfRooms": 0,
                      "originalTimeSpan": {
                        "duration": "string",
                        "endDate": "2020-07-14",
                        "startDate": "2020-07-14"
                      },
                      "partyCode": "string",
                      "points": {
                        "awardsType": "string",
                        "points": 0
                      },
                      "promotion": {
                        "couponCode": "string",
                        "promotionCode": "string",
                        "promotionName": "string"
                      },
                      "pseudoRoom": true,
                      "rateAmount": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "ratePlanCode": "string",
                      "rateSuppressed": true,
                      "reservationBlock": {
                        "blockIdList": [
                          {
                            "id": "string",
                            "type": "string"
                          }
                        ],
                        "blockName": "string",
                        "hotelId": "string"
                      },
                      "roomClass": "string",
                      "roomNumber": "string",
                      "roomNumberLocked": true,
                      "roomType": "string",
                      "roomTypeCharged": "string",
                      "scheduledCheckoutTime": "2020-07-14",
                      "sourceOfBusiness": "string",
                      "sourceOfBusinessDescription": "string",
                      "totalAmount": {
                        "amount": 0,
                        "currencyCode": "string"
                      }
                    },
                    "roomStayReservation": true,
                    "searchMatches": [
                      {
                        "attribute": "string",
                        "value": "string"
                      }
                    ],
                    "sharedGuests": [
                      {
                        "firstName": "string",
                        "fullName": "string",
                        "lastName": "string",
                        "profileId": {
                          "id": "string",
                          "idContext": "string",
                          "idExtension": 0,
                          "instance": "string",
                          "type": "string",
                          "url": "string"
                        }
                      }
                    ],
                    "sourceOfSale": {
                      "sourceCode": "string",
                      "sourceType": "string"
                    },
                    "specials": "string",
                    "taxType": {
                      "code": "string",
                      "collectingAgentTax": true,
                      "description": "string",
                      "hotelId": "string",
                      "minimumLengthOfStay": 0,
                      "printAutoAdjust": true,
                      "reportExemptDays": 0,
                      "reportTaxPercentage": 0
                    },
                    "turndownInfo": {
                      "allowed": true,
                      "status": "Required"
                    },
                    "waitlist": {
                      "description": "string",
                      "priorityCode": "string",
                      "priorityDescription": "string",
                      "reasonCode": "string",
                      "reasonDescription": "string",
                      "telephone": "string"
                    },
                    "walkInIndicator": true,
                    "welcomeOffer": true
                  }
                ]
              }
            }
          },
          "204": {
            "description": "RoomInterfaceStatus not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "You can use this API to change room interface status. <p><strong>OperationId:</strong>putRoomInterfaceStatus</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Change room interface status",
        "operationId": "putRoomInterfaceStatus",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "interfaceId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to change the interface status for a reservation.",
            "name": "reservationInterface",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationInterface"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/keyInterfaces": {
      "get": {
        "description": "You can use thie API to get key encoder interface configuration details. <p><strong>OperationId:</strong>getRoomKeyInterfaceDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Get key encoder interface configuration details",
        "operationId": "getRoomKeyInterfaceDetails",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomNumbersCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response with the configuration details of active room key interfaces including the available key encoders.",
            "schema": {
              "$ref": "#/definitions/roomKeyInterfaceDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RoomKeyInterfaceDetails not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/queueReservationsStatistics": {
      "get": {
        "description": "Use this API to return reservation queue statistics for a specific property.<p><strong>OperationId:</strong>getReservationQueueStatistics</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FOFStats"
        ],
        "summary": "Get hotel reservation queue statistics",
        "operationId": "getReservationQueueStatistics",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the fetch of current Reservations In Queue statistics. Contains the statistic information.",
            "schema": {
              "$ref": "#/definitions/reservationQueueStatistics"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReservationQueueStatistics not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/queuedReservations": {
      "get": {
        "description": "Fetch all current reservations that are Queued Reservations.  These reservations are guests that have arrived at the hotel, but their room isn't ready, so they're sitting in a queue.  <p><strong>OperationId:</strong>getReservationsInQueue</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Get the reservation in queue",
        "operationId": "getReservationsInQueue",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomClassCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomTypeCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search of reservations in queue by Room Number.",
            "name": "roomNumberWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search of reservations in queue by Guest Name.",
            "name": "guestNameWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the operation to fetch Reservations in Queue",
            "schema": {
              "$ref": "#/definitions/reservationsInQueue"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "links": [
                  {
                    "href": "string",
                    "method": "GET",
                    "operationId": "string",
                    "rel": "string",
                    "targetSchema": "string",
                    "templated": false,
                    "title": "string"
                  }
                ],
                "reservations": {
                  "count": 0,
                  "hasMore": true,
                  "reservationInfo": [
                    {
                      "accessRestriction": "Change",
                      "advanceCheckIn": {
                        "advanceCheckedIn": true,
                        "eTRComments": "string",
                        "expectedReturnTime": "2020-07-14T10:05:39.353Z"
                      },
                      "allowMobileCheckout": true,
                      "allowMobileViewFolio": true,
                      "allowedActions": [
                        "Cancel"
                      ],
                      "attachedProfiles": [
                        {
                          "name": "string",
                          "profileIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ],
                          "reservationProfileType": "Company"
                        }
                      ],
                      "cancellationInfo": {
                        "code": "string",
                        "date": "2020-07-14",
                        "description": "string"
                      },
                      "cashiering": {
                        "bedTaxReporting": {
                          "taxRegistrationNo": 0,
                          "taxableDays": 0,
                          "visaExpiryDate": "2020-07-14",
                          "visaIssueDate": "2020-07-14",
                          "visaNumber": "string"
                        },
                        "billingPrivileges": {
                          "allowAutoCheckin": true,
                          "autoSettlement": true,
                          "autoSettlementFreq": 0,
                          "autoSettlementType": "string",
                          "creditLimitAutoPay": true,
                          "directBillAuthorized": true,
                          "folioCloseDate": "2020-07-14",
                          "postStayCharging": true,
                          "postingRestriction": true,
                          "preStayCharging": true,
                          "scheduledCheckout": true,
                          "scheduledCheckoutTime": "2020-07-14",
                          "videoCheckout": true
                        },
                        "compAccounting": {
                          "authorizer": "string",
                          "compType": "string"
                        },
                        "financiallyResponsible": true,
                        "folioTexts": {
                          "folioText": [
                            {
                              "row": 0,
                              "text": "string"
                            }
                          ]
                        },
                        "lastRoomAndTaxPostedDate": "2020-07-14",
                        "periodicFolio": {
                          "frequency": 0,
                          "lastFolioDate": "2020-07-14",
                          "lastSettlementDate": "2020-07-14"
                        },
                        "proratedBilling": true,
                        "reservationPreConfiguredRoutingInstruction": {
                          "authorizerInfo": {
                            "authorizerId": {
                              "id": "string",
                              "type": "string"
                            },
                            "authorizerName": "string",
                            "authorizerRateCode": "string",
                            "authorizerUserName": "string",
                            "inheritAuthorizerRateCode": true
                          },
                          "profileType": "Company",
                          "promotionCode": "string",
                          "ratePlanCode": "string"
                        },
                        "revenuesAndBalances": {
                          "balance": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "foodAndBevRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "nonRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "otherRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "roomRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "totalFixedCharge": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "totalPayment": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "totalRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          }
                        },
                        "reverseAdvanceCheckInAllowed": true,
                        "reverseCheckInAllowed": true,
                        "taxType": {
                          "code": "string",
                          "collectingAgentTax": true,
                          "description": "string",
                          "hotelId": "string",
                          "minimumLengthOfStay": 0,
                          "printAutoAdjust": true,
                          "reportExemptDays": 0,
                          "reportTaxPercentage": 0,
                          "taxExemptNo": "string"
                        },
                        "transactionsPosted": true
                      },
                      "commissionPayoutTo": "TravelAgent",
                      "computedReservationStatus": "Reserved",
                      "createDateTime": "2020-07-14T10:05:39.353Z",
                      "creatorId": "string",
                      "deposit": {
                        "amountOwed": 0,
                        "amountPaid": 0,
                        "amountRequired": 0,
                        "dueDate": "2020-07-14",
                        "hasOutstanding": true,
                        "hasPaid": true,
                        "postingDate": "2020-07-14"
                      },
                      "displayColor": "string",
                      "expectedServiceTime": "string",
                      "guestPreferredCurrency": "string",
                      "hotelId": "string",
                      "hotelInterfaceStatusList": [
                        {
                          "hotelInterface": {
                            "activeFlag": true,
                            "hotelId": "string",
                            "interfaceId": {
                              "id": "string",
                              "type": "string"
                            },
                            "interfaceName": "string",
                            "interfaceType": "Bms",
                            "logo": "string",
                            "machineName": "string",
                            "status": "Stopped"
                          },
                          "interfaceRights": [
                            {
                              "category": "string",
                              "description": "string",
                              "right": 0,
                              "statusCode": "string"
                            }
                          ],
                          "roomExtension": "string"
                        }
                      ],
                      "hotelName": "string",
                      "housekeeping": {
                        "expectedServiceTime": "string",
                        "facilityTaskInfo": {
                          "date": "2020-07-14",
                          "supplies": [
                            {
                              "code": "string",
                              "description": "string",
                              "quantity": 0
                            }
                          ],
                          "task": {
                            "code": "string",
                            "description": "string",
                            "facilityDepartureTask": true,
                            "hotelId": "string",
                            "instructions": "string",
                            "linenChange": true,
                            "sequence": 0
                          }
                        },
                        "instructions": "string",
                        "linenChange": true,
                        "roomStatus": "Clean",
                        "serviceTime": "2020-07-14",
                        "turndownRequested": true
                      },
                      "keyCount": 0,
                      "lastModifierId": "string",
                      "lastModifyDateTime": "2020-07-14T10:05:39.353Z",
                      "lastPrivacyPromptDate": "2020-07-14",
                      "mobileNotifications": {
                        "checkoutMessageReceived": true,
                        "errorMessage": "string",
                        "keyReady": "Pending",
                        "requiresAction": true,
                        "roomReady": "Pending"
                      },
                      "openFolio": true,
                      "optedForCommunication": true,
                      "paymentMethod": "string",
                      "preRegistered": true,
                      "purgeDate": "2020-07-14",
                      "queue": {
                        "averageQueueTimeCurrentReservations": 0,
                        "averageQueueTimeToCheckIn": 0,
                        "guestTextInfo": {
                          "sentBy": "string",
                          "sentTime": "2020-07-14T10:05:39.352Z"
                        },
                        "priority": 0,
                        "queueDate": "2020-07-14",
                        "timeSpan": {
                          "duration": "string",
                          "durationInSeconds": 0,
                          "endDate": "2020-07-14",
                          "startDate": "2020-07-14"
                        }
                      },
                      "reservationCommunication": {
                        "emails": {
                          "count": 0,
                          "emailInfo": [
                            {
                              "email": {
                                "createDateTime": "2020-07-14T10:05:39.353Z",
                                "creatorId": "string",
                                "emailAddress": "string",
                                "emailFormat": "Html",
                                "lastModifierId": "string",
                                "lastModifyDateTime": "2020-07-14T10:05:39.353Z",
                                "orderSequence": 0,
                                "primaryInd": true,
                                "purgeDate": "2020-07-14",
                                "type": "string",
                                "typeDescription": "string"
                              },
                              "id": "string",
                              "type": "string"
                            }
                          ],
                          "hasMore": true,
                          "totalResults": 0
                        },
                        "telephones": {
                          "count": 0,
                          "hasMore": true,
                          "telephoneInfo": [
                            {
                              "id": "string",
                              "telephone": {
                                "createDateTime": "2020-07-14T10:05:39.353Z",
                                "creatorId": "string",
                                "extension": "string",
                                "lastModifierId": "string",
                                "lastModifyDateTime": "2020-07-14T10:05:39.353Z",
                                "orderSequence": 0,
                                "phoneNumber": "string",
                                "phoneTechType": "string",
                                "phoneUseType": "string",
                                "phoneUseTypeDescription": "string",
                                "primaryInd": true,
                                "purgeDate": "2020-07-14"
                              },
                              "type": "string"
                            }
                          ],
                          "totalResults": 0
                        }
                      },
                      "reservationFolioWindows": [
                        {
                          "balance": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "folioWindowNo": 0,
                          "payeeInfo": {
                            "payeeAccountInfo": {
                              "accountId": {
                                "id": "string",
                                "type": "string"
                              },
                              "accountName": "string",
                              "accountNo": "string",
                              "status": {
                                "description": "string",
                                "restricted": true,
                                "restriction": "string"
                              }
                            },
                            "payeeAddress": {
                              "address": {
                                "addressLine": [
                                  "string"
                                ],
                                "barCode": "string",
                                "cityExtension": "string",
                                "cityName": "string",
                                "country": {
                                  "code": "string",
                                  "value": "string"
                                },
                                "county": "string",
                                "createDateTime": "2020-07-14T10:05:39.352Z",
                                "creatorId": "string",
                                "language": "string",
                                "lastModifierId": "string",
                                "lastModifyDateTime": "2020-07-14T10:05:39.352Z",
                                "postalCode": "string",
                                "primaryInd": true,
                                "purgeDate": "2020-07-14",
                                "state": "string",
                                "type": "string",
                                "typeDescription": "string",
                                "updateReservations": true
                              },
                              "id": "string",
                              "type": "string"
                            },
                            "payeeAddressCount": 0,
                            "payeeId": {
                              "id": "string",
                              "type": "string"
                            },
                            "payeeName": "string",
                            "payeeReferenceCurrency": "string",
                            "payeeTaxNumber": "string"
                          },
                          "paymentMethod": "string"
                        }
                      ],
                      "reservationGuest": {
                        "accompanyGuests": [
                          {
                            "firstName": "string",
                            "fullName": "string",
                            "lastName": "string",
                            "profileIdList": [
                              {
                                "id": "string",
                                "type": "string"
                              }
                            ],
                            "registrationCardNo": "string"
                          }
                        ],
                        "address": {
                          "cityName": "string",
                          "country": {
                            "code": "string",
                            "value": "string"
                          },
                          "excludeNoCity": true,
                          "postalCode": "string",
                          "state": "string",
                          "streetAddress": "string"
                        },
                        "alternateFullName": "string",
                        "alternateGivenName": "string",
                        "alternateSurname": "string",
                        "anonymization": {
                          "anonymizationDate": "2020-07-14T10:05:39.352Z",
                          "anonymizationStatus": "Requested"
                        },
                        "birthDate": "2020-07-14",
                        "email": "string",
                        "externalInfo": {
                          "givenName": "string",
                          "surname": "string"
                        },
                        "fullName": "string",
                        "givenName": "string",
                        "guestLastStayInfo": {
                          "lastStayDate": "2020-07-14",
                          "lastStayRate": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "lastStayRoom": "string",
                          "totalStay": 0
                        },
                        "guestRestricted": true,
                        "guestRestrictedCode": "string",
                        "guestRestrictedReasonDesc": "string",
                        "id": "string",
                        "language": "string",
                        "membership": {
                          "accountId": "string",
                          "bonusCode": "string",
                          "membershipId": 0,
                          "membershipLevel": "string",
                          "membershipLevelDesc": "string",
                          "membershipTypeDesc": "string",
                          "playerRanking": 0,
                          "programCode": "string"
                        },
                        "middleName": "string",
                        "namePrefix": "string",
                        "nameSuffix": "string",
                        "nameTitle": "string",
                        "nameType": "Guest",
                        "nationality": {
                          "code": "string",
                          "value": "string"
                        },
                        "phoneNumber": "string",
                        "registrationCardNo": "string",
                        "surname": "string",
                        "surnamePrefix": "string",
                        "type": "string",
                        "vip": {
                          "vipCode": "string",
                          "vipDescription": "string"
                        }
                      },
                      "reservationIdList": [
                        {
                          "id": "string",
                          "type": "string"
                        }
                      ],
                      "reservationIndicators": [
                        {
                          "count": 0,
                          "indicatorName": "string"
                        }
                      ],
                      "reservationPaymentMethod": {
                        "authorizationRule": {
                          "amount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "code": 0,
                          "percent": 0
                        },
                        "balance": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "description": "string",
                        "emailFolioInfo": {
                          "email": {
                            "createDateTime": "2020-07-14T10:05:39.352Z",
                            "creatorId": "string",
                            "emailAddress": "string",
                            "emailFormat": "Html",
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-14T10:05:39.352Z",
                            "orderSequence": 0,
                            "primaryInd": true,
                            "purgeDate": "2020-07-14",
                            "type": "string",
                            "typeDescription": "string"
                          },
                          "emailFolio": true,
                          "id": "string",
                          "type": "string"
                        },
                        "folioView": 0,
                        "paymentCard": {
                          "approvalAmountNeeded": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "attachCreditCardToProfile": true,
                          "cardHolderName": "string",
                          "cardId": {
                            "id": "string",
                            "type": "string"
                          },
                          "cardNumber": "string",
                          "cardNumberLast4Digits": "string",
                          "cardNumberMasked": "string",
                          "cardOrToken": "CardNumber",
                          "cardType": "Ab",
                          "currentAuthorizedAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "expirationDate": "2020-07-14",
                          "expirationDateExpired": true,
                          "expirationDateMasked": "string",
                          "processing": "Eft",
                          "swiped": true,
                          "userDefinedCardType": "string"
                        },
                        "paymentMethod": "string"
                      },
                      "reservationStatus": "Reserved",
                      "revenuesAndBalances": {
                        "balance": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "foodAndBevRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "nonRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "otherRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "roomRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalFixedCharge": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalPayment": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        }
                      },
                      "roomStatus": "Clean",
                      "roomStay": {
                        "adultCount": 0,
                        "arrivalDate": "2020-07-14",
                        "balance": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "bookingChannelCode": "string",
                        "childCount": 0,
                        "compBalance": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "departureDate": "2020-07-14",
                        "depositPayments": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "expectedTimes": {
                          "reservationExpectedArrivalTime": "2020-07-14T10:05:39.352Z",
                          "reservationExpectedDepartureTime": "2020-07-14T10:05:39.352Z"
                        },
                        "fixedRate": true,
                        "guarantee": {
                          "guaranteeCode": "string",
                          "onHold": true,
                          "shortDescription": "string"
                        },
                        "guestServiceStatus": "DoNotDisturb",
                        "marketCode": "string",
                        "numberOfRooms": 0,
                        "originalTimeSpan": {
                          "duration": "string",
                          "endDate": "2020-07-14",
                          "startDate": "2020-07-14"
                        },
                        "partyCode": "string",
                        "points": {
                          "awardsType": "string",
                          "points": 0
                        },
                        "promotion": {
                          "couponCode": "string",
                          "promotionCode": "string",
                          "promotionName": "string"
                        },
                        "pseudoRoom": true,
                        "rateAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "ratePlanCode": "string",
                        "rateSuppressed": true,
                        "reservationBlock": {
                          "blockIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ],
                          "blockName": "string",
                          "hotelId": "string"
                        },
                        "roomClass": "string",
                        "roomNumber": "string",
                        "roomNumberLocked": true,
                        "roomType": "string",
                        "roomTypeCharged": "string",
                        "scheduledCheckoutTime": "2020-07-14",
                        "sourceOfBusiness": "string",
                        "sourceOfBusinessDescription": "string",
                        "totalAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        }
                      },
                      "roomStayReservation": true,
                      "searchMatches": [
                        {
                          "attribute": "string",
                          "value": "string"
                        }
                      ],
                      "sharedGuests": [
                        {
                          "firstName": "string",
                          "fullName": "string",
                          "lastName": "string",
                          "profileId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          }
                        }
                      ],
                      "sourceOfSale": {
                        "sourceCode": "string",
                        "sourceType": "string"
                      },
                      "specials": "string",
                      "taxType": {
                        "code": "string",
                        "collectingAgentTax": true,
                        "description": "string",
                        "hotelId": "string",
                        "minimumLengthOfStay": 0,
                        "printAutoAdjust": true,
                        "reportExemptDays": 0,
                        "reportTaxPercentage": 0
                      },
                      "turndownInfo": {
                        "allowed": true,
                        "status": "Required"
                      },
                      "waitlist": {
                        "description": "string",
                        "priorityCode": "string",
                        "priorityDescription": "string",
                        "reasonCode": "string",
                        "reasonDescription": "string",
                        "telephone": "string"
                      },
                      "walkInIndicator": true,
                      "welcomeOffer": true
                    }
                  ],
                  "totalResults": 0
                },
                "roomStatusInfo": {
                  "hotelId": "string",
                  "room": [
                    {
                      "accessible": true,
                      "attendant": [
                        {
                          "activeFlag": "string",
                          "appUser": {
                            "actAs": "string",
                            "actAt": "string",
                            "appUser": "string",
                            "appUserId": {
                              "id": "string",
                              "type": "string"
                            },
                            "attendantInfo": {
                              "attendantId": "string",
                              "hotelId": "string"
                            },
                            "cashierId": 0,
                            "cashierTitle": "string",
                            "department": "string",
                            "departmentLocation": "string",
                            "disabledUntil": "2020-07-14",
                            "expiryDate": "2020-07-14",
                            "hotel": {
                              "code": "string",
                              "description": "string"
                            },
                            "lDAPUser": "string",
                            "passwordChangeDate": "2020-07-14",
                            "salesRepCode": "string",
                            "userDefaultLanguage": "string",
                            "userInfo": {
                              "addressInfo": {
                                "address": {
                                  "addressLine": [
                                    "string"
                                  ],
                                  "barCode": "string",
                                  "cityExtension": "string",
                                  "cityName": "string",
                                  "country": {
                                    "code": "string",
                                    "value": "string"
                                  },
                                  "county": "string",
                                  "createDateTime": "2020-07-14T10:05:39.354Z",
                                  "creatorId": "string",
                                  "language": "string",
                                  "lastModifierId": "string",
                                  "lastModifyDateTime": "2020-07-14T10:05:39.354Z",
                                  "postalCode": "string",
                                  "primaryInd": true,
                                  "purgeDate": "2020-07-14",
                                  "state": "string",
                                  "type": "string",
                                  "typeDescription": "string",
                                  "updateReservations": true
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "birthDate": "2020-07-14",
                              "birthDateMasked": "string",
                              "department": {
                                "code": "string",
                                "description": "string"
                              },
                              "emailInfo": {
                                "email": {
                                  "createDateTime": "2020-07-14T10:05:39.354Z",
                                  "creatorId": "string",
                                  "emailAddress": "string",
                                  "emailFormat": "Html",
                                  "lastModifierId": "string",
                                  "lastModifyDateTime": "2020-07-14T10:05:39.354Z",
                                  "orderSequence": 0,
                                  "primaryInd": true,
                                  "purgeDate": "2020-07-14",
                                  "type": "string",
                                  "typeDescription": "string"
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "gender": "Male",
                              "personName": {
                                "envelopeGreeting": "string",
                                "externalSystem": "string",
                                "givenName": "string",
                                "language": "string",
                                "middleName": "string",
                                "namePrefix": "string",
                                "nameSuffix": "string",
                                "nameTitle": "string",
                                "nameTitleSuffix": 0,
                                "nameType": "Primary",
                                "salutation": "string",
                                "surname": "string"
                              },
                              "phoneInfo": {
                                "id": "string",
                                "telephone": {
                                  "createDateTime": "2020-07-14T10:05:39.354Z",
                                  "creatorId": "string",
                                  "extension": "string",
                                  "lastModifierId": "string",
                                  "lastModifyDateTime": "2020-07-14T10:05:39.354Z",
                                  "orderSequence": 0,
                                  "phoneNumber": "string",
                                  "phoneTechType": "string",
                                  "phoneUseType": "string",
                                  "phoneUseTypeDescription": "string",
                                  "primaryInd": true,
                                  "purgeDate": "2020-07-14"
                                },
                                "type": "string"
                              },
                              "profileId": {
                                "id": "string",
                                "type": "string"
                              }
                            },
                            "userSessionInfo": {
                              "businessDate": "2020-07-14",
                              "cROCountryCode": "string",
                              "chain": "string",
                              "cro": {
                                "code": "string",
                                "description": "string"
                              },
                              "hotel": {
                                "code": "string",
                                "description": "string"
                              },
                              "parameters": [
                                {
                                  "parameterName": "string",
                                  "parameterValue": "string"
                                }
                              ],
                              "runningApp": "string",
                              "sessionDefaults": {
                                "baseLanguage": "string",
                                "currencyCode": "string",
                                "currencyFormat": "string",
                                "dbDateFormat": "string",
                                "defaultLanguage": "string",
                                "javaDateFormat": "string",
                                "javaTimeFormat": "string",
                                "oracleDateFormat": "string",
                                "oracleTimeFormat": "string"
                              },
                              "shareProfiles": true,
                              "systemDate": "2020-07-14",
                              "terminal": "string"
                            }
                          },
                          "attendantId": "string",
                          "attendantName": "string",
                          "floor": "string",
                          "friday": true,
                          "hotelId": "string",
                          "monday": true,
                          "saturday": true,
                          "section": {
                            "code": "string",
                            "description": "string",
                            "hotelId": "string",
                            "inactive": true,
                            "roomCredits": 0,
                            "rooms": 0,
                            "sectionGroup": "string",
                            "sequence": 0,
                            "targetCredits": 0
                          },
                          "startTime": "2020-07-14T10:05:39.354Z",
                          "status": "Standby",
                          "sunday": true,
                          "thursday": true,
                          "tuesday": true,
                          "wednesday": true
                        }
                      ],
                      "building": "string",
                      "componentRoomNumber": "string",
                      "componentRoomNumbers": {
                        "roomId": [
                          "string"
                        ]
                      },
                      "componentRooms": [
                        {
                          "accessible": true,
                          "building": "string",
                          "description": {
                            "defaultText": "string",
                            "translatedTexts": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "floor": "string",
                          "floorDescription": "string",
                          "meetingRoom": true,
                          "roomAssignmentRating": "MostImportant",
                          "roomCondition": {
                            "code": "string",
                            "description": "string"
                          },
                          "roomDescription": "string",
                          "roomFeatures": [
                            {
                              "code": "string",
                              "description": "string",
                              "orderSequence": 0,
                              "quantity": 0
                            }
                          ],
                          "roomId": "string",
                          "roomType": {
                            "accessible": true,
                            "building": "string",
                            "houseKeeping": true,
                            "maximumOccupancy": 0,
                            "meetingRoom": true,
                            "minimumOccupancy": 0,
                            "pseudo": true,
                            "roomAssignmentRating": "MostImportant",
                            "roomClass": "string",
                            "roomFeatures": [
                              {
                                "code": "string",
                                "description": "string",
                                "orderSequence": 0,
                                "quantity": 0
                              }
                            ],
                            "roomType": "string",
                            "shortDescription": "string",
                            "smokingPreference": "string",
                            "suite": true
                          },
                          "smokingPreference": "string",
                          "smokingPreferenceDescription": "string"
                        }
                      ],
                      "connectingRooms": [
                        {
                          "accessible": true,
                          "building": "string",
                          "description": {
                            "defaultText": "string",
                            "translatedTexts": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "floor": "string",
                          "floorDescription": "string",
                          "meetingRoom": true,
                          "roomAssignmentRating": "MostImportant",
                          "roomCondition": {
                            "code": "string",
                            "description": "string"
                          },
                          "roomDescription": "string",
                          "roomFeatures": [
                            {
                              "code": "string",
                              "description": "string",
                              "orderSequence": 0,
                              "quantity": 0
                            }
                          ],
                          "roomId": "string",
                          "roomType": {
                            "accessible": true,
                            "building": "string",
                            "houseKeeping": true,
                            "maximumOccupancy": 0,
                            "meetingRoom": true,
                            "minimumOccupancy": 0,
                            "pseudo": true,
                            "roomAssignmentRating": "MostImportant",
                            "roomClass": "string",
                            "roomFeatures": [
                              {
                                "code": "string",
                                "description": "string",
                                "orderSequence": 0,
                                "quantity": 0
                              }
                            ],
                            "roomType": "string",
                            "shortDescription": "string",
                            "smokingPreference": "string",
                            "suite": true
                          },
                          "smokingPreference": "string",
                          "smokingPreferenceDescription": "string"
                        }
                      ],
                      "description": {
                        "defaultText": "string",
                        "translatedTexts": {
                          "text": [
                            {
                              "language": "string",
                              "value": "string"
                            }
                          ]
                        }
                      },
                      "discrepancy": [
                        "Sleep"
                      ],
                      "floor": "string",
                      "floorDescription": "string",
                      "hold": {
                        "comments": "string",
                        "holdUntil": "2020-07-14T10:05:39.354Z",
                        "holdUser": "string"
                      },
                      "housekeeping": {
                        "cleaningPriority": {
                          "prioritySequence": 0
                        },
                        "facilityTaskCode": [
                          "string"
                        ],
                        "guestServiceRequest": "DoNotDisturb",
                        "linenChange": true,
                        "roomCondition": {
                          "assignmentType": "Available",
                          "remarks": "string",
                          "roomCondition": {
                            "code": "string",
                            "description": "string"
                          }
                        },
                        "roomPersons": {
                          "frontOfficePersons": 0,
                          "houseKeepingPersons": 0
                        },
                        "roomStatus": {
                          "frontOfficeStatus": "Vacant",
                          "housekeepingStatus": "Vacant",
                          "reservationStatusList": [
                            "Arrival"
                          ],
                          "roomStatus": "Clean"
                        }
                      },
                      "meetingRoom": true,
                      "outOfOrder": [
                        {
                          "end": "2020-07-14",
                          "newDateRange": {
                            "end": "2020-07-14",
                            "start": "2020-07-14"
                          },
                          "reasonCode": "string",
                          "reasonDesc": "string",
                          "repairRemarks": "string",
                          "returnStatus": "Clean",
                          "roomStatus": "Clean",
                          "start": "2020-07-14"
                        }
                      ],
                      "resvInfo": [
                        {
                          "guestName": "string",
                          "profileId": {
                            "id": "string",
                            "type": "string"
                          },
                          "reservationId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          },
                          "reservationStatusInfo": "Arrival",
                          "stayDateInfo": {
                            "expectedTimes": {
                              "reservationExpectedArrivalTime": "2020-07-14T10:05:39.354Z",
                              "reservationExpectedDepartureTime": "2020-07-14T10:05:39.354Z"
                            },
                            "timeSpan": {
                              "duration": "string",
                              "endDate": "2020-07-14",
                              "startDate": "2020-07-14"
                            }
                          },
                          "vipStatus": {
                            "code": "string",
                            "value": "string"
                          }
                        }
                      ],
                      "roomAssignmentRating": "MostImportant",
                      "roomDescription": "string",
                      "roomFeatures": [
                        {
                          "code": "string",
                          "description": "string",
                          "orderSequence": 0,
                          "quantity": 0
                        }
                      ],
                      "roomId": "string",
                      "roomSection": {
                        "daySectionCode": "string",
                        "eveningSectionCode": "string"
                      },
                      "roomType": {
                        "accessible": true,
                        "building": "string",
                        "houseKeeping": true,
                        "maximumOccupancy": 0,
                        "meetingRoom": true,
                        "minimumOccupancy": 0,
                        "pseudo": true,
                        "roomAssignmentRating": "MostImportant",
                        "roomClass": "string",
                        "roomFeatures": [
                          {
                            "code": "string",
                            "description": "string",
                            "orderSequence": 0,
                            "quantity": 0
                          }
                        ],
                        "roomType": "string",
                        "shortDescription": "string",
                        "smokingPreference": "string",
                        "suite": true
                      },
                      "sitePlanSection": {
                        "coordinates": "string",
                        "description": "string",
                        "linkCode": "string",
                        "sectionCode": "string",
                        "sectionType": "string"
                      },
                      "smokingPreference": "string",
                      "smokingPreferenceDescription": "string",
                      "turndownInfo": {
                        "turndownStatusInfo": "Required"
                      }
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "ReservationsInQueue not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/queuedReservations/{reservationId}": {
      "put": {
        "description": "Using this API you can assign reservations to the reservation queue if the guest's room is not ready for assignment or if there are no available rooms of the room type attached to the reservation. Housekeeping staff can use the Queue Rooms functionality to determine if there are guests waiting to check in to a particular room or type of room; if there are, the queue list can provide guidance in determining which rooms need attention first. <p><strong>OperationId:</strong>addReservationToQueue</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Add reservation to queue",
        "operationId": "addReservationToQueue",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to add a reservation to the Queue for Check-In. A reservation can be added to the queue prior to Check-In on the day of arrival.",
            "name": "queueReservation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/queueReservation"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the request to add a reservation to the Queue for Check-In.",
            "schema": {
              "$ref": "#/definitions/reservationQueuePriority"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to remove a reservation that is already set as a Queued Reservation. <p><strong>OperationId:</strong>deleteReservationFromQueue</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Delete reservation from queue",
        "operationId": "deleteReservationFromQueue",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservationStatusStatistics": {
      "get": {
        "description": "This API will fetch reservation statistics for the given status per room type. <p><strong>OperationId:</strong>getReservationStatusStatistics</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FOFStats"
        ],
        "summary": "Get Reservation Status Statistics",
        "operationId": "getReservationStatusStatistics",
        "parameters": [
          {
            "type": "string",
            "description": "Hotel Code",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "DueIn",
                "DueOut",
                "CheckedIn",
                "CheckedOut"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Reservation statuses to fetch statistics for",
            "name": "reservationStatus",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response of get Reservation Status Statistics.",
            "schema": {
              "$ref": "#/definitions/reservationStatusStatisticsResponseType"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservationSummaries": {
      "get": {
        "description": "Use this API to return reservation summaries for a specific property based on search criteria such as reservationId, blockId, arrivalStart, membershipNumber, roomId, etc.<p><strong>OperationId:</strong>getReservationSummaries</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Get hotel reservation summaries",
        "operationId": "getReservationSummaries",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "enum": [
              "Any",
              "DayUse",
              "Arrival",
              "Arrived",
              "Departure",
              "WaitList",
              "Cancellation",
              "CheckedOut",
              "NoShow",
              "Complimentary",
              "InHouse",
              "PostStayPendingBalance",
              "PreRegistered",
              "PostToRoom",
              "OpenFolio",
              "ScheduledCheckOut",
              "Queued",
              "MobileCheckout",
              "RegisteredAndInHouse",
              "ResvBlockTraces",
              "GuestMessages",
              "MassCancellation",
              "Operator",
              "Turndown",
              "WalkIn",
              "AdvanceCheckedIn",
              "OpenBalance",
              "AutoFolioSettlement",
              "Routing",
              "PlayerSnapshot"
            ],
            "type": "string",
            "description": "Represents Reservation search type Player Snapshot.",
            "name": "searchType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "blockId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "blockIdContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "blockIdType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "arrivalEnd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "arrivalStart",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "departureEnd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "departureStart",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "stayOnEnd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "stayOnStart",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "createdOnEnd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "createOnStart",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "depositDateEnd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "depositDateStart",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The ending value of the time span.",
            "name": "dateCriteriaExpectedArrivalEndTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The starting value of the time span.",
            "name": "dateCriteriaExpectedArrivalStartTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "depositDueDateEnd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "depositDueDateStart",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The ending value of the time span.",
            "name": "expectedReturnEndTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The starting value of the time span.",
            "name": "expectedReturnStartTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup reservations with this membership number.",
            "name": "membershipNumber",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "VIP status of the customer.",
            "name": "anyVIPStatus",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "VIP status of the customer.",
            "name": "vipStatusCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard Search value to lookup reservation with this room number.",
            "name": "roomId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard Search value to lookup reservations with this Last Name.",
            "name": "lastName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard Search value to lookup reservations with this First Name.",
            "name": "firstName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard Search value to lookup reservation with this block code.",
            "name": "blockCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup reservations with this company name.",
            "name": "companyName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup reservations with this travel agent name.",
            "name": "travelAgentName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup reservations which has this credit card attached.",
            "name": "creditCardNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup reservations with this custom reference number.",
            "name": "customReference",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup reservations with this external reference id.",
            "name": "externalReference",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Room",
                "Name",
                "ArrivalTime",
                "DepartureTime",
                "ArrivalDate",
                "DepartureDate"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "attributeName",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Asc",
                "Desc"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "orderType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "expectedArrivalEndTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "expectedArrivalStartTime",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Type.",
            "name": "roomTypes",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Clean",
                "Dirty",
                "Pickup",
                "Inspected",
                "OutOfOrder",
                "OutOfService"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
            "name": "roomStatuses",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Payment Method to search the reservation.",
            "name": "paymentMethod",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Package",
                "Message",
                "Attachments",
                "Share",
                "Routing",
                "Itinerary",
                "Trace",
                "ServiceRequests",
                "Locator",
                "Comment",
                "AuthorizedBilling",
                "StayRevenue",
                "Preference",
                "ProfileNote",
                "NoPost",
                "DepositCancellation",
                "FixedCharge",
                "RateChange",
                "QmsTask",
                "Activity",
                "Queue",
                "Member",
                "CancelReason",
                "Extension",
                "OpenFolio",
                "PreStay",
                "PostStay",
                "WakeUpCall",
                "Alert",
                "ExternalQms",
                "Transport",
                "TrackIt",
                "Award",
                "ItemInventory",
                "Waitlist",
                "HistoryFuture",
                "Communication",
                "PrepaidCards",
                "WebRegistrationCards"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type that corresponds to reservation indicators.",
            "name": "indicator",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "ReservationPaymentMethods",
                "RoomDetails",
                "BlockReservationDetails"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for reservation summary instructions that can be used in requests to fetch summary.",
            "name": "fetchSummaryInstructions",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Cancel",
                "Move",
                "PreCharge",
                "PostCharge",
                "FacilitySchedule",
                "Upsell",
                "PreCheckIn",
                "PostToNoShowCancel",
                "NoShow",
                "NameChange",
                "Discount",
                "HouseKeeping",
                "EnrollToPrimaryMembership",
                "EnrollInProgress"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
            "name": "allowedAction",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response of fetch room keys operation.",
            "schema": {
              "$ref": "#/definitions/shortReservation"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "links": [
                  {
                    "href": "string",
                    "method": "GET",
                    "operationId": "string",
                    "rel": "string",
                    "targetSchema": "string",
                    "templated": false,
                    "title": "string"
                  }
                ],
                "reservationInfoList": [
                  {
                    "accessRestriction": "Change",
                    "advanceCheckIn": {
                      "advanceCheckedIn": true,
                      "eTRComments": "string",
                      "expectedReturnTime": "2020-07-14T09:50:47.985Z"
                    },
                    "allowMobileCheckout": true,
                    "allowMobileViewFolio": true,
                    "allowedActions": [
                      "Cancel"
                    ],
                    "attachedProfiles": [
                      {
                        "name": "string",
                        "profileIdList": [
                          {
                            "id": "string",
                            "type": "string"
                          }
                        ],
                        "reservationProfileType": "Company"
                      }
                    ],
                    "cancellationInfo": {
                      "code": "string",
                      "date": "2020-07-14",
                      "description": "string"
                    },
                    "cashiering": {
                      "bedTaxReporting": {
                        "taxRegistrationNo": 0,
                        "taxableDays": 0,
                        "visaExpiryDate": "2020-07-14",
                        "visaIssueDate": "2020-07-14",
                        "visaNumber": "string"
                      },
                      "billingPrivileges": {
                        "allowAutoCheckin": true,
                        "autoSettlement": true,
                        "autoSettlementFreq": 0,
                        "autoSettlementType": "string",
                        "creditLimitAutoPay": true,
                        "directBillAuthorized": true,
                        "folioCloseDate": "2020-07-14",
                        "postStayCharging": true,
                        "postingRestriction": true,
                        "preStayCharging": true,
                        "scheduledCheckout": true,
                        "scheduledCheckoutTime": "2020-07-14",
                        "videoCheckout": true
                      },
                      "compAccounting": {
                        "authorizer": "string",
                        "compType": "string"
                      },
                      "financiallyResponsible": true,
                      "folioTexts": {
                        "folioText": [
                          {
                            "row": 0,
                            "text": "string"
                          }
                        ]
                      },
                      "lastRoomAndTaxPostedDate": "2020-07-14",
                      "periodicFolio": {
                        "frequency": 0,
                        "lastFolioDate": "2020-07-14",
                        "lastSettlementDate": "2020-07-14"
                      },
                      "proratedBilling": true,
                      "reservationPreConfiguredRoutingInstruction": {
                        "authorizerInfo": {
                          "authorizerId": {
                            "id": "string",
                            "type": "string"
                          },
                          "authorizerName": "string",
                          "authorizerRateCode": "string",
                          "authorizerUserName": "string",
                          "inheritAuthorizerRateCode": true
                        },
                        "profileType": "Company",
                        "promotionCode": "string",
                        "ratePlanCode": "string"
                      },
                      "revenuesAndBalances": {
                        "balance": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "foodAndBevRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "nonRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "otherRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "roomRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalFixedCharge": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalPayment": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        }
                      },
                      "reverseAdvanceCheckInAllowed": true,
                      "reverseCheckInAllowed": true,
                      "taxType": {
                        "code": "string",
                        "collectingAgentTax": true,
                        "description": "string",
                        "hotelId": "string",
                        "minimumLengthOfStay": 0,
                        "printAutoAdjust": true,
                        "reportExemptDays": 0,
                        "reportTaxPercentage": 0,
                        "taxExemptNo": "string"
                      },
                      "transactionsPosted": true
                    },
                    "commissionPayoutTo": "TravelAgent",
                    "computedReservationStatus": "Reserved",
                    "createDateTime": "2020-07-14T09:50:47.985Z",
                    "creatorId": "string",
                    "deposit": {
                      "amountOwed": 0,
                      "amountPaid": 0,
                      "amountRequired": 0,
                      "dueDate": "2020-07-14",
                      "hasOutstanding": true,
                      "hasPaid": true,
                      "postingDate": "2020-07-14"
                    },
                    "displayColor": "string",
                    "expectedServiceTime": "string",
                    "guestPreferredCurrency": "string",
                    "hotelId": "string",
                    "hotelInterfaceStatusList": [
                      {
                        "hotelInterface": {
                          "activeFlag": true,
                          "hotelId": "string",
                          "interfaceId": {
                            "id": "string",
                            "type": "string"
                          },
                          "interfaceName": "string",
                          "interfaceType": "Bms",
                          "logo": "string",
                          "machineName": "string",
                          "status": "Stopped"
                        },
                        "interfaceRights": [
                          {
                            "category": "string",
                            "description": "string",
                            "right": 0,
                            "statusCode": "string"
                          }
                        ],
                        "roomExtension": "string"
                      }
                    ],
                    "hotelName": "string",
                    "housekeeping": {
                      "expectedServiceTime": "string",
                      "facilityTaskInfo": {
                        "date": "2020-07-14",
                        "supplies": [
                          {
                            "code": "string",
                            "description": "string",
                            "quantity": 0
                          }
                        ],
                        "task": {
                          "code": "string",
                          "description": "string",
                          "facilityDepartureTask": true,
                          "hotelId": "string",
                          "instructions": "string",
                          "linenChange": true,
                          "sequence": 0
                        }
                      },
                      "instructions": "string",
                      "linenChange": true,
                      "roomStatus": "Clean",
                      "serviceTime": "2020-07-14",
                      "turndownRequested": true
                    },
                    "keyCount": 0,
                    "lastModifierId": "string",
                    "lastModifyDateTime": "2020-07-14T09:50:47.985Z",
                    "lastPrivacyPromptDate": "2020-07-14",
                    "mobileNotifications": {
                      "checkoutMessageReceived": true,
                      "errorMessage": "string",
                      "keyReady": "Pending",
                      "requiresAction": true,
                      "roomReady": "Pending"
                    },
                    "openFolio": true,
                    "optedForCommunication": true,
                    "paymentMethod": "string",
                    "preRegistered": true,
                    "purgeDate": "2020-07-14",
                    "queue": {
                      "averageQueueTimeCurrentReservations": 0,
                      "averageQueueTimeToCheckIn": 0,
                      "guestTextInfo": {
                        "sentBy": "string",
                        "sentTime": "2020-07-14T09:50:47.984Z"
                      },
                      "priority": 0,
                      "queueDate": "2020-07-14",
                      "timeSpan": {
                        "duration": "string",
                        "durationInSeconds": 0,
                        "endDate": "2020-07-14",
                        "startDate": "2020-07-14"
                      }
                    },
                    "reservationCommunication": {
                      "emails": {
                        "count": 0,
                        "emailInfo": [
                          {
                            "email": {
                              "createDateTime": "2020-07-14T09:50:47.985Z",
                              "creatorId": "string",
                              "emailAddress": "string",
                              "emailFormat": "Html",
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-14T09:50:47.985Z",
                              "orderSequence": 0,
                              "primaryInd": true,
                              "purgeDate": "2020-07-14",
                              "type": "string",
                              "typeDescription": "string"
                            },
                            "id": "string",
                            "type": "string"
                          }
                        ],
                        "hasMore": true,
                        "totalResults": 0
                      },
                      "telephones": {
                        "count": 0,
                        "hasMore": true,
                        "telephoneInfo": [
                          {
                            "id": "string",
                            "telephone": {
                              "createDateTime": "2020-07-14T09:50:47.985Z",
                              "creatorId": "string",
                              "extension": "string",
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-14T09:50:47.985Z",
                              "orderSequence": 0,
                              "phoneNumber": "string",
                              "phoneTechType": "string",
                              "phoneUseType": "string",
                              "phoneUseTypeDescription": "string",
                              "primaryInd": true,
                              "purgeDate": "2020-07-14"
                            },
                            "type": "string"
                          }
                        ],
                        "totalResults": 0
                      }
                    },
                    "reservationFolioWindows": [
                      {
                        "balance": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "folioWindowNo": 0,
                        "payeeInfo": {
                          "payeeAccountInfo": {
                            "accountId": {
                              "id": "string",
                              "type": "string"
                            },
                            "accountName": "string",
                            "accountNo": "string",
                            "status": {
                              "description": "string",
                              "restricted": true,
                              "restriction": "string"
                            }
                          },
                          "payeeAddress": {
                            "address": {
                              "addressLine": [
                                "string"
                              ],
                              "barCode": "string",
                              "cityExtension": "string",
                              "cityName": "string",
                              "country": {
                                "code": "string",
                                "value": "string"
                              },
                              "county": "string",
                              "createDateTime": "2020-07-14T09:50:47.984Z",
                              "creatorId": "string",
                              "language": "string",
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-14T09:50:47.984Z",
                              "postalCode": "string",
                              "primaryInd": true,
                              "purgeDate": "2020-07-14",
                              "state": "string",
                              "type": "string",
                              "typeDescription": "string",
                              "updateReservations": true
                            },
                            "id": "string",
                            "type": "string"
                          },
                          "payeeAddressCount": 0,
                          "payeeId": {
                            "id": "string",
                            "type": "string"
                          },
                          "payeeName": "string",
                          "payeeReferenceCurrency": "string",
                          "payeeTaxNumber": "string"
                        },
                        "paymentMethod": "string"
                      }
                    ],
                    "reservationGuest": {
                      "accompanyGuests": [
                        {
                          "firstName": "string",
                          "fullName": "string",
                          "lastName": "string",
                          "profileIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ],
                          "registrationCardNo": "string"
                        }
                      ],
                      "address": {
                        "cityName": "string",
                        "country": {
                          "code": "string",
                          "value": "string"
                        },
                        "excludeNoCity": true,
                        "postalCode": "string",
                        "state": "string",
                        "streetAddress": "string"
                      },
                      "alternateFullName": "string",
                      "alternateGivenName": "string",
                      "alternateSurname": "string",
                      "anonymization": {
                        "anonymizationDate": "2020-07-14T09:50:47.984Z",
                        "anonymizationStatus": "Requested"
                      },
                      "birthDate": "2020-07-14",
                      "email": "string",
                      "externalInfo": {
                        "givenName": "string",
                        "surname": "string"
                      },
                      "fullName": "string",
                      "givenName": "string",
                      "guestLastStayInfo": {
                        "lastStayDate": "2020-07-14",
                        "lastStayRate": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "lastStayRoom": "string",
                        "totalStay": 0
                      },
                      "guestRestricted": true,
                      "guestRestrictedCode": "string",
                      "guestRestrictedReasonDesc": "string",
                      "id": "string",
                      "language": "string",
                      "membership": {
                        "accountId": "string",
                        "bonusCode": "string",
                        "membershipId": 0,
                        "membershipLevel": "string",
                        "membershipLevelDesc": "string",
                        "membershipTypeDesc": "string",
                        "playerRanking": 0,
                        "programCode": "string"
                      },
                      "middleName": "string",
                      "namePrefix": "string",
                      "nameSuffix": "string",
                      "nameTitle": "string",
                      "nameType": "Guest",
                      "nationality": {
                        "code": "string",
                        "value": "string"
                      },
                      "phoneNumber": "string",
                      "registrationCardNo": "string",
                      "surname": "string",
                      "surnamePrefix": "string",
                      "type": "string",
                      "vip": {
                        "vipCode": "string",
                        "vipDescription": "string"
                      }
                    },
                    "reservationIdList": [
                      {
                        "id": "string",
                        "type": "string"
                      }
                    ],
                    "reservationIndicators": [
                      {
                        "count": 0,
                        "indicatorName": "string"
                      }
                    ],
                    "reservationPaymentMethod": {
                      "authorizationRule": {
                        "amount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "code": 0,
                        "percent": 0
                      },
                      "balance": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "description": "string",
                      "emailFolioInfo": {
                        "email": {
                          "createDateTime": "2020-07-14T09:50:47.984Z",
                          "creatorId": "string",
                          "emailAddress": "string",
                          "emailFormat": "Html",
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-14T09:50:47.984Z",
                          "orderSequence": 0,
                          "primaryInd": true,
                          "purgeDate": "2020-07-14",
                          "type": "string",
                          "typeDescription": "string"
                        },
                        "emailFolio": true,
                        "id": "string",
                        "type": "string"
                      },
                      "folioView": 0,
                      "paymentCard": {
                        "approvalAmountNeeded": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "attachCreditCardToProfile": true,
                        "cardHolderName": "string",
                        "cardId": {
                          "id": "string",
                          "type": "string"
                        },
                        "cardNumber": "string",
                        "cardNumberLast4Digits": "string",
                        "cardNumberMasked": "string",
                        "cardOrToken": "CardNumber",
                        "cardType": "Ab",
                        "currentAuthorizedAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "expirationDate": "2020-07-14",
                        "expirationDateExpired": true,
                        "expirationDateMasked": "string",
                        "processing": "Eft",
                        "swiped": true,
                        "userDefinedCardType": "string"
                      },
                      "paymentMethod": "string"
                    },
                    "reservationStatus": "Reserved",
                    "revenuesAndBalances": {
                      "balance": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "foodAndBevRevenue": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "nonRevenue": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "otherRevenue": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "roomRevenue": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "totalFixedCharge": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "totalPayment": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "totalRevenue": {
                        "amount": 0,
                        "currencyCode": "string"
                      }
                    },
                    "roomStatus": "Clean",
                    "roomStay": {
                      "adultCount": 0,
                      "arrivalDate": "2020-07-14",
                      "balance": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "bookingChannelCode": "string",
                      "childCount": 0,
                      "compBalance": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "departureDate": "2020-07-14",
                      "depositPayments": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "expectedTimes": {
                        "reservationExpectedArrivalTime": "2020-07-14T09:50:47.983Z",
                        "reservationExpectedDepartureTime": "2020-07-14T09:50:47.983Z"
                      },
                      "fixedRate": true,
                      "guarantee": {
                        "guaranteeCode": "string",
                        "onHold": true,
                        "shortDescription": "string"
                      },
                      "guestServiceStatus": "DoNotDisturb",
                      "marketCode": "string",
                      "numberOfRooms": 0,
                      "originalTimeSpan": {
                        "duration": "string",
                        "endDate": "2020-07-14",
                        "startDate": "2020-07-14"
                      },
                      "partyCode": "string",
                      "points": {
                        "awardsType": "string",
                        "points": 0
                      },
                      "promotion": {
                        "couponCode": "string",
                        "promotionCode": "string",
                        "promotionName": "string"
                      },
                      "pseudoRoom": true,
                      "rateAmount": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "ratePlanCode": "string",
                      "rateSuppressed": true,
                      "reservationBlock": {
                        "blockIdList": [
                          {
                            "id": "string",
                            "type": "string"
                          }
                        ],
                        "blockName": "string",
                        "hotelId": "string"
                      },
                      "roomClass": "string",
                      "roomNumber": "string",
                      "roomNumberLocked": true,
                      "roomType": "string",
                      "roomTypeCharged": "string",
                      "scheduledCheckoutTime": "2020-07-14",
                      "sourceOfBusiness": "string",
                      "sourceOfBusinessDescription": "string",
                      "totalAmount": {
                        "amount": 0,
                        "currencyCode": "string"
                      }
                    },
                    "roomStayReservation": true,
                    "searchMatches": [
                      {
                        "attribute": "string",
                        "value": "string"
                      }
                    ],
                    "sharedGuests": [
                      {
                        "firstName": "string",
                        "fullName": "string",
                        "lastName": "string",
                        "profileId": {
                          "id": "string",
                          "idContext": "string",
                          "idExtension": 0,
                          "instance": "string",
                          "type": "string",
                          "url": "string"
                        }
                      }
                    ],
                    "sourceOfSale": {
                      "sourceCode": "string",
                      "sourceType": "string"
                    },
                    "specials": "string",
                    "taxType": {
                      "code": "string",
                      "collectingAgentTax": true,
                      "description": "string",
                      "hotelId": "string",
                      "minimumLengthOfStay": 0,
                      "printAutoAdjust": true,
                      "reportExemptDays": 0,
                      "reportTaxPercentage": 0
                    },
                    "turndownInfo": {
                      "allowed": true,
                      "status": "Required"
                    },
                    "waitlist": {
                      "description": "string",
                      "priorityCode": "string",
                      "priorityDescription": "string",
                      "reasonCode": "string",
                      "reasonDescription": "string",
                      "telephone": "string"
                    },
                    "walkInIndicator": true,
                    "welcomeOffer": true
                  }
                ],
                "reservationsSummary": {
                  "blockSummary": {
                    "totalReservations": 0
                  },
                  "paymentMethodSummary": {
                    "establishedCount": "string",
                    "unestablishedCount": "string"
                  },
                  "roomSummary": {
                    "assignedRooms": {
                      "count": "string"
                    },
                    "unassignedRooms": {
                      "count": "string"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "ReservationSummaries not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/ai/rooms": {
      "get": {
        "description": "This API fetches the last run status of an Automated Intelligence Room Assignment. <p><strong>OperationId:</strong>fetchAiraLastRunStatus</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Automated Intelligence Room Assignment last run status",
        "operationId": "fetchAiraLastRunStatus",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response of last execution for AI Room Assignment",
            "schema": {
              "$ref": "#/definitions/airaLastRunStatusInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {}
            }
          },
          "204": {
            "description": "Room Reservations not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "This API runs AI Room Assignment and allocates rooms to incoming reservations. <p><strong>OperationId:</strong>assignRoomsAI</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "AI Assign Rooms",
        "operationId": "assignRoomsAI",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to run AI Room Assignment and allocate rooms to incoming reservations.",
            "name": "roomsAI",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomsAI"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/autoRoomAssignments": {
      "post": {
        "description": "This API can be used to assign the room automatically. <p><strong>OperationId:</strong>autoAssignRoom</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Assign the room automatically",
        "operationId": "autoAssignRoom",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for auto assignment of rooms to reservations.",
            "name": "autoAssignRoom",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/autoAssignRoom"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Collection of result set which is made of reservation id, error and warning.",
            "schema": {
              "$ref": "#/definitions/autoAssignedRoom"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "This API can be used to auto unassign a room. <p><strong>OperationId:</strong>autoUnAssignRoom</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Auto unassign room",
        "operationId": "autoUnAssignRoom",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if departure rooms are to be included in the auto unassignment.",
            "name": "includeDepartureRooms",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "name": "roomNumberWildcard",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If the AI ROOM ASSIGNMENT application parameter is set to Y, this flag when set to true will use the AI Room Assignment algorithm to fetch the results in order of suitability.",
            "name": "useAIRoomAssignment",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if preferences on the profile associated to the reservation should be used to determine the room type. The preferences for FLOOR, SMOKING and ROOM FEATURES will be used.",
            "name": "useAssociatedProfilePreferences",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Clean",
                "Dirty",
                "Pickup",
                "Inspected",
                "OutOfOrder",
                "OutOfService"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
            "name": "hotelRoomStatus",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Vacant",
                "Occupied"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for front office room status instructions to be used in requests for fetching housekeeping rooms. Valid values are Vacant and Occupied.",
            "name": "hotelFORoomStatus",
            "in": "query"
          },
          {
            "type": "string",
            "name": "fromRoomNumber",
            "in": "query"
          },
          {
            "type": "string",
            "name": "toRoomNumber",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The room types of hotel rooms to be fetched.",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The room class of hotel rooms to be fetched.",
            "name": "roomClass",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The floor of room to be fetched.",
            "name": "floor",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag when set to true will include rooms assigned to due out reservations.",
            "name": "includeDueOut",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "When IncludeDueOut is enable,it is the departure time before which to search.",
            "name": "departureTime",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A code representing a room feature.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A code representing a room feature.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Display Order sequence.",
            "name": "orderSequence",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Indicates quantity.",
            "name": "quantity",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The smoking preference of room to be fetched.",
            "name": "smokingPreference",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag when set to true will include all room conditions, when set to false then room with \"General Assignment\" condition type will be excluded from the result.",
            "name": "includeAllRoomConditions",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag when set to true will include all component rooms",
            "name": "includeComponentRooms",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag when set to true will include all pseudo rooms",
            "name": "includePseudoRooms",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag when set to true will work for Available Rooms functionality",
            "name": "includeOORoomCheck",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag when set to true will include only connecting rooms.",
            "name": "connectingRoomsOnly",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationIdId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "reservationIdIdExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag when set to true will include only pseudo rooms",
            "name": "pseudoRoomsOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag when set to true will includes attendent in Rooms",
            "name": "includeAttendentInRoom",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/massAdvanceCheckIns": {
      "post": {
        "description": "Use this API to perform a mass advance checkin for reservations. <p><strong>OperationId:</strong>postMassAdvanceCheckIn</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Mass Advance Check in Reservations",
        "operationId": "postMassAdvanceCheckIn",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to Submit Batch job for Mass Advance Check In of Reservations.",
            "name": "massAdvanceCheckInReservations",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/massAdvanceCheckInReservations"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/massCheckIns": {
      "post": {
        "description": "Use this API to perform a mass Checkin for reservations. <p><strong>OperationId:</strong>postMassCheckIn</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Mass checkin reservations",
        "operationId": "postMassCheckIn",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to Submit Batch job for Mass Checkin of Reservations.",
            "name": "massCheckInReservations",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/massCheckInReservations"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/advanceCheckIns": {
      "post": {
        "description": "At times, when guests arrive to the property prior to a room being ready, you can flag a reservation as Advance Checked In for arrivals due in on the current business date. This enables guests to post charges to their reservation folio prior to check in, and helps the rooms management team prioritize room cleaning and assignment. Individual reservations (including Walk In reservations, Pre Registered reservations, and reservations that are in Queue) and group block reservations can be Advance Checked In. <p><strong>OperationId:</strong>postAdvanceCheckIn</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Advance checkin a reservation",
        "operationId": "postAdvanceCheckIn",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to perform Advance Check In of a Reservation.",
            "name": "advanceCheckInReservation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/advanceCheckInReservation"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Reverse an advance check in for a reservation. <p><strong>OperationId:</strong>deleteAdvanceCheckIn</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Reverse Advance Checkin ",
        "operationId": "deleteAdvanceCheckIn",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/checkIns": {
      "post": {
        "description": "Use this API to check in a guest reservation.  The reservation needs to be 'due in' status.  The API also provides an option to select an available room. <p><strong>OperationId:</strong>postCheckIn</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Checks in a guest",
        "operationId": "postCheckIn",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where reservation is being booked",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Validation checks includes the following: - Reservation is not valid to be checked in. - Split is still required before the reservation can be checked in. - Room information is missing. - Payment information is missing. - The status of the room needs to be reviewed. - Sharers was impacted. The check-in process affected the reservation details of shared guests on the reservation. - Sharers was not impacted. The check-in process has not affected the reservation details of shared guests on the reservation.",
            "name": "reservation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservation"
                },
                {
                  "example": {
                    "fetchReservationInstruction": [
                      "ReservationDetail"
                    ],
                    "includeNotifications": true,
                    "reservation": {
                      "ignoreWarnings": true,
                      "printRegistration": true,
                      "roomId": "D209",
                      "stopCheckin": false
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "CheckIn response will commonly be errors over warnings. If a check has to be done before checking a reservation to a hotel, then the VerifyCheckinReservation operation can be utilized.",
            "schema": {
              "$ref": "#/definitions/checkedinReservation"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to revert a reservation that has been checked in.  This will return the reservation to a Due in/Arrival status. <p><strong>OperationId:</strong>deleteCheckin</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Revert a checked-in Reservation",
        "operationId": "deleteCheckin",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "enum": [
              "Clean",
              "Dirty",
              "Pickup",
              "Inspected",
              "OutOfOrder",
              "OutOfService"
            ],
            "type": "string",
            "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
            "name": "roomStatus",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This option is used when all reservation check-in is reversed and the user wants to choose if the room is to be blocked. If all check-ins are not reversed, this is ignored and a default value false is used.",
            "name": "unassignRoom",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/commissionNotes": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getCommissionNotes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ],
        "summary": "Operation to fetch commission notes.",
        "operationId": "getCommissionNotes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Reservation Id for which the commission notes are to be fetched.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Property code against which commissions notes are to be fetched.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response type for fetching commission notes.",
            "schema": {
              "$ref": "#/definitions/commissionNotesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CommissionNotes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/commissionPaymentDetails": {
      "get": {
        "description": "You can use this API to fetch commission payment details. <p><strong>OperationId:</strong>getCommissionPaymentDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ],
        "summary": "Fetch Commission Payment Details",
        "operationId": "getCommissionPaymentDetails",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the request to fetch commission payment details",
            "schema": {
              "$ref": "#/definitions/commissionPaymentDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Commission Payment Details not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/linked": {
      "get": {
        "description": "Use this API to view the reservations  that are linked to the specified reservation. <p><strong>OperationId:</strong>getLinkedReservations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Get linked reservations",
        "operationId": "getLinkedReservations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "additionalReservationId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "additionalReservationIdContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "additionalReservationIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response of fetch room keys operation.",
            "schema": {
              "$ref": "#/definitions/linkedReservations"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "LinkedReservations not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/priority": {
      "put": {
        "description": "This API can be used to change the resrevations Queue Priority. <p><strong>OperationId:</strong>putReservationQueuePriority</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Change the reservation queue priority",
        "operationId": "putReservationQueuePriority",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to change the current priority of a reservation in Queue for Check-In.",
            "name": "reservationQueuePriorityNumber",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationQueuePriorityNumber"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the Change Queue Priority request.",
            "schema": {
              "$ref": "#/definitions/reservationQueuePriority"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/roomAssignments": {
      "post": {
        "description": "This API will allow you to assign a room to a reservation in reserved status. Override instructions are available to assign a room despite warnings returned in the response message. <p><strong>OperationId:</strong>postRoomAssignment</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Assign a Room to a Reservation",
        "operationId": "postRoomAssignment",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "The reservation must still be reserved to use this operation.",
            "name": "room",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/room"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Possible errors that the operation will generate: The reservation is not in Reserved state. The room being requested does not exist.",
            "schema": {
              "$ref": "#/definitions/assignedRoom"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/roomKeys": {
      "get": {
        "description": "You can use this API to retrieve any existing room key information for a reservation. <p><strong>OperationId:</strong>getRoomKeys</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Fetch the room keys",
        "operationId": "getRoomKeys",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response of fetch room keys operation.",
            "schema": {
              "$ref": "#/definitions/roomKeyInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RoomKeys not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "When MUTIPLE_GUEST_KEY is active this methods can be used to update information on the room keys such as balance amount and keyOptions. reservationId and hotelId are required path parameters. The body parameter roomKeys includes information about the encoder, room, key type, key validity, key options  and   guests information for multiple keys",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Update room keys.",
        "operationId": "putRoomKeys",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Room key information",
            "name": "roomKeys",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/roomKeyMultipleGuests"
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "<description>",
            "schema": {
              "$ref": "#/definitions/updateRoomKeys"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of updated resource"
              }
            },
            "examples": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "You can use this API to create a room key request for a reservation to the active Door Locking System Property Interface. <p><strong>OperationId:</strong>postRoomKey</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Requests room key(s)",
        "operationId": "postRoomKey",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for generation of room key.",
            "name": "roomKey",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomKey"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response for room key creation.",
            "schema": {
              "$ref": "#/definitions/roomKeyDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "This API will delete room keys on a reservation. <p><strong>OperationId:</strong>deleteRoomKey</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Delete room key",
        "operationId": "deleteRoomKey",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/roomMoveHistory": {
      "get": {
        "description": "This API will return the history of room change/room moves for a specified reservation. <p><strong>OperationId:</strong>getRoomMoveHistory</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Get room move history of a reservation",
        "operationId": "getRoomMoveHistory",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the fetch room move history of a reservation.",
            "schema": {
              "$ref": "#/definitions/roomMoveHistory"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RoomMoveHistory not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/rooms": {
      "put": {
        "description": "This API will allow you to remove an assigned room from a reservation in reserved status. <p><strong>OperationId:</strong>deleteAssignRoom</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Remove an assigned room",
        "operationId": "deleteAssignRoom",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to the remove a room(unassign) from a reserved reservation.",
            "name": "unAssignRoomCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/unAssignRoomCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/unAssignedRoom"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/rooms/{roomId}/roomMoves": {
      "put": {
        "description": "This API will allow you to change rooms for an in-house guest. <p><strong>OperationId:</strong>moveInHouseGuest</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Move in-house guest",
        "operationId": "moveInHouseGuest",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "roomId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "To move a reservation, the reservation needs to be in Checked-In state.",
            "name": "moveInHouseGuest",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/moveInHouseGuest"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Potential errors which this operation might respond are the following: - Reservation is NOT In-House. - The room is NON-EXISTENT for the hotel. - The room is NOT valid for usage based on its current state. - The room's occupancy level has been compromised. - The room's pricing is NOT available.",
            "schema": {
              "$ref": "#/definitions/movedInHouseGuest"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/suggestedRooms": {
      "get": {
        "description": "You can use this API to fetch the suggested rooms. <p><strong>OperationId:</strong>getSuggestedRooms</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Get Suggested Rooms",
        "operationId": "getSuggestedRooms",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique reservation identifier for the reservation.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Property where the reservation exists.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date of arrival.",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Number of nights that guest will be staying.",
            "name": "nights",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "ComponentRoom"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Instruction to include commponent room.",
            "name": "suggestedRoomsInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "List of suggested rooms for room assignment.",
            "schema": {
              "$ref": "#/definitions/suggestedRooms"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "SuggestedRooms not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/textMessages/{messageType}": {
      "put": {
        "description": "This API will deliver Queue rooms text message. <p><strong>OperationId:</strong>deliverQueueRoomsTextMessage</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Deliver Queue rooms text message",
        "operationId": "deliverQueueRoomsTextMessage",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "messageType",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to deliver a text message via Queue Reservations (for a guest) or Queue Rush (for housekeeping).",
            "name": "deliverQueueRoomsTextMessage",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/deliverQueueRoomsTextMessage"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for delivering a text message via Queue Reservations (to a guest) or Queue Rush (to housekeeping).",
            "schema": {
              "$ref": "#/definitions/QueueRoomsTextMessage"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/verifyCheckIns": {
      "get": {
        "description": "Use this API to verify checkin reservations. <p><strong>OperationId:</strong>verifyCheckinReservation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Verify checkin reservation",
        "operationId": "verifyCheckinReservation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "AuthorizationInfo",
                "ExcludeRoomSuggestion"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Instruction to exclude suggested rooms.",
            "name": "verifyCheckinInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Reservation record showing the current state of the reservation.",
            "schema": {
              "$ref": "#/definitions/verifiedCheckinReservation"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "verifyCheckinReservation not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/wakeUpCalls": {
      "get": {
        "description": "Use thisAPI to get existing wake up call on an in-house reservation. <p><strong>OperationId:</strong>getWakeUpCall</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Get Wake Up Call",
        "operationId": "getWakeUpCall",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Specifies whether we should fetch wake up calls with pending status.",
            "name": "fetchCancelled",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Specifies whether we should fetch wake up calls with pending status.",
            "name": "fetchCompleted",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Specifies whether we should fetch wake up calls with pending status.",
            "name": "fetchNoAnswer",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Specifies whether we should fetch wake up calls with pending status.",
            "name": "fetchPending",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Begin date from which to start fetching wake up calls.",
            "name": "beginDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "End date from which to start fetching wake up calls.",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Begin time from which to start fetching wake up calls.",
            "name": "beginTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "End time from which to start fetching wake up calls.",
            "name": "endTime",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel room(s) for which wake up calls are to be fetched.",
            "name": "room",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Block code for which wake up calls are to be fetched.",
            "name": "blockId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Name with which wake up call may be associated.",
            "name": "guestName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetch wake up calls response.",
            "schema": {
              "$ref": "#/definitions/wakeUpCalls"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "WakeUpCall not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Update an existing wake up call.  Wake up call can only be added to in-house reservations. <p><strong>OperationId:</strong>putWakeUpCall</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Change Wake Up Call",
        "operationId": "putWakeUpCall",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to change a wake up call.",
            "name": "wakeUpCalls",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/wakeUpCalls"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/changedWakeUpCalls"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "You can set, view, and cancel wake up call for individual reservations. The reservation must be in-house (checked-in) status to set a wake up call. <p><strong>OperationId:</strong>postWakeUpCall</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Create Wake Up Call",
        "operationId": "postWakeUpCall",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to create a wake up call.",
            "name": "wakeUpCalls",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/wakeUpCalls"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to cancel a wake up call on a reservation. <p><strong>OperationId:</strong>deleteWakeUpCall</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Delete Wake Up Call",
        "operationId": "deleteWakeUpCall",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "collectionFormat": "multi",
            "description": "Time on which wake up call is set.",
            "name": "callTime",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "collectionFormat": "multi",
            "description": "Follow up call time.",
            "name": "followUpCallTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "collectionFormat": "multi",
            "description": "New Time on which wake up call is set. Used to change the Followup Call time",
            "name": "newCallTime",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "collectionFormat": "multi",
            "description": "New Follow up call time.Used to change the Followup Call time.",
            "name": "newFollowUpCallTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/roomKeysDetails": {
      "get": {
        "description": "This API can be used to read the Room Key. <p><strong>OperationId:</strong>readRoomKey</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Read room key",
        "operationId": "readRoomKey",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "encoderTerminal",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "encoderId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "encoderIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "encoderIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Respose for the reading of room key.",
            "schema": {
              "$ref": "#/definitions/roomKeyStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "readRoomKey not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/roomStatusStatistics": {
      "get": {
        "description": "For current business date, rooms are grouped by the roomClass and roomType to display their housekeeping roomStatus.",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FOFStats"
        ],
        "summary": "Get counts of rooms by housekeeping status and front office status.",
        "operationId": "getRoomsByRoomStatus",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "Vacant",
              "Occupied"
            ],
            "type": "string",
            "description": "Filter by frontOfficeStatus. If nothing is passed, we fetch all.",
            "name": "frontOfficeStatus",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Response element for housekeeping statistics.",
            "schema": {
              "$ref": "#/definitions/roomStatusStatisticsListType"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RoomStatusStatistics not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rooms": {
      "get": {
        "description": "Use this API to return available rooms based on search criteria such as hotelId, hotelRoomStatus, roomType, roomFeatureCode,etc.<p><strong>OperationId:</strong>getHotelRooms</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Get hotel available rooms",
        "operationId": "getHotelRooms",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "name": "roomNumberWildcard",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Clean",
                "Dirty",
                "Pickup",
                "Inspected",
                "OutOfOrder",
                "OutOfService"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
            "name": "hotelRoomStatus",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Vacant",
                "Occupied"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for front office room status instructions to be used in requests for fetching housekeeping rooms. Valid values are Vacant and Occupied.",
            "name": "hotelFORoomStatus",
            "in": "query"
          },
          {
            "type": "string",
            "name": "fromRoomNumber",
            "in": "query"
          },
          {
            "type": "string",
            "name": "toRoomNumber",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "hotelRoomStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "hotelRoomEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The room types of hotel rooms to be fetched.",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The room class of hotel rooms to be fetched.",
            "name": "roomClass",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The floor of room to be fetched.",
            "name": "floor",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag when set to true will include rooms assigned to due out reservations.",
            "name": "includeDueOut",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "When IncludeDueOut is enable,it is the departure time before which to search.",
            "name": "departureTime",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A code representing a room feature.",
            "name": "roomFeatureCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A code representing a room feature.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Display Order sequence.",
            "name": "orderSequence",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Indicates quantity.",
            "name": "quantity",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The smoking preference of room to be fetched.",
            "name": "smokingPreference",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag when set to true will include all room conditions, when set to false then room with \"General Assignment\" condition type will be excluded from the result.",
            "name": "includeAllRoomConditions",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag when set to true will include all component rooms",
            "name": "includeComponentRooms",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag when set to true will include all pseudo rooms",
            "name": "includePseudoRooms",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag when set to true will work for Available Rooms functionality",
            "name": "includeOORoomCheck",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag when set to true will include only connecting rooms.",
            "name": "connectingRoomsOnly",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag when set to true will include only pseudo rooms",
            "name": "pseudoRoomsOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag when set to true will includes attendent in Rooms",
            "name": "includeAttendentInRoom",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag when set to true will return the rotation room when room roation parameter is active and the room type is configured for rotation.",
            "name": "includeRotationRoom",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When this flag is set to true, this API will fetch rooms which are contracted with owner profiles. This is supported when OPERA Control Room Rotation is active.",
            "name": "ownerRoomsOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When this flag is set to true, this API will fetch rooms can only be used by the reservation's profile (owner) of the room. This is supported when OPERA Control Room Rotation is active.",
            "name": "ownerExclusiveRoomsOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When this flag is set to true, this API will fetch only those rooms that have exactly Y nights free with the reservation guest?s points. This query parameter is supported when OPERA Control Room Rotation and Forecast Rotation Points are active.",
            "name": "perfectFitRoomsOnly",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "ForecastRotationPoints"
            ],
            "type": "string",
            "description": "A collection of supported sorting for available rooms search results.",
            "name": "orderBy",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fetches rooms that matches requested unit grade codes. Only returns when Room Rotation and Unit Grade are active.",
            "name": "unitGradeCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": ": This OPERA profile?s internal Id will be used with ownerExclusiveRoomOnly flag to return the room which own by this profile. This query parameter is supported when OPERA Control Room Rotation is active.",
            "name": "ownerExclusiveRoomProfileId",
            "in": "query"
          },
          {
            "maxItems": 4000,
            "type": "array",
            "items": {
              "maxLength": 20,
              "minLength": 0,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "It indicates to exclude rooms with the selected Room Feature(s).It allows alphanumeric values(e.g.,TUB,BOLCONY,MV)",
            "name": "excludeRoomFeatures",
            "in": "query"
          },
          {
            "maxItems": 4000,
            "type": "array",
            "items": {
              "maxLength": 20,
              "minLength": 0,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "It indicates to exclude rooms with the selected Floor(s) which are comma separated values.It allows alphanumeric values(e.g.,01,02,03,GROUND,five)",
            "name": "excludeFloorPreferences",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "List of suggested rooms for room assignment.",
            "schema": {
              "$ref": "#/definitions/hotelRooms"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "count": 0,
                "hasMore": true,
                "hotelRoomsDetails": {
                  "hotelId": "string",
                  "room": [
                    {
                      "accessible": true,
                      "attendant": [
                        {
                          "activeFlag": "string",
                          "appUser": {
                            "actAs": "string",
                            "actAt": "string",
                            "appUser": "string",
                            "appUserId": {
                              "id": "string",
                              "type": "string"
                            },
                            "attendantInfo": {
                              "attendantId": "string",
                              "hotelId": "string"
                            },
                            "cashierId": 0,
                            "cashierTitle": "string",
                            "department": "string",
                            "departmentLocation": "string",
                            "disabledUntil": "2020-07-14",
                            "expiryDate": "2020-07-14",
                            "hotel": {
                              "code": "string",
                              "description": "string"
                            },
                            "lDAPUser": "string",
                            "passwordChangeDate": "2020-07-14",
                            "salesRepCode": "string",
                            "userDefaultLanguage": "string",
                            "userInfo": {
                              "addressInfo": {
                                "address": {
                                  "addressLine": [
                                    "string"
                                  ],
                                  "barCode": "string",
                                  "cityExtension": "string",
                                  "cityName": "string",
                                  "country": {
                                    "code": "string",
                                    "value": "string"
                                  },
                                  "county": "string",
                                  "createDateTime": "2020-07-14T09:54:54.236Z",
                                  "creatorId": "string",
                                  "language": "string",
                                  "lastModifierId": "string",
                                  "lastModifyDateTime": "2020-07-14T09:54:54.236Z",
                                  "postalCode": "string",
                                  "primaryInd": true,
                                  "purgeDate": "2020-07-14",
                                  "state": "string",
                                  "type": "string",
                                  "typeDescription": "string",
                                  "updateReservations": true
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "birthDate": "2020-07-14",
                              "birthDateMasked": "string",
                              "department": {
                                "code": "string",
                                "description": "string"
                              },
                              "emailInfo": {
                                "email": {
                                  "createDateTime": "2020-07-14T09:54:54.236Z",
                                  "creatorId": "string",
                                  "emailAddress": "string",
                                  "emailFormat": "Html",
                                  "lastModifierId": "string",
                                  "lastModifyDateTime": "2020-07-14T09:54:54.236Z",
                                  "orderSequence": 0,
                                  "primaryInd": true,
                                  "purgeDate": "2020-07-14",
                                  "type": "string",
                                  "typeDescription": "string"
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "gender": "Male",
                              "personName": {
                                "envelopeGreeting": "string",
                                "externalSystem": "string",
                                "givenName": "string",
                                "language": "string",
                                "middleName": "string",
                                "namePrefix": "string",
                                "nameSuffix": "string",
                                "nameTitle": "string",
                                "nameTitleSuffix": 0,
                                "nameType": "Primary",
                                "salutation": "string",
                                "surname": "string"
                              },
                              "phoneInfo": {
                                "id": "string",
                                "telephone": {
                                  "createDateTime": "2020-07-14T09:54:54.236Z",
                                  "creatorId": "string",
                                  "extension": "string",
                                  "lastModifierId": "string",
                                  "lastModifyDateTime": "2020-07-14T09:54:54.236Z",
                                  "orderSequence": 0,
                                  "phoneNumber": "string",
                                  "phoneTechType": "string",
                                  "phoneUseType": "string",
                                  "phoneUseTypeDescription": "string",
                                  "primaryInd": true,
                                  "purgeDate": "2020-07-14"
                                },
                                "type": "string"
                              },
                              "profileId": {
                                "id": "string",
                                "type": "string"
                              }
                            },
                            "userSessionInfo": {
                              "businessDate": "2020-07-14",
                              "cROCountryCode": "string",
                              "chain": "string",
                              "cro": {
                                "code": "string",
                                "description": "string"
                              },
                              "hotel": {
                                "code": "string",
                                "description": "string"
                              },
                              "parameters": [
                                {
                                  "parameterName": "string",
                                  "parameterValue": "string"
                                }
                              ],
                              "runningApp": "string",
                              "sessionDefaults": {
                                "baseLanguage": "string",
                                "currencyCode": "string",
                                "currencyFormat": "string",
                                "dbDateFormat": "string",
                                "defaultLanguage": "string",
                                "javaDateFormat": "string",
                                "javaTimeFormat": "string",
                                "oracleDateFormat": "string",
                                "oracleTimeFormat": "string"
                              },
                              "shareProfiles": true,
                              "systemDate": "2020-07-14",
                              "terminal": "string"
                            }
                          },
                          "attendantId": "string",
                          "attendantName": "string",
                          "floor": "string",
                          "friday": true,
                          "hotelId": "string",
                          "monday": true,
                          "saturday": true,
                          "section": {
                            "code": "string",
                            "description": "string",
                            "hotelId": "string",
                            "inactive": true,
                            "roomCredits": 0,
                            "rooms": 0,
                            "sectionGroup": "string",
                            "sequence": 0,
                            "targetCredits": 0
                          },
                          "startTime": "2020-07-14T09:54:54.236Z",
                          "status": "Standby",
                          "sunday": true,
                          "thursday": true,
                          "tuesday": true,
                          "wednesday": true
                        }
                      ],
                      "building": "string",
                      "componentRoomNumber": "string",
                      "componentRoomNumbers": {
                        "roomId": [
                          "string"
                        ]
                      },
                      "componentRooms": [
                        {
                          "accessible": true,
                          "building": "string",
                          "description": {
                            "defaultText": "string",
                            "translatedTexts": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "floor": "string",
                          "floorDescription": "string",
                          "meetingRoom": true,
                          "roomAssignmentRating": "MostImportant",
                          "roomCondition": {
                            "code": "string",
                            "description": "string"
                          },
                          "roomDescription": "string",
                          "roomFeatures": [
                            {
                              "code": "string",
                              "description": "string",
                              "orderSequence": 0,
                              "quantity": 0
                            }
                          ],
                          "roomId": "string",
                          "roomType": {
                            "accessible": true,
                            "building": "string",
                            "houseKeeping": true,
                            "maximumOccupancy": 0,
                            "meetingRoom": true,
                            "minimumOccupancy": 0,
                            "pseudo": true,
                            "roomAssignmentRating": "MostImportant",
                            "roomClass": "string",
                            "roomFeatures": [
                              {
                                "code": "string",
                                "description": "string",
                                "orderSequence": 0,
                                "quantity": 0
                              }
                            ],
                            "roomType": "string",
                            "shortDescription": "string",
                            "smokingPreference": "string",
                            "suite": true
                          },
                          "smokingPreference": "string",
                          "smokingPreferenceDescription": "string"
                        }
                      ],
                      "connectingRooms": [
                        {
                          "accessible": true,
                          "building": "string",
                          "description": {
                            "defaultText": "string",
                            "translatedTexts": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "floor": "string",
                          "floorDescription": "string",
                          "meetingRoom": true,
                          "roomAssignmentRating": "MostImportant",
                          "roomCondition": {
                            "code": "string",
                            "description": "string"
                          },
                          "roomDescription": "string",
                          "roomFeatures": [
                            {
                              "code": "string",
                              "description": "string",
                              "orderSequence": 0,
                              "quantity": 0
                            }
                          ],
                          "roomId": "string",
                          "roomType": {
                            "accessible": true,
                            "building": "string",
                            "houseKeeping": true,
                            "maximumOccupancy": 0,
                            "meetingRoom": true,
                            "minimumOccupancy": 0,
                            "pseudo": true,
                            "roomAssignmentRating": "MostImportant",
                            "roomClass": "string",
                            "roomFeatures": [
                              {
                                "code": "string",
                                "description": "string",
                                "orderSequence": 0,
                                "quantity": 0
                              }
                            ],
                            "roomType": "string",
                            "shortDescription": "string",
                            "smokingPreference": "string",
                            "suite": true
                          },
                          "smokingPreference": "string",
                          "smokingPreferenceDescription": "string"
                        }
                      ],
                      "description": {
                        "defaultText": "string",
                        "translatedTexts": {
                          "text": [
                            {
                              "language": "string",
                              "value": "string"
                            }
                          ]
                        }
                      },
                      "discrepancy": [
                        "Sleep"
                      ],
                      "floor": "string",
                      "floorDescription": "string",
                      "hold": {
                        "comments": "string",
                        "holdUntil": "2020-07-14T09:54:54.236Z",
                        "holdUser": "string"
                      },
                      "housekeeping": {
                        "cleaningPriority": {
                          "prioritySequence": 0
                        },
                        "facilityTaskCode": [
                          "string"
                        ],
                        "guestServiceRequest": "DoNotDisturb",
                        "linenChange": true,
                        "roomCondition": {
                          "assignmentType": "Available",
                          "remarks": "string",
                          "roomCondition": {
                            "code": "string",
                            "description": "string"
                          }
                        },
                        "roomPersons": {
                          "frontOfficePersons": 0,
                          "houseKeepingPersons": 0
                        },
                        "roomStatus": {
                          "frontOfficeStatus": "Vacant",
                          "housekeepingStatus": "Vacant",
                          "reservationStatusList": [
                            "Arrival"
                          ],
                          "roomStatus": "Clean"
                        }
                      },
                      "meetingRoom": true,
                      "outOfOrder": [
                        {
                          "end": "2020-07-14",
                          "newDateRange": {
                            "end": "2020-07-14",
                            "start": "2020-07-14"
                          },
                          "reasonCode": "string",
                          "reasonDesc": "string",
                          "repairRemarks": "string",
                          "returnStatus": "Clean",
                          "roomStatus": "Clean",
                          "start": "2020-07-14"
                        }
                      ],
                      "resvInfo": [
                        {
                          "guestName": "string",
                          "profileId": {
                            "id": "string",
                            "type": "string"
                          },
                          "reservationId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          },
                          "reservationStatusInfo": "Arrival",
                          "stayDateInfo": {
                            "expectedTimes": {
                              "reservationExpectedArrivalTime": "2020-07-14T09:54:54.236Z",
                              "reservationExpectedDepartureTime": "2020-07-14T09:54:54.236Z"
                            },
                            "timeSpan": {
                              "duration": "string",
                              "endDate": "2020-07-14",
                              "startDate": "2020-07-14"
                            }
                          },
                          "vipStatus": {
                            "code": "string",
                            "value": "string"
                          }
                        }
                      ],
                      "roomAssignmentRating": "MostImportant",
                      "roomDescription": "string",
                      "roomFeatures": [
                        {
                          "code": "string",
                          "description": "string",
                          "orderSequence": 0,
                          "quantity": 0
                        }
                      ],
                      "roomId": "string",
                      "roomSection": {
                        "daySectionCode": "string",
                        "eveningSectionCode": "string"
                      },
                      "roomType": {
                        "accessible": true,
                        "building": "string",
                        "houseKeeping": true,
                        "maximumOccupancy": 0,
                        "meetingRoom": true,
                        "minimumOccupancy": 0,
                        "pseudo": true,
                        "roomAssignmentRating": "MostImportant",
                        "roomClass": "string",
                        "roomFeatures": [
                          {
                            "code": "string",
                            "description": "string",
                            "orderSequence": 0,
                            "quantity": 0
                          }
                        ],
                        "roomType": "string",
                        "shortDescription": "string",
                        "smokingPreference": "string",
                        "suite": true
                      },
                      "sitePlanSection": {
                        "coordinates": "string",
                        "description": "string",
                        "linkCode": "string",
                        "sectionCode": "string",
                        "sectionType": "string"
                      },
                      "smokingPreference": "string",
                      "smokingPreferenceDescription": "string",
                      "turndownInfo": {
                        "turndownStatusInfo": "Required"
                      }
                    }
                  ]
                },
                "limit": 0,
                "links": [
                  {
                    "href": "string",
                    "method": "GET",
                    "operationId": "string",
                    "rel": "string",
                    "targetSchema": "string",
                    "templated": false,
                    "title": "string"
                  }
                ],
                "offset": 0,
                "totalPages": 0,
                "totalResults": 0
              }
            }
          },
          "204": {
            "description": "HotelRooms not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rooms/onHold": {
      "post": {
        "description": "You can use this API to place Rooms On Hold. <p><strong>OperationId:</strong>placeRoomsOnHold</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Place Rooms On Hold",
        "operationId": "placeRoomsOnHold",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to place rooms on hold.",
            "name": "holdRooms",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/holdRooms"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rooms/onHold/release": {
      "post": {
        "description": "You can use this API to release Rooms On Hold. <p><strong>OperationId:</strong>releaseRoomsOnHold</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Release Rooms On Hold",
        "operationId": "releaseRoomsOnHold",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to release rooms from being held.",
            "name": "holdRooms",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/holdRooms"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/serviceRequests": {
      "get": {
        "description": "Use this API to retrieve any service requests that exist on a reservation. <p><strong>OperationId:</strong>getServiceRequests</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Get Service Requests",
        "operationId": "getServiceRequests",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "code",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Open",
                "PendingFollowUp",
                "Closed",
                "DoNotDisturb",
                "MakeUpRoom"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "status",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "priorityCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "departmentCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "profileIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The room number in which the service request was created.",
            "name": "room",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "creationEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "creationStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "closedEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "closedStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for service requests.",
            "schema": {
              "$ref": "#/definitions/serviceRequestsInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ServiceRequests not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to modify any service requests that exist on a reservation. <p><strong>OperationId:</strong>putServiceRequests</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Change Service Requests",
        "operationId": "putServiceRequests",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Change service requests.",
            "name": "serviceRequestsInfo",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/serviceRequestsInfo"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Service Request functionality provides the ability to define, track and report Service Requests on a reservation.  They go through a preset flow including creating the request, completing it and then following up on the resolution with the guest. <p><strong>OperationId:</strong>postServiceRequests</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Create Service Requests",
        "operationId": "postServiceRequests",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Add new service request.",
            "name": "serviceRequestsInfo",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/serviceRequestsInfo"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/serviceRequests/{serviceRequestId}": {
      "delete": {
        "description": "Use this API to delete any service requests that exist on a reservation. <p><strong>OperationId:</strong>deleteServiceRequests</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Delete Service Requests",
        "operationId": "deleteServiceRequests",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "serviceRequestId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/sourceReservations/{sourceReservationId}/targetReservations/{targetReservationId}/shiftRooms": {
      "put": {
        "description": "This API will allow you to quickly shift rooms for two reservations. <p><strong>OperationId:</strong>shiftRooms</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Operation for Shift Rooms between two reservations",
        "operationId": "shiftRooms",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "sourceReservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "targetReservationId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to Shift Rooms between two selected reservations (from the same property), that are for the same arrival date and room type.",
            "name": "shiftRooms",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/shiftRooms"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Potential errors which this operation might respond are the following: - Reservation is NOT In-House. - The room is NON-EXISTENT for the hotel. - The room is NOT valid for usage based on its current state. - The room's occupancy level has been compromised. - The room's pricing is NOT available.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/sourceReservations/{sourceReservationId}/targetReservations/{targetReservationId}/swapRooms": {
      "put": {
        "description": "This API will allow you to quickly swap rooms for two reservations. <p><strong>OperationId:</strong>swapRooms</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Operation for Swap/Shift Rooms between two reservations",
        "operationId": "swapRooms",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "sourceReservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "targetReservationId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to Swap Rooms between two selected reservations (from the same property), that are for the same arrival date and room type.",
            "name": "swapRooms",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/swapRooms"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Potential errors which this operation might respond are the following: - Reservation is NOT In-House. - The room is NON-EXISTENT for the hotel. - The room is NOT valid for usage based on its current state. - The room's occupancy level has been compromised. - The room's pricing is NOT available.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/textMessages/{messageType}": {
      "get": {
        "description": "You can use this API to get Queue room text message. <p><strong>OperationId:</strong>getQueueRoomsTextMessage</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ],
        "summary": "Get Queue room text message",
        "operationId": "getQueueRoomsTextMessage",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "messageType",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Mobile number that the text message will be delivered to.",
            "name": "mobileNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for retrieving a predefined text message, for Queue Reservations or Queue Rush.",
            "schema": {
              "$ref": "#/definitions/queuedRoomsTextMessage"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "QueueRoomsTextMessage not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    }
  },
  "definitions": {
    "QueueRoomsTextMessage": {
      "description": "Response for delivering a text message via Queue Reservations (to a guest) or Queue Rush (to housekeeping).",
      "type": "object",
      "properties": {
        "guestTextInfo": {
          "description": "Information regarding the message sent to guest.",
          "$ref": "#/definitions/queueTextInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRAccountShortInfoType": {
      "description": "Accounts Receivabales Account details type charged for batched posting.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        }
      }
    },
    "aRAccountStatusType": {
      "description": "Type for the Account Status. Status can be restricted and a message/description added to the Account.",
      "type": "object",
      "properties": {
        "description": {
          "description": "User defined status message on the Account.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "restricted": {
          "description": "Flag to indicate if the Account is restricted.",
          "type": "boolean"
        },
        "restriction": {
          "description": "The Restriction Code added on the Account. This is available when the functionality for adding restriction codes is ON.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "actionStatusType": {
      "description": "Action status of the Track It item(Open, Closed).",
      "type": "string",
      "enum": [
        "Open",
        "Closed"
      ]
    },
    "activityList": {
      "description": "A collection of Activity objects.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "description": "Represents a single instance of a scheduled activity.",
        "type": "object",
        "properties": {
          "activityIds": {
            "description": "A collection of reference ID values that identify this uniquely scheduled activity instance. May contain one ID per external system plus an internal identifier.",
            "$ref": "#/definitions/uniqueIDListType"
          },
          "amount": {
            "description": "The amount charged for the activity.",
            "$ref": "#/definitions/currencyAmountType"
          },
          "deposit": {
            "description": "A monetary value expressed with a currency code.",
            "type": "object",
            "properties": {
              "amount": {
                "description": "A monetary amount.",
                "type": "number"
              },
              "collectedBy": {
                "type": "string",
                "enum": [
                  "Vendor",
                  "Agent",
                  "Other"
                ]
              },
              "currencyCode": {
                "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
                "type": "string",
                "maxLength": 3,
                "minLength": 3
              }
            }
          },
          "description": {
            "description": "Description of the activity",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          },
          "duration": {
            "description": "The time span of the activity falls",
            "$ref": "#/definitions/dateTimeSpanType"
          },
          "extensions": {
            "description": "Vendor extensions to the activity record.",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string"
            }
          },
          "groupCode": {
            "description": "Any Block code associated with the activity if its a Group booking.",
            "type": "string"
          },
          "inactiveDate": {
            "description": "The Date by which the activity is deemed Cancelled/Deleted.",
            "type": "string",
            "format": "date-time"
          },
          "link": {
            "description": "When true indicates that activity link only needs to be inserted or deleted for this record.",
            "type": "boolean"
          },
          "location": {
            "description": "The Location where the activity takes place. Eg: Salon",
            "type": "string"
          },
          "name": {
            "description": "Name of the people for whom the activity is scheduled. Can be more than one but should be equal to the number of persons",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string",
              "maxLength": 200,
              "minLength": 0
            }
          },
          "note": {
            "description": "Any additional notes or comments regarding the scheduled activity.",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          },
          "numberOfPersons": {
            "description": "The total number of the people for whom the activity is scheduled. Can be more than one but should be equal to the number of persons",
            "type": "integer"
          },
          "participants": {
            "description": "The names of the participants.",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "$ref": "#/definitions/personNameType"
            }
          },
          "status": {
            "description": "Activity reservation status. Typical examples are RESERVED, BOOKED, CANCELLED, and TENTATIVE.",
            "type": "string"
          },
          "statusDescription": {
            "description": "Activity reservation status description. Typical examples are RESERVED, BOOKED, CANCELLED, and TENTATIVE.",
            "type": "string"
          },
          "timeSpan": {
            "description": "The time with-in which an activity falls (Starts/Ends/Spans)",
            "$ref": "#/definitions/dateTimeSpanType"
          },
          "type": {
            "description": "The Type of the activity. Eg: SPA, Golf etc.",
            "type": "string"
          },
          "uRLLink": {
            "description": "The URL link to launch the Activity Reservation System to view or edit full details of this activity.",
            "type": "string"
          }
        }
      }
    },
    "activityLog": {
      "description": "Fulfillment activity log response.",
      "type": "object",
      "properties": {
        "activityLogDetails": {
          "description": "List of activity log entries.",
          "$ref": "#/definitions/activityLogListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "activityLogListType": {
      "type": "object",
      "properties": {
        "activityLog": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/activityLogType"
          }
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "activityLogType": {
      "type": "object",
      "properties": {
        "actionDescription": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "actionType": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "croCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "iPAddress": {
          "description": "The IP Address of the machine that performed the activity",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "logDate": {
          "type": "string",
          "format": "date-time"
        },
        "logUserId": {
          "type": "integer"
        },
        "logUserName": {
          "type": "string"
        },
        "machineStation": {
          "type": "string"
        },
        "module": {
          "type": "string"
        },
        "refActionId": {
          "type": "number"
        }
      }
    },
    "activityLookUpList": {
      "description": "Criteria for fetching Activity Bookings.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fetchActivityBookingsType"
      }
    },
    "additionalGuestAmountType": {
      "type": "object",
      "properties": {
        "ageQualifyingCode": {
          "type": "string",
          "enum": [
            "ADULT",
            "CHILD",
            "OTHER",
            "CHILDBUCKET1",
            "CHILDBUCKET2",
            "CHILDBUCKET3",
            "CHILDBUCKET4",
            "CHILDBUCKET5"
          ]
        },
        "amount": {
          "$ref": "#/definitions/totalType"
        }
      }
    },
    "addressInfoType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "addressSearchType": {
      "description": "Address Details such as city, state, country, postal code etc.",
      "type": "object",
      "properties": {
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "excludeNoCity": {
          "description": "When true indicates that only profiles with city will be fetched.",
          "type": "boolean"
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "streetAddress": {
          "description": "First Line of Street Address. For profile search it matches the first Address line.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "addressType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "maxLength": 80,
            "minLength": 0
          }
        },
        "barCode": {
          "description": "The postal barcode for the address.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        },
        "updateReservations": {
          "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
          "type": "boolean"
        }
      }
    },
    "addtionalCodeInfoType": {
      "description": "Holds name of additional code information",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Holds name of additional code information",
            "$ref": "#/definitions/masterInfoCodeDetailType"
          },
          "value": {
            "description": "Holds value of additional code information",
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          }
        }
      }
    },
    "advanceCheckInReservation": {
      "description": "Request object to perform Advance Check In of a Reservation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservation": {
          "description": "Information required for performing Advance Check In.",
          "$ref": "#/definitions/advanceCheckInReservationType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "advanceCheckInReservationType": {
      "description": "Information needed to perform Advance Check In of a Reservation",
      "type": "object",
      "properties": {
        "eTRComments": {
          "description": "Comments relating to the Advance Checked In guest's return to the property",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "expectedReturnTime": {
          "description": "Time when the guest is expected to return to perform Check In",
          "type": "string",
          "format": "date-time"
        },
        "hotelId": {
          "description": "Resort to which the Reservation belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "optedForCommunication": {
          "description": "Indicates if the guest has opted for communications pertaining to this reservation.",
          "type": "boolean"
        },
        "reservationCommunication": {
          "description": "Collection of Reservation communication information such as phone numbers and email addresses.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "reservationId": {
          "description": "ID of the Reservation that is being Advance Checked In",
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "advanceCheckInType": {
      "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
      "type": "object",
      "properties": {
        "advanceCheckedIn": {
          "description": "Indicates if the reservation is marked as Advance Checked In",
          "type": "boolean"
        },
        "eTRComments": {
          "description": "ETR Comments",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "expectedReturnTime": {
          "description": "Expected Return Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "agentInfoType": {
      "description": "Agent or source commission information.",
      "type": "object",
      "properties": {
        "agentId": {
          "description": "Unique ID of the travel agent or source.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "alternateName": {
          "description": "Alternate name of the agent or source profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "bankAccountId": {
          "description": "Unique bank account ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "city": {
          "description": "City of the travel agency or source profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "commissionAmount": {
          "description": "Amount of the commission payment to be generated for that agent or source.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "commissionCode": {
          "description": "Profile's commission code.",
          "$ref": "#/definitions/commissionCodeType"
        },
        "holdReason": {
          "description": "Hold code and description reason if all the reservations associated to the agent is on hold for commission.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "iATANo": {
          "description": "Travel agent's IATA number.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "name": {
          "description": "Travel agent or source profile name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "onCommission": {
          "description": "Whether this agent/source has been paid or will be paid for commission.",
          "type": "boolean"
        },
        "onHold": {
          "description": "When set to true, commission for all the reservations associated with this agent is flagged as on hold.",
          "type": "boolean"
        },
        "profileType": {
          "description": "Whether travel agent or source profile.",
          "$ref": "#/definitions/profileTypeType"
        }
      }
    },
    "airaLastRunStatusInfo": {
      "description": "Response of last execution status for AI Room Assignment",
      "type": "object",
      "properties": {
        "actionValue": {
          "description": "Actual run status of an AI room assignment",
          "type": "string"
        },
        "insertDate": {
          "description": "When the AI Room Assignment starts execution",
          "type": "string",
          "format": "date-time",
          "maxLength": 8
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "updateDate": {
          "description": "Date time of updated status of an executions",
          "type": "string",
          "format": "date-time"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "alertAreaType": {
      "type": "string",
      "enum": [
        "CheckIn",
        "CheckOut",
        "Reservation",
        "Billing",
        "InHouse"
      ]
    },
    "alertGuestInfoType": {
      "type": "object",
      "properties": {
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        },
        "comments": {
          "description": "Additional alert information regarding the membership of the guest.",
          "type": "string"
        },
        "guestName": {
          "description": "Guest Name.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "guestPreferredLanguage": {
          "description": "Holds the language preferred by the guest.",
          "$ref": "#/definitions/languageType"
        },
        "lastHotelCode": {
          "description": "Hotel code of the last stay location of the guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "lastStayDate": {
          "description": "Last stay date at the property.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "membership": {
          "description": "Membership information of the guest.",
          "$ref": "#/definitions/membershipType"
        },
        "preference": {
          "description": "Additional alert information regarding the guest.",
          "type": "string"
        },
        "preference2": {
          "description": "Additional mandatory alert information regarding the guest preferences.",
          "type": "string"
        },
        "totalBrandStay": {
          "description": "Holds total number of days that the guest have stayed in the properties for the same brand.",
          "type": "integer"
        },
        "totalStay": {
          "description": "Holds total number of days that the guest have stayed in the property.",
          "type": "integer"
        },
        "vipStatus": {
          "description": "VIP status of the guest.",
          "$ref": "#/definitions/vIPStatusType"
        }
      }
    },
    "alertType": {
      "type": "object",
      "properties": {
        "area": {
          "description": "The Area where the alert will be attached and shown.",
          "$ref": "#/definitions/alertAreaType"
        },
        "code": {
          "description": "Code identifying the type of alert.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "description": {
          "description": "The alert message.",
          "type": "string"
        },
        "global": {
          "description": "Indicate whether the alert is a global that is automatically and dynamically attached to all reservations that meet the alert criteria.",
          "type": "boolean"
        },
        "guestInfo": {
          "description": "Contains information regarding the guest.",
          "$ref": "#/definitions/alertGuestInfoType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "printerName": {
          "description": "Printer used to print the alert notification.",
          "type": "string"
        },
        "printerNotification": {
          "description": "Notify by sending the message to the printer.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reportDescription": {
          "description": "Report description. Mainly used for as a parameter for printing the alerts.",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        },
        "reportId": {
          "description": "The module id of the report. This is used to printer the alert.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reportName": {
          "description": "Report name of the report type.",
          "type": "string"
        },
        "screenNotification": {
          "description": "Notify by showing the alert on the screen",
          "type": "boolean"
        },
        "stopCheckInCheckOut": {
          "description": "Indicates the Reservation Stop Check In/Check Out Global Alert.",
          "type": "boolean"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "welcomeOffer": {
          "description": "Contains information regarding welcome offer.",
          "$ref": "#/definitions/welcomeOfferType"
        }
      }
    },
    "alertsType": {
      "description": "List of alerts.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/alertType"
      }
    },
    "alienInfoType": {
      "description": "immigration/visa information of a foreign person.",
      "type": "object",
      "properties": {
        "alienRegistrationNo": {
          "description": "Alien Registration Number.",
          "type": "string"
        },
        "immigrationStatus": {
          "description": "Immigration Status on an Alien.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "visaValidityType": {
          "description": "Visa Type of an Alien.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "amountDeterminationType": {
      "description": "Used to indicate if an amount is inclusive or exclusive of other charges, such as taxes.",
      "type": "string",
      "enum": [
        "Inclusive",
        "Exclusive"
      ]
    },
    "amountType": {
      "description": "Base charge and additional charges related to a room that includes such things as additional guest amounts, cancel fees, etc. Also includes Discount percentages, total amount, and the rate description.",
      "type": "object",
      "properties": {
        "additionalGuestAmounts": {
          "description": "Collection of incremental charges per age qualifying code for additional guests. Amount charged for additional occupant is with respect to age group of the base guests.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/additionalGuestAmountType"
          }
        },
        "base": {
          "description": "The base amount charged for the accommodation or service per unit of time (ex: Nightly, Weekly, etc). If TaxInclusive is set to True, then taxes are included in the base amount. Note that any additional charges should itemized in the other elements.",
          "$ref": "#/definitions/totalType"
        },
        "discount": {
          "description": "Discount percentage and/or Amount, code and textual reason for discount",
          "$ref": "#/definitions/discountType"
        },
        "effectiveRate": {
          "description": "The reservation effective amount charged for the accommodation or service (i.e. base amount + amount for Add to Rate Combine Line packages) per unit of time",
          "$ref": "#/definitions/totalType"
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "requiredPoints": {
          "description": "The Points contains the number of points required to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "shareDistributionInstruction": {
          "description": "Last rate share distribution instruction applied on share reservation daily rate segment.",
          "$ref": "#/definitions/shareDistributionInstructionType"
        },
        "shareRatePercentage": {
          "description": "Indicates the share rate percentage for the reservation if set to CUSTOMSPLIT.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "total": {
          "description": "The total amount charged for this rate including additional occupant amounts and fees.",
          "$ref": "#/definitions/totalType"
        }
      }
    },
    "anonymizationStatusType": {
      "description": "Guest has been anonymized.",
      "type": "string",
      "enum": [
        "Requested",
        "Anonymized"
      ]
    },
    "anonymizationType": {
      "description": "Provides information about guest's anonymization status.",
      "type": "object",
      "properties": {
        "anonymizationDate": {
          "description": "Date and Time when the guest was anonymized.",
          "type": "string",
          "format": "date-time"
        },
        "anonymizationStatus": {
          "description": "Status of anonymization such as Requested or Anonymized.",
          "$ref": "#/definitions/anonymizationStatusType"
        }
      }
    },
    "applicationUserType": {
      "type": "object",
      "properties": {
        "actAs": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "actAt": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "appUser": {
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "appUserId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "attendantInfo": {
          "$ref": "#/definitions/attendantType"
        },
        "cashierId": {
          "type": "integer"
        },
        "cashierTitle": {
          "description": "Cashier title.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "department": {
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "departmentLocation": {
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "disabledUntil": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expiryDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotel": {
          "description": "Hotel where user belongs.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "lDAPUser": {
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "passwordChangeDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "salesRepCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "userDefaultLanguage": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "userInfo": {
          "$ref": "#/definitions/employeeInfoType"
        },
        "userSessionInfo": {
          "description": "This is only used during log-in.",
          "$ref": "#/definitions/userSessionInfoType"
        }
      }
    },
    "articleInfoType": {
      "description": "Information regarding an article.",
      "type": "object",
      "properties": {
        "articleCode": {
          "description": "Unique code of the article.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the article.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel code to which the article belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates whether the article is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "postIt": {
          "description": "Post it information of the article.",
          "$ref": "#/definitions/articlePostItType"
        },
        "price": {
          "description": "Default price of the article.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionCode": {
          "description": "Transaction code to which the article belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "articlePostItType": {
      "description": "Post it information of an article.",
      "type": "object",
      "properties": {
        "availableForPostIt": {
          "description": "Indicates whether the article is available for post it.",
          "type": "boolean"
        },
        "color": {
          "description": "Color indicator which is only configurable if article is available for post it.",
          "$ref": "#/definitions/colorType"
        }
      }
    },
    "assignedRoom": {
      "description": "Possible errors that the operation will generate: The reservation is not in Reserved state. The room being requested does not exist.",
      "type": "object",
      "properties": {
        "effectiveRates": {
          "description": "Collection of effective rates per stay dates per guest to be applied on reservation including its shares.",
          "$ref": "#/definitions/effectiveRatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "newRates": {
          "description": "Collection of new room rate information on a daily basis.",
          "$ref": "#/definitions/dailyRatesType"
        },
        "oldRates": {
          "description": "Collection of old room rate information on a daily basis.",
          "$ref": "#/definitions/dailyRatesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "assignedRoomsSummaryType": {
      "description": "Indicates summary of the assigned rooms.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Number of reservations with assigned rooms.",
          "type": "string",
          "maxLength": 4,
          "minLength": 4
        }
      }
    },
    "assignedTaskType": {
      "description": "Holds the assigned task code for a tasksheet.",
      "type": "object",
      "properties": {
        "taskCode": {
          "description": "The Code for the task.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "assignedTasksType": {
      "description": "Holds the assigned task codes for a tasksheet.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/assignedTaskType"
      }
    },
    "associateCommissionAgentToReservations": {
      "description": "Request type for associating reservations to Travel Agent or Source Profile.",
      "type": "object",
      "properties": {
        "commissionAgent": {
          "description": "Contains the id and type of the travel agent or source profile to be associated with the reservation.",
          "$ref": "#/definitions/commissionAgentIDType"
        },
        "instructions": {
          "description": "List of commission reservation instructions.",
          "$ref": "#/definitions/commissionReservationInstructionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservations": {
          "description": "Contains list of reservation ids that will be associated to a travel agent or source profile.",
          "$ref": "#/definitions/hotelReservationsIDType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "associateCommissionAgentToReservationsStatus": {
      "description": "Response type for associating reservations to Travel Agent or Source Profile.",
      "type": "object",
      "properties": {
        "commissionReservationFailures": {
          "description": "List of reservations that wasn't successfully associated with the agent.",
          "$ref": "#/definitions/commissionReservationFailuresType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "associatedResType": {
      "description": "Information regarding associated reservations to the reservation.",
      "type": "object",
      "properties": {
        "originalMultiRoomRes": {
          "description": "Stores Unique ID of the original multi room reservation from which this reservation is split off.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "parentReservation": {
          "description": "Stores Unique ID of the parent reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "attachmentType": {
      "description": "Attached files.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description for the file.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "fileName": {
          "description": "Name of the file.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fileSize": {
          "description": "Size of the file.",
          "type": "integer"
        },
        "global": {
          "description": "Flag to say if attachment is available across properties.",
          "type": "boolean"
        },
        "history": {
          "description": "History data associated with Attachment.",
          "$ref": "#/definitions/dateTimeStampGroupType"
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "attachmentsType": {
      "description": "Attachment List.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/attachmentType"
      }
    },
    "attendantType": {
      "type": "object",
      "properties": {
        "attendantId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "authorizationRuleType": {
      "description": "Configured rule for computing the amount to authorize.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The amount applicable to the authorization rule.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "code": {
          "description": "The authorization rule code.",
          "type": "integer",
          "pattern": "[0-9]{1,9}"
        },
        "percent": {
          "description": "A percentage value if the authorization rule is percentage based.",
          "type": "number"
        }
      }
    },
    "authorizerInfoType": {
      "description": "Authorizer Information",
      "type": "object",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        }
      }
    },
    "autoAssignRoom": {
      "description": "Request for auto assignment of rooms to reservations.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for auto assignment of rooms to reservations.",
          "$ref": "#/definitions/reservationAutoRoomAssignRequestType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "autoAssignedRoom": {
      "description": "Collection of result set which is made of reservation id, error and warning.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/autoRoomAssignType"
      }
    },
    "autoRoomAssignType": {
      "description": "Collection of error and warning if any.",
      "type": "object",
      "properties": {
        "arrivalDate": {
          "description": "Arrival date of the reservation.",
          "type": "string",
          "format": "date-time"
        },
        "confirmationNo": {
          "description": "Reservation confirmation number.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "departureDate": {
          "description": "Departure date of the reservation.",
          "type": "string",
          "format": "date-time"
        },
        "errors": {
          "description": "Details of the errors.",
          "$ref": "#/definitions/errorsType"
        },
        "guestName": {
          "description": "Guest name associated to the reservation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "reservationId": {
          "description": "Unique identifiers for the reservation for auto assign room.",
          "$ref": "#/definitions/reservationId"
        },
        "roomId": {
          "description": "Room number associated to the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "warnings": {
          "description": "Details of the warnings.",
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "awardId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "awardKindType": {
      "description": "Indicates that this is electronic certificate.",
      "type": "string",
      "enum": [
        "Paper",
        "ECertificate"
      ]
    },
    "awardStatusType": {
      "description": "Indicates that certificate is in use.",
      "type": "string",
      "enum": [
        "Available",
        "NotAvailable",
        "InUse"
      ]
    },
    "awardType": {
      "description": "Detailed information of the awards.",
      "type": "object",
      "properties": {
        "awardCode": {
          "description": "Award category.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "awardType": {
          "description": "Can be P (Paper) or E (E-Certificate).",
          "$ref": "#/definitions/awardKindType"
        },
        "categoryValid": {
          "description": "Indicates whether the category of certificate is valid or not for this resort.",
          "type": "boolean"
        },
        "certificateNo": {
          "description": "Certificate No.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "description": {
          "description": "Description of the award/certificate.",
          "type": "string"
        },
        "detailedCertificate": {
          "description": "Indicates if this certificate is detailed or not.",
          "type": "boolean"
        },
        "displaySequence": {
          "description": "Indicates the order in which the certificates received from MRW.",
          "type": "number"
        },
        "expirationDate": {
          "description": "Expiration Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "externalConfirmationNo": {
          "description": "Confirmation Number given by a CRS application for this reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "externalHotelCode": {
          "description": "Hotel Code of the CRS application that this certificate belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "fBAInfo": {
          "description": "FBA related fields.",
          "$ref": "#/definitions/fBAInfoType"
        },
        "gift": {
          "description": "Signifies whether award is gift or not.",
          "type": "boolean"
        },
        "hotelCategory": {
          "description": "Indicates the lowest hotel category for which the certificate is valid.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code for which the routing instructions are provided for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "instantlyRedeemable": {
          "description": "Indicates if the award is an Instant Redemption award.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "masterCertificiateNo": {
          "description": "Master Certificate No.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipNo": {
          "description": "Membership No.",
          "type": "string"
        },
        "nights": {
          "description": "Award Nights.",
          "type": "integer"
        },
        "package": {
          "description": "Signifies whether upgrade is package or not.",
          "type": "boolean"
        },
        "paidUpgrade": {
          "description": "Indicates if this certificate was ordered using the \"Paid Upgrade\" option in the E-Certs screen.",
          "type": "boolean"
        },
        "points": {
          "description": "No. of points used to order this award.",
          "type": "number"
        },
        "profileId": {
          "description": "Unique profile identifier requested to be fetched.",
          "$ref": "#/definitions/profileId"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "quantity": {
          "description": "Quantity of such awards needed to be ordered.",
          "type": "integer"
        },
        "reservationCertificateType": {
          "description": "[R]=Reward, [I]=Incentive.",
          "$ref": "#/definitions/reservationCertificateType"
        },
        "reservationId": {
          "description": "Reservation IDs will be empty if award is not attached.",
          "$ref": "#/definitions/reservationId"
        },
        "rewardCertificateType": {
          "description": "[RE]=Regular Certificate, [SA]=Stay Anytime Certificate, [PS]=Point Saver Certificate.",
          "$ref": "#/definitions/rewardCertificateType"
        },
        "sourceType": {
          "description": "MRW : From MRW MAN:Entered manually.",
          "type": "string"
        },
        "status": {
          "description": "Status of the award aka available.",
          "$ref": "#/definitions/awardStatusType"
        },
        "upgrade": {
          "description": "Signifies whether upgrade award or not.",
          "type": "boolean"
        }
      }
    },
    "awardVouchersType": {
      "description": "This stores the Membership Awards code applied on the reservation.",
      "type": "array",
      "maxItems": 5,
      "items": {
        "type": "object",
        "properties": {
          "awardCode": {
            "description": "Membership Award code applied on the reservation.",
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          },
          "voucherNo": {
            "description": "Membership Award number.",
            "type": "string",
            "maxLength": 80,
            "minLength": 0
          }
        }
      }
    },
    "awardsType": {
      "description": "List of awards.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/awardType"
      }
    },
    "bankAccountType": {
      "description": "Bank account information like Account ID, Bank Name, Currency, etc.",
      "type": "object",
      "properties": {
        "bankAccountId": {
          "description": "Bank account ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "bankAccountNo": {
          "description": "Account number at the bank.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "bankCode": {
          "description": "Unique code of the bank account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bankName": {
          "description": "Name of the bank account.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "branchCode": {
          "description": "Code for the branch of the bank.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "checkFormat": {
          "description": "Type of format for Payment Method.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "currency": {
          "description": "Currency associated with the bank account.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "currentCheckNo": {
          "description": "Current check no of the bank account.",
          "type": "number"
        },
        "default": {
          "description": "Whether this bank account is to be the default in case no bank account is associated with the travel agent or source.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property of the bank account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelName": {
          "description": "Property name of the bank account.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "linkedToProfile": {
          "description": "Whether this bank account is associated with the travel agent or source.",
          "type": "boolean"
        },
        "paymentMethod": {
          "description": "Type of payment associated with the bank account.",
          "$ref": "#/definitions/commissionPaymentMethodType"
        }
      }
    },
    "bankAccountsDetails": {
      "description": "Returns bank accounts that match the request criteria.",
      "type": "object",
      "properties": {
        "bankAccounts": {
          "$ref": "#/definitions/bankAccountsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bankAccountsType": {
      "description": "List of bank accounts.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/bankAccountType"
      }
    },
    "basicEmailType": {
      "description": "Email address",
      "type": "string",
      "maxLength": 2000,
      "minLength": 0
    },
    "batchCCAuth": {
      "description": "Request to start a batch job that will process a list of reservation, and their associated payment methods, that require credit card authorizations.",
      "type": "object",
      "properties": {
        "hotelId": {
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservations": {
          "$ref": "#/definitions/reservationsForCCAuthType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "batchCCAuthToProcess": {
      "description": "Response for starting a credit card authorization batch job, which contains the batch ID upon success.",
      "type": "object",
      "properties": {
        "batchId": {
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "processId": {
          "$ref": "#/definitions/stringLength200"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bedTaxReportingType": {
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "type": "object",
      "properties": {
        "taxRegistrationNo": {
          "description": "Tax Registration Number for Maldives Bed Tax Reporting.",
          "type": "number"
        },
        "taxableDays": {
          "description": "Number of days for which the Maldives tax is applicable.",
          "type": "integer"
        },
        "visaExpiryDate": {
          "description": "Visa Expiration Date used for Maldives Bed Tax Reporting",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaIssueDate": {
          "description": "Visa Issue Date used for Maldives Bed Tax Reporting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaNumber": {
          "description": "Visa number used for Maldives Bed Tax Reporting",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "benefitType": {
      "description": "Basic information about membership benefit.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Benefit code associated with a membership.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates whether membership benefit is active or inactive.",
          "type": "boolean"
        },
        "message": {
          "description": "Processing message for membership benefit.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        }
      }
    },
    "benefitsType": {
      "description": "Basic information about membership benefit.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/benefitType"
      }
    },
    "billingInstructionType": {
      "description": "Configured Billing Instruction which represents a set of Transaction Codes.",
      "type": "object",
      "properties": {
        "billingCode": {
          "description": "Unique identifier for the Billing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "desc": {
          "description": "Billing Instruction code description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel context of the Billing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        }
      }
    },
    "billingInstructionsType": {
      "description": "Set of Billing Instruction codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/billingInstructionType"
      }
    },
    "billingPrivilegesType": {
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "type": "object",
      "properties": {
        "allowAutoCheckin": {
          "description": "Indicated if a new reservation should be created and automatically checked in whenever the room is checked out. Available for pseudo room types only.",
          "type": "boolean"
        },
        "autoSettlement": {
          "description": "Indicates if the is a candidate for auto folio settlement.",
          "type": "boolean"
        },
        "autoSettlementFreq": {
          "description": "The interval of days between each auto folio settlement.",
          "type": "integer"
        },
        "autoSettlementType": {
          "description": "The folio settlement type for auto folio settlement.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "creditLimitAutoPay": {
          "description": "Indicates if the reservation will be included in the Automatic Credit Limit Overages process and also be listed in the Credit Limit Overages screen results.",
          "type": "boolean"
        },
        "directBillAuthorized": {
          "description": "If Direct bill is authorized this will hold User ID who authorized it.",
          "type": "boolean"
        },
        "folioCloseDate": {
          "description": "Date when folio was closed. This works with PostStayCharging flag.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postStayCharging": {
          "description": "Indicates if the reservation has charging privileges after checkout.",
          "type": "boolean"
        },
        "postingRestriction": {
          "description": "Flag used by interface program during check in.",
          "type": "boolean"
        },
        "preStayCharging": {
          "description": "Indicates if the reservation has charging privileges before arrival.",
          "type": "boolean"
        },
        "scheduledCheckout": {
          "description": "Indicates if the guest is scheduled for automatic check out.",
          "type": "boolean"
        },
        "scheduledCheckoutTime": {
          "description": "Time of automatic check out if guest is schedule for automatic check out.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "videoCheckout": {
          "description": "Indicates if the guest can do video checkout",
          "type": "boolean"
        }
      }
    },
    "blockId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "blockIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "blockResvSummaryType": {
      "description": "Indicates summary of the Total reservations for the block.",
      "type": "object",
      "properties": {
        "totalReservations": {
          "description": "Number of reservations with block.",
          "type": "integer"
        }
      }
    },
    "calculateCommissions": {
      "description": "Request type for calculation of commission for all Travel Agent and/or Source.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "calculateCommissionsStatus": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "callHistoryType": {
      "description": "Holds call information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/callType"
      }
    },
    "callType": {
      "description": "Holds call information.",
      "type": "object",
      "properties": {
        "caller": {
          "description": "Holds caller information.",
          "$ref": "#/definitions/callerType"
        },
        "comments": {
          "description": "Call comments.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "dateTimeSpan": {
          "description": "Call Time Span. Start Date and End Date is used for the Call duration.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "reservation": {
          "description": "Holds Reservation Id and Hotel Code.",
          "type": "object",
          "properties": {
            "hotelId": {
              "description": "Holds Hotel Code.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "reservationIdList": {
              "description": "Holds Reservation related Ids.",
              "$ref": "#/definitions/reservationIdList"
            }
          }
        },
        "turnawayCode": {
          "description": "Call turn away code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "callerType": {
      "description": "Holds caller information.",
      "type": "object",
      "properties": {
        "email": {
          "description": "Caller Email.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "fax": {
          "description": "Caller Fax Number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "givenName": {
          "description": "Caller First Name.",
          "type": "string",
          "maxLength": 280,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "phone": {
          "description": "Caller Phone Number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "surname": {
          "description": "Caller Last Name.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "cardNumberTypeType": {
      "description": "Simple type for indicating if credit card number is tokenized.",
      "type": "string",
      "enum": [
        "CardNumber",
        "Token"
      ]
    },
    "cardProcessingType": {
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardReIssueType": {
      "description": "Request to re issue a new card.",
      "type": "string",
      "enum": [
        "Pending",
        "NotApplicable",
        "Requested"
      ]
    },
    "cardTypeType": {
      "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
      "type": "string",
      "enum": [
        "Ab",
        "Am",
        "Ax",
        "Cb",
        "Dc",
        "Ds",
        "Dt",
        "Ec",
        "Er",
        "Jc",
        "Jl",
        "Mc",
        "Nb",
        "So",
        "St",
        "Sw",
        "Va",
        "Xy",
        "Zz",
        "Cp",
        "Cu"
      ]
    },
    "cateringResInfoType": {
      "description": "Information regarding catering event and catering revenue type associated to the reservation.",
      "type": "object",
      "properties": {
        "eventId": {
          "description": "Unique ID on a catering event associated to the reservation.",
          "$ref": "#/definitions/eventId"
        },
        "revenueType": {
          "description": "Catering revenue type associated to the reservation.",
          "type": "string"
        }
      }
    },
    "changeCommissionCheckCriteriaType": {
      "description": "Base type for payment activity information",
      "type": "object",
      "properties": {
        "bankAccountId": {
          "description": "Unique id of bank account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "batchId": {
          "description": "Batch id of the commission payments.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "checkNo": {
          "description": "New check no of commission check.",
          "type": "number"
        },
        "hotelId": {
          "description": "Property of the commission record.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "paymentId": {
          "description": "Unique payment id of the commission check.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "changeCommissionPaymentActivityRangeCriteriaType": {
      "description": "Base type for payment activity information",
      "type": "object",
      "properties": {
        "bankAccountId": {
          "description": "Unique id of bank account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "batchId": {
          "description": "Batch id of the commission payments.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Property of the commission record.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "paymentActivityRange": {
          "description": "Batch or Check range numbers.",
          "$ref": "#/definitions/numberRangeType"
        },
        "paymentActivityStatus": {
          "description": "Criteria for updating status of a range payment activity.",
          "$ref": "#/definitions/commissionPaymentActivityStatusCriteriaType"
        }
      }
    },
    "changeHistoryType": {
      "description": "Creation date time, Creator Id, last modification date time and last Modifier Id.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "changeInterfaceStatusType": {
      "description": "This will contain reservation id and corresponding interface information for which the interface status needs to be updated.",
      "type": "object",
      "properties": {
        "interfaceRights": {
          "description": "Contains a list of status/rights for the various services under this interface",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceRightsStatusType"
          }
        },
        "reservationId": {
          "description": "Unique identifier of the reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "roomExtension": {
          "description": "Unique identifier for the room extension",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "changeRelationsType": {
      "description": "Detailed information regarding the changes made to relationships for the profile.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "relation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "relationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "changedWakeUpCalls": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "characterUDFType": {
      "description": "Used to hold user defined field of Character/String Type.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "description": "Used to hold user defined field of Character Type. It is highly recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "characterUDFsType": {
      "description": "Used to hold collection of user defined fields of Character/String Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/characterUDFType"
      }
    },
    "checkedInReservationInstructionType": {
      "description": "Fetch Instruction to indicate if any automatically generated folios information should be returned in the response. For example, in a scenario when automatic credit bills are generated during check-in for the deposits, this instruction can be used to get the credit bill folios which can be used for printing/previewing the folios.",
      "type": "string",
      "enum": [
        "ReservationDetail",
        "AutoFolios",
        "ExcludeRoomSuggestion"
      ]
    },
    "checkedinReservation": {
      "description": "CheckIn response will commonly be errors over warnings. If a check has to be done before checking a reservation to a hotel, then the VerifyCheckinReservation operation can be utilized.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservation": {
          "description": "Reservation record showing the current state of the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelReservationType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "childAgeType": {
      "description": "Defines Child's Age.",
      "type": "object",
      "properties": {
        "age": {
          "description": "Age of a child in years.",
          "type": "integer"
        }
      }
    },
    "childAgesType": {
      "description": "Age of a child in years.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/childAgeType"
      }
    },
    "childBucketsType": {
      "description": "Defines children counts with Age Qualifying Group(Child Bucket) classification.",
      "type": "object",
      "properties": {
        "bucket1Count": {
          "description": "Number of children classified under the first Age Qualifying Group(Child Bucket#1).",
          "type": "integer"
        },
        "bucket2Count": {
          "description": "Number of children classified under the second Age Qualifying Group(Child Bucket#2).",
          "type": "integer"
        },
        "bucket3Count": {
          "description": "Number of children classified under the third Age Qualifying Group(Child Bucket#3).",
          "type": "integer"
        },
        "bucket4Count": {
          "description": "Number of children classified under the fourth Age Qualifying Group(Child Bucket#4).",
          "type": "integer"
        },
        "bucket5Count": {
          "description": "Number of children classified under the fifth Age Qualifying Group(Child Bucket#5).",
          "type": "integer"
        }
      }
    },
    "codeDescriptionType": {
      "description": "This contains a generic code and description information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "codeInfoType": {
      "type": "object",
      "properties": {
        "addtionalCodeInfo": {
          "$ref": "#/definitions/addtionalCodeInfoType"
        },
        "code": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "maxLength": 20,
        "minLength": 0
      }
    },
    "codeType": {
      "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
      "type": "string",
      "maxLength": 20,
      "minLength": 0
    },
    "colorDefinitionType": {
      "description": "Color definition type. This color definition type is used to determine the defintion of color ",
      "type": "string",
      "enum": [
        "RESERVATION",
        "MARKET_CODE",
        "VIP_LEVEL",
        "MEMBERSHIP_LEVEL"
      ]
    },
    "colorType": {
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "type": "string",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "commentInfoType": {
      "description": "Comment related to the profile/reservation.",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "commentType": {
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "type": "object",
      "properties": {
        "actionDate": {
          "description": "Indicates at which date an action described in the comment must be taken.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "actionType": {
          "description": "Specifies type of action described in the comments.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "commentTitle": {
          "description": "Specifies Comment's Title.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "confidential": {
          "description": "When true, the comment may be confidential.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "If specified comment belongs to the Hotel, otherwise it is a global comment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "internal": {
          "description": "When true, the comment may not be shown to the consumer. When false, the comment may be shown to the consumer.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "notificationLocation": {
          "description": "Notification Location associated with the Note.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "overrideInternal": {
          "description": "When true, the note internal could be modified.",
          "type": "boolean"
        },
        "protectDescription": {
          "description": "When true, the note title will be populated from the note type description and couldn't be modified.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "type": {
          "description": "Specifies type of the comment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Comment type Description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        }
      }
    },
    "commissionAgentIDType": {
      "description": "Type which contains the Commission Agent id and its type.",
      "type": "object",
      "properties": {
        "commissionAgentType": {
          "description": "Type of Commission Agent. Either Agent or Source.",
          "$ref": "#/definitions/commissionAgentTypeType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "commissionAgentType": {
      "description": "Agent or source information along with their commission details.",
      "type": "object",
      "properties": {
        "agentInfo": {
          "$ref": "#/definitions/agentInfoType"
        },
        "commissionDetails": {
          "$ref": "#/definitions/commissionDetailsType"
        }
      }
    },
    "commissionAgentTypeType": {
      "description": "Simple type for commission agent type. Valid values are Agent and Source.",
      "type": "string",
      "enum": [
        "Agent",
        "Source"
      ]
    },
    "commissionAgentsType": {
      "description": "Agent or source profiles that were returned by the search.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionAgentType"
      }
    },
    "commissionBaseDetailType": {
      "description": "Criteria for updating a commission record.",
      "type": "object",
      "properties": {
        "commissionAmount": {
          "description": "Commission amount owed to the agent/source for this stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "commissionCode": {
          "description": "Commission code that was used to determine the commission amount.",
          "$ref": "#/definitions/commissionCodeType"
        },
        "commissionId": {
          "description": "Unique ID of the commission.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "commissionTaxAmount": {
          "description": "Tax amount of the commission.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "prepaidCommissionAmount": {
          "description": "Pre paid amount for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "remarks": {
          "description": "Remarks for the commission record.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "commissionCheckStatus": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionCheckToBeChanged": {
      "description": "Request type for updating commission check.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Contains criteria for updating check payment",
          "$ref": "#/definitions/changeCommissionCheckCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionCodeType": {
      "description": "Type for commission code info.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Commission code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "vatPercentage": {
          "description": "Total commission that will be paid.",
          "type": "number"
        }
      }
    },
    "commissionDetailType": {
      "description": "Criteria for updating a commission record.",
      "type": "object",
      "properties": {
        "aROffset": {
          "description": "When set to true, commission for this reservation is flagged to offset AR.",
          "type": "boolean"
        },
        "aROffsetAmount": {
          "description": "Amount settled to AR",
          "$ref": "#/definitions/currencyAmountType"
        },
        "adjustmentNotes": {
          "description": "System generated logs to indicate changes of commission record.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "blockCode": {
          "description": "Block code of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "commissionAmount": {
          "description": "Commission amount owed to the agent/source for this stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "commissionCode": {
          "description": "Commission code that was used to determine the commission amount.",
          "$ref": "#/definitions/commissionCodeType"
        },
        "commissionId": {
          "description": "Unique ID of the commission.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "commissionRevenue": {
          "description": "Commissionable revenue in local currency.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "commissionRevenueTaxAmount": {
          "description": "Tax amount of the revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "commissionStatus": {
          "description": "Commission status.",
          "$ref": "#/definitions/commissionStatusType"
        },
        "commissionTaxAmount": {
          "description": "Tax amount of the commission.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "exchangeRate": {
          "description": "Exchange rate of the currency.",
          "type": "number"
        },
        "guestInfo": {
          "description": "Guest name on the reservation that generated the commission.",
          "$ref": "#/definitions/resGuestInfoType"
        },
        "holdReason": {
          "description": "Hold code and description reason if the reservation is on hold for commission.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "onHold": {
          "description": "When set to true, commission for this reservation is flagged as on hold.",
          "type": "boolean"
        },
        "prepaid": {
          "description": "When set to true, commission for this reservation is flagged as prepaid.",
          "type": "boolean"
        },
        "prepaidCommissionAmount": {
          "description": "Pre paid amount for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "rateCode": {
          "description": "Rate code of the reservation",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "recordLocator": {
          "description": "TA Record locator",
          "type": "string",
          "maxLength": 240,
          "minLength": 0
        },
        "remarks": {
          "description": "Remarks for the commission record.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reservationIdList": {
          "description": "Used to provide PMS and/or CRS identifiers.",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationStatus": {
          "description": "Reservation status.",
          "type": "string"
        },
        "roomId": {
          "description": "Room number assigned to the reservation",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "Room type code of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "routing": {
          "description": "When set to true, commission for this reservation is flagged as routing.",
          "type": "boolean"
        },
        "timeSpan": {
          "description": "Stay arrival and departure dates.",
          "$ref": "#/definitions/timeSpanType"
        },
        "totalCommission": {
          "description": "Total commission that will be paid.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "commissionDetails": {
      "description": "Response type for fetch commission detail.",
      "type": "object",
      "properties": {
        "commissionDetail": {
          "description": "Contains reservation detail information and computed commission amount like gross, tax, prepaid, total.",
          "$ref": "#/definitions/commissionDetailType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionDetailsType": {
      "description": "Commission details related to the stays for which the agent or source is eligible to receive commissions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionDetailType"
      }
    },
    "commissionInfoListType": {
      "description": "List of commission info.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionInfoType"
      }
    },
    "commissionInfoType": {
      "description": "Commission processing information including related bank, agents or source and funds details.",
      "type": "object",
      "properties": {
        "bankAccount": {
          "$ref": "#/definitions/bankAccountType"
        },
        "commissionAgents": {
          "$ref": "#/definitions/commissionAgentsType"
        },
        "commissionSummary": {
          "$ref": "#/definitions/commissionSummaryType"
        }
      }
    },
    "commissionNotesDetails": {
      "description": "Response type for fetching commission notes.",
      "type": "object",
      "properties": {
        "commissionNotesList": {
          "description": "List of commission notes for reservation.",
          "$ref": "#/definitions/commissionNotesListType"
        },
        "hotelId": {
          "description": "Property code against which commissions notes are fetched.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "description": "Reservation Id for which the commission notes are fetched.",
          "$ref": "#/definitions/reservationId"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionNotesListType": {
      "description": "Commission Note for the reservation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "maxLength": 2000,
        "minLength": 0
      }
    },
    "commissionPaymentActivityByRangeStatus": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionPaymentActivityByRangeToBeChanged": {
      "description": "Request type for updating a range of payments activity.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Contains criteria for updating a range of payments activity",
          "$ref": "#/definitions/changeCommissionPaymentActivityRangeCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionPaymentActivityStatusCriteriaType": {
      "description": "Criteria for updating status of a range of payment activity .",
      "type": "object",
      "properties": {
        "status": {
          "description": "New status for payment activity.",
          "$ref": "#/definitions/commissionPaymentActivityStatusType"
        },
        "statusDate": {
          "description": "Date applied when new status is applied. Used in Unpresented and Reconcile.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "commissionPaymentActivityStatusType": {
      "description": "Simple type for payment activity status type. Valid values are Outstanding, Reconciled, Unpresented and Void.",
      "type": "string",
      "enum": [
        "Outstanding",
        "Reconciled",
        "Unpresented",
        "Void",
        "Failed"
      ]
    },
    "commissionPaymentActivityType": {
      "description": "Base type for payment activity information",
      "type": "object",
      "properties": {
        "agentId": {
          "description": "Unique travel agent or source profile ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "bankAccountId": {
          "description": "Unique id of bank account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "batchId": {
          "description": "Batch id of the commission payments.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "checkNo": {
          "description": "Check no of payment.",
          "type": "number"
        },
        "commissionAmount": {
          "description": "Commission amount payment.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "fileName": {
          "description": "File name if payment method is EFT.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property of the commission record.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "onCommission": {
          "description": "Whether this payment batch has related commission records. Commission records could be unlinked for check payments when it is reprinted.",
          "type": "boolean"
        },
        "payee": {
          "description": "Payee of commission",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "paymentDate": {
          "description": "Payment date of commission",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "paymentId": {
          "description": "Unique payment id of the commission check.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "status": {
          "description": "Payment activity status.",
          "$ref": "#/definitions/commissionPaymentActivityStatusType"
        },
        "statusDate": {
          "description": "Status date of payment activity",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "commissionPaymentDetails": {
      "description": "Response to get the commission payment details.",
      "type": "object",
      "properties": {
        "commissionPaymentInfoList": {
          "description": "Defines list of commission payment info.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commissionPaymentInfo"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionPaymentInfo": {
      "description": "Information on a commission payment for a reservation.",
      "type": "object",
      "properties": {
        "batchId": {
          "description": "Batch Id for commission payment.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "checkNo": {
          "description": "Check number for the payment.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "commissionAmount": {
          "description": "Commission amount",
          "type": "number"
        },
        "commissionStatus": {
          "description": "Commission status",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "paymentDate": {
          "description": "The payment date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "paymentId": {
          "description": "Payment id ",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "paymentMethod": {
          "description": "Payment Method",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "remarks": {
          "description": "Remarks for the commission.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "commissionPaymentMethodType": {
      "description": "This contains a generic code and description information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "format": {
          "description": "Payment format if the payment method is EFT.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        }
      }
    },
    "commissionPaymentMethods": {
      "description": "Check",
      "type": "string",
      "enum": [
        "Cent",
        "Eft",
        "Chk"
      ]
    },
    "commissionPaymentReportType": {
      "description": "Contains report id, batch id (for check payments) or export file (for eft payments)",
      "type": "object",
      "properties": {
        "batchId": {
          "description": "Batch id of the commission payments.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "batchName": {
          "description": "If payment method is EFT, batch name of the payments.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "exportBlobFile": {
          "description": "If payment method is EFT, Export BLOB file from database in base64 binary format.",
          "type": "string",
          "format": "byte"
        },
        "exportFile": {
          "description": "If payment method is EFT, file location of the file generated.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reportId": {
          "description": "The report instance ID.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "commissionPaymentsActivityDetails": {
      "description": "Response type for commission payments activity.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "paymentsActivity": {
          "description": "List of payment activity information",
          "$ref": "#/definitions/commissionPaymentsActivityType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionPaymentsActivityType": {
      "description": "List of payment activity information",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionPaymentActivityType"
      }
    },
    "commissionPayoutToType": {
      "type": "string",
      "enum": [
        "TravelAgent",
        "Source",
        "TravelAgentSource",
        "None"
      ]
    },
    "commissionProcessingAgentType": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property from which the agent will be on hold for commission.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "instructions": {
          "description": "List of commission processing instructions.",
          "$ref": "#/definitions/commissionProcessingInstructionsType"
        },
        "reservations": {
          "description": "List of reservations associated with the agent and its commission processing instructions.",
          "$ref": "#/definitions/commissionProcessingReservationsType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "commissionProcessingAgentsType": {
      "description": "Commission processing instructions for an Agent.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionProcessingAgentType"
      }
    },
    "commissionProcessingInstructionsType": {
      "description": "Type for commission process instruction. Possible instruction types are on hold and offset AR.",
      "type": "object",
      "properties": {
        "offsetAR": {
          "description": "When set to true, commission agent and/or its associated reservation will be flagged to offset Account Receivable.",
          "type": "boolean"
        },
        "onHold": {
          "description": "Reason for setting the commission on hold.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "release": {
          "description": "When set to true, commission agent and/or its associated reservation will be released from commission processing.",
          "type": "boolean"
        }
      }
    },
    "commissionProcessingReservationType": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "instructions": {
          "description": "List of commission processing instructions.",
          "$ref": "#/definitions/commissionProcessingInstructionsType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "commissionProcessingReservationsType": {
      "description": "Commission processing instructions for a reservation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionProcessingReservationType"
      }
    },
    "commissionReservationFailureType": {
      "description": "Collection of error and warning if any.",
      "type": "object",
      "properties": {
        "errors": {
          "description": "Details of the errors.",
          "$ref": "#/definitions/errorsType"
        },
        "reservationInfo": {
          "description": "Reservation details along with failure reason.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "warnings": {
          "description": "Details of the warnings.",
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionReservationFailuresType": {
      "description": "Reservation that wasn't successfully associated with the agent.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionReservationFailureType"
      }
    },
    "commissionReservationInstructionsType": {
      "description": "Type for commission reservation instructions.",
      "type": "string",
      "enum": [
        "FetchReservationInfo"
      ]
    },
    "commissionStatus": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionStatusType": {
      "description": "Simple type for commission status. Valid values are Unpaid and Paid.",
      "type": "string",
      "enum": [
        "Unpaid",
        "Paid"
      ]
    },
    "commissionSummaryType": {
      "description": "Summary of the commission payment information totaled for all agents/sources.",
      "type": "object",
      "properties": {
        "aR": {
          "description": "Total commission amount held to offset the agents' and/or sources' accounts receivable accounts.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "onHold": {
          "description": "Total value of commission amounts being held for one or more agents/sources.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "potential": {
          "description": "Total funds required to pay all commissions for one or more agents/sources.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "toBePaid": {
          "description": "Difference between the Potential amount minus the On Hold amount minus the AR amount (Potential - On Hold - AR = To Be Paid).",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "commissionToBeChanged": {
      "description": "Request type for update of commission detail.",
      "type": "object",
      "properties": {
        "commissionDetail": {
          "description": "Contains fields that can be updated for commission i.e. commission amount, tax, prepaid, code and remarks.",
          "$ref": "#/definitions/commissionBaseDetailType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionsDetails": {
      "description": "Commissions for the requested account or agent id.",
      "type": "object",
      "properties": {
        "commissionInfoList": {
          "$ref": "#/definitions/commissionInfoListType"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "communicationStatusType": {
      "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
      "type": "string",
      "enum": [
        "Pending",
        "Completed",
        "Failed",
        "Sent",
        "Received",
        "Cancelled",
        "PendingAvailability"
      ]
    },
    "compAccountingType": {
      "description": "Authorizer Information",
      "type": "object",
      "properties": {
        "aRNumber": {
          "description": "AR Account Number of the authorizer",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "compTypeCode": {
          "description": "The Comp Type for this Account. Used when using the Comp types functionality",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "compVoucherNo": {
          "description": "The coupon or voucher number used by the external gaming system to track postings made to this routing.",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "dateRange": {
          "description": "Arrival date range for comp routing",
          "$ref": "#/definitions/dateRangeType"
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        },
        "membershipId": {
          "description": "Membership number",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "membershipIdNo": {
          "description": "Unique Id of membership",
          "type": "integer"
        },
        "membershipNameOnCard": {
          "description": "Name displayed on the membership card",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "compAuthorizerInfoType": {
      "description": "Authorizer Information",
      "type": "object",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "compRoutingRequestType": {
      "description": "Type for the details of a Comp Routing Request",
      "type": "object",
      "properties": {
        "comments": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "declinedBy": {
          "description": "User information of user who declined comp routing request",
          "$ref": "#/definitions/userInfoType"
        },
        "requestedBy": {
          "description": "User who requested the Comp Routing",
          "$ref": "#/definitions/userInfoType"
        },
        "status": {
          "description": "Comp routing status",
          "$ref": "#/definitions/compRoutingStatusType"
        }
      }
    },
    "compRoutingStatusType": {
      "description": "Status which indicates that the Request of Comp Routing was declined",
      "type": "string",
      "enum": [
        "Request",
        "Comp",
        "Declined"
      ]
    },
    "companyInfoType": {
      "description": "Company Information of the Profile.",
      "type": "object",
      "properties": {
        "department": {
          "description": "Department of the Profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "legalCompany": {
          "description": "Legal Company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "position": {
          "description": "Business Title or Position of the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "companyType": {
      "type": "object",
      "properties": {
        "alternateLanguage": {
          "description": "Alternate Language of the company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "alternateName": {
          "description": "Alternate Name of the Company. Mainly, it's the name of the company written in the Alternate Language.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "blacklist": {
          "description": "This element tells if profile is blacklisted or not.",
          "type": "boolean"
        },
        "businessLocale": {
          "description": "A jurisdiction(Territory) in which a company is authorized to do business.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "businessTitle": {
          "description": "Business Title.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "commissionCode": {
          "description": "Commission code of the company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "companyName2": {
          "description": "Second Name of the company.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "companyName3": {
          "description": "Third Name of the company.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "corporateIdType": {
          "description": "The type of corporate ID",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "creditRating": {
          "description": "Credit Rating of the company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "iATAInfo": {
          "description": "IATA Information of the profile.",
          "$ref": "#/definitions/iATAInfoType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nationalityDescription": {
          "description": "Nationality code description",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "vipStatus": {
          "description": "VIP status of the company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "confDeliveryInfoType": {
      "type": "object",
      "properties": {
        "communicationType": {
          "description": "CommunicationType through which the confirmation letter was sent.",
          "$ref": "#/definitions/confDeliveryMethod"
        },
        "lastAttempted": {
          "description": "Date of last attempt to send confirmation letter.",
          "type": "string",
          "format": "date-time"
        },
        "lastStatus": {
          "description": "Status of last sent confirmation.",
          "$ref": "#/definitions/sentConfirmationStatus"
        },
        "successfulTries": {
          "description": "Number of success letter sent.",
          "type": "integer"
        }
      }
    },
    "confDeliveryInfoTypes": {
      "description": "List of confirmation letter delivery methods and their status",
      "type": "array",
      "maxItems": 4,
      "items": {
        "$ref": "#/definitions/confDeliveryInfoType"
      }
    },
    "confDeliveryMethod": {
      "type": "string",
      "enum": [
        "Print",
        "Email",
        "Fax",
        "Text",
        "NotConfigured"
      ]
    },
    "confRecipientInfoType": {
      "type": "object",
      "properties": {
        "addressInfo": {
          "description": "id of the address where to send confirmation letter.",
          "$ref": "#/definitions/addressInfoType"
        },
        "emailInfo": {
          "description": "id of the Email where to send confirmation letter.",
          "$ref": "#/definitions/emailInfoType"
        },
        "faxInfo": {
          "description": "id of the Fax where to send confirmation letter.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "formerName": {
          "description": "Last Name of recipient.",
          "$ref": "#/definitions/profileNameType"
        },
        "profileId": {
          "description": "name id of the recipient.",
          "$ref": "#/definitions/profileId"
        },
        "recipientType": {
          "$ref": "#/definitions/profileTypeType"
        },
        "telephoneInfo": {
          "description": "id of the Mobile where to send confirmation letter.",
          "$ref": "#/definitions/telephoneInfoType"
        }
      }
    },
    "configPackagePrimaryDetailsType": {
      "description": "A Config Package Info type.",
      "type": "object",
      "properties": {
        "arrangementCode": {
          "description": "Arrangement Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "beginSellDate": {
          "description": "Indicates the begin sell date of the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "description": {
          "description": "The description of the package.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "endSellDate": {
          "description": "Indicates the end sell date of the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "forecastGroup": {
          "description": "The Forecast group package belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "shortDescription": {
          "description": "The short description of the package.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "configPackageTransactionType": {
      "description": "A HotelPackageTransaction type.",
      "type": "object",
      "properties": {
        "allowance": {
          "description": "Package is marked as an allowance, in case charge is expected back to the guest account from external interface eg. POS. which need to be offset against a consumption allowance.",
          "type": "boolean"
        },
        "calculationRule": {
          "description": "The price calculation rule for this package.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "currency": {
          "description": "The currency code for this package.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "packagePostingRules": {
          "description": "The package posting rule details.",
          "$ref": "#/definitions/packagePostingRulesType"
        },
        "postingType": {
          "description": "The posting frequency for this package, e.g., daily, arrival, departure, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "configPackageUsageDetailType": {
      "description": "A Config Package Usage Detail type.",
      "type": "object",
      "properties": {
        "source": {
          "description": "Indicates if the source of the product is Rate header, Rate Detail or Reservation.",
          "$ref": "#/definitions/productSourceType"
        },
        "usedInHouseReservations": {
          "description": "Indicates if any checked in reservations are using this product.",
          "type": "boolean"
        },
        "usedInRates": {
          "description": "Indicates if the package is used in any rate code.",
          "type": "boolean"
        },
        "usedInReservations": {
          "description": "Indicates if the package is used in, reserved or prospect reservations.",
          "type": "boolean"
        }
      }
    },
    "configPostingAttributesType": {
      "description": "A config Package posting attributes type.",
      "type": "object",
      "properties": {
        "addToRate": {
          "description": "The package price is added to the room rate.",
          "type": "boolean"
        },
        "calculatedPrice": {
          "description": "Calculated Package Price based from Number of Adults, Children and Calculation Rule.",
          "type": "number"
        },
        "catering": {
          "description": "Is package used for catering?",
          "type": "boolean"
        },
        "deliveryTimeRequired": {
          "description": "Indicates whether a delivery time is required for the package.",
          "type": "boolean"
        },
        "endTime": {
          "description": "End time the package is valid.",
          "type": "string"
        },
        "forecastNextDay": {
          "description": "Package will be forecasted for consumption the next business day.",
          "type": "boolean"
        },
        "formula": {
          "description": "The custom formula used for this package, if any.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "formulaFunctionArguments": {
          "description": "The function argument name-value combination accepted by the custom formula used for this package.",
          "$ref": "#/definitions/functionArgumentsType"
        },
        "formulaFunctionName": {
          "description": "The custom formula function name used for this package, if any.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "inventoryItems": {
          "description": "Package Code Inventory Items type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/pkgInventoryItemType"
          }
        },
        "postNextDay": {
          "description": "package charges will be posted next business day.",
          "type": "boolean"
        },
        "postingRhythm": {
          "description": "The posting rhythm for this package.",
          "$ref": "#/definitions/packagePostingRhythmType"
        },
        "priceCalculationRule": {
          "description": "The price calculation rule for this package.",
          "$ref": "#/definitions/packageCalculationRuleType"
        },
        "printSeparateLine": {
          "description": "The package price is printed on separate line of the folio.",
          "type": "boolean"
        },
        "sellSeparate": {
          "description": "Can the package be sold separate from rate plan code?",
          "type": "boolean"
        },
        "startTime": {
          "description": "Start time the package is valid.",
          "type": "string"
        },
        "ticket": {
          "description": "Indicates whether a package is configured as a ticket or not.",
          "type": "boolean"
        },
        "webBookable": {
          "description": "Can package be sold via Web channel.",
          "type": "boolean"
        }
      }
    },
    "confirmationStyle": {
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "style": {
          "description": "Name of the confirmation letter style.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "confirmationType": {
      "type": "object",
      "properties": {
        "confirmationStyleInfo": {
          "description": "Confirmation style.",
          "$ref": "#/definitions/confirmationStyle"
        },
        "deliveryInfo": {
          "description": "The status of the confirmation letter sent via the specified CommunicationType.",
          "$ref": "#/definitions/confDeliveryInfoTypes"
        },
        "fromEmail": {
          "description": "Senders Email address.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "recipientInfo": {
          "description": "Receipient's information.",
          "$ref": "#/definitions/confRecipientInfoType"
        },
        "sendTextMessage": {
          "description": "Flag to indicate sending confirmation letter as text message.",
          "type": "boolean"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "confirmationsType": {
      "description": "List of confirmation letters.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/confirmationType"
      }
    },
    "countryNameType": {
      "description": "Code for a country or a nationality.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Used for Character Strings, length 0 to 200.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "currencyAmountType": {
      "description": "A monetary value expressed with a currency code.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        }
      }
    },
    "currentRoomInfoType": {
      "description": "Room information of the reservation for the current day.",
      "type": "object",
      "properties": {
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "roomDescription": {
          "description": "Current room description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "roomId": {
          "description": "Current room number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomOwnershipType": {
          "description": "Provides the information of the assigned reservation room is an Owner,Referral or Regular room. This value is returned when Room Rotation OPERA Control is active and room number is assigned to a reservation.",
          "$ref": "#/definitions/reservationRoomOwnershipType"
        },
        "roomType": {
          "description": "Current room type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomViewCode": {
          "description": "Represents the room view code like City view, River view, Ocean view etc.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "suggestedRoomNumbers": {
          "description": "Suggested room numbers.",
          "$ref": "#/definitions/codeListType"
        },
        "upgradedByAI": {
          "description": "Represents the room was upgraded by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "currentServicingAttendantType": {
      "description": "The Attendant Name and ID of the attendant servicing the room.",
      "type": "object",
      "properties": {
        "activeFlag": {
          "description": "Indicates if the Attendant is active.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "appUser": {
          "description": "The App User Name and ID of the user who started the service.",
          "$ref": "#/definitions/applicationUserType"
        },
        "attendantId": {
          "description": "Attendant's unique identifier.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "attendantName": {
          "description": "Attendant's name.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "floor": {
          "description": "The Floor which is assigned to the attendant.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "friday": {
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property where the attendant belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "monday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        },
        "section": {
          "description": "Section Code the attendant has been assigned.",
          "$ref": "#/definitions/housekeepingSectionType"
        },
        "startTime": {
          "description": "The start time of the service.",
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "description": "Status of the respective Housekeeping Attendant.",
          "$ref": "#/definitions/servicingAttendantStatusType"
        },
        "sunday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        }
      }
    },
    "customChargeExemptionDateType": {
      "description": "Contains Custom Charge Exemption information for a day.",
      "type": "object",
      "properties": {
        "date": {
          "description": "Contains Custom Charge Exemption date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "quantity": {
          "description": "Contains number of Custom Charge Exemption for a day.",
          "type": "integer"
        }
      }
    },
    "customChargeExemptionDatesType": {
      "description": "Contains List of Custom Charge Exemption information for a day.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customChargeExemptionDateType"
      }
    },
    "customChargeExemptionType": {
      "description": "Contains custom charges exemption information.",
      "type": "object",
      "properties": {
        "customChargeDates": {
          "description": "Contains exemption detail information for each date.",
          "$ref": "#/definitions/customChargeExemptionDatesType"
        },
        "customChargeQuantity": {
          "description": "Contains exemption quantity for the stay. When this value is configured, daily exemption quantities are not permitted.",
          "$ref": "#/definitions/customChargeQuantityType"
        },
        "customChargesExemption": {
          "description": "Contains exemption code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "excludedDates": {
          "description": "Contains list of dates which are not valid for custom charge exemptions.",
          "$ref": "#/definitions/excludedDatesType"
        },
        "percentage": {
          "description": "Exemption Percentage",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "propertyExemption": {
          "description": "Flag specifying if custom charge exemptions is property level or not.",
          "type": "boolean"
        }
      }
    },
    "customChargeExemptionsType": {
      "description": "List of Custom Charge Exemptions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customChargeExemptionType"
      }
    },
    "customChargeQuantityType": {
      "description": "Contains quantity of custom charge exemptions.",
      "type": "object",
      "properties": {
        "available": {
          "description": "Indicates if Custom Charges Exemption information is editable.",
          "type": "boolean"
        },
        "quantity": {
          "description": "Contains number of Custom Charge Exemption for a day.",
          "type": "integer"
        }
      }
    },
    "customerType": {
      "description": "Contains basic data on the customer's identity, location, relationships, finances, memberships, etc.",
      "type": "object",
      "properties": {
        "alienInfo": {
          "description": "Immigration/visa information of a foreign person.",
          "$ref": "#/definitions/alienInfoType"
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "birthCountry": {
          "description": "Country of birth.",
          "$ref": "#/definitions/countryNameType"
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        },
        "birthPlace": {
          "description": "Place of birth.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "blacklist": {
          "description": "This element tells if profile is blacklisted or not.",
          "type": "boolean"
        },
        "businessTitle": {
          "description": "Business Title.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "citizenCountry": {
          "description": "Name of the (self-professed) country that is claimed for citizenship.",
          "$ref": "#/definitions/countryNameType"
        },
        "companyInfo": {
          "description": "Company Information of the Profile.",
          "$ref": "#/definitions/companyInfoType"
        },
        "creditRating": {
          "description": "Credit Rating of the customer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "customerValue": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "gender": {
          "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "identifications": {
          "description": "List of identification of the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "identificationInfo": {
              "description": "Collection of detailed information on the identification of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/identificationInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "legalCompany": {
          "description": "Name Of the company the individual is associated with.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nationalityDescription": {
          "description": "Nationality code description",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "personName": {
          "description": "Detailed name information for the customer.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/personNameType"
          }
        },
        "privateProfile": {
          "description": "This element tells profile is property exclusive or not.",
          "type": "boolean"
        },
        "profession": {
          "description": "Profession of a person.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "vipStatus": {
          "description": "VIP status of the customer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "dailyDocket": {
      "description": "Response object for fetching log book entries.",
      "type": "object",
      "properties": {
        "dailyDocketEntries": {
          "description": "List of log book entries.",
          "$ref": "#/definitions/dailyDocketType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "dailyDocketEntryType": {
      "description": "Log book entry.",
      "type": "object",
      "properties": {
        "department": {
          "description": "Department ID in which the log book entry belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "details": {
          "description": "Entry details.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "docketEntryId": {
          "description": "Unique identifier of the log book entry.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "entryDate": {
          "description": "The date-time in which the log book entry was created.",
          "type": "string",
          "format": "date-time"
        },
        "history": {
          "description": "Creation date time, Creator Id, last modification date time and last Modifier Id.",
          "$ref": "#/definitions/changeHistoryType"
        },
        "hotelId": {
          "description": "Hotel Code of the log book entry.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roleUserEntry": {
          "description": "Role or User in which the log book entry belongs to.",
          "$ref": "#/definitions/roleUserEntryType"
        }
      }
    },
    "dailyDocketType": {
      "description": "log book entry.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dailyDocketEntryType"
      }
    },
    "dailyRateType": {
      "description": "The total amount charged for the service including additional amounts and fees.",
      "type": "object",
      "properties": {
        "amountAfterTax": {
          "description": "The total amount including all associated taxes (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "amountBeforeTax": {
          "description": "The total amount not including any associated tax (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "baseAmount": {
          "description": "The rate's base price. Amount excluding price for any add to rate combine line package attached to the rate.Also excludes any discounts",
          "type": "number"
        },
        "code": {
          "description": "Type of charge.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "discount": {
          "description": "Room rate discount percentage or amount, code and textual reason for discount.",
          "$ref": "#/definitions/discountType"
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fees": {
          "description": "A collection of fees or service charges.",
          "$ref": "#/definitions/feesType"
        },
        "rateOverride": {
          "description": "When true indicates that the rate amount has been overridden.",
          "type": "boolean"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "taxes": {
          "description": "A collection of taxes.",
          "$ref": "#/definitions/taxesType"
        }
      }
    },
    "dailyRatesType": {
      "description": "Defines room rate information on a daily basis.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dailyRateType"
      }
    },
    "dateRangeType": {
      "description": "Date Range with Start and End dates.",
      "type": "object",
      "properties": {
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "dateTimeRangeType": {
      "description": "Date Range with Start and End dates.",
      "type": "object",
      "properties": {
        "end": {
          "description": "The ending value of the time span.",
          "type": "string",
          "format": "date-time"
        },
        "start": {
          "description": "The starting value of the time span.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "dateTimeSpanType": {
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "type": "object",
      "properties": {
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "dateTimeStampGroupType": {
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "dateUDFType": {
      "description": "Used to hold user defined field of Date Type.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "description": "Used to hold user defined field of Date Type. It is highly recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "dateUDFsType": {
      "description": "Used to hold collection of user defined fields of Date Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dateUDFType"
      }
    },
    "deliverQueueRoomsTextMessage": {
      "description": "Request to deliver a text message via Queue Reservations (for a guest) or Queue Rush (for housekeeping).",
      "type": "object",
      "properties": {
        "criteria": {
          "$ref": "#/definitions/queueRoomsTextCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositCancelRevenueType": {
      "description": "The type to indicate what revenue is to be used for calculating deposit/cancellation amounts.",
      "type": "string",
      "enum": [
        "Rooms",
        "Catering",
        "All"
      ]
    },
    "depositPolicyType": {
      "description": "Used to define the deposit policy, guarantees policy, and/or accepted forms of payment.",
      "type": "object",
      "properties": {
        "amountPercent": {
          "description": "Payment expressed as a fixed amount, or a percentage of/or room nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "deadline": {
          "description": "Payment deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "depositReceiptNo": {
          "description": "Receipt number associated with the deposit policy",
          "type": "integer"
        },
        "depositReqReversed": {
          "description": "Flag to indicate if deposit policy is reversed",
          "type": "boolean"
        },
        "description": {
          "description": "Text description of the Payment in a given language.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the deposit policy.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        },
        "policyCode": {
          "description": "Deposit Policy Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date associated with the deposit policy",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "typeOfCharges": {
          "description": "Defines if the deposit amount is calculated based on Room Charges, Catering Charges or both",
          "$ref": "#/definitions/depositCancelRevenueType"
        }
      }
    },
    "directBillingType": {
      "description": "This is the preconfigured routing instruction type.",
      "type": "object",
      "properties": {
        "aRNumber": {
          "description": "Hotel Code for which the details of direct billing is provided for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code for which the details of direct billing is provided for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "discountType": {
      "description": "Identifies and provides details about the discount. This allows for both percentages and flat amounts. If one field is used, the other should be zero/not specified since logically.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "discountCode": {
          "description": "Specifies the type of discount (e.g., No condition, LOS, Deposit or Total amount spent).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "discountReason": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "percent": {
          "description": "Percentage discount.",
          "type": "number"
        }
      }
    },
    "downgradeType": {
      "description": "Do not downgrade membership when the next downgrade process runs. When the downgrade process runs, the membership will be automatically set to Grace.",
      "type": "string",
      "enum": [
        "Grace",
        "Never",
        "Period"
      ]
    },
    "eCertificateClassficationType": {
      "description": "Enumeration of the different type of Ecertificate.",
      "type": "string",
      "enum": [
        "Promotion",
        "Award",
        "Benefit",
        "Other"
      ]
    },
    "eCertificateConsumeSourceType": {
      "description": "Indicates that OPERA E-Certificate is consumed by hotelPMS.",
      "type": "string",
      "enum": [
        "Central",
        "Web",
        "Hotel"
      ]
    },
    "eCertificateConsumptionType": {
      "description": "E-Certificates details.",
      "type": "object",
      "properties": {
        "authorizationCode": {
          "description": "Authorization code for consumption.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "date": {
          "description": "Date the certificate was consumed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "email": {
          "description": "Email of the person who consumed the certificate.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "firstName": {
          "description": "First name of the person who consumed the certificate.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property where certificate was consumed for.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "locationType": {
          "description": "Consumption location type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "middleName": {
          "description": "Middle name of the person who consumed the certificate.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "referenceId": {
          "description": "Any reference like reservation no etc against which the certificate was consumed.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "serviceDate": {
          "description": "Date on which the service is due (arrival date in case of reservation).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "source": {
          "description": "Source of consumption.",
          "$ref": "#/definitions/eCertificateConsumeSourceType"
        },
        "surname": {
          "description": "Last name of the person who consumed the certificate..",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "userName": {
          "description": "Application user who created the consumption.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "userNotes": {
          "description": "Any notes on the certificate entered at time of consumption.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        }
      }
    },
    "eCertificateGenerationType": {
      "description": "E-Certificates details.",
      "type": "object",
      "properties": {
        "generationDetail": {
          "description": "Reason for which e-certificate was generated.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "referenceValue": {
          "description": "Type of value that is in the certificate.valid values are membership_level.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ruleId": {
          "description": "Key to identify the generation rule id.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "eCertificateInfoType": {
      "description": "E-Certificates details.",
      "type": "object",
      "properties": {
        "awardCode": {
          "description": "Award type to which the certificate is linked to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "benefitSummary": {
          "description": "Summary of Benefits attached to this ECertificate.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "certificateType": {
          "description": "User defined certificate code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cost": {
          "description": "Cost of certificate.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "description": "Description about the certificate.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotels": {
          "description": "Hotel to which certificate is attached to.",
          "type": "object",
          "properties": {
            "code": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              }
            },
            "scope": {
              "description": "Scope of e-cert: global,single property or multi property.",
              "$ref": "#/definitions/eCertificateScopeType"
            }
          }
        },
        "label": {
          "description": "Label for the certificate.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "longDescription": {
          "description": "Detail description about the certificate.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "maxExtensionAllowed": {
          "description": "Number of times e-certificate can be extended.",
          "type": "integer"
        },
        "membershipType": {
          "description": "Membership type to which the certificate is linked to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "promotionCode": {
          "description": "Promotion code to which certificate is attached to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "usageCriteria": {
          "$ref": "#/definitions/eCertificateUsageCriteriaType"
        },
        "value": {
          "description": "Value of the certificate for the guest.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "voucherBenefitCode": {
          "description": "Voucher benefit code attached to the certificate.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "eCertificateIssueSourceType": {
      "description": "Indicates that OPERA E-Certificate is issued by external system.",
      "type": "string",
      "enum": [
        "Opera",
        "Web",
        "Interface"
      ]
    },
    "eCertificateIssueType": {
      "description": "Indicates that guest purchased OPERA E-Certificate.",
      "type": "string",
      "enum": [
        "Assigned",
        "OptedIn",
        "Purchased"
      ]
    },
    "eCertificateScopeType": {
      "description": "Indicates that OPERA E-Certificate is available for a specific list of hotels.",
      "type": "string",
      "enum": [
        "Global",
        "Hotel",
        "MultiHotel"
      ]
    },
    "eCertificateStatusType": {
      "description": "Indicates that OPERA E-Certificate is reserved.",
      "type": "string",
      "enum": [
        "Cancelled",
        "Consumed",
        "Deleted",
        "Expired",
        "Issued",
        "Reserved"
      ]
    },
    "eCertificateType": {
      "description": "E-Certificates details.",
      "type": "object",
      "properties": {
        "awardId": {
          "description": "AwardID.",
          "$ref": "#/definitions/awardId"
        },
        "awardPoints": {
          "description": "Award points if any in case of certificate use membership award.",
          "type": "integer"
        },
        "cancelRequestDate": {
          "description": "Date on which the cancellation was requested.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "certificateId": {
          "description": "System generated unique certificate id.",
          "type": "integer"
        },
        "certificateNo": {
          "description": "Printed certificate no. This has to be unique.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "consumptionDetail": {
          "$ref": "#/definitions/eCertificateConsumptionType"
        },
        "databaseId": {
          "description": "External reference from which the record is created.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "eCertificateInfo": {
          "$ref": "#/definitions/eCertificateInfoType"
        },
        "expiryDate": {
          "description": "Date of expiry.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "extensionCount": {
          "description": "Number of times e-certificate is already extended.",
          "type": "integer"
        },
        "generationDetail": {
          "$ref": "#/definitions/eCertificateGenerationType"
        },
        "inLieuSequence": {
          "description": "Seq of the in lieu of certificate. 1..n. original certificate will be treated as null = 0.",
          "type": "integer"
        },
        "inactiveDate": {
          "description": "Date the record was marked as inactive.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "issueDate": {
          "description": "Date when certificate was issued.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "issueType": {
          "description": "Process action issued the certificate. valid values are assigned (a),opt in (o) and purchased (p).",
          "$ref": "#/definitions/eCertificateIssueType"
        },
        "newExpiryDate": {
          "description": "New Date of expiry to extend e-certificate.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "originalCertificateNo": {
          "description": "In case of in lieu of certificate this will contain the original certificate no.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "originalVoucherNo": {
          "description": "In case of in lieu of certificate this will contain the original voucher no.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "printed": {
          "description": "Print status of the certificate.",
          "type": "boolean"
        },
        "profileId": {
          "description": "NameId.",
          "$ref": "#/definitions/profileId"
        },
        "source": {
          "description": "Source of e-certificate.",
          "$ref": "#/definitions/eCertificateIssueSourceType"
        },
        "status": {
          "description": "Status of the certificate.",
          "$ref": "#/definitions/eCertificateStatusType"
        },
        "voucherNo": {
          "description": "System generated unique voucher number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "eCertificateUsageCriteriaType": {
      "description": "E-Certificates details.",
      "type": "object",
      "properties": {
        "benefit": {
          "description": "Indicates to attach a rate code to the e-certificate as a benefit.",
          "type": "boolean"
        },
        "cancelAllowed": {
          "description": "Identify if cancel is allowed or not.",
          "type": "boolean"
        },
        "generateInLieuCertificate": {
          "description": "Identify if in lieu of certificate can be generated or not.",
          "type": "boolean"
        },
        "hotel": {
          "description": "Indicates if web certificate can be consumed in hotel.",
          "type": "boolean"
        },
        "reservation": {
          "description": "Indicates if certificate is to be used against reservation or not.",
          "type": "boolean"
        },
        "verifyCertificateNo": {
          "description": "Specify if the certificate number verification is required at time of consumption or not.",
          "type": "boolean"
        },
        "web": {
          "description": "Indicates if web certificate can be consumed in OWS.",
          "type": "boolean"
        },
        "webAllowed": {
          "description": "Indicates if certificate consumption allowable on the web.",
          "type": "boolean"
        }
      }
    },
    "eCertificatesType": {
      "description": "List of e-certificates for the profile.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eCertificateType"
      }
    },
    "eCouponType": {
      "description": "Reservation eCoupon Type Information.",
      "type": "object",
      "properties": {
        "autoAttached": {
          "description": "Determines whether the eCoupon is attached through the Rate Code or not.",
          "type": "boolean"
        },
        "code": {
          "description": "Code to attach the eCoupon to Reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the eCoupon attached to the Reservation.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "eCouponId": {
          "description": "ECouponID to attach the eCoupon to Reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "issuedQuantity": {
          "description": "Assigned Quantity for the eCoupon when attached to Reservation.",
          "type": "integer"
        },
        "ratePlanCode": {
          "description": "Rate plan of the attached eCoupon to Reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reason": {
          "description": "Reason for attaching/modifing eCoupon.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "usedQuantity": {
          "description": "Used Quantity of the eCoupon for the Reservation.",
          "type": "integer"
        },
        "welcomeOffer": {
          "description": "Determines whether this eCoupon is eligible for welcome offer or not.",
          "type": "boolean"
        }
      }
    },
    "eCouponsType": {
      "description": "Collection of ECouponType object.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eCouponType"
      }
    },
    "effectiveRateType": {
      "description": "Effective rate amount per guest on specific dates.",
      "type": "object",
      "properties": {
        "amountBeforeTax": {
          "description": "Rate amount Before Tax.",
          "type": "number"
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "extraChildRate": {
          "description": "Rate amount for each extra Child.",
          "type": "number"
        },
        "extraPersonRate": {
          "description": "Rate amount for each extra person.",
          "type": "number"
        },
        "fivePersonRate": {
          "description": "Rate amount for five persons.",
          "type": "number"
        },
        "fourChildrenRate": {
          "description": "Rate amount for four Children.",
          "type": "number"
        },
        "fourPersonRate": {
          "description": "Rate amount for four persons.",
          "type": "number"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "minimumChildrenForFreeStay": {
          "description": "Minimum number of children needed to get free stay.",
          "type": "integer"
        },
        "numberOfRooms": {
          "type": "integer"
        },
        "oneChildRate": {
          "description": "Rate amount for one Child.",
          "type": "number"
        },
        "onePersonRate": {
          "description": "Rate amount for one person.",
          "type": "number"
        },
        "overrideFloorAmount": {
          "description": "true if floor amount needs to be override",
          "type": "boolean"
        },
        "pointsRequired": {
          "description": "The number of award points required for applying this rate plan schedule.",
          "type": "number"
        },
        "rateByAgeBuckets": {
          "description": "Collection of rate amount by age bracket.",
          "$ref": "#/definitions/rateByAgeBucketsType"
        },
        "ratePlanCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "threeChildrenRate": {
          "description": "Rate amount for three Children.",
          "type": "number"
        },
        "threePersonRate": {
          "description": "Rate amount for three persons.",
          "type": "number"
        },
        "twoChildrenRate": {
          "description": "Rate amount for two Children.",
          "type": "number"
        },
        "twoPersonRate": {
          "description": "Rate amount for two persons.",
          "type": "number"
        }
      }
    },
    "effectiveRatesType": {
      "description": "Collection of effective rate amount per guest on specific dates.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/effectiveRateType"
      }
    },
    "emailInfoType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "emailType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "employeeInfoType": {
      "type": "object",
      "properties": {
        "addressInfo": {
          "$ref": "#/definitions/addressInfoType"
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        },
        "department": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "emailInfo": {
          "$ref": "#/definitions/emailInfoType"
        },
        "gender": {
          "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "personName": {
          "$ref": "#/definitions/personNameType"
        },
        "phoneInfo": {
          "$ref": "#/definitions/telephoneInfoType"
        },
        "profileId": {
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "entityType": {
      "description": "Indicates the rule is based on Minutes associated with the charge.",
      "type": "string",
      "enum": [
        "ThresholdCount",
        "ThresholdQuantity",
        "ThresholdMinutes"
      ]
    },
    "errorInstance": {
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "title": "Error Instance Details",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "errorType": {
      "description": "Standard way to indicate that an error occurred during the processing of an message. If the message successfully processes, but there are business errors, those errors should be passed in the warning element.",
      "type": "object",
      "properties": {
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nodeList": {
          "description": "An XPath expression that selects all the nodes whose data caused this error. Further, this expression should have an additional contraint which contains the data of the node. This will provide the offending data back to systems that cannot maintain the original message.",
          "type": "string"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string"
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string"
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string"
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "errorsType": {
      "description": "An error that occurred during the processing of a message.",
      "type": "array",
      "maxItems": 99,
      "items": {
        "$ref": "#/definitions/errorType"
      }
    },
    "eventId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "exceptionDetailType": {
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "title": "Error Detail",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "excludedDateType": {
      "description": "Specifies all the enabled dates.",
      "type": "object",
      "properties": {
        "date": {
          "description": "Contains exclusion date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reason": {
          "description": "Contains reason for exclusion.",
          "$ref": "#/definitions/exclusionReasonType"
        }
      }
    },
    "excludedDatesType": {
      "description": "Contains list of dates which are valid for custom charge exemptions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/excludedDateType"
      }
    },
    "exclusionReasonType": {
      "description": "Custom Charge has already been Processed for this date within the reservation stay.",
      "type": "string",
      "enum": [
        "NotConfigured",
        "CustomChargeProcessed"
      ]
    },
    "externalReferenceType": {
      "description": "This type contains unique information of external reference.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique ID of external reference.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "ID context for external reference.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "ID extension for external reference.",
          "type": "integer"
        }
      }
    },
    "externalReferencesType": {
      "description": "This type contains unique information of external reference.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/externalReferenceType"
      }
    },
    "fBAInfoType": {
      "description": "FBA ( Flexible Benefits Awards ) related fields.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Award's FBA amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "fbaBillGenDate": {
          "description": "Business date of the FBA bill generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "flexibleBenefitAward": {
          "description": "Indicates if this certificate is a Flexible Benefit Award certificate.",
          "type": "boolean"
        },
        "monetaryValue": {
          "description": "Award's FBA monetary values.",
          "type": "number"
        },
        "orphanCertificate": {
          "description": "Indicates whether the certificate is Orphan or not.",
          "type": "boolean"
        },
        "posted": {
          "description": "Indicates whether FBA has been posted.",
          "type": "boolean"
        },
        "postedAmount": {
          "description": "Award's FBA posted amount.",
          "type": "number"
        },
        "postingBusinessDate": {
          "description": "Business date of the FBA posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingDateTime": {
          "description": "Date and time of the FBA posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reimburseAllowed": {
          "description": "Marks if the certificate is eligible for reimbursement.",
          "type": "boolean"
        },
        "reimbursed": {
          "description": "Indicates whether FBA has been reimbursed.",
          "type": "boolean"
        },
        "reimbursedAmount": {
          "description": "Award's FBA reimbursed amount.",
          "type": "number"
        },
        "reimbursementBusinessDate": {
          "description": "Business date of the FBA reimbursement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reimbursementDateTime": {
          "description": "Date and time of the FBA reimbursement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "resettleAllowed": {
          "description": "Marks if the certificate is eligible for resettlement",
          "type": "boolean"
        },
        "settled": {
          "description": "Indicates whether FBA has been settled.",
          "type": "boolean"
        },
        "settlementBusinessDate": {
          "description": "Business date of the FBA settlement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "settlementDateTime": {
          "description": "Date and time of the FBA settlement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "status": {
          "description": "Possible FBA statuses.",
          "$ref": "#/definitions/fBAStatusType"
        }
      }
    },
    "fBAStatusType": {
      "description": "Flexible benefit award has been reimbursed.",
      "type": "string",
      "enum": [
        "Ordered",
        "Attached",
        "Posted",
        "Settled",
        "Reimbursed"
      ]
    },
    "facilityCodeType": {
      "description": "Facility Housekeeping Code, its description and quantity.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Facility code value.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Facility Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "quantity": {
          "description": "Signifies the quantity.",
          "type": "integer"
        }
      }
    },
    "facilityCodesType": {
      "description": "List of the facility codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/facilityCodeType"
      }
    },
    "facilityTaskType": {
      "description": "Information regarding facility task on a reservation.",
      "type": "object",
      "properties": {
        "date": {
          "description": "The Date on which the task is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "supplies": {
          "description": "Supplies associated with the task.",
          "$ref": "#/definitions/facilityCodesType"
        },
        "task": {
          "description": "The Task Code.",
          "$ref": "#/definitions/housekeepingTaskCodeType"
        }
      }
    },
    "feeType": {
      "description": "Applicable service charges or fees.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "code": {
          "description": "Code identifying the fee (e.g.,agency fee, municipality fee).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "type": {
          "description": "Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).",
          "$ref": "#/definitions/amountDeterminationType"
        }
      }
    },
    "feesType": {
      "description": "A collection of fees or service charges.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "fee": {
          "description": "An individual fee or service charge.",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/feeType"
          }
        }
      }
    },
    "fetchActivityBookingsType": {
      "description": "Used in the request message to describe the \"filtering Criteria\" when executing an activity lookup.",
      "type": "object",
      "properties": {
        "activities": {
          "description": "The specific acitvity information to be used for filtering the Look-up.",
          "$ref": "#/definitions/activityList"
        },
        "address": {
          "description": "Detailed Address information for the customer.",
          "$ref": "#/definitions/addressType"
        },
        "hotelId": {
          "description": "Hotel Code, It is used to filter hotel specific children to this specific hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "personName": {
          "description": "Detailed name information for the customer.",
          "$ref": "#/definitions/personNameType"
        },
        "profileId": {
          "description": "ProfileID associated with the Activity under lookup.",
          "$ref": "#/definitions/uniqueIDListType"
        }
      }
    },
    "fixedChargeDetailType": {
      "description": "Fixed charge amount could be specified by flat fee or be a percentage of the rate amount.",
      "type": "object",
      "properties": {
        "article": {
          "description": "Holds related article code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "chargeAmount": {
          "description": "Price of the product.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "Percentage of the rate amount.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "quantity": {
          "description": "Quantity of the product.",
          "type": "integer"
        },
        "roomNights": {
          "description": "Holds number of comp or cash room night to allocate.",
          "type": "integer"
        },
        "supplement": {
          "description": "Additional information regarding the fixed charge.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transaction": {
          "description": "Transaction code and description of a fixed charge.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "fixedChargeFrequencyType": {
      "description": "Yearly.",
      "type": "string",
      "enum": [
        "O",
        "D",
        "W",
        "M",
        "Q",
        "Y"
      ]
    },
    "fixedChargeScheduleType": {
      "description": "Holds schedule of fixed charge.",
      "type": "object",
      "properties": {
        "dateToExecute": {
          "description": "Date of when to execute yearly fixed charge. Applicable when frequency is Yearly.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "dayToExecute": {
          "description": "Day of when to execute fixed charge. Applicable when frequency is Daily or Weekly.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency of a fixed charge.",
          "$ref": "#/definitions/fixedChargeFrequencyType"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "fixedChargeType": {
      "description": "Holds fixed charge information.",
      "type": "object",
      "properties": {
        "charge": {
          "description": "Holds specific details of fixed charge.",
          "$ref": "#/definitions/fixedChargeDetailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "schedule": {
          "description": "Holds schedule of fixed charge.",
          "$ref": "#/definitions/fixedChargeScheduleType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "fixedChargesType": {
      "description": "Holds fixed charge detail.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fixedChargeType"
      }
    },
    "floorPlanRoomGuestType": {
      "type": "object",
      "properties": {
        "arrival": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "confirmationNo": {
          "type": "string"
        },
        "departure": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "shareID": {
          "type": "string"
        }
      }
    },
    "floorPlanRoomType": {
      "description": "This type represents the primary room attributes.",
      "type": "object",
      "properties": {
        "accessible": {
          "description": "Indicates whether the room is accessibility compliant.",
          "type": "boolean"
        },
        "attendant": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/currentServicingAttendantType"
          }
        },
        "building": {
          "description": "Building associated with the room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "componentRoomNumber": {
          "description": "This flag indicates component room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "componentRoomNumbers": {
          "description": "List of component room numbers.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "componentRooms": {
          "description": "This flag indicates component rooms.",
          "$ref": "#/definitions/roomRoomsType"
        },
        "connectingRooms": {
          "description": "This flag indicates connecting rooms.",
          "$ref": "#/definitions/roomRoomsType"
        },
        "description": {
          "description": "Description of the room.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "discrepancy": {
          "description": "Identifies the room discrepancy information.",
          "$ref": "#/definitions/roomDiscrepanciesType"
        },
        "floor": {
          "description": "Floor of the Room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "floorDescription": {
          "description": "Description for the Floor of the Room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "guests": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/floorPlanRoomGuestType"
          }
        },
        "hold": {
          "description": "Hold attributes if any.",
          "$ref": "#/definitions/roomHoldType"
        },
        "housekeeping": {
          "description": "Identifies the Housekeeping information..",
          "$ref": "#/definitions/housekeepingType"
        },
        "meetingRoom": {
          "description": "Indicates whether the room is a Meeting Room",
          "type": "boolean"
        },
        "outOfOrder": {
          "description": "Identifies the room Out of Order/Out of Service information.",
          "$ref": "#/definitions/roomsOutOfOrderType"
        },
        "resvInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationShortInfoType"
          }
        },
        "roomAssignmentRating": {
          "description": "Assignment Rating associated with the room.",
          "$ref": "#/definitions/ratePlanRatingType"
        },
        "roomDescription": {
          "description": "Detail Long Description Of The Room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomFeatures": {
          "description": "Room Features for the room.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "roomId": {
          "description": "Code of the room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomSection": {
          "description": "Room sections of the room.",
          "$ref": "#/definitions/roomSectionType"
        },
        "roomType": {
          "description": "Room type basic information of the room.",
          "$ref": "#/definitions/roomTypeShortInfoType"
        },
        "sitePlanSection": {
          "description": "Identifies the site plan location of the room.",
          "$ref": "#/definitions/sitePlanSectionType"
        },
        "smokingPreference": {
          "description": "This indicates room smoking preference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "smokingPreferenceDescription": {
          "description": "This indicates the description of the room smoking preference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "turndownInfo": {
          "$ref": "#/definitions/turndownInfoType"
        }
      }
    },
    "floorPlanType": {
      "description": "Floor information containing collection of Room records that contain Housekeeping and Out Of Order information.",
      "type": "object",
      "properties": {
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rooms": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/floorPlanRoomType"
          }
        },
        "siteCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "siteDescription": {
          "type": "string"
        }
      }
    },
    "floorPlans": {
      "description": "Response object to the Fetch Reservation Request operation. Based on the criteria, reservation information is returned.",
      "type": "object",
      "properties": {
        "floorPlansDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/floorPlanType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioShortInfoType": {
      "description": "This type contains information of generated bills.",
      "type": "object",
      "properties": {
        "autoGenerated": {
          "description": "Flag to indicate if the folio is auto generated or not.",
          "type": "boolean"
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioNo": {
          "description": "Folio No of the bill generated.",
          "type": "number"
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioType": {
          "description": "Folio type of the bill generated.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "folioView": {
          "description": "The folio window where the settlement is applied.",
          "type": "integer"
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        }
      }
    },
    "folioStatusType": {
      "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
      "type": "string",
      "enum": [
        "Deposit",
        "Void",
        "Ok",
        "Zero",
        "Compress",
        "Converted",
        "Internal"
      ]
    },
    "folioTextsType": {
      "description": "This stores the description for the type of tax calculation especially with tax exemption, etc.",
      "type": "array",
      "maxItems": 2,
      "items": {
        "type": "object",
        "properties": {
          "row": {
            "description": "Row number of the additional text.",
            "type": "integer"
          },
          "text": {
            "description": "Additional text field to display on the folio.",
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          }
        }
      }
    },
    "foliosShortInfoType": {
      "description": "This type contains a list of generated bills for a reservation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioShortInfoType"
      }
    },
    "foreignExchangeType": {
      "description": "Foreign Exchange info.",
      "type": "object",
      "properties": {
        "effectiveDate": {
          "description": "Effective Exchange date for the foreign currency posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "Exchange Type for the postings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "formattedTextTextType": {
      "description": "Provides text and indicates whether it is formatted or not.",
      "type": "object",
      "properties": {
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "frontOfficeRoomStatusType": {
      "description": "Simple type for front office room status instructions to be used in requests for fetching housekeeping rooms. Valid values are Vacant and Occupied.",
      "type": "string",
      "enum": [
        "Vacant",
        "Occupied"
      ]
    },
    "functionArgumentType": {
      "description": "This type provided details of a function argument and the value it holds.",
      "type": "object",
      "properties": {
        "dataType": {
          "description": "Specifies the datatype of the function argument.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "name": {
          "description": "Specifies the name of the function argument.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "position": {
          "description": "Specifies the position of the function argument in the argument list.",
          "type": "integer"
        },
        "required": {
          "description": "Argument of the function mandatory or not.",
          "type": "boolean"
        },
        "value": {
          "description": "Specifies the value held by the function argument.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "functionArgumentsType": {
      "description": "Collection of function arguments and their corresponding values.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/functionArgumentType"
      }
    },
    "futureListType": {
      "description": "A collection of reservation history details attached to Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : Future reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "gdsNegotiatedInfoType": {
      "description": "This provides information for a channel negotiated rate.",
      "type": "object",
      "properties": {
        "accessCode": {
          "description": "The GDS negotiated rate code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "inactive": {
          "description": "The GDS Negotiated Rate is inactive or not",
          "type": "boolean"
        },
        "order": {
          "description": "The sell order.",
          "type": "integer"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "gdsNegotiatedType": {
      "description": "This holds a list of GdsNegotiatedInfoType.",
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "description": "Booking Channel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelRatePlanCode": {
          "description": "Channel Room Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "gdsNegotiatedInfoList": {
          "description": "List of channel negotiated rates for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/gdsNegotiatedInfoType"
          }
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "givenNameType": {
      "description": "Given name, first name or names",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "guestCountsType": {
      "description": "A collection of GuestCount by age group.",
      "type": "object",
      "properties": {
        "adults": {
          "description": "Defines the number of Adults.",
          "type": "integer"
        },
        "childAges": {
          "description": "Defines Children's Ages. Number of children ages mentioned may mot match with children counts.",
          "$ref": "#/definitions/childAgesType"
        },
        "childBuckets": {
          "description": "Defines children counts with Age Qualifying Group(Child Bucket#1) classification.",
          "$ref": "#/definitions/childBucketsType"
        },
        "children": {
          "description": "Defines the number of Children.",
          "type": "integer"
        }
      }
    },
    "guestHousekeepingServiceRequestType": {
      "description": "Possible values for the Guest Service Status.",
      "type": "string",
      "enum": [
        "DoNotDisturb",
        "MakeUpRoom",
        "NoStatusSelected"
      ]
    },
    "guestLastStayInfoType": {
      "description": "Contains last stay related details of the guest.",
      "type": "object",
      "properties": {
        "lastStayDate": {
          "description": "Guest's last stay date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastStayRate": {
          "description": "The Rate amount of the guest's last stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "lastStayRoom": {
          "description": "Room Number where the guest stayed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "totalStay": {
          "description": "The total number of previous stay of the guest.",
          "type": "integer"
        }
      }
    },
    "guestMessageType": {
      "description": "Holds the Message information for a Reservation",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "delivery": {
          "description": "Holds the Delivery Method Information",
          "$ref": "#/definitions/messageDeliveryType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "message": {
          "description": "Holds the Message Information",
          "$ref": "#/definitions/messageType"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "guestMessagesType": {
      "description": "Holds the Message Information",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/guestMessageType"
      }
    },
    "hSKAttendantTimeLogsType": {
      "description": "Holds the information for the task sheet.",
      "type": "object",
      "properties": {
        "endRoomStatus": {
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "endTime": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "startRoomStatus": {
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "startTime": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "hSKStatCodeType": {
      "description": "Supported housekeeping statistical codes.",
      "type": "string",
      "enum": [
        "ApprovedCompPostings",
        "StagedCompPostings",
        "DeclinedCompPostings",
        "CompRoutingInstructionsRequests",
        "TotalPhysicalRooms",
        "TotalRoomsToSell",
        "TotalOutOfOrder",
        "TotalOutOfService",
        "TotalRevenue",
        "PercentRoomsOccupied",
        "StayoverRooms",
        "StayoverPersons",
        "StayoverVIP",
        "DeparturesExpectedRooms",
        "DeparturesExpectedPersons",
        "DeparturesExpectedVIP",
        "DeparturesActualRooms",
        "DeparturesActualPersons",
        "DeparturesActualVIP",
        "DeparturesInLastHour",
        "ArrivalsInLastHour",
        "ArrivalsTotal",
        "ArrivalsExpectedRooms",
        "ArrivalsExpectedPersons",
        "ArrivalsExpectedVIP",
        "ArrivalsExpectedRoomsMadeToday",
        "ArrivalsExpectedPersonsMadeToday",
        "ArrivalsExpectedVIPMadeToday",
        "ArrivalsActualRooms",
        "ArrivalsActualPersons",
        "ArrivalsActualVIP",
        "ExtendedStaysRooms",
        "ExtendedStaysPersons",
        "ExtendedStaysVIP",
        "DeparturesTotal",
        "EarlyDeparturesRooms",
        "EarlyDeparturesPersons",
        "EarlyDeparturesVIP",
        "DayUseRooms",
        "DayUsePersons",
        "DayUseVIP",
        "WalkInRooms",
        "WalkInPersons",
        "WalkInVIP",
        "CanceledOnArrivalRooms",
        "CanceledOnArrivalPersons",
        "CanceledOnArrivalVIP",
        "ComplimentaryArrivalRooms",
        "ComplimentaryArrivalPersons",
        "ComplimentaryArrivalVIP",
        "ComplimentaryStayoverRooms",
        "ComplimentaryStayoverPersons",
        "ComplimentaryStayoverVIP",
        "ComplimentaryDepartureRooms",
        "ComplimentaryDeparturePersons",
        "ComplimentaryDepartureVIP",
        "HouseUseArrivalVIP",
        "HouseUseStayoverRooms",
        "HouseUseStayoverPersons",
        "HouseUseStayoverVIP",
        "HouseUseDepartureRooms",
        "HouseUseDeparturePersons",
        "HouseUseDepartureVIP",
        "MinAvailableTonightRooms",
        "MaxOccupiedTonightRooms",
        "MaxOccupiedTonightPersons",
        "MaxOccupiedTonightVIP",
        "MaxPercentageOccupiedTonightRooms",
        "BlocksNotPickedUp",
        "IndividualRooms",
        "IndividualPersons",
        "IndividualVIP",
        "GroupAndBlockRooms",
        "GroupAndBlockPersons",
        "GroupAndBlockVIP",
        "RoomRevenue",
        "AverageRoomRevenue",
        "InspectedRooms",
        "InspectedVacant",
        "InspectedAssigned",
        "InspectedOccupied",
        "CleanedRooms",
        "CleanVacant",
        "CleanAssigned",
        "CleanOccupied",
        "DirtyVacant",
        "DirtyAssigned",
        "DirtyOccupied",
        "PickupVacant",
        "PickupAssigned",
        "PickupOccupied",
        "OutOfOrderVacant",
        "OutOfOrderAssigned",
        "OutOfOrderOccupied",
        "OutOfServiceVacant",
        "OutOfServiceAssigned",
        "OutOfServiceOccupied",
        "QueueRooms",
        "TurndownRequired",
        "TurndownNotRequired",
        "TurndownCompletedRequired",
        "AdultsInHouse",
        "ChildrenInHouse",
        "AdultsExpectedCheckedOut",
        "ChildrenExpectedCheckedOut",
        "AdultsDeparted",
        "ChildrenDeparted",
        "InHouseRooms",
        "InHouse",
        "MaxOccupancyPercentage",
        "Stayover",
        "TotalRoomsReserved",
        "RevPar",
        "SkipRooms",
        "SleepRooms",
        "HouseUseArrivalRooms",
        "HouseUseArrivalPersons",
        "AverageCheckInTime",
        "CurrentAveWaitTime",
        "CheckedInsTotal",
        "ExpectedCheckInsTotal",
        "CheckedOutsTotal",
        "ExpectedCheckOutsTotal",
        "ScheduledCheckOutsTotal",
        "RoomMaintenanceResolvedTotal",
        "RoomMaintenanceUnResolvedTotal",
        "PreRegisteredTotal",
        "VIPPreRegisteredTotal",
        "OpenFolioTotal",
        "TurndownTotal",
        "VIPTurndownTotal",
        "VIPGuestsArriving",
        "VIPGuestsDeparting",
        "VIPGuestsTotal",
        "IndividualAdvanceCheckedInCurrent",
        "BlockAdvanceCheckedInCurrent",
        "IndividualAdvanceCheckedInInhouse",
        "BlockAdvanceCheckedInInhouse",
        "IndividualAdvanceCheckedInTotal",
        "BlockAdvanceCheckedInTotal",
        "InHouseBlocksTotal",
        "CancellationsTotal",
        "NewReservationsTotal",
        "ArrivalResvs",
        "ArrivalVIPResvs",
        "ArrivalMemberResvs",
        "ArrivalUnallocResvs",
        "ArrivalManualAssgnResvs",
        "ArrivalAIAssgnResvs",
        "ArrivalAIUpgResvs",
        "ArrivalAIAssgnVIPResvs",
        "ArrivalAIAssgnMemberResvs",
        "ArrivalAIAssgnOverridden"
      ]
    },
    "hSKStatReportCodeType": {
      "description": "Supported Housekeeping report codes.",
      "type": "string",
      "enum": [
        "HouseSummary",
        "HouseSummaryMonthToDate",
        "HouseSummaryYearToDate",
        "ReservationActivity",
        "ReservationActivityDaily",
        "ReservationActivityMonthToDate",
        "ReservationActivityYearToDate",
        "ComplimentaryOrHouseUse",
        "DailyProjection",
        "RoomStatus",
        "LastHourStatus",
        "Turndown",
        "InHouse",
        "CheckIns",
        "CheckOuts",
        "AvailableRooms",
        "RoomMaintenance",
        "ReservationStatistics",
        "VIPGuests",
        "AdvanceCheckIn",
        "BlockArrivals",
        "ReservationsCancellationsToday",
        "AIRoomAssignment",
        "CompRouting"
      ]
    },
    "hSKStatType": {
      "description": "Since the statistical value can be represented in different measure of units, this element will provide a flexible definition for the supported Opera9 statistical units.",
      "type": "object",
      "properties": {
        "category": {
          "description": "Statistical unit category.",
          "$ref": "#/definitions/statUnitCategoryType"
        },
        "code": {
          "$ref": "#/definitions/hSKStatCodeType"
        },
        "value": {
          "description": "Statistical value.",
          "type": "number"
        }
      }
    },
    "hSKTaskSheetDetailsInfoType": {
      "description": "Holds the task sheet statistics details information.",
      "type": "object",
      "properties": {
        "rooms": {
          "description": "Details of the room which is part of the Task Sheet. The room details will be returned when the request for IncludeTaskSheetDetails(flag in the search type) is true.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "description": "This type represents the primary room attributes.",
            "type": "object",
            "properties": {
              "accessible": {
                "description": "Indicates whether the room is accessibility compliant.",
                "type": "boolean"
              },
              "actualTimeInMins": {
                "description": "The actual time spent by the attendant when doing a service to the room.",
                "type": "integer"
              },
              "attendant": {
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "$ref": "#/definitions/currentServicingAttendantType"
                }
              },
              "attendantTimeEntriesInfo": {
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "$ref": "#/definitions/hSKAttendantTimeLogsType"
                }
              },
              "building": {
                "description": "Building associated with the room.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "cleaningSequence": {
                "description": "The sequence for cleaning this room in the task sheet. This would apply only for Pickup and Dirty rooms.",
                "type": "integer"
              },
              "componentRoomNumber": {
                "description": "This flag indicates component room.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "componentRoomNumbers": {
                "description": "List of component room numbers.",
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                }
              },
              "componentRooms": {
                "description": "This flag indicates component rooms.",
                "$ref": "#/definitions/roomRoomsType"
              },
              "connectingRooms": {
                "description": "This flag indicates connecting rooms.",
                "$ref": "#/definitions/roomRoomsType"
              },
              "defaultSequence": {
                "description": "The sequence for this room from configuration.",
                "type": "integer"
              },
              "description": {
                "description": "Description of the room.",
                "$ref": "#/definitions/translationTextType2000"
              },
              "discrepancy": {
                "description": "Identifies the room discrepancy information.",
                "$ref": "#/definitions/roomDiscrepanciesType"
              },
              "floor": {
                "description": "Floor of the Room.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "floorDescription": {
                "description": "Description for the Floor of the Room.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "hasPriority": {
                "description": "The priority for this room.",
                "type": "boolean"
              },
              "hold": {
                "description": "Hold attributes if any.",
                "$ref": "#/definitions/roomHoldType"
              },
              "housekeeping": {
                "description": "Identifies the Housekeeping information..",
                "$ref": "#/definitions/housekeepingType"
              },
              "instructions": {
                "description": "Task Sheet instructions at the room level.",
                "type": "string",
                "maxLength": 2000,
                "minLength": 0
              },
              "meetingRoom": {
                "description": "Indicates whether the room is a Meeting Room",
                "type": "boolean"
              },
              "outOfOrder": {
                "description": "Identifies the room Out of Order/Out of Service information.",
                "$ref": "#/definitions/roomsOutOfOrderType"
              },
              "reservationInfo": {
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "$ref": "#/definitions/reservationInfoType"
                }
              },
              "resvInfo": {
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "$ref": "#/definitions/reservationShortInfoType"
                }
              },
              "roomAssignmentRating": {
                "description": "Assignment Rating associated with the room.",
                "$ref": "#/definitions/ratePlanRatingType"
              },
              "roomDescription": {
                "description": "Detail Long Description Of The Room.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "roomFeatures": {
                "description": "Room Features for the room.",
                "$ref": "#/definitions/roomFeaturesType"
              },
              "roomId": {
                "description": "Code of the room.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "roomSection": {
                "description": "Room sections of the room.",
                "$ref": "#/definitions/roomSectionType"
              },
              "roomSkipCount": {
                "description": "The number of skip count for that room.",
                "type": "integer"
              },
              "roomType": {
                "description": "Room type basic information of the room.",
                "$ref": "#/definitions/roomTypeShortInfoType"
              },
              "servicingInfo": {
                "description": "Information regarding the current servicing of the room.",
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "$ref": "#/definitions/currentServicingAttendantType"
                }
              },
              "sitePlanSection": {
                "description": "Identifies the site plan location of the room.",
                "$ref": "#/definitions/sitePlanSectionType"
              },
              "smokingPreference": {
                "description": "This indicates room smoking preference.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "smokingPreferenceDescription": {
                "description": "This indicates the description of the room smoking preference.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "totalCredits": {
                "description": "Total credits for this room.",
                "type": "integer"
              },
              "turndownInfo": {
                "$ref": "#/definitions/turndownInfoType"
              },
              "wakeUpTime": {
                "description": "The wake up time of the current date",
                "type": "string",
                "format": "date",
                "maxLength": 8
              }
            }
          }
        }
      }
    },
    "hSKTaskSheetInfoType": {
      "description": "Holds the information for the task sheet.",
      "type": "object",
      "properties": {
        "assignedTasks": {
          "$ref": "#/definitions/assignedTasksType"
        },
        "attendant": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "averageActualTimeInSecs": {
          "type": "integer"
        },
        "roomSummary": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "housekeepingRoomStatusType": {
                "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
                "type": "string",
                "enum": [
                  "Clean",
                  "Dirty",
                  "Pickup",
                  "Inspected",
                  "OutOfOrder",
                  "OutOfService"
                ]
              },
              "totalCount": {
                "type": "integer"
              }
            }
          }
        },
        "taskDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "taskSeqNo": {
          "type": "integer"
        },
        "taskSheetDetails": {
          "$ref": "#/definitions/hSKTaskSheetDetailsInfoType"
        },
        "taskSheetNo": {
          "type": "integer"
        },
        "taskSheetType": {
          "$ref": "#/definitions/taskSheetType"
        },
        "totalCompletedCredits": {
          "type": "integer"
        },
        "totalTaskCredits": {
          "type": "integer"
        }
      }
    },
    "hSKTaskSheetStatisticsInfoType": {
      "description": "Holds the task sheet statistics information.",
      "type": "object",
      "properties": {
        "masterInfoList": {
          "description": "Refer to Generic common types document",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "taskSheetStatisticsInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hSKTaskSheetInfoType"
          }
        }
      }
    },
    "historyListType": {
      "description": "A collection of reservation history details attached to Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "holdRooms": {
      "description": "Request to place rooms on hold.",
      "type": "object",
      "properties": {
        "holdRoomsDetails": {
          "description": "List of rooms, hold reason, and comments.",
          "$ref": "#/definitions/roomsHoldsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "overrideRoomHold": {
          "description": "If trying to hold a room, which is held by a different user, then this flag will allow the current request to override that hold.",
          "type": "boolean"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelInterfaceStatusType": {
      "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
      "type": "string",
      "enum": [
        "Stopped",
        "Running",
        "Waiting",
        "StopInitiated",
        "StartInitiated",
        "RebootInitiated",
        "Other"
      ]
    },
    "hotelInterfaceType": {
      "type": "object",
      "properties": {
        "activeFlag": {
          "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "interfaceName": {
          "description": "Name of the Hotel Interface",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "interfaceType": {
          "description": "Three letter code for each interface that identifies the interface.",
          "$ref": "#/definitions/hotelInterfaceTypeType"
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "machineName": {
          "description": "Unique machine name of the running IFC.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "status": {
          "description": "The current status of the IFC.",
          "$ref": "#/definitions/hotelInterfaceStatusType"
        }
      }
    },
    "hotelInterfaceTypeType": {
      "description": "XML Posting Interface",
      "type": "string",
      "enum": [
        "Bms",
        "Cas",
        "Ccw",
        "Dls",
        "Eft",
        "Exp",
        "Mak",
        "Mbs",
        "Msc",
        "Pbx",
        "Pos",
        "Svs",
        "Tik",
        "Vid",
        "Vms",
        "Www",
        "Xml"
      ]
    },
    "hotelReservationTraceType": {
      "description": "Extended Trace object to hold information for a reservation.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "departmentId": {
          "description": "Indicates the Department code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationId": {
          "description": "Reservation ID of the reservation for which the traces are to be retrieved.",
          "$ref": "#/definitions/reservationId"
        },
        "resolveInfo": {
          "description": "Information regarding the status of the trace",
          "$ref": "#/definitions/traceResolveType"
        },
        "timeInfo": {
          "description": "Date of the trace.",
          "$ref": "#/definitions/traceTimeInfoType"
        },
        "traceText": {
          "description": "The information this trace contains.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "hotelReservationTracesType": {
      "description": "List of Reservation Traces.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelReservationTraceType"
      }
    },
    "hotelReservationType": {
      "description": "The Reservation class contains the current reservation being created or altered.",
      "type": "object",
      "properties": {
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "accessRestrictionMessage": {
          "description": "Configurable Access Restriction Message for Excluded Block or Rate Code.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "additionalGuestInfo": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "$ref": "#/definitions/resGuestAdditionalInfoType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "alerts": {
          "description": "List of reservation alerts.",
          "$ref": "#/definitions/alertsType"
        },
        "allowAutoCheckin": {
          "description": "Flag to allow auto checkin",
          "type": "boolean"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "allowPreRegistration": {
          "description": "Flag containing true or false value for reservation to be eligible for prior check in by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile check in yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowedActions": {
          "description": "Collection of allowed actions for the reservation.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "associatedReservations": {
          "description": "Information regarding associated reservations.",
          "$ref": "#/definitions/associatedResType"
        },
        "attachments": {
          "description": "Collection of attachments available for that reservation",
          "$ref": "#/definitions/attachmentsType"
        },
        "autoBorrowFromHouse": {
          "description": "This flag will force to borrow from house if borrow required for number of rooms requested, this will only applicable when reservation is attached to a Block.",
          "type": "boolean"
        },
        "callHistory": {
          "description": "List of reservation calls.",
          "$ref": "#/definitions/callHistoryType"
        },
        "cancellation": {
          "description": "Information regarding why reservation has been/was cancelled. This could hold information as history even if reservation is no more in in Cancelled status.",
          "type": "object",
          "properties": {
            "cancellationNo": {
              "description": "Cancellation Number given when reservation was last cancelled.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "code": {
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "description": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          }
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "catering": {
          "description": "Catering event information if reservation is associated with the catering event.",
          "$ref": "#/definitions/cateringResInfoType"
        },
        "chargeCardNumber": {
          "description": "This attribute represents Hotel charge card number. This number is generated automatically in OPERA when a reservation is created in OPERA. It is part of a functionality that provide the guest with the convenience of placing all their charges directly on their reservation folio.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "comments": {
          "description": "List of Notes for the Guest related to the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "compAuthorizer": {
          "description": "Reservation Comp Authorizer.",
          "$ref": "#/definitions/compAuthorizerInfoType"
        },
        "computedReservationStatus": {
          "description": "Indicates the Computed status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "confirmationLetters": {
          "description": "List of reservation confirmation letters.",
          "$ref": "#/definitions/confirmationsType"
        },
        "createBusinessDate": {
          "description": "Business Date when the reservation was created.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "customChargeExemptionDetails": {
          "description": "List of Custom Charge Exemptions attached to the reservation.",
          "$ref": "#/definitions/customChargeExemptionsType"
        },
        "customNameValueDetail": {
          "description": "List of Custom Name Value Information attached to the reservation.",
          "$ref": "#/definitions/nameValueDetailType"
        },
        "customReference": {
          "description": "Custom Reference to identify reservation.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "displayColor": {
          "description": "The color to display this reservation on room grid displays.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "displayColorDetails": {
          "description": "Information of reservation display color, determined based on OPERA parameter RESERVATION_COLOR_DEFINITION ",
          "$ref": "#/definitions/reservationDisplayColorInfoType"
        },
        "eCertificates": {
          "description": "List of ECertificates attached to the reservation.",
          "$ref": "#/definitions/reservationECertificatesType"
        },
        "eCoupons": {
          "description": "List of eCoupons.",
          "$ref": "#/definitions/eCouponsType"
        },
        "extSystemSync": {
          "type": "boolean"
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "fixedCharges": {
          "description": "List of reservation fixed charges.",
          "$ref": "#/definitions/fixedChargesType"
        },
        "folios": {
          "description": "This element returns any automatically generated folios during check-in, based on the Fetch Instruction \"AutoFolios\". When the parameter \"Auto Generate Credit Bill for Deposit upon Check In\" is enabled, during check-in credit bills are automatically generated for the deposits. The generated credit bill details are returned so that user can preview/print the folio. For some countries like Portugal, it is mandatory to print the folio and hence this information is needed",
          "$ref": "#/definitions/foliosShortInfoType"
        },
        "guestComments": {
          "description": "List of Notes for the Guest related to the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "guestMemberships": {
          "description": "List of Memberships for the Guest related to the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/membershipType"
          }
        },
        "guestMessages": {
          "description": "List of Messages.",
          "$ref": "#/definitions/guestMessagesType"
        },
        "hasOpenFolio": {
          "type": "boolean"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "housekeeping": {
          "description": "Holds rooms housekeeping information.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "inventoryItems": {
          "description": "A collection of inventory items attached to a reservation.",
          "$ref": "#/definitions/resInventoryItemsType"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "linkedReservation": {
          "description": "Reservations related to the current Reservation.",
          "$ref": "#/definitions/linkedReservationsInfoType"
        },
        "locators": {
          "description": "Collection of Locators available for that reservation",
          "$ref": "#/definitions/reservationLocatorsType"
        },
        "lockHandle": {
          "description": "An id representing the record lock for this reservation. When passed, update operation will verify that this lock is still valid.",
          "type": "number"
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this reservation as recently accessed.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Flag containing true or false value to determine if the guest has opted for communications pertaining to this reservation.Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is marked for communication. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "overrideBlockRestriction": {
          "type": "boolean"
        },
        "overrideExternalChecks": {
          "description": "Forcefully override the create/update action on the Reservation. For real-time CRS interfaces, this element is used as force selling indicator in case of Create or Update Reservation",
          "type": "boolean"
        },
        "overrideInstructions": {
          "description": "List of overrides done for the reservation.",
          "$ref": "#/definitions/overrideInstructionsType"
        },
        "overrideInventoryCheck": {
          "description": "Indicates to Override the Room Inventory Check if applicable.",
          "type": "boolean"
        },
        "overrideOutOfServiceCheck": {
          "description": "Indicates to Override the Room Out Of Service Check if applicable.",
          "type": "boolean"
        },
        "party": {
          "description": "Party/PartyCode when reservation is part of a party(a small group).",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "preRegistered": {
          "description": "Is the reservation pre-registered.",
          "type": "boolean"
        },
        "preferenceCollection": {
          "description": "Collection of reservation preferences.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceTypeType"
          }
        },
        "prepaidCards": {
          "description": "Collection of Prepaid Cards available for that reservation",
          "$ref": "#/definitions/prepaidCardsType"
        },
        "primaryEnrollmentChain": {
          "description": "Name of the Chain for the primary enrollment",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "primaryEnrollmentResort": {
          "description": "Name Of the Resort/Hotel for the primary enrollment",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "printRate": {
          "description": "Indicates whether to show the rate or not on a printed document which includes the rate.",
          "type": "boolean"
        },
        "profileAwards": {
          "description": "Collection of profile awards available for that reservation",
          "$ref": "#/definitions/awardsType"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "reinstateDate": {
          "description": "Business Date when the reservation was last reinstated.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationActivities": {
          "description": "Collection of Reservation Activities available for that reservation",
          "$ref": "#/definitions/activityLookUpList"
        },
        "reservationAwards": {
          "description": "Collection of Awards,Certificates for the guest profile.",
          "$ref": "#/definitions/awardsType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "reservationGuests": {
          "description": "Collection of guests associated with the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/resGuestType"
          }
        },
        "reservationIdList": {
          "description": "Used to provide PMS and/or CRS identifiers.",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "reservationMemberships": {
          "description": "List of reservation memberships.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationMembershipType"
          }
        },
        "reservationPackages": {
          "description": "A Service object represents a non-room product provided to guests. Service products may have associated inventory and charges.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationPackageType"
          }
        },
        "reservationPaymentMethods": {
          "description": "A collection of Payment Method objects.",
          "$ref": "#/definitions/reservationPaymentMethodsType"
        },
        "reservationPolicies": {
          "description": "A collection of Cancellation Penalties objects.",
          "$ref": "#/definitions/reservationPoliciesType"
        },
        "reservationProfiles": {
          "description": "Collection of guests associated with the reservation.",
          "type": "object",
          "properties": {
            "commissionPayoutTo": {
              "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
              "$ref": "#/definitions/commissionPayoutToType"
            },
            "reservationProfile": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationProfileType"
              }
            }
          }
        },
        "reservationStatus": {
          "description": "Indicates the Actual status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "roomStay": {
          "description": "Room stays information.",
          "$ref": "#/definitions/roomStayType"
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "routingInstructions": {
          "description": "Set of Routing Instructions.",
          "$ref": "#/definitions/routingInfoListType"
        },
        "scheduledActivities": {
          "description": "Collection of Scheduled Activities available for that reservation",
          "$ref": "#/definitions/activityLookUpList"
        },
        "serviceRequests": {
          "description": "Collection of Service Requests available for that reservation",
          "$ref": "#/definitions/serviceRequests"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "shares": {
          "description": "Collection of share reservation available for that reservation",
          "$ref": "#/definitions/hotelReservationsType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "statisticalClassification": {
          "description": "Catering event information if reservation is associated with the catering event.",
          "$ref": "#/definitions/resStatClassificationType"
        },
        "tickets": {
          "description": "List of Reservation Tickets.",
          "$ref": "#/definitions/ticketsType"
        },
        "traces": {
          "description": "List of reservation Traces.",
          "$ref": "#/definitions/hotelReservationTracesType"
        },
        "trackItItems": {
          "description": "Collection of TrackIt Items available for that reservation",
          "$ref": "#/definitions/trackItItemsType"
        },
        "transactionDiversions": {
          "description": "List of transaction diversions attached to the reservation.",
          "type": "object",
          "properties": {
            "actionType": {
              "type": "string",
              "maxLength": 2000
            },
            "transactionDiversions": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationTransactionDiversionsType"
              }
            }
          }
        },
        "upgradeEligible": {
          "description": "Indicates whether the reservation is eligible for upgrade.",
          "type": "boolean"
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is no more in Waitlist status.",
          "$ref": "#/definitions/waitlistResType"
        },
        "walkIn": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "webRegistrationCards": {
          "description": "Collection of Web Registration Cards available for that reservation",
          "$ref": "#/definitions/attachmentsType"
        }
      }
    },
    "hotelReservationsIDType": {
      "description": "List of Reservation Unique identifiers to represent multiple reservations with each reservation's one unique id.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "All reservation ids in the list must belong to this property.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationId": {
          "description": "Unique identifier for a reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationId"
          }
        }
      }
    },
    "hotelReservationsType": {
      "description": "A collection of Reservation objects and Unique IDs of Reservation.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservation": {
          "description": "A collection of Reservations.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelReservationType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "hotelRooms": {
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "hotelRoomsDetails": {
          "description": "Hotel rooms response based on criteria request.",
          "$ref": "#/definitions/hotelRoomsType"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelRoomsOrderBy": {
      "description": "This type is used to support various sortings for available rooms search results.",
      "type": "string",
      "enum": [
        "ForecastRotationPoints"
      ]
    },
    "hotelRoomsType": {
      "description": "Collection of Room record that contain Housekeeping and Out Of Order information.",
      "type": "object",
      "properties": {
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "room": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomType"
          }
        }
      }
    },
    "housekeepingRoomReservationStatusType": {
      "description": "Room Reservation status types used in housekeeping. These may be different from the actual reservation statuses as these relate to the current reservation for the room.",
      "type": "string",
      "enum": [
        "Arrival",
        "Arrived",
        "DayUse",
        "DueOut",
        "Departed",
        "NotReserved",
        "StayOver"
      ]
    },
    "housekeepingRoomStatusType": {
      "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
      "type": "string",
      "enum": [
        "Clean",
        "Dirty",
        "Pickup",
        "Inspected",
        "OutOfOrder",
        "OutOfService"
      ]
    },
    "housekeepingSectionType": {
      "description": "Information regarding Housekeeping Sections.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The Housekeeping Section Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Section.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property where this section is defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates if the Section Code is active.",
          "type": "boolean"
        },
        "roomCredits": {
          "description": "Number of housekeeping credits. This is auto populated while creating/fetching record.",
          "type": "integer"
        },
        "rooms": {
          "description": "Rooms count for this section code. This is auto populated while creating/fetching record.",
          "type": "integer"
        },
        "sectionGroup": {
          "description": "Housekeeping Section Group.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sequence": {
          "description": "Display sequence when task assignment is automatically broken out by Section Group.",
          "type": "integer"
        },
        "targetCredits": {
          "description": "Target Credit for each task sheet created for this section when auto task assignment is broken out by section.",
          "type": "integer"
        }
      }
    },
    "housekeepingTaskCodeType": {
      "description": "Information related to a Task Code. Task Codes are used to generate task sheets in Rooms Management.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The Code for the task.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Task Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "facilityDepartureTask": {
          "description": "Indicates if this task code is the default departure task for Facility Tasks. This requires",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property where this task code is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "instructions": {
          "description": "Instructions for this Task Code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "sequence": {
          "description": "Ordering sequence for display.",
          "type": "integer"
        }
      }
    },
    "housekeepingType": {
      "description": "Identifies the Housekeeping information.",
      "type": "object",
      "properties": {
        "cleaningPriority": {
          "description": "Cleaning priority for the room, if a priority was set.",
          "$ref": "#/definitions/roomCleaningPriorityType"
        },
        "facilityTaskCode": {
          "description": "Facility task Code/ Task Code assigned to the room for the day.",
          "$ref": "#/definitions/codeListType"
        },
        "guestServiceRequest": {
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "roomCondition": {
          "description": "Condition of the room, if a condition was set.",
          "$ref": "#/definitions/roomConditionType"
        },
        "roomPersons": {
          "description": "The Room person information per the reservation and housekeeping.",
          "$ref": "#/definitions/roomPersonsType"
        },
        "roomStatus": {
          "description": "The Room status information per the reservation and housekeeping.",
          "$ref": "#/definitions/roomStatusType"
        }
      }
    },
    "iATAInfoType": {
      "description": "IATA Information of the profile.",
      "type": "object",
      "properties": {
        "iATACompany": {
          "description": "IATA Company Detail.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "iATAConsortia": {
          "description": "IATA Consortia.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "iATAValidationResult": {
          "description": "IATA Validation Result.",
          "type": "boolean"
        }
      }
    },
    "identificationInfoType": {
      "description": "Information on the identification of the customer.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "identification": {
          "description": "Detailed information on the identification of the customer.",
          "$ref": "#/definitions/identificationType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "identificationType": {
      "description": "Identification information of the customer.",
      "type": "object",
      "properties": {
        "expirationDate": {
          "description": "Expiration date of Identification.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "idNumber": {
          "description": "Identification Number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idNumberMasked": {
          "description": "Masked Identification Number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idType": {
          "description": "Identification Type. Eg Passport, Driving License etc.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "issuedCountry": {
          "description": "The country where Identification was issued.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "issuedDate": {
          "description": "Issued date of Identification.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "issuedPlace": {
          "description": "The place where Identification was issued.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "registeredProperty": {
          "description": "Property where the identification belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "imageSetType": {
      "description": "Represents on image set record.",
      "type": "object",
      "properties": {
        "chainCode": {
          "description": "The image set chain code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "The image set description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "The image set hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "imageOrder": {
          "description": "The image set order.",
          "type": "integer"
        },
        "imageSet": {
          "description": "The image set name.",
          "type": "string",
          "maxLength": 800,
          "minLength": 0
        },
        "imageStyle": {
          "description": "The image set enumerated style.",
          "$ref": "#/definitions/imageStyleType"
        },
        "imageType": {
          "description": "The image set type.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "imageURL": {
          "description": "The image set URL.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "sequenceId": {
          "description": "The image set sequence ID.",
          "type": "integer"
        },
        "website": {
          "description": "The image set website.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "imageStyleType": {
      "description": "An enumeration of image styles.",
      "type": "string",
      "enum": [
        "Full",
        "Thumbnail",
        "Icon",
        "Square",
        "Banner",
        "Button",
        "Lowres",
        "Highres"
      ]
    },
    "indicatorType": {
      "description": "Lamp indicator Type.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        },
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "indicatorsType": {
      "description": "Collection of lamp indicators.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "instanceLink": {
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "type": "object",
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ],
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "interfaceRightsStatusType": {
      "type": "object",
      "properties": {
        "category": {
          "description": "Category code of this interface right.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "description": {
          "description": "User defined description for an Interface Right.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "right": {
          "description": "Internal code for each allowed right of a Hotel Interface record.",
          "type": "integer"
        },
        "statusCode": {
          "description": "User defined code for an Interface Right.",
          "type": "string",
          "maxLength": 5,
          "minLength": 0
        }
      }
    },
    "itemInfoType": {
      "description": "Basic information regarding an Item.",
      "type": "object",
      "properties": {
        "availabilityPeriod": {
          "description": "Defines a Time period when the item is available.",
          "$ref": "#/definitions/timeWindowType"
        },
        "code": {
          "description": "Item Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "defaultDuration": {
          "description": "Define the default duration in days when booking the item.",
          "type": "integer"
        },
        "description": {
          "description": "Detail description of an item.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fixedCharge": {
          "description": "If true indicates that item has fixed charge when it is attached to a reservation.",
          "type": "boolean"
        },
        "itemHoldId": {
          "description": "ID reference for the hold Item",
          "type": "number"
        },
        "itemPool": {
          "description": "Indicates if it is an item pool. Not applicable for Item within the Item Pool.",
          "type": "boolean"
        },
        "name": {
          "description": "Name of an item.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "outsideStay": {
          "description": "If true indicates that item could be held outside of the reservation stay days.",
          "type": "boolean"
        },
        "quantity": {
          "description": "Quantity of hold Item",
          "type": "integer"
        },
        "requiredForBooking": {
          "description": "If true indicates that item is required for the reservation.",
          "type": "boolean"
        },
        "sellInEvent": {
          "description": "If true indicates that item can be sold in event.",
          "type": "boolean"
        },
        "sellInReservation": {
          "description": "If true indicates that item can be sold in reservation.",
          "type": "boolean"
        },
        "sellSeparate": {
          "description": "If true indicates that item is allowed to sell separately.",
          "type": "boolean"
        },
        "timeSpan": {
          "description": "Date Range to get the inventories of the items.",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "keyCardType": {
      "description": "Key card types.",
      "type": "string",
      "enum": [
        "Mifare1K",
        "Mifare4K",
        "MifareUltralight"
      ]
    },
    "keyTrackType": {
      "type": "object",
      "properties": {
        "keyTrack1": {
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "keyTrack2": {
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "keyTrack3": {
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "keyTrack4": {
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "keywordDetailType": {
      "type": "object",
      "properties": {
        "newKeyword": {
          "description": "The new keyword value.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "keywordType": {
      "type": "object",
      "properties": {
        "keyword": {
          "description": "The keyword value.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "keywordDetail": {
          "description": "The keyword new value, in case keyword value is modified.",
          "$ref": "#/definitions/keywordDetailType"
        },
        "type": {
          "description": "The type of keyword",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "languageType": {
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "lastStayInfoType": {
      "description": "Contains last stay related details for the profile",
      "type": "object",
      "properties": {
        "lastRate": {
          "description": "Used to hold last rate information for the profile.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "lastRoom": {
          "description": "Used to hold last room information for the profile.",
          "type": "string"
        },
        "lastVisit": {
          "description": "Used to hold last stay information for the profile.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "totalStay": {
          "description": "The total number of previous stay of the profile.",
          "type": "integer"
        }
      }
    },
    "linkedReservationInfoType": {
      "type": "object",
      "properties": {
        "allowedActions": {
          "description": "Collection of allowed actions for the linked reservation.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "displayColor": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "givenName": {
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "guarantee": {
          "$ref": "#/definitions/resGuaranteeType"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "linkReservationType": {
          "$ref": "#/definitions/linkedReservationType"
        },
        "rate": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "ratePlanCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationBlock": {
          "description": "Key information about the block for the linked reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "reservationIdList": {
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationStatus": {
          "description": "Indicates the Actual status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "room": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomNumberLocked": {
          "description": "This attribute is to verify if room number is locked for the reservation. When true the room number cannot be changed",
          "type": "boolean"
        },
        "roomType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "suppressRate": {
          "description": "This attribute checks if rate is suppressed or not in order to properly show strike through.",
          "type": "boolean"
        },
        "surname": {
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "title": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "linkedReservationType": {
      "description": "Enumeration of the different Linked Reservation Types.",
      "type": "string",
      "enum": [
        "Linked",
        "Shared",
        "Default"
      ]
    },
    "linkedReservations": {
      "type": "object",
      "properties": {
        "linkedReservationList": {
          "description": "Set of reservations linked to the requested Reservation.",
          "$ref": "#/definitions/linkedReservationsInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "linkedReservationsInfoType": {
      "description": "Linked Reservations.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "reservationInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/linkedReservationInfoType"
          }
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "mailingActionsType": {
      "description": "Defines mailing action list for the profile.",
      "type": "object",
      "properties": {
        "active": {
          "description": "When true indicates that profile has subscribed to the mailing list.",
          "type": "boolean"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "mailingAction": {
          "description": "Defines mailing action code and description.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "massAdvanceCheckInCriteriaType": {
      "description": "Criteria for performing Mass Advance Check In of Reservations",
      "type": "object",
      "properties": {
        "eTRComments": {
          "description": "Comments relating to the Advance Checked In guest's return to the property to perform Check In",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "expectedReturnTime": {
          "description": "Time when the guest is expected to return to perform Check In",
          "type": "string",
          "format": "date-time"
        },
        "hotelId": {
          "description": "Resort to which the Reservation belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationIdList": {
          "description": "Collection of IDs of Reservations that should be Mass Advance Checked In",
          "$ref": "#/definitions/reservationIdList"
        }
      }
    },
    "massAdvanceCheckInReservations": {
      "description": "Request object to Submit Batch job for Mass Advance Check In of Reservations.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for Submiting a request for Mass Advance Check In of Reservations.",
          "$ref": "#/definitions/massAdvanceCheckInCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "massCheckInCriteriaType": {
      "description": "This will have details of reservations and advance criteria for performing Mass Checkin of Reservations",
      "type": "object",
      "properties": {
        "additionalCriteria": {
          "description": "Additional RoomStatus Criteria for Mass Checkin",
          "type": "object",
          "properties": {
            "roomStatuses": {
              "description": "Additional RoomStatus Criteria for Mass Checkin",
              "$ref": "#/definitions/roomStatusListType"
            }
          }
        },
        "hotelId": {
          "description": "Resort to which the Reservation belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationIdList": {
          "description": "Collection of Reservation ID's that should be Mass Checked in",
          "$ref": "#/definitions/reservationIdList"
        }
      }
    },
    "massCheckInReservations": {
      "description": "Request object to Submit Batch job for Mass Checkin of Reservations.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for Submiting Mass CHeckin of Reservations.",
          "$ref": "#/definitions/massCheckInCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "masterAccountInfoType": {
      "type": "object",
      "properties": {
        "masterAccountId": {
          "description": "Unique ID of the Master account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "masterAccountName": {
          "description": "Name of the Master account.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "masterInfoCodeDetailType": {
      "type": "string",
      "enum": [
        "LongDescription",
        "ShortDescription"
      ]
    },
    "masterInfoType": {
      "type": "object",
      "properties": {
        "codeInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeInfoType"
          }
        },
        "codeType": {
          "$ref": "#/definitions/masterType"
        }
      }
    },
    "masterType": {
      "type": "string",
      "enum": [
        "Country",
        "State",
        "AddressType",
        "PhoneType",
        "RateCategory",
        "CalculationRule",
        "PostingRythym",
        "BillingInstruction",
        "TransactionCode",
        "DisplaySet",
        "MailingActions",
        "DistanceType",
        "District",
        "Territory",
        "FiscalRegion",
        "InventoryItem",
        "Package",
        "RoomFeaturePreference",
        "SpecialPreference",
        "Promotion",
        "Department",
        "ReservationPreference",
        "FacilityTask",
        "RoomType",
        "RateCode",
        "OutOfOrderReason",
        "Block"
      ]
    },
    "mealPlanCodeType": {
      "description": "Meal plan codes associated with the rate codes.",
      "type": "object",
      "properties": {
        "breakfastIncluded": {
          "description": "Represents if the meal plan code is available for breakfast or not.",
          "type": "boolean"
        },
        "code": {
          "description": "Meal plan code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "dinnerIncluded": {
          "description": "Represents if the meal plan code is available for dinner or not.",
          "type": "boolean"
        },
        "included": {
          "description": "Represents if the meal plan code is included in rate code or not.",
          "type": "boolean"
        },
        "lunchIncluded": {
          "description": "Represents if the meal plan code is available for lunch or not.",
          "type": "boolean"
        }
      }
    },
    "mealPlansType": {
      "description": "Meal plan codes associated with the rate codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/mealPlanCodeType"
      }
    },
    "membershipEarningPreferenceType": {
      "description": "The earning preference of a membership, it depends on the type of property. eg. when the property is a airline it should be Miles, other than Points.",
      "type": "string",
      "enum": [
        "Points",
        "Miles"
      ]
    },
    "membershipInfoType": {
      "description": "The Membership object identifies the frequent customer reward program.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The account identification number for this particular member in this particular program.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "bonusCode": {
          "description": "The code or name of the bonus program. BonusCode can be used to indicate the level of membership (Gold Club, Platinum member, etc.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Membership ID (Unique ID from the memberships table).",
          "type": "number"
        },
        "membershipLevel": {
          "description": "The code or name of the membership level and indicates the level of membership (Gold Club, Platinum member, etc.). This is same as the BonusCode.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipLevelDesc": {
          "description": "The description of the Bonus Code.(Platinum for code P)",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "membershipTypeDesc": {
          "description": "The description of the ProgramCode.(Delta Previlige for code DP)",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "programCode": {
          "description": "The code or name of the membership program ('Hertz', 'AAdvantage', etc.).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "membershipType": {
      "description": "Detailed information of the memberships.",
      "type": "object",
      "properties": {
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        }
      }
    },
    "membershipTypeLevelType": {
      "type": "object",
      "properties": {
        "level": {
          "description": "Description type for Rule Details",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Code type for Rule Details",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "messageDeliveryType": {
      "description": "Holds the Delivery Information of the Message",
      "type": "object",
      "properties": {
        "deliveredBy": {
          "description": "User who delivered the message (who marked message as received)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "deliveryDate": {
          "description": "Date the message has been delivered (marked as received)",
          "type": "string",
          "format": "date-time"
        },
        "deliveryStatus": {
          "description": "Status of the Message (Received or Not Received)",
          "$ref": "#/definitions/messageStatusType"
        },
        "printDate": {
          "description": "Date when message has been printed",
          "type": "string",
          "format": "date-time"
        },
        "textMessageRecipientNo": {
          "description": "Number in which the message is to be sent.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "textMessageSentBy": {
          "description": "User who sent the message",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "textMessageSentById": {
          "description": "User Id of who sent the message",
          "type": "integer"
        },
        "textMessageSentDate": {
          "description": "Date when message has been sent via SMS",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "messageStatusType": {
      "description": "Status of the Message.",
      "type": "string",
      "enum": [
        "Mr",
        "Nr"
      ]
    },
    "messageType": {
      "description": "Holds the Message Information",
      "type": "object",
      "properties": {
        "messageDate": {
          "description": "Date the message was created",
          "type": "string",
          "format": "date-time"
        },
        "messageText": {
          "description": "Message Content",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "operator": {
          "description": "User who created the Message",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "recipient": {
          "description": "Recipient of the Message",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "typeOfMessage": {
          "description": "Type of message (Voice/Text)",
          "$ref": "#/definitions/typeOfMessageType"
        }
      }
    },
    "moveInHouseGuest": {
      "description": "To move a reservation, the reservation needs to be in Checked-In state.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Defines search criteria needed to configure a room to a reservation.",
          "type": "object",
          "properties": {
            "description": {
              "description": "Description of why room is moved.",
              "$ref": "#/definitions/stringLength2000"
            },
            "hotelId": {
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "includeDepartureRooms": {
              "description": "Indicates if departure rooms are to be included for room assignment.",
              "type": "boolean"
            },
            "includedSharers": {
              "description": "Valid share reservation identifier.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/reservationIdList"
              }
            },
            "oldRoomStatus": {
              "description": "On a successful RoomMove, this status will be configured in the reservation's previous room.",
              "$ref": "#/definitions/housekeepingRoomStatusType"
            },
            "orderBy": {
              "description": "When Forecast Rotation is checked, future reservation's point calculation will be considered while determing the room order for the assignment.",
              "$ref": "#/definitions/hotelRoomsOrderBy"
            },
            "overrideInstructions": {
              "description": "If this element is present, override flags will be set when configuring the room to the reservation.",
              "$ref": "#/definitions/reservationRoomSelectionOverrideType"
            },
            "reasonCode": {
              "description": "Identifies the room move reason code.",
              "$ref": "#/definitions/codeType"
            },
            "reservationIdList": {
              "$ref": "#/definitions/reservationIdList"
            },
            "roomId": {
              "description": "Room identifier which the reservation will hold.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "roomNumberLocked": {
              "description": "Update the do not move flag used to locking the reservation room number.",
              "type": "boolean"
            },
            "updateRoomTypeCharged": {
              "description": "Update the Room Type used for the Rate calculation.",
              "type": "boolean"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "movedInHouseGuest": {
      "description": "Potential errors which this operation might respond are the following: - Reservation is NOT In-House. - The room is NON-EXISTENT for the hotel. - The room is NOT valid for usage based on its current state. - The room's occupancy level has been compromised. - The room's pricing is NOT available.",
      "type": "object",
      "properties": {
        "effectiveRates": {
          "description": "Collection of effective rates per stay dates per guest to be applied on reservation including its shares.",
          "$ref": "#/definitions/effectiveRatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "newRates": {
          "description": "Collection of new room rate information on a daily basis.",
          "$ref": "#/definitions/dailyRatesType"
        },
        "oldRates": {
          "description": "Collection of old room rate information on a daily basis.",
          "$ref": "#/definitions/dailyRatesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "namePrefixType": {
      "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "nameTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Agent",
        "Contact",
        "Source",
        "Group",
        "Employee",
        "Hotel",
        "Purge"
      ]
    },
    "nameValueDataTypeType": {
      "type": "string",
      "enum": [
        "String",
        "Number",
        "Date",
        "Datetime",
        "Time",
        "Integer"
      ]
    },
    "nameValueDetailType": {
      "description": "Detailed information returned during name value search.",
      "type": "object",
      "properties": {
        "nameValues": {
          "description": "Name Value List.",
          "$ref": "#/definitions/nameValuesType"
        }
      }
    },
    "nameValueModuleType": {
      "type": "string",
      "enum": [
        "Reservation",
        "Folio",
        "Profile",
        "Fintrix"
      ]
    },
    "nameValueOriginType": {
      "description": "Contains origin details.",
      "type": "object",
      "properties": {
        "destination": {
          "description": "Contains destination column for Origin.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "originName": {
          "description": "Contains origin i.e. Reseravtion, Profile, Folio or FinTrx.",
          "$ref": "#/definitions/nameValueModuleType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "nameValueType": {
      "description": "Contains name value pair.",
      "type": "object",
      "properties": {
        "dataType": {
          "description": "Contains data type for values.",
          "$ref": "#/definitions/nameValueDataTypeType"
        },
        "formatString": {
          "description": "Contains format string for values.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "name": {
          "description": "Contains unique key which represents for record field.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "origin": {
          "description": "Contains Origin information.",
          "$ref": "#/definitions/nameValueOriginType"
        },
        "usageInstruction": {
          "description": "Contains value(s) to identify the reports to include the collected information in e.g. PFH=Print Folio Header, PFD=Print Folio Detail.",
          "$ref": "#/definitions/codeListType"
        },
        "value": {
          "description": "Contains value for the record/column.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        }
      }
    },
    "nameValuesType": {
      "description": "List of name value pairs.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/nameValueType"
      }
    },
    "negotiatedInfoType": {
      "description": "This provides information for a profile negotiated rate.",
      "type": "object",
      "properties": {
        "comissionCode": {
          "description": "Informational purposes only in numeric format.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "corporateAgreementId": {
          "description": "The master identifier for multiple offices/locations under the same company profile. This is optional",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "inactive": {
          "description": "Negotiated Rate is inactive or not",
          "type": "boolean"
        },
        "order": {
          "description": "The sell order.",
          "type": "integer"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "negotiatedType": {
      "description": "This holds a list of NegotiatedInfoType.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel code for the negotiated rate.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "negotiatedInfoList": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/negotiatedInfoType"
          }
        },
        "rateCode": {
          "description": "Rate plan code for the negotiated rate.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "numberRangeType": {
      "description": "Date Range with Start and End dates.",
      "type": "object",
      "properties": {
        "from": {
          "description": "The starting value of the range of number",
          "type": "integer"
        },
        "to": {
          "description": "The ending value of the range of number",
          "type": "integer"
        }
      }
    },
    "numericUDFType": {
      "description": "Used to hold user defined field of Numeric Type. It is highly recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "description": "Name of user defined field.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "number"
        }
      }
    },
    "numericUDFsType": {
      "description": "Used to hold collection of user defined fields of Numeric Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/numericUDFType"
      }
    },
    "offsetUnitType": {
      "description": "Indicates deadline offset unit type.",
      "type": "string",
      "enum": [
        "Year",
        "Month",
        "Day",
        "Hour"
      ]
    },
    "operaVersionNumberType": {
      "description": "Current Opera Version Number",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "overrideInstructionType": {
      "description": "Type for Overrides. Contains information for the override action performed while booking a reservation.",
      "type": "object",
      "properties": {
        "date": {
          "description": "The date when the override was done.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "description": {
          "description": "The description of the restriction for which the override was done.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reasonCode": {
          "description": "The override reason code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonDescription": {
          "description": "The override reason description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "type": {
          "description": "The type of override done. If done for Availability, then it will be AVAILABILITY.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "userId": {
          "description": "Login ID of the user who performed the override.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "overrideInstructionsType": {
      "description": "List of override actions done.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/overrideInstructionType"
      }
    },
    "ownerResTypeType": {
      "type": "string",
      "enum": [
        "Owner",
        "AuthorizedUser"
      ]
    },
    "ownerType": {
      "description": "Generic type for information about an owner.",
      "type": "object",
      "properties": {
        "department": {
          "description": "Department to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "email": {
          "description": "Email information of the owner.",
          "$ref": "#/definitions/emailInfoType"
        },
        "hotel": {
          "description": "Hotel to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "name": {
          "description": "Provides name information of the owner.",
          "$ref": "#/definitions/personNameType"
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phone": {
          "description": "Information on the telephone number of the owner.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "primary": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        },
        "profileId": {
          "description": "Unique owner profile information.",
          "$ref": "#/definitions/profileId"
        },
        "relationship": {
          "description": "Relationship of the owner within the profile or block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "userId": {
          "description": "Unique application user ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "userName": {
          "description": "Unique application user name of the owner.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "pMS_ResStatusType": {
      "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "type": "string",
      "enum": [
        "Reserved",
        "Requested",
        "NoShow",
        "Cancelled",
        "InHouse",
        "CheckedOut",
        "Waitlisted",
        "DueIn",
        "DueOut",
        "Walkin",
        "PendingCheckout"
      ]
    },
    "packageCalculationRuleType": {
      "description": "Simple type for package caluculation rules.",
      "type": "string",
      "enum": [
        "FlatRate",
        "PerPerson",
        "PerAdult",
        "PerChild",
        "PerRoom"
      ]
    },
    "packageCodeHeaderType": {
      "type": "object",
      "properties": {
        "postingAttributes": {
          "description": "Package code posting attributes.",
          "$ref": "#/definitions/configPostingAttributesType"
        },
        "primaryDetails": {
          "description": "Package code header primary details.",
          "$ref": "#/definitions/configPackagePrimaryDetailsType"
        },
        "transactionDetails": {
          "description": "Package code header transaction information.",
          "$ref": "#/definitions/configPackageTransactionType"
        },
        "usageDetails": {
          "description": "Package code usage information.",
          "$ref": "#/definitions/configPackageUsageDetailType"
        }
      }
    },
    "packageConsumptionType": {
      "description": "Package Consumption Information. Includes information on quantity of the package used, allowance consumption etc.",
      "type": "object",
      "properties": {
        "allowanceConsumed": {
          "description": "Indicates if Allowance(for POS packages) has been consumed/posted for today.",
          "type": "boolean"
        },
        "defaultQuantity": {
          "description": "The default quantity attached in the package.",
          "type": "integer"
        },
        "excludedQuantity": {
          "description": "The quantity which has been excluded in the package.",
          "type": "integer"
        },
        "totalQuantity": {
          "description": "The total quantity of the package, calculated based on the calculation rule as defined in the PackageHeaderType.",
          "type": "integer"
        }
      }
    },
    "packageElementType": {
      "type": "object",
      "properties": {
        "addRateCombinedLine": {
          "type": "boolean"
        },
        "addRateSeprateLine": {
          "type": "boolean"
        },
        "allowance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "amount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "calculationRule": {
          "type": "string"
        },
        "description": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          }
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endTime": {
          "type": "string"
        },
        "includedInRate": {
          "type": "boolean"
        },
        "packageCode": {
          "type": "string"
        },
        "postingRhythm": {
          "type": "string"
        },
        "quantity": {
          "type": "integer"
        },
        "sellSeparate": {
          "type": "boolean"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "startTime": {
          "type": "string"
        }
      }
    },
    "packagePostingRhythmType": {
      "description": "Package Posting rhythm type.",
      "type": "object",
      "properties": {
        "certainNightsOfTheWeek": {
          "description": "Post the package on certain nights of the week.",
          "type": "object",
          "properties": {
            "friday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            },
            "sunday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            }
          }
        },
        "customNightSchedule": {
          "description": "The start and end of the posting period is determined as follows: If the package is attached to a rate code: The period starts with the date when the rate code to which the package is attached becomes effective for the stay. The period ends with the date of the last night for that rate code (or the last night of the stay if the rate code remains in effect until the departure date). If the package is attached separately to the reservation: The Begin Date specified on the reservation when the package was attached is the start date for the period. The End Date specified on the reservation when the package was attached is the end date for the period. If no Begin Date and/or End Date are specified when the package is attached to the reservation, the Begin Date is assumed to be the arrival date and the End Date is assumed to be the departure date of the reservation, irrespective of when the package is attached to the reservation.",
          "type": "object",
          "properties": {
            "night1": {
              "description": "Night 1 indicator.",
              "type": "boolean"
            },
            "night10": {
              "description": "Night 10 indicator.",
              "type": "boolean"
            },
            "night11": {
              "description": "Night 11 indicator.",
              "type": "boolean"
            },
            "night12": {
              "description": "Night 12 indicator.",
              "type": "boolean"
            },
            "night13": {
              "description": "Night 13 indicator.",
              "type": "boolean"
            },
            "night14": {
              "description": "Night 14 indicator.",
              "type": "boolean"
            },
            "night2": {
              "description": "Night 2 indicator.",
              "type": "boolean"
            },
            "night3": {
              "description": "Night 3 indicator.",
              "type": "boolean"
            },
            "night4": {
              "description": "Night 4 indicator.",
              "type": "boolean"
            },
            "night5": {
              "description": "Night 5 indicator.",
              "type": "boolean"
            },
            "night6": {
              "description": "Night 6 indicator.",
              "type": "boolean"
            },
            "night7": {
              "description": "Night 7 indicator.",
              "type": "boolean"
            },
            "night8": {
              "description": "Night 8 indicator.",
              "type": "boolean"
            },
            "night9": {
              "description": "Night 9 indicator.",
              "type": "boolean"
            }
          }
        },
        "customStaySchedule": {
          "description": "This user defined schedule lets you enter a posting rhythm over a 14-day period, starting with the arrival date, by assigning the day (number) within a guest stay for posting this package price.",
          "type": "object",
          "properties": {
            "night1": {
              "description": "Night 1 indicator.",
              "type": "boolean"
            },
            "night10": {
              "description": "Night 10 indicator.",
              "type": "boolean"
            },
            "night11": {
              "description": "Night 11 indicator.",
              "type": "boolean"
            },
            "night12": {
              "description": "Night 12 indicator.",
              "type": "boolean"
            },
            "night13": {
              "description": "Night 13 indicator.",
              "type": "boolean"
            },
            "night14": {
              "description": "Night 14 indicator.",
              "type": "boolean"
            },
            "night2": {
              "description": "Night 2 indicator.",
              "type": "boolean"
            },
            "night3": {
              "description": "Night 3 indicator.",
              "type": "boolean"
            },
            "night4": {
              "description": "Night 4 indicator.",
              "type": "boolean"
            },
            "night5": {
              "description": "Night 5 indicator.",
              "type": "boolean"
            },
            "night6": {
              "description": "Night 6 indicator.",
              "type": "boolean"
            },
            "night7": {
              "description": "Night 7 indicator.",
              "type": "boolean"
            },
            "night8": {
              "description": "Night 8 indicator.",
              "type": "boolean"
            },
            "night9": {
              "description": "Night 9 indicator.",
              "type": "boolean"
            }
          }
        },
        "everyXNightsStartingNightY": {
          "description": "Post the package every X nights Staring from Night Y.",
          "type": "object",
          "properties": {
            "postEveryXNights": {
              "description": "Occurance of nights when the package needs to be posted and consumed.",
              "type": "integer"
            },
            "startOnNightY": {
              "description": "Starting night for consumption and posting prices.",
              "type": "integer"
            }
          }
        },
        "type": {
          "description": "Posting Rhythm for the package.",
          "$ref": "#/definitions/postingRhythmType"
        }
      }
    },
    "packagePostingRulesType": {
      "type": "object",
      "properties": {
        "alternateCodesList": {
          "description": "The alternate transaction code that can be consumed by the guest in place of the transaction code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/packageTransactionCodeType"
          }
        },
        "lossCode": {
          "description": "The transaction code to record package Loss, if any, from un-consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "overageCode": {
          "description": "The overage code to record over consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "profitCode": {
          "description": "The transaction code to record package profit, if any, from un-consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "transactionCode": {
          "description": "The Transaction code used to post the package price.",
          "$ref": "#/definitions/packageTransactionCodeType"
        }
      }
    },
    "packageTransactionCodeType": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Posting / transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "The description of the code.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "type": {
          "description": "Code is inclusive or exclusive of other chanrges such as taxes.",
          "$ref": "#/definitions/amountDeterminationType"
        }
      }
    },
    "paragraphType": {
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "type": "object",
      "properties": {
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        }
      }
    },
    "parameterType": {
      "description": "Name value pair type that will hold generic parameter information. Only use this type when the parameters being passed are too dynamic to be defined.",
      "type": "object",
      "properties": {
        "parameterName": {
          "description": "Name of the parameter.",
          "type": "string"
        },
        "parameterValue": {
          "description": "Value of the parameter.",
          "type": "string"
        }
      }
    },
    "parametersType": {
      "description": "Collection of generic Name-Value-Pair parameters.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/parameterType"
      }
    },
    "payeeInfoType": {
      "description": "Payee information.",
      "type": "object",
      "properties": {
        "payeeAccountInfo": {
          "description": "AR account short info of the payee.",
          "$ref": "#/definitions/aRAccountShortInfoType"
        },
        "payeeAddress": {
          "description": "Address of the payee.",
          "$ref": "#/definitions/addressInfoType"
        },
        "payeeAddressCount": {
          "description": "Payee multiple address count.",
          "type": "integer"
        },
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeName": {
          "description": "Name of the payee.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "payeeReferenceCurrency": {
          "description": "Reference currency of the payee.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "payeeTaxNumber": {
          "description": "The tax number of the payee.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "paymentMethodsSummaryType": {
      "type": "object",
      "properties": {
        "establishedCount": {
          "description": "Reservations count with payment method established.",
          "type": "string",
          "maxLength": 4,
          "minLength": 4
        },
        "unestablishedCount": {
          "description": "Reservations count with no payment method established.",
          "type": "string",
          "maxLength": 4,
          "minLength": 4
        }
      }
    },
    "personNameType": {
      "description": "This provides name information for a person.",
      "type": "object",
      "properties": {
        "envelopeGreeting": {
          "description": "Envelope Greeting of the profile",
          "type": "string"
        },
        "externalSystem": {
          "description": "When name type is external, indicates the external system the name belongs to.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "nameTitleSuffix": {
          "description": "Title Suffix. Must be populated if ADVANCED_TITLE is on.",
          "type": "integer"
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        },
        "salutation": {
          "description": "Salutation of the profile",
          "type": "string"
        },
        "surname": {
          "description": "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "personNameTypeType": {
      "description": "Person's name in an external system.",
      "type": "string",
      "enum": [
        "Primary",
        "Alternate",
        "Incognito",
        "External",
        "Phonetic"
      ]
    },
    "phoneNumberType": {
      "description": "Phone number",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "pkgInventoryItemType": {
      "type": "object",
      "properties": {
        "articleNumber": {
          "description": "Article Number of the inventory item.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the inventory item.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "itemId": {
          "description": "Identifier for the inventory item.",
          "type": "integer"
        },
        "quantity": {
          "description": "Quantity of the inventory item allocated to the package.",
          "type": "integer"
        }
      }
    },
    "pointsType": {
      "description": "The Redeem Points contains the number of points required to book a room type.",
      "type": "object",
      "properties": {
        "awardsType": {
          "description": "Awards type for the award type rate code.",
          "type": "string"
        },
        "points": {
          "description": "No of points required to book this Room Stay.",
          "type": "integer"
        }
      }
    },
    "policyAmountPercentType": {
      "description": "Defines the percentage basis for calculating the fee amount or the amount.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "basisType": {
          "description": "Provides the basis for how the amount of the guarantee is calculated.",
          "$ref": "#/definitions/policyBasisTypeType"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "nights": {
          "description": "The number of nights of the hotel stay that are used to calculate the fee amount.",
          "type": "integer"
        },
        "percent": {
          "description": "The percentage used to calculate the amount.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        }
      }
    },
    "policyBasisTypeType": {
      "description": "Full Amount.",
      "type": "string",
      "enum": [
        "FlatAmount",
        "Percentage",
        "Nights",
        "NightPercentage",
        "FullAmount"
      ]
    },
    "policyDeadlineType": {
      "description": "Cancellation deadline, absolute or relative.",
      "type": "object",
      "properties": {
        "absoluteDeadline": {
          "description": "Defines the absolute deadline. Either this or the offset attributes may be used.",
          "type": "string",
          "format": "date-time"
        },
        "offsetDropTime": {
          "description": "Time on offset day the cancellation penalties applies.",
          "type": "string",
          "format": "date-time"
        },
        "offsetFromArrival": {
          "description": "The number of days before arrival that allows cancellation without penalties.",
          "type": "integer"
        },
        "offsetFromBookingDate": {
          "description": "The number of days after booking deposit must be paid.",
          "type": "integer"
        }
      }
    },
    "postingRhythmType": {
      "description": "Simple type for posting Rhythm types.",
      "type": "string",
      "enum": [
        "EveryNight",
        "ArrivalNight",
        "EveryXNightsStartingNightY",
        "CertainNightsOfTheWeek",
        "LastNight",
        "EveryNightExceptArrivalNight",
        "EveryNightExceptLast",
        "EveryNightExceptFirstAndLast",
        "CustomStaySchedule",
        "CustomNightSchedule",
        "FloatingAllowancePerStay",
        "TicketPosting"
      ]
    },
    "preferenceType": {
      "description": "Guest Preference details for the profile.",
      "type": "object",
      "properties": {
        "copyToProfile": {
          "description": "Specifies whether to copy the reservation preference to the profile or not.",
          "type": "boolean"
        },
        "description": {
          "description": "Preference Description for display purposes.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "excludedPreferencesCount": {
          "description": "Specifies the count of preferences excluded for the attached reservation preference.",
          "type": "integer"
        },
        "global": {
          "description": "Whether this preference is property specific or not.",
          "type": "boolean"
        },
        "hotels": {
          "description": "If specified preference belongs to the Hotels listed, otherwise it is a global preference.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "preferenceId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferenceValue": {
          "description": "Preference value for display purposes.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "source": {
          "description": "Source of the preference.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "preferenceTypeType": {
      "description": "Preference details for the profile.",
      "type": "object",
      "properties": {
        "availableQuantity": {
          "description": "Available quantity of preferences (maximum quantity - Existing preferences)per preference group.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "maxQuantity": {
          "description": "Maximum quantity of preferences allowed per preference group.",
          "type": "integer"
        },
        "maxResortUsedQuantity": {
          "description": "Maximum quantity of preferences used by any resort per preference group.",
          "type": "integer"
        },
        "preference": {
          "description": "Collection of Preferences for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceType"
          }
        },
        "preferenceType": {
          "description": "Preference group code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferenceTypeDescription": {
          "description": "Preference group description.",
          "type": "string"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationPreference": {
          "description": "Whether this preference is reservation preference or not.",
          "type": "boolean"
        },
        "sequence": {
          "description": "Preference Sequence.",
          "type": "string"
        }
      }
    },
    "prepaidCardDetailsType": {
      "description": "Prepaid Card Details.",
      "type": "object",
      "properties": {
        "activateDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "balanceTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "creditTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "expiredDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "initialCreditTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "initialLoadDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservedTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactions": {
          "description": "Holds fixed charge detail.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/prepaidCardTransactionType"
          }
        },
        "validUntilDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "prepaidCardTransactionType": {
      "description": "Prepaid Card transaction.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Prepaid Card Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionDate": {
          "description": "Transaction number of the Prepaid card transaction.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Transaction number of the Prepaid card transaction.",
          "type": "number"
        },
        "transactionType": {
          "description": "Transaction type enumeration.",
          "$ref": "#/definitions/prepaidCardTrxTypeType"
        }
      }
    },
    "prepaidCardTrxTypeType": {
      "description": "Reload transaction.",
      "type": "string",
      "enum": [
        "Activate",
        "Cancel",
        "Cashout",
        "Inquiry",
        "Issue",
        "Redeem",
        "Reload"
      ]
    },
    "prepaidCardType": {
      "description": "Holds fixed charge information.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Prepaid Card Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cardDetails": {
          "description": "Prepaid Card details from vendor.",
          "$ref": "#/definitions/prepaidCardDetailsType"
        },
        "cardNo": {
          "description": "Prepaid card / account number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberMasked": {
          "description": "Masked Prepaid card / account number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "firstName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "giftCard": {
          "description": "Indicates a gift card type.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel context for the Reservations.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "interfaceId": {
          "description": "The unique ID for the Interface.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "pinCode": {
          "description": "Prepaid card pin code.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "profileId": {
          "description": "Card / Account holder name ID",
          "$ref": "#/definitions/profileId"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationId": {
          "description": "The unique ID of the reservation to which this record applies.",
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "prepaidCardsType": {
      "description": "Holds fixed charge detail.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/prepaidCardType"
      }
    },
    "primaryShareTypeType": {
      "type": "string",
      "enum": [
        "Primary",
        "NonPrimary"
      ]
    },
    "privacyInfoType": {
      "description": "Defines Privacy related information for the profile.",
      "type": "object",
      "properties": {
        "allowEmail": {
          "description": "Indicates if the profile wishes to allow Email.",
          "type": "boolean"
        },
        "allowPhone": {
          "description": "Indicates if the profile wishes to allow phone calls.",
          "type": "boolean"
        },
        "allowSMS": {
          "description": "Indicates if the profile wishes to allow SMS.",
          "type": "boolean"
        },
        "autoEnrollLoyaltyProgram": {
          "description": "Indicates if the profile wishes to be automatically enrolled in the property's loyalty program.",
          "type": "boolean"
        },
        "infoFromThirdParty": {
          "description": "Indicates if the profile is ok getting info from third parties.",
          "type": "boolean"
        },
        "lastPrivacyPromptDate": {
          "description": "Indicate the last privacy prompt date of the guest.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "marketResearchParticipation": {
          "description": "Indicates if the profile participates in market research.",
          "type": "boolean"
        },
        "optInAutoEnrollmentMember": {
          "description": "Indicates if the profile wishes to opt in for Auto Enrolment Member.",
          "type": "boolean"
        },
        "optInEmail": {
          "description": "Indicates if the profile wishes to opt in for Email.",
          "type": "boolean"
        },
        "optInMailingList": {
          "description": "Indicates if the profile wishes to opt in for Mailing List.",
          "type": "boolean"
        },
        "optInMarketResearch": {
          "description": "Indicates if the profile wishes to opt in for Market Research.",
          "type": "boolean"
        },
        "optInPhone": {
          "description": "Indicates if the profile wishes to opt in for Phone.",
          "type": "boolean"
        },
        "optInSms": {
          "description": "Indicates if the profile wishes to opt in for SMS.",
          "type": "boolean"
        },
        "optInThirdParty": {
          "description": "Indicates if the profile wishes to opt in for Third Party.",
          "type": "boolean"
        }
      }
    },
    "processCommissionPayments": {
      "description": "Request type for processing commission payments.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for actual commission payments processing.",
          "$ref": "#/definitions/processCommissionPaymentsCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "processCommissionPaymentsCriteriaType": {
      "description": "Generic commission criteria including hotel code, bank account id, agent id, reservation id and/or commission id",
      "type": "object",
      "properties": {
        "agentId": {
          "description": "Unique travel agent or source profile ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "bankAccountId": {
          "description": "Unique id of bank account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "checkNo": {
          "description": "If payment method is check, this serves as the start check number of checks to be printed.",
          "type": "number"
        },
        "commissionId": {
          "description": "Unique id of the commission.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Property of the commission record .",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "resvNameId": {
          "description": "Unique reservation name ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "timeSpan": {
          "description": "Date range that will be included on payment processing.",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "processCommissionPaymentsStatus": {
      "description": "Response type for processing commission payments.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "paymentReport": {
          "description": "Contains report id, batch id (for check payments) or export file (for eft payments)",
          "$ref": "#/definitions/commissionPaymentReportType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "productSourceType": {
      "description": "Sources of Products",
      "type": "string",
      "enum": [
        "Reservation",
        "RateHeader",
        "RateDetail"
      ]
    },
    "profileAccessType": {
      "type": "object",
      "properties": {
        "chainCode": {
          "description": "Indicates the Chain code where the profile was created",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "croCode": {
          "description": "Indicates the CRO code where the profile was created",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "Indicates the Hotel code where the profile was created",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "sharedLevel": {
          "description": "Indicates whether the profile is shared at the following levels : global/property/CRO",
          "$ref": "#/definitions/profileSharedLevelType"
        }
      }
    },
    "profileCashieringDetailType": {
      "description": "The type contains routing instructions for the profile.",
      "type": "object",
      "properties": {
        "eCommerceId": {
          "description": "E-Commerce ID of the Profile",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "fiscalGuestType": {
          "description": "Guest type code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code for which the routing instructions are provided for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "paymentMethod": {
          "description": "Payment Method Details.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "routingInstructions": {
          "description": "Set of preconfigured transaction codes.",
          "$ref": "#/definitions/profileRoutingInstructionsType"
        },
        "taxType": {
          "description": "Tax type code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "profileCashieringType": {
      "description": "Contains cashiering related details for the profile",
      "type": "object",
      "properties": {
        "arNoCentral": {
          "description": "Account Receivables Central Number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "autoFolioSettlementType": {
          "description": "Contains the auto folio settlement type for the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "directBillingList": {
          "description": "Contains the direct billing related information for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/directBillingType"
          }
        },
        "paymentDueDays": {
          "description": "Ability to define on the account, the number of days after which the invoice should be paid.",
          "type": "integer"
        },
        "referenceCurrency": {
          "description": "Reference Currency.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "taxPercent1": {
          "description": "Tax1 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent2": {
          "description": "Tax2 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent3": {
          "description": "Tax3 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent4": {
          "description": "Tax4 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent5": {
          "description": "Tax5 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "vATOffsetYN": {
          "description": "VAT Offset Flag.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        }
      }
    },
    "profileCommissionType": {
      "description": "This is the preconfigured routing instruction type.",
      "type": "object",
      "properties": {
        "bankAccount": {
          "description": "Bank account used for the commission for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "commissionCode": {
          "description": "commission Code for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "hotelId": {
          "description": "Hotel Code for the commission being used for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "paymentMethod": {
          "description": "Type of payment associated with the bank account.",
          "$ref": "#/definitions/commissionPaymentMethods"
        }
      }
    },
    "profileDeliveryMethod": {
      "description": "Delivery Information type to the profile.",
      "type": "object",
      "properties": {
        "deliveryId": {
          "description": "Delivery ID. It will be empty in case of new delivery method.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "deliveryModule": {
          "description": "Module where this delivery type will be used. Example : EFolio Export, EInvoice , Fiscal, etc..",
          "$ref": "#/definitions/profileDeliveryModuleType"
        },
        "deliveryType": {
          "description": "Delivery type can have a value EMAIL, ELECTRONIC etc and it depends on the parameter set in OPERA Control.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "deliveryValue": {
          "description": "Delivery value holds the corresponding value of the delivery type..",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property that has delivery methods configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        }
      }
    },
    "profileDeliveryModuleType": {
      "description": "Module where this delivery type will be used. Example : EFolio Export, EInvoice , Fiscal, etc..",
      "type": "string",
      "enum": [
        "EfolioExport"
      ]
    },
    "profileId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "profileIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "profileMembershipType": {
      "description": "Detailed information of the memberships.",
      "type": "object",
      "properties": {
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        }
      }
    },
    "profileNameType": {
      "description": "This provides name information for a person.",
      "type": "object",
      "properties": {
        "fullName": {
          "description": "Full display Name.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        }
      }
    },
    "profileRestrictions": {
      "type": "object",
      "properties": {
        "reason": {
          "description": "Restriction reason associated with the current profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonDescription": {
          "description": "Description of restriction reason.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "restricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        }
      }
    },
    "profileRoutingInstructionsType": {
      "description": "The type contains routing instructions for the profile.",
      "type": "object",
      "properties": {
        "autoPopulateRouting": {
          "description": "A flag which determines whether the instructions has to be automatically populated for this profile or not.",
          "type": "boolean"
        },
        "billingInstructions": {
          "description": "Set of preconfigured Billing Instruction results.",
          "$ref": "#/definitions/billingInstructionsType"
        },
        "transactionCodes": {
          "description": "Set of preconfigured transaction codes.",
          "$ref": "#/definitions/trxCodesInfoType"
        }
      }
    },
    "profileSharedLevelType": {
      "description": "Simple types for Shared level.",
      "type": "string",
      "enum": [
        "Global",
        "Property",
        "Cro"
      ]
    },
    "profileStatusType": {
      "type": "string",
      "enum": [
        "Active",
        "Inactive"
      ]
    },
    "profileSubscriptionListType": {
      "description": "Details of the OPERA Profile subscription to external system",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/profileSubscriptionType"
      }
    },
    "profileSubscriptionType": {
      "description": "Contains details of the profile subscription. The subscription represents the link between the OPERA profile and the external profile within a particular external system",
      "type": "object",
      "properties": {
        "distributed": {
          "description": "Indicates if the profile was distributed to the external system.",
          "type": "boolean"
        },
        "externalProfileId": {
          "description": "Profile ID within the external system.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "force": {
          "description": "Indicates if the profile information should be overwritten by the external system.",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicates whether this subscription is active or inactive.",
          "type": "boolean"
        },
        "lastDistributionDate": {
          "description": "Timestamp of the most recent distribution of this profile to the external system.",
          "type": "string",
          "format": "date-time"
        },
        "lastExternalUpdateDate": {
          "description": "Timestamp of the most recent update of the subscription information by the external system.",
          "type": "string",
          "format": "date-time"
        },
        "profileId": {
          "description": "OPERA Profile ID that this subscription record corresponds to.",
          "$ref": "#/definitions/profileId"
        },
        "profileInfo": {
          "description": "This provides name information for a person.",
          "type": "object",
          "properties": {
            "fullName": {
              "description": "Full display Name.",
              "type": "string",
              "maxLength": 200,
              "minLength": 0
            },
            "givenName": {
              "description": "Given name, first name or names.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "middleName": {
              "description": "The middle name of the person name.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "name": {
              "description": "Family name, last name or Company Name.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "namePrefix": {
              "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "nameSuffix": {
              "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "nameTitle": {
              "description": "Degree or honors (e.g., Ph.D., M.D.)",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "nameType": {
              "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
              "$ref": "#/definitions/personNameTypeType"
            },
            "profileType": {
              "description": "OPERA profile type such as Individual or Company",
              "$ref": "#/definitions/profileTypeType"
            }
          }
        },
        "subscriptionDate": {
          "description": "Timestamp when the profile was subscribed to.",
          "type": "string",
          "format": "date-time"
        },
        "systemCode": {
          "description": "Code of system where profile is subscribed to.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "systemType": {
          "description": "Type of system where profile is subscribed to.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "profileTaxInfoType": {
      "description": "Profile information related to tax.",
      "type": "object",
      "properties": {
        "businessId": {
          "description": "Business ID. The maximum length of this element should not exceed 120 characters.",
          "type": "string",
          "maxLength": 128,
          "minLength": 0
        },
        "businessRegistration": {
          "description": "Business Registration Code. The maximum length of this element should not exceed 120 characters.",
          "type": "string",
          "maxLength": 128,
          "minLength": 0
        },
        "tax1No": {
          "description": "The tax id of this profile. Usually issued by a government agency. Used by 1099 printing.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "tax2No": {
          "description": "Tax 2 id of this profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "taxCategory": {
          "description": "Tax Category to be changed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "taxOffice": {
          "description": "Tax Office to be changed.",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "taxType": {
          "description": "Tax type to be changed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "profileType": {
      "description": "Type provides the detailed information about the profile and its children.",
      "type": "object",
      "properties": {
        "addresses": {
          "description": "List of customer addresses.",
          "type": "object",
          "properties": {
            "addressInfo": {
              "description": "Collection of Detailed information on an address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/addressInfoType"
              }
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "businessSegments": {
          "description": "Business/Market Segment associated to the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "cashiering": {
          "description": "Contains cashiering related details for the profile",
          "$ref": "#/definitions/profileCashieringType"
        },
        "comments": {
          "description": "List of Notes for the customer.",
          "type": "object",
          "properties": {
            "commentInfo": {
              "description": "Collection of Detailed information on comments for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/commentInfoType"
              }
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "commissionInfoList": {
          "description": "Contains commission related details for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/profileCommissionType"
          }
        },
        "company": {
          "description": "Detailed company information for this profile.",
          "$ref": "#/definitions/companyType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "customer": {
          "description": "Detailed customer information for this profile.",
          "$ref": "#/definitions/customerType"
        },
        "eCertificates": {
          "description": "E-Certificate assosiated with the profile.",
          "$ref": "#/definitions/eCertificatesType"
        },
        "eligibleForFiscalFolio": {
          "description": "Eligible for Fiscal Folio/Payload generation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "gdsNegotiatedRates": {
          "description": "List of channel negotiated rates that this profile has been assigned to.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "gdsNegotiatedRate": {
              "description": "Collection of Detailed information on channel negotiated rates for the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/gdsNegotiatedType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "hasCommission": {
          "description": "Populates true if the profile has commission configured false otherwise.",
          "type": "boolean"
        },
        "influenceCode": {
          "description": "Influence Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "inheritedNegRates": {
          "description": "Flag to indicate if the negotiated rates are inherited from master profile. Flag is available only when the profile is linked to master profile and master profile has negotiated rate codes attached.",
          "type": "boolean"
        },
        "keywords": {
          "description": "List of customer keywords.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "keyword": {
              "description": "Collection of keywords attached to the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/keywordType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastStayInfo": {
          "description": "Information on last stay of the profile.",
          "$ref": "#/definitions/lastStayInfoType"
        },
        "localizationGuestType": {
          "description": "Localization Guest Type assocaited to the profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "mailingActions": {
          "description": "Contains collection of mailing action list associated with the profile",
          "$ref": "#/definitions/mailingActionsType"
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this profile as recently accessed.",
          "type": "boolean"
        },
        "markForHistory": {
          "description": "\"true\" setting marks the profile to be kept from being purged, once the profile is marked inactive.",
          "type": "boolean"
        },
        "negotiatedRates": {
          "description": "List of profile negotiated rates.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "negotiatedRate": {
              "description": "Collection of Detailed information on profile negotiated rates.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/negotiatedType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "ownerCode": {
          "description": "Owner Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "preferenceCollection": {
          "description": "List of customer preferences.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "preferenceType": {
              "description": "Collection of Detailed information on preferences of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/preferenceTypeType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "privacyInfo": {
          "description": "Contains privacy related information associated with the profile",
          "$ref": "#/definitions/privacyInfoType"
        },
        "profileAccessType": {
          "description": "Detailed information on access type associated with the profile.",
          "$ref": "#/definitions/profileAccessType"
        },
        "profileDeliveryMethods": {
          "description": "List of Delivery methods configured against a Property for this Profile.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "profileDeliveryMethod": {
              "description": "Collection of delivery methods for this Profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileDeliveryMethod"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "profileImage": {
          "description": "The profile image.",
          "$ref": "#/definitions/imageSetType"
        },
        "profileIndicators": {
          "description": "Indicators of additional information attached to the profile",
          "$ref": "#/definitions/indicatorsType"
        },
        "profileMemberships": {
          "description": "List of loyalty program(s) the profile is subscribed to.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "profileMembership": {
              "description": "Collection of Detailed information on memberships for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileMembershipType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "profileRestrictions": {
          "description": "Detailed information on restrictions associated with the profile.",
          "$ref": "#/definitions/profileRestrictions"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "protectedBy": {
          "description": "What level this profile is protected.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "registeredProperty": {
          "description": "Hotel which this profile is registered with. This attribute is not used for configuration.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "relationships": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "relationship": {
              "description": "A collection of the profiles that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "relationshipsSummary": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "relationship": {
              "description": "A collection of the profiles summary that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoSummaryType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "requestForHotel": {
          "description": "Hotel which this profile is to be registered. This attribute is only used during creation of profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationInfoList": {
          "description": "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref": "#/definitions/reservationHistoryFutureInfoType"
        },
        "roomOwnershipsList": {
          "description": "Room Ownership records.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "roomOwnershipInfo": {
              "description": "Collection of Detailed information on Room Ownership records.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/roomOwnershipType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "salesInfo": {
          "description": "Sales information of the profiles.",
          "$ref": "#/definitions/salesInfoType"
        },
        "showInactiveRoomOwners": {
          "description": "Flag to show inactive Room Owners.",
          "type": "boolean"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "stayReservationInfoList": {
          "description": "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref": "#/definitions/reservationStayHistoryFutureInfoType"
        },
        "subscriptions": {
          "description": "List of profile subscriptions.",
          "$ref": "#/definitions/profileSubscriptionListType"
        },
        "taxInfo": {
          "description": "Profile information about tax.",
          "$ref": "#/definitions/profileTaxInfoType"
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "territory": {
          "description": "Territory associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "traceCode": {
          "description": "Trace Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "uRLs": {
          "description": "List of Information on a URL for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "uRLInfo": {
              "description": "Collection of Detailed information on web url/address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/uRLInfoType"
              }
            }
          }
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "webUserAccounts": {
          "description": "List of Web User Accounts of the profile.",
          "$ref": "#/definitions/webUserAccountsType"
        }
      }
    },
    "profileTypeType": {
      "description": "The types of Profile handled by the web service.",
      "type": "string",
      "enum": [
        "Guest",
        "Agent",
        "Company",
        "Group",
        "Source",
        "Employee",
        "Hotel",
        "Vendor",
        "Contact",
        "Purge",
        "BusinessHeader",
        "BillingAccount",
        "Activity",
        "Potential",
        "Account"
      ]
    },
    "promotionType": {
      "description": "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "type": "object",
      "properties": {
        "couponCode": {
          "description": "Promotion Coupon Code when promotion is setup to have a valid coupon code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "promotionCode": {
          "description": "Promotion code associated with the rate plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "promotionName": {
          "description": "Promotion code Name associated with the rate plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "queueReservation": {
      "description": "Request to add a reservation to the Queue for Check-In. A reservation can be added to the queue prior to Check-In on the day of arrival.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property where the reservation exists.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "description": "Reservation ID of the reservation which is to be added to the queue.",
          "$ref": "#/definitions/reservationId"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "queueRoomsTextCriteriaType": {
      "description": "Text message criteria type, used to deliver a text message via Queue Reservations (to a guest) or Queue Rush (to housekeeping).",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Resort context of the text message.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "messageType": {
          "description": "Type of text message to be delivered.",
          "$ref": "#/definitions/queueRoomsTextMessageType"
        },
        "mobileNumber": {
          "description": "Mobile number that the text message will be delivered to.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "reservationId": {
          "description": "Reservation ID, necessary if the text message will be delivered based on a queued reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "queueRoomsTextMessageType": {
      "description": "Text message will be delivered via Queue Rush, to housekeeping.",
      "type": "string",
      "enum": [
        "QueueReservation",
        "QueueRush"
      ]
    },
    "queueTextInfoType": {
      "description": "Information regarding the message sent to guest.",
      "type": "object",
      "properties": {
        "sentBy": {
          "description": "User name of the user who sent message.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "sentTime": {
          "description": "Time the text was last sent to the user.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "queuedRoomsTextMessage": {
      "description": "Response for retrieving a predefined text message, for Queue Reservations or Queue Rush.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "messageText": {
          "description": "Predefined message text, based on the message type defined in the request.",
          "$ref": "#/definitions/stringLength200"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "rateByAgeBucketType": {
      "description": "Rate amount by age bucket.",
      "type": "object",
      "properties": {
        "maximumAge": {
          "description": "Maximum age for age bucket.",
          "type": "integer"
        },
        "minimumAge": {
          "description": "Minimum age for age bucket.",
          "type": "integer"
        },
        "rateAmount": {
          "description": "Rate amount by age bucket.",
          "type": "number"
        }
      }
    },
    "rateByAgeBucketsType": {
      "description": "Rate amount by age bucket.",
      "type": "array",
      "maxItems": 3,
      "items": {
        "$ref": "#/definitions/rateByAgeBucketType"
      }
    },
    "rateChangeInstructionType": {
      "description": "Defines override rate type.",
      "type": "object",
      "properties": {
        "discount": {
          "description": "Discount percentage and/or amount, code and textual reason for discount.",
          "$ref": "#/definitions/discountType"
        },
        "rateChange": {
          "description": "Rate change type.",
          "$ref": "#/definitions/rateChangeType"
        }
      }
    },
    "rateChangeType": {
      "description": "Simple type for rate change type.",
      "type": "string",
      "enum": [
        "Verify",
        "OldRate",
        "NewRate"
      ]
    },
    "ratePlanRatingType": {
      "description": "Possible Rate plan rating values.",
      "type": "string",
      "enum": [
        "MostImportant",
        "Important",
        "SomewhatImportant",
        "LessImportant",
        "LeastImportant",
        "NoValueSet"
      ]
    },
    "rateRangeType": {
      "description": "Rate Range details like maximum rate amount and minimum rate amount in each available rate category.",
      "type": "object",
      "properties": {
        "base": {
          "description": "The base amount charged for the accommodation or service.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/totalType"
          }
        },
        "rateChange": {
          "description": "Rate Change Indicator.",
          "type": "boolean"
        }
      }
    },
    "ratesType": {
      "description": "Individual rate amount.",
      "type": "object",
      "properties": {
        "rate": {
          "description": "The Rate contains a collection of elements that define the amount of the rate, associated fees, additional occupant amounts. Taxes can be broken out or included within the various amounts. A currency can be associated to each amount.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/amountType"
          }
        },
        "rateRange": {
          "description": "Rate Range details like maximum rate amount and minimum rate amount in each available rate category.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/rateRangeType"
          }
        }
      }
    },
    "recalculateCommissionOnCodeChange": {
      "description": "Request type for recalculating commission amount when commission code of unpaid commission is changed.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "recalculateCommissionOnCodeChangeStatus": {
      "description": "Response type for recalculating commission amount when commission code of unpaid commission is changed",
      "type": "object",
      "properties": {
        "commissionDetail": {
          "description": "Contains reservation detail information and computed commission amount like gross, tax, prepaid, total.",
          "$ref": "#/definitions/commissionDetailType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "relationshipAddressType": {
      "description": "Provides address information for a Relationship.",
      "type": "object",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "maxLength": 80,
            "minLength": 0
          }
        },
        "city": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "relationshipInfoSummaryType": {
      "description": "RelationshipInfoSummaryType contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "type": "object",
      "properties": {
        "masterAccountDetails": {
          "description": "Refer to Master Profile type document.",
          "$ref": "#/definitions/masterAccountInfoType"
        },
        "relationshipID": {
          "description": "Relationship identifier.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "relationshipProfile": {
          "description": "Refer to Relationship Profile Summary type document.",
          "$ref": "#/definitions/relationshipProfileSummaryType"
        },
        "sourceRelation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceRelationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "relationshipInfoType": {
      "description": "Relationship Type contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "type": "object",
      "properties": {
        "changeRelationship": {
          "description": "Information about the changes in relationship for the profile",
          "$ref": "#/definitions/changeRelationsType"
        },
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "masterAccountInfo": {
          "description": "Refer to Master Profile type document.",
          "$ref": "#/definitions/masterAccountInfoType"
        },
        "relation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "relationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "relationshipProfile": {
          "description": "Refer to Relationship Profile type document.",
          "$ref": "#/definitions/relationshipProfileType"
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "relationshipProfileSummaryType": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Information on address details for the customer/company",
          "$ref": "#/definitions/relationshipAddressType"
        },
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "customerName": {
          "description": "Name of the customer",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "boolean"
        },
        "primaryOwnerCode": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        },
        "profileIdList": {
          "description": "Original profile details for which the relationships was created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "profileStatus": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "telephoneNumber": {
          "description": "Telephone number assigned to a single location",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "relationshipProfileType": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Information on address details for the customer/company",
          "$ref": "#/definitions/addressInfoType"
        },
        "changeProfileIdList": {
          "description": "Updated/changed profile details for the relationships created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "company": {
          "description": "Detailed information of the Company.",
          "$ref": "#/definitions/companyType"
        },
        "customer": {
          "description": "Detailed information of the customer",
          "$ref": "#/definitions/customerType"
        },
        "email": {
          "description": "Information on email address for the customer/company",
          "$ref": "#/definitions/emailInfoType"
        },
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "primaryOwner": {
          "description": "Primary Owner of the profile",
          "$ref": "#/definitions/ownerType"
        },
        "profileIdList": {
          "description": "Original profile details for which the relationships was created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "telephone": {
          "description": "Information on telephone details for the customer/company",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "uRLs": {
          "description": "Information on web url/address for the customer/company",
          "$ref": "#/definitions/uRLInfoType"
        }
      }
    },
    "reprintCommissionCheckByRange": {
      "description": "Request type for reprinting a range of check payments.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Contains criteria for reprinting a range of check payments",
          "$ref": "#/definitions/reprintCommissionCheckRangeCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reprintCommissionCheckByRangeStatus": {
      "description": "Response type for reprinting a range of check payments.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reprintCheckReport": {
          "description": "Contains report id and batch id",
          "$ref": "#/definitions/commissionPaymentReportType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reprintCommissionCheckRangeCriteriaType": {
      "description": "Base type for payment activity information",
      "type": "object",
      "properties": {
        "allowExistingCheckNo": {
          "description": "Set to true if an existing check number can be used as the starting check number for reprint.",
          "type": "boolean"
        },
        "bankAccountId": {
          "description": "Unique id of bank account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "batchId": {
          "description": "Batch id of the commission payments.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "checkRange": {
          "description": "Check range.",
          "$ref": "#/definitions/numberRangeType"
        },
        "hotelId": {
          "description": "Property of the commission record.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "startCheckNo": {
          "description": "Start check no of commission to be applied to the set.",
          "type": "number"
        }
      }
    },
    "requestActionType": {
      "type": "string",
      "enum": [
        "Create",
        "Remove",
        "Query"
      ]
    },
    "resAccessRestrictionType": {
      "description": "Indicates any Updates/Changes on the reservation as well as Reservation Cancellation are not allowed.",
      "type": "string",
      "enum": [
        "Change",
        "Cancel",
        "ChangeOrCancel"
      ]
    },
    "resAccompanyGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "resAccompanyGuestListType": {
      "description": "Collection of accompany guests",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAccompanyGuestInfoType"
      }
    },
    "resAttachedProfileListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAttachedProfileType"
      }
    },
    "resAttachedProfileType": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Attached profile name",
          "type": "string"
        },
        "profileIdList": {
          "description": "Collection of unique profile identifiers",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "resAwardsType": {
      "description": "Membership Awards code applied on the reservation.",
      "type": "object",
      "properties": {
        "awardVouchers": {
          "$ref": "#/definitions/awardVouchersType"
        },
        "membershipNo": {
          "description": "Membership program under which the award is applied.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "originalRoomType": {
          "description": "Room Type before the Upgrade Award.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "upgradeRoomType": {
          "description": "Room Type after the Upgrade Award.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resCancelPenaltyType": {
      "description": "The CancelPenalty class defines the cancellation policy of the hotel facility.",
      "type": "object",
      "properties": {
        "amountPercent": {
          "description": "Cancellation fee expressed as a fixed amount, or percentage of/or room nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "deadline": {
          "description": "Cancellation deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "effective": {
          "description": "Indicator if Cancellation Penalty is currently applicable or not.",
          "type": "boolean"
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the Cancellation Penalty.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        },
        "nonRefundable": {
          "description": "Indicates if the amount is refundable if booking is canceled.",
          "type": "boolean"
        },
        "offsetUnit": {
          "$ref": "#/definitions/offsetUnitType"
        },
        "penaltyDescription": {
          "description": "Text description of the Penalty in a given language.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "policyCode": {
          "description": "Policy Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resCancellationPoliciesType": {
      "description": "A list of reservation cancellation policies.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resCancellationPolicyType"
      }
    },
    "resCancellationPolicyType": {
      "description": "A cancellation policy attached with the reservation.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "Comments attached with the reservation cancellation.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "percentageDue": {
          "description": "The percentage amount due for reservation cancellation.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "policy": {
          "description": "Cancellation policy details.",
          "$ref": "#/definitions/resCancelPenaltyType"
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        }
      }
    },
    "resCashieringType": {
      "description": "Cashiering Information for the reservation.",
      "type": "object",
      "properties": {
        "bedTaxReporting": {
          "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
          "$ref": "#/definitions/bedTaxReportingType"
        },
        "billingPrivileges": {
          "description": "Billing privileges set on the reservation.",
          "$ref": "#/definitions/billingPrivilegesType"
        },
        "compAccounting": {
          "description": "Information regarding comp accounting on the reservation.",
          "$ref": "#/definitions/resCompAccountingType"
        },
        "financiallyResponsible": {
          "description": "The guest from whom payment has to be recovered (direct guest).",
          "type": "boolean"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "lastRoomAndTaxPostedDate": {
          "description": "Date of the last Room And Tax posting. Used primarily to know the date in case of Advance Billing.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "periodicFolio": {
          "description": "Information regarding periodic folios set on the reservation.",
          "$ref": "#/definitions/resPeriodicFolioType"
        },
        "proratedBilling": {
          "description": "In case of Appartment style billing indicates whether a prorated amount should be used for an Apartment Style Billing rate.",
          "type": "boolean"
        },
        "reservationPreConfiguredRoutingInstruction": {
          "description": "Information regarding the selected preconfigured routing instruction on the reservation.",
          "$ref": "#/definitions/resPreConfiguredRoutingInstrType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "reverseAdvanceCheckInAllowed": {
          "description": "This attribute is to verify if reverse advance check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/reservationTaxTypeInfo"
        },
        "transactionsPosted": {
          "description": "Specifies whether reservation has a financial transaction associated with it.",
          "type": "boolean"
        }
      }
    },
    "resCommunicationType": {
      "description": "Communication details for a reservation.",
      "type": "object",
      "properties": {
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        }
      }
    },
    "resCompAccountingType": {
      "description": "Information regarding comp accounting on the reservation.",
      "type": "object",
      "properties": {
        "authorizer": {
          "description": "ID of the employee who will act as the host for this guest.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "compPostings": {
          "description": "Indicates if the Comp Billing/posting Exist",
          "type": "string",
          "maxLength": 5,
          "minLength": 0
        },
        "compType": {
          "description": "Code used to identify the casino comp type and ranking of a guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resDepositPoliciesType": {
      "description": "A list of deposit policies attached with the reservation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resDepositPolicyType"
      }
    },
    "resDepositPolicyType": {
      "description": "A deposit policy attached with the reservation.",
      "type": "object",
      "properties": {
        "amountDue": {
          "description": "Total amount due against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amountPaid": {
          "description": "Total amount paid against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "comments": {
          "description": "Comments attached with a deposit.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "policy": {
          "description": "Reservation deposit policy details.",
          "$ref": "#/definitions/depositPolicyType"
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        }
      }
    },
    "resExpectedTimesType": {
      "description": "Holds the Arrival and Departure Time Information",
      "type": "object",
      "properties": {
        "reservationExpectedArrivalTime": {
          "description": "Arrival Time",
          "type": "string",
          "format": "date-time"
        },
        "reservationExpectedDepartureTime": {
          "description": "Departure Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "resGuaranteeType": {
      "description": "Validations type record returned after Validations are done.",
      "type": "object",
      "properties": {
        "guaranteeCode": {
          "description": "Guarantee Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "onHold": {
          "description": "Guarantee Code.",
          "type": "boolean"
        },
        "shortDescription": {
          "description": "Guarantee Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "resGuestAdditionalInfoType": {
      "type": "object",
      "properties": {
        "dateOfEntry": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "guestClassification": {
          "description": "Guest Classification for the data export.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "guestStatus": {
          "description": "Guest Status for the data export.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "lastStay": {
          "description": "Last Stay information of the guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "nextDestination": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "type": "string"
        },
        "portOfEntry": {
          "description": "Entry point into the country. (Croatian Requirements).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "preferredRoomType": {
          "description": "Preferred Room Type of the guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "purposeOfStay": {
          "description": "Purpose of stay.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resGuestExternalInfoType": {
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "type": "object",
      "properties": {
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        }
      }
    },
    "resGuestInfoType": {
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "type": "object",
      "properties": {
        "accompanyGuests": {
          "description": "List of guest names that are accompanying the reservation guest",
          "$ref": "#/definitions/resAccompanyGuestListType"
        },
        "address": {
          "description": "Address information that is attached to the reservation guest",
          "$ref": "#/definitions/addressSearchType"
        },
        "alternateFullName": {
          "description": "Altername full display name",
          "type": "string"
        },
        "alternateGivenName": {
          "description": "Alternate given name, first name or names",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "alternateSurname": {
          "description": "Alternate family name, last name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "birthDate": {
          "description": "Date of birth",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "email": {
          "description": "Email address",
          "$ref": "#/definitions/basicEmailType"
        },
        "externalInfo": {
          "description": "External information about the guest associated with the reservation.",
          "$ref": "#/definitions/resGuestExternalInfoType"
        },
        "fullName": {
          "description": "Full display name",
          "type": "string"
        },
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "guestLastStayInfo": {
          "description": "Contains information regarding the last stay of this guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "guestRestricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        },
        "guestRestrictedCode": {
          "description": "Guest profile restricted reason code",
          "type": "string"
        },
        "guestRestrictedReasonDesc": {
          "description": "Guest profile restricted reason description",
          "type": "string"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "membership": {
          "description": "The Membership object identifying the frequent customer reward program.",
          "$ref": "#/definitions/membershipInfoType"
        },
        "middleName": {
          "description": "The middle name of the person name",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
          "$ref": "#/definitions/namePrefixType"
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nameType": {
          "$ref": "#/definitions/nameTypeType"
        },
        "nationality": {
          "description": "Affiliation or ethnicity to a particular country.",
          "$ref": "#/definitions/countryNameType"
        },
        "phoneNumber": {
          "description": "Phone number",
          "$ref": "#/definitions/phoneNumberType"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        },
        "surnamePrefix": {
          "description": "e.g \"van der\", \"von\", \"de\"",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "vip": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "$ref": "#/definitions/vIPType"
        }
      }
    },
    "resGuestType": {
      "description": "A collection of ResGuest objects, identifying the guests associated with this reservation. Which guests are in which room is determined by each RoomStays ResGuestRPHs collection.",
      "type": "object",
      "properties": {
        "arrivalTransport": {
          "$ref": "#/definitions/transportInfoType"
        },
        "departureTransport": {
          "$ref": "#/definitions/transportInfoType"
        },
        "primary": {
          "description": "When true indicates this is the primary guest.",
          "type": "boolean"
        },
        "profileInfo": {
          "description": "A collection of Profiles or Unique IDs of Profiles.",
          "type": "object",
          "properties": {
            "profile": {
              "description": "Provides detailed information regarding either a company or a customer profile.",
              "$ref": "#/definitions/profileType"
            },
            "profileCashieringDetail": {
              "description": "Cashiering details for the profile.",
              "$ref": "#/definitions/profileCashieringDetailType"
            },
            "profileIdList": {
              "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
              "$ref": "#/definitions/profileIdList"
            },
            "registrationCardNo": {
              "description": "Unique identifier of the police registration card number.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            }
          }
        },
        "reservationGuestRPH": {
          "description": "This is a reference placeholder, used as an index for this guest in this reservation. In the ResGuest object it is used like all other RPH attributes to send the delta of a reservation. It is used by the RoomStay and Service objects to indicate which guests are associated with that room stay or service.",
          "type": "string",
          "maxLength": 8,
          "minLength": 1
        },
        "visaInfo": {
          "$ref": "#/definitions/visaInfoType"
        }
      }
    },
    "resHousekeepingType": {
      "description": "Holds housekeeping turndown service information for the room.",
      "type": "object",
      "properties": {
        "expectedServiceTime": {
          "description": "Expected Start Time for housekeeping task(s).",
          "type": "string"
        },
        "facilityTaskInfo": {
          "description": "The facility task applicable for the current day. This will be information only and not used for any updates.",
          "$ref": "#/definitions/facilityTaskType"
        },
        "instructions": {
          "description": "Turndown instructions for the room.",
          "type": "string"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "roomStatus": {
          "description": "Current room status. Current room status is populated only if room is assigned to the reservation and reservation is due in or in house.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "serviceTime": {
          "description": "This is the Turndown room service time.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "turndownRequested": {
          "description": "Indicates whether guest wants turndown facility or not.",
          "type": "boolean"
        }
      }
    },
    "resInventoryItemSourceType": {
      "description": "Defines whether the item is setup due to a Rate Plan, Package or a Block.",
      "type": "object",
      "properties": {
        "blockId": {
          "description": "Block Unique ID, If populated specifies that the item is setup due to a Block.",
          "$ref": "#/definitions/blockId"
        },
        "packageCode": {
          "description": "Package Code, If populated specifies that the item is setup due to a Package.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "packageInternalID": {
          "description": "Source Reservation Package Opera Internal Unique Id. This is the unique Id used for the reservation package associated with this item.",
          "type": "number"
        },
        "ratePlanCode": {
          "description": "Rate Plan Code, If populated specifies that the item is setup due to a Rate Plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "welcomeOffer": {
          "description": "If true, it implies that the item has been attached to the reservation as part of a Welcome Offer",
          "type": "boolean"
        }
      }
    },
    "resInventoryItemType": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "item": {
          "description": "Specifies Items and its attributes. When used for data manipulation for Items setup on reservation, etc only code is considered. Other Attributes are for used to provide information during fetch operation.",
          "$ref": "#/definitions/itemInfoType"
        },
        "quantity": {
          "description": "Number of items booked.",
          "type": "integer"
        },
        "source": {
          "description": "If exists specifies whether the item is setup due to a Rate Plan, Package or a Block.",
          "$ref": "#/definitions/resInventoryItemSourceType"
        },
        "timeSpan": {
          "description": "Begin and end date and time of the items applicability.",
          "$ref": "#/definitions/dateRangeType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "resInventoryItemsType": {
      "description": "Defines a collection of inventory items attached to a reservation.",
      "type": "object",
      "properties": {
        "item": {
          "description": "Inventory item attached to a reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/resInventoryItemType"
          }
        },
        "itemClassCode": {
          "description": "The Item Class ID which the item belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resMobileNotificationsType": {
      "description": "Contains the status of Room Ready and Key Ready messages.",
      "type": "object",
      "properties": {
        "checkoutMessageReceived": {
          "description": "Indicates if the Mobile checkout message is received.",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Error message when Mobile Notification has failed.",
          "type": "string"
        },
        "keyReady": {
          "description": "Denotes the status of Key Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "requiresAction": {
          "description": "Indicates if user action is required. The action could be for sending Room Ready or Key Ready Notification. It could also be for initiating Checkout",
          "type": "boolean"
        },
        "roomReady": {
          "description": "Denotes the status of Room Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        }
      }
    },
    "resPaymentCardType": {
      "description": "Information on a credit card for the customer.",
      "type": "object",
      "properties": {
        "approvalAmountNeeded": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "Approval code sent by the credit card company on a successful authorization.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "attachCreditCardToProfile": {
          "description": "Attach the credit card to profile.",
          "type": "boolean"
        },
        "cardHolderName": {
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cardNumber": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberMasked": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardOrToken": {
          "description": "This contains information on whether credit card is tokenized (token enabled). A value of 'Token' indicates credit card is token enabled and 'CardNumber' indicates non token environment for this payment card type.",
          "$ref": "#/definitions/cardNumberTypeType"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
          "type": "boolean"
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "currentAuthorizedAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "expirationDate": {
          "description": "Expiration date of the credit card",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expirationDateExpired": {
          "type": "boolean"
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "swiped": {
          "type": "boolean"
        },
        "userDefinedCardType": {
          "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
          "type": "string",
          "maxLength": 2,
          "minLength": 0
        }
      }
    },
    "resPeriodicFolioType": {
      "description": "Information regarding periodic folios set on the reservation.",
      "type": "object",
      "properties": {
        "frequency": {
          "description": "Frequency in number of days when folios should be printed for this reservation.",
          "type": "integer"
        },
        "lastFolioDate": {
          "description": "Latest date when a folio was printed using the \"Periodic Batch Folios\" option",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastSettlementDate": {
          "description": "Latest date when a direct bill settlement was automatically done using the \"Direct Bill Batch Folios\" option.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "resPreConfiguredRoutingInstrType": {
      "description": "Instruction to attach Pre-Configured Routing Instructions to a Reservation.",
      "type": "object",
      "properties": {
        "authorizerInfo": {
          "description": "The authorizer information for Promotion Code with attached Complimentary Routing",
          "$ref": "#/definitions/authorizerInfoType"
        },
        "profileType": {
          "description": "Profile Type with attached Routing Instruction.",
          "$ref": "#/definitions/resProfileTypeType"
        },
        "promotionCode": {
          "description": "Promotion Code with attached Complimentary Routing.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "Rate Code with attached Routing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resProfileTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Group",
        "TravelAgent",
        "Source",
        "ReservationContact",
        "BillingContact",
        "Addressee"
      ]
    },
    "resRevenueBalanceType": {
      "description": "Revenue and Balance Amount summary for the reservation.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "Balance amount on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "foodAndBevRevenue": {
          "description": "Food and Beverage Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "nonRevenue": {
          "description": "Total Non Revenue posted on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "otherRevenue": {
          "description": "Other Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomRevenue": {
          "description": "Room Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalFixedCharge": {
          "description": "Total Fixed Charges on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPayment": {
          "description": "Total payment received for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalRevenue": {
          "description": "Total Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "resSharedGuestInfoType": {
      "description": "Contains information regarding the share reservation.",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "profileId": {
          "$ref": "#/definitions/profileId"
        }
      }
    },
    "resSharedGuestListType": {
      "description": "Collection of shared guest reservations.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resSharedGuestInfoType"
      }
    },
    "resStatClassificationType": {
      "description": "Statistical Classification information for the reservation.",
      "type": "object",
      "properties": {
        "rateTier": {
          "description": "Rate Tier used calculate statistics for export(DRS).",
          "type": "integer"
        },
        "roomType": {
          "description": "Room Type used to calculate statistics for export(DRS).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservation": {
      "description": "Validation checks includes the following: - Reservation is not valid to be checked in. - Split is still required before the reservation can be checked in. - Room information is missing. - Payment information is missing. - The status of the room needs to be reviewed. - Sharers was impacted. The check-in process affected the reservation details of shared guests on the reservation. - Sharers was not impacted. The check-in process has not affected the reservation details of shared guests on the reservation.",
      "type": "object",
      "properties": {
        "fetchReservationInstruction": {
          "description": "Instructions to fetch reservations .",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/checkedInReservationInstructionType"
          }
        },
        "includeNotifications": {
          "description": "When \"true\" alerts and comments are fetched. When \"false\", these alerts and comments are not retrieved.",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservation": {
          "description": "Criteria element to check-in a reservation",
          "type": "object",
          "properties": {
            "checkOutTime": {
              "description": "Request to update the checkout time.",
              "type": "string",
              "format": "date-time"
            },
            "endCheckInProcessTime": {
              "description": "Represents the time the user compeletes the check in process.",
              "type": "string",
              "format": "date-time"
            },
            "ignoreWarnings": {
              "description": "Dictates whether to ignore warnings ( e.g. room availability ) before check in.",
              "type": "boolean"
            },
            "lockHandle": {
              "description": "An id representing the record lock for this reservation. When passed, update operation will verify that this lock is still valid.",
              "type": "number"
            },
            "overrideAdvancePaymentValidation": {
              "description": "Flag to override advance payment validation.",
              "type": "boolean"
            },
            "printRegistration": {
              "description": "Flag for Print Registration Card",
              "type": "boolean"
            },
            "profilePrivacyPrompted": {
              "description": "Dictates whether Profile privacy stop in check in is prompted.",
              "type": "boolean"
            },
            "roomId": {
              "description": "Expected room no. If this attribute is included, then Opera will check if the currently configured room no in the database matches this value.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "startCheckInProcessTime": {
              "description": "Represents the time the user starts the check in process.",
              "type": "string",
              "format": "date-time"
            },
            "stopCheckin": {
              "description": "Indicates the Stop Check In reservation Global Alert flag.",
              "type": "boolean"
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationAllowedActionType": {
      "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
      "type": "string",
      "enum": [
        "Cancel",
        "Move",
        "PreCharge",
        "PostCharge",
        "FacilitySchedule",
        "Upsell",
        "PreCheckIn",
        "PostToNoShowCancel",
        "NoShow",
        "NameChange",
        "Discount",
        "HouseKeeping",
        "EnrollToPrimaryMembership",
        "EnrollInProgress"
      ]
    },
    "reservationAllowedActionsType": {
      "description": "Allowed action.",
      "type": "array",
      "maxItems": 11,
      "items": {
        "$ref": "#/definitions/reservationAllowedActionType"
      }
    },
    "reservationAutoRoomAssignRequestType": {
      "description": "Request criteria for auto assignment of rooms to reserved reservations.",
      "type": "object",
      "properties": {
        "reservationCriteria": {
          "description": "A list of reservation ids which will be used to auto assign rooms.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationIdList"
          }
        },
        "roomNumberLocked": {
          "description": "Update the do not move flag used to locking the reservation room number.",
          "type": "boolean"
        },
        "roomSelectionCriteria": {
          "description": "Search type for the rooms which will be used to assign.",
          "type": "object",
          "properties": {
            "connectingRoomsOnly": {
              "description": "This flag when set to true will include only connecting rooms.",
              "type": "boolean"
            },
            "departureTime": {
              "description": "When IncludeDueOut is enable,it is the departure time before which to search.",
              "type": "string",
              "format": "date-time"
            },
            "excludeFloorPreferences": {
              "description": "It indicates to exclude rooms with the selected Floor(s).It allows alphanumeric values(e.g.,01,02,03,GROUND,five)",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              }
            },
            "excludeRoomFeatures": {
              "description": "It indicates to exclude rooms with the selected Room Feature(s). It allows alphanumeric values(e.g.,TUB,BOLCONY,MV)",
              "$ref": "#/definitions/roomFeaturesType"
            },
            "floor": {
              "description": "The floor of room to be fetched.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "hotelId": {
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "hotelRoomDateRange": {
              "description": "Date range instructions.",
              "$ref": "#/definitions/timeSpanType"
            },
            "includeAllRoomConditions": {
              "description": "This flag when set to true will include all room conditions, when set to false then room with \"General Assignment\" condition type will be excluded from the result.",
              "type": "boolean"
            },
            "includeAttendentInRoom": {
              "description": "This flag when set to true will includes attendent in Rooms",
              "type": "boolean"
            },
            "includeComponentRooms": {
              "description": "This flag when set to true will include all component rooms",
              "type": "boolean"
            },
            "includeDepartureRooms": {
              "description": "Indicates if departure rooms are to be included in the auto assignment.",
              "type": "boolean"
            },
            "includeDueOut": {
              "description": "This flag when set to true will include rooms assigned to due out reservations.",
              "type": "boolean"
            },
            "includeOORoomCheck": {
              "description": "This flag when set to true will work for Available Rooms functionality",
              "type": "boolean"
            },
            "includePseudoRooms": {
              "description": "This flag when set to true will include all pseudo rooms",
              "type": "boolean"
            },
            "limit": {
              "description": "Indicates maximum number of records a Web Service should return.",
              "type": "integer"
            },
            "offset": {
              "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
              "type": "integer"
            },
            "orderBy": {
              "description": "When Forecast Rotation is checked, the room rotation order will consider any future reservations for point calculation and reorder the rooms accordingly.This is supported when OPERA Control Room Rotation and Forecast Rotation Points are active.",
              "$ref": "#/definitions/hotelRoomsOrderBy"
            },
            "perfectFitRoomsOnly": {
              "description": "When this flag is set to true, it will fetch only rooms that have exactly Y nights free with the reservation guest(s) points. This will prevent any gaps in room assignment. This is supported when OPERA Control Room Rotation and Forecast Rotation Points are active.",
              "type": "boolean"
            },
            "pseudoRoomsOnly": {
              "description": "This flag when set to true will include only pseudo rooms",
              "type": "boolean"
            },
            "reservationId": {
              "$ref": "#/definitions/reservationId"
            },
            "roomClass": {
              "description": "The room class of hotel rooms to be fetched.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "roomFeatures": {
              "description": "The Room Features of the room to be fetched.",
              "$ref": "#/definitions/roomFeaturesType"
            },
            "roomNumberWildcard": {
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "roomRange": {
              "description": "Room range instructions.",
              "$ref": "#/definitions/roomRangeType"
            },
            "roomStatusFilter": {
              "description": "Fetch instructions that should be used to get hotel rooms.",
              "type": "object",
              "properties": {
                "hotelFORoomStatusList": {
                  "description": "Front office room status instructions to be used in requests for fetching housekeeping rooms.",
                  "type": "array",
                  "maxItems": 4000,
                  "items": {
                    "$ref": "#/definitions/frontOfficeRoomStatusType"
                  }
                },
                "hotelRoomStatusList": {
                  "description": "Hotel room status instructions to be used in requests for fetching rooms.",
                  "type": "array",
                  "maxItems": 4000,
                  "items": {
                    "$ref": "#/definitions/housekeepingRoomStatusType"
                  }
                }
              }
            },
            "roomTypes": {
              "description": "The room types of hotel rooms to be fetched.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              }
            },
            "smokingPreference": {
              "description": "The smoking preference of room to be fetched.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "useAIRoomAssignment": {
              "description": "If the AI ROOM ASSIGNMENT application parameter is set to Y, this flag when set to true will use the AI Room Assignment algorithm to fetch the results in order of suitability.",
              "type": "boolean"
            },
            "useAssociatedProfilePreferences": {
              "description": "Indicates if preferences on the profile associated to the reservation should be used to determine the room type. The preferences for FLOOR, SMOKING and ROOM FEATURES will be used.",
              "type": "boolean"
            }
          }
        }
      }
    },
    "reservationBlockType": {
      "description": "Key information about the block for a reservation.",
      "type": "object",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers for the reservation.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "The Name of the block that is attached to the reservation.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "This is the HotelCode of the Block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationCertificateType": {
      "description": "Certificate is incentive.",
      "type": "string",
      "enum": [
        "Reward",
        "Incentive"
      ]
    },
    "reservationDepositType": {
      "description": "Reservation Deposit Type.",
      "type": "object",
      "properties": {
        "amountOwed": {
          "description": "Deposit Amount Owed.",
          "type": "number"
        },
        "amountPaid": {
          "description": "Deposit Amount Paid.",
          "type": "number"
        },
        "amountRequired": {
          "description": "Deposit Amount Required.",
          "type": "number"
        },
        "dueDate": {
          "description": "Deposit Due Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hasOutstanding": {
          "description": "Resolves whether reservation has outstanding deposit.",
          "type": "boolean"
        },
        "hasPaid": {
          "description": "Resolves whether reservation has paid deposit.",
          "type": "boolean"
        },
        "postingDate": {
          "description": "Deposit Posting Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "reservationDisplayColorInfoType": {
      "description": "Information of reservation display color, determined based on OPERA parameter RESERVATION_COLOR_DEFINITION ",
      "type": "object",
      "properties": {
        "colorDefinition": {
          "description": "Definition populated based on OPERA setting RESERVATION_COLOR_DEFINITION.",
          "$ref": "#/definitions/colorDefinitionType"
        },
        "colorDescription": {
          "description": "Description populated based on DisplayColor.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "displayColor": {
          "description": "Display Color of Reservation.",
          "$ref": "#/definitions/colorType"
        }
      }
    },
    "reservationECertificateType": {
      "description": "Reservation ECertificate Type Information.",
      "type": "object",
      "properties": {
        "actionType": {
          "description": "ECertificate status for the reservation.",
          "$ref": "#/definitions/requestActionType"
        },
        "eCertificateNo": {
          "description": "ECertificate Number for the reservation.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "eCertificateType": {
          "description": "ECertificate Type where value can be PROMOTION,AWARD,BENEFIT and OTHER",
          "$ref": "#/definitions/eCertificateClassficationType"
        }
      }
    },
    "reservationECertificatesType": {
      "description": "Collection of ECertificateType object.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationECertificateType"
      }
    },
    "reservationFolioWindowType": {
      "description": "Folio window view which holds the set of folios for a reservation.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "Running balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "payeeInfo": {
          "description": "The window's configured payee information.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "paymentMethod": {
          "description": "Payment Method Type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationFolioWindowsType": {
      "description": "Collection of reservation folio windows.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationFolioWindowType"
      }
    },
    "reservationForCCAuthType": {
      "description": "Reservation details, including a list of the associated payment methods.",
      "type": "object",
      "properties": {
        "guestFirstName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "guestName": {
          "description": "Guest name that is registered for the reservation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "paymentMethods": {
          "$ref": "#/definitions/reservationPaymentMethodsType"
        },
        "profileId": {
          "description": "ProfileId of the guest.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "reservationStatusInfo": {
          "$ref": "#/definitions/housekeepingRoomReservationStatusType"
        },
        "room": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "stayDateInfo": {
          "$ref": "#/definitions/stayDateInfoType"
        },
        "vipStatus": {
          "description": "VIP status of the guest.",
          "$ref": "#/definitions/vIPStatusType"
        }
      }
    },
    "reservationHistoryFutureInfoType": {
      "description": "Information of History and Future Reservation details attached to Profiles.",
      "type": "object",
      "properties": {
        "futureList": {
          "description": "Refer to Future list type document.",
          "$ref": "#/definitions/futureListType"
        },
        "historyList": {
          "description": "Refer to History list type document.",
          "$ref": "#/definitions/historyListType"
        }
      }
    },
    "reservationId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "reservationIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "reservationInfoType": {
      "description": "The Reservation class contains the current reservation being created or altered.",
      "type": "object",
      "properties": {
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "allowedActions": {
          "description": "Collection of reservation allowed actions.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "cancellationInfo": {
          "description": "Information regarding why reservation has been/was cancelled.",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "description": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          }
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "commissionPayoutTo": {
          "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
          "$ref": "#/definitions/commissionPayoutToType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "deposit": {
          "description": "Holds reservation deposit information.",
          "$ref": "#/definitions/reservationDepositType"
        },
        "displayColor": {
          "description": "Color setting of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "expectedServiceTime": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "guestPreferredCurrency": {
          "description": "Currency code preferred by guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelInterfaceStatusList": {
          "description": "Collection of Hotel Interfaces and rights, this is populated only when fetching interface status for rooms.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInterfaceStatusType"
          }
        },
        "hotelName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "housekeeping": {
          "description": "Information regarding housekeeping for this reservation.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "keyCount": {
          "description": "Number of keys created for the reservation.",
          "type": "integer"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastPrivacyPromptDate": {
          "description": "Last Privacy Prompt Date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready, Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "openFolio": {
          "description": "Returns true when reservation has an open folio.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.",
          "type": "boolean"
        },
        "paymentMethod": {
          "description": "Payment Method.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preRegistered": {
          "description": "Defines if the reservation is pre-registered or not.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "reservationFolioWindows": {
          "description": "Collection of reservation folio windows.",
          "$ref": "#/definitions/reservationFolioWindowsType"
        },
        "reservationGuest": {
          "description": "Collection of guests associated with the reservation.",
          "$ref": "#/definitions/resGuestInfoType"
        },
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "reservationPaymentMethod": {
          "description": "Payment method used for this reservation",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "roomStatus": {
          "description": "Current room status",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "specials": {
          "description": "Set of reservation preferences which belongs to the Specials group.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/taxTypeType"
        },
        "turndownInfo": {
          "description": "Currency code preferred by guest.",
          "$ref": "#/definitions/reservationTurndownInfoType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is not in Waitlist status anymore.",
          "$ref": "#/definitions/waitlistResType"
        },
        "walkInIndicator": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "welcomeOffer": {
          "description": "This flag will determine wheather the reservation is eligible for Welcome Offer or not.",
          "type": "boolean"
        }
      }
    },
    "reservationInterface": {
      "description": "Request to change the interface status for a reservation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationInterfaceStatus": {
          "description": "Contains collection of reservation and interface information",
          "type": "object",
          "properties": {
            "interfaceStatusList": {
              "description": "Collection of reservation and interface information.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/changeInterfaceStatusType"
              }
            },
            "logo": {
              "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
              "$ref": "#/definitions/codeType"
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationInterfaceStatusType": {
      "description": "Hotel Interface Type for a reservation and status of the various services",
      "type": "object",
      "properties": {
        "hotelInterface": {
          "description": "Hotel interface information for the reservation",
          "$ref": "#/definitions/hotelInterfaceType"
        },
        "interfaceRights": {
          "description": "Contains a list of status/rights for the various services under this interface",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceRightsStatusType"
          }
        },
        "roomExtension": {
          "description": "Identifier for the room extension",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationList": {
      "description": "A collection of reservation details attached to Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History,Future reservations",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "reservationLocatorType": {
      "description": "Holds the information for a Reservation Guest Locator",
      "type": "object",
      "properties": {
        "dateSpan": {
          "description": "Begin and End date range of the Guest Locator.",
          "$ref": "#/definitions/dateRangeType"
        },
        "locatorBy": {
          "description": "User that entered this Guest Locator.",
          "type": "string"
        },
        "locatorId": {
          "description": "Unique Id of the Guest Locator ( Locator Id )",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "locatorOn": {
          "description": "Date and time of the Guest Locator.",
          "type": "string",
          "format": "date-time"
        },
        "locatorText": {
          "description": "The Locator Text for the guest.",
          "type": "string"
        },
        "timeSpan": {
          "description": "Time span for the Guest Locator.",
          "$ref": "#/definitions/dateTimeSpanType"
        }
      }
    },
    "reservationLocatorsType": {
      "description": "Holds the Locator Information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationLocatorType"
      }
    },
    "reservationMembershipType": {
      "description": "Detailed information of the memberships.",
      "type": "object",
      "properties": {
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "linkMembership": {
          "type": "boolean"
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "primary": {
          "type": "boolean"
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        }
      }
    },
    "reservationPackageScheduleType": {
      "description": "A HotelPackageSchedule type.",
      "type": "object",
      "properties": {
        "computedResvPrice": {
          "description": "Computed Reservation Price of the package. Calculation Will Be Performed Based On Other Parameters.",
          "type": "number"
        },
        "consumptionDate": {
          "description": "The date the package was used or can be used.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "originalUnitAllowance": {
          "description": "The original allowance per unit of the package if it has been changed.",
          "type": "number"
        },
        "originalUnitPrice": {
          "description": "The original price per unit of the package if it has been changed.",
          "type": "number"
        },
        "reservationDate": {
          "description": "The date of the Reservation when this package is applicable. This can be different from the date the package will be consumed. Example are next day packages. Reservation date is when the package is applied to the guest and Consumption date is when the guest can consume the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "totalQuantity": {
          "description": "The total quantity of the package for this date, calculated based on the calculation rule as defined in the PackageHeaderType",
          "type": "integer"
        },
        "unitAllowance": {
          "description": "The allowance per unit of the package.",
          "type": "number"
        },
        "unitPrice": {
          "description": "The price per unit of the package.",
          "type": "number"
        }
      }
    },
    "reservationPackageType": {
      "description": "A ReservationPackageType class.",
      "type": "object",
      "properties": {
        "awardCode": {
          "description": "This is the Award code used to redeem the package if the package is a redemption package.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "consumptionDetails": {
          "description": "Package consumption details. Includes information for quantity , allowance etc.",
          "$ref": "#/definitions/packageConsumptionType"
        },
        "endDate": {
          "description": "Required value when changing a reservation package. If the original end date was null, then null is required.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "internalID": {
          "description": "Reservation Package Opera Internal Unique Id. This is the unique Id used for this reservation package.",
          "type": "number"
        },
        "newTimeSpan": {
          "description": "The changed dates(Start and End dates) for this product.",
          "$ref": "#/definitions/timeSpanType"
        },
        "packageCode": {
          "description": "Package code. This is the unique code used for the package and is a required element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "packageGroup": {
          "description": "Package group code. If this package is part of a package group, the group code is indicated here. This is a required element and is part of the key to fetch the correct package record .",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "packageHeaderType": {
          "description": "Package information from configuration.",
          "$ref": "#/definitions/packageCodeHeaderType"
        },
        "points": {
          "description": "Indicates the points used to redeem the redemption package.",
          "type": "integer"
        },
        "ratePlanCode": {
          "description": "The rate code which contains this package. If the package is not part of a rate code, this will be empty. Required element and part of the key to fetch the correct package record on the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "scheduleList": {
          "description": "A HotelPackageSchedule type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationPackageScheduleType"
          }
        },
        "source": {
          "description": "Indicates if the source of the product is Rate header, Rate Detail or Reservation. For new development this field is to be used for passing the product scource",
          "$ref": "#/definitions/productSourceType"
        },
        "startDate": {
          "description": "Required value when changing a reservation package. If the original start date was null, then null is required.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "reservationPaymentMethodType": {
      "type": "object",
      "properties": {
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            }
          }
        },
        "folioView": {
          "type": "integer"
        },
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "paymentMethod": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationPaymentMethodsType": {
      "description": "Defines reservation payment methods.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationPaymentMethodType"
      }
    },
    "reservationPoliciesType": {
      "description": "A collection of reservation deposit and cancellation policies.",
      "type": "object",
      "properties": {
        "cancellationPolicies": {
          "description": "A collection of reservation cancellation policies..",
          "$ref": "#/definitions/resCancellationPoliciesType"
        },
        "depositPolicies": {
          "description": "A collection of reservation deposit policies.",
          "$ref": "#/definitions/resDepositPoliciesType"
        },
        "name": {
          "description": "Name identifier for the reservation.",
          "type": "string"
        },
        "reservationIdList": {
          "description": "A list of Ids for reservation.",
          "$ref": "#/definitions/uniqueIDListType"
        }
      }
    },
    "reservationProfileType": {
      "type": "object",
      "properties": {
        "profile": {
          "description": "Provides detailed information regarding either a company or a customer profile.",
          "$ref": "#/definitions/profileType"
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "reservationQueueInformationType": {
      "description": "Information regarding the Date, Duration and Priority of the reservation on Queue for Check in.",
      "type": "object",
      "properties": {
        "averageQueueTimeCurrentReservations": {
          "description": "The average time, in seconds, of the reservations currently in queue.",
          "type": "integer"
        },
        "averageQueueTimeToCheckIn": {
          "description": "The average time, in seconds, a reservation was on queue prior to Check-In.",
          "type": "integer"
        },
        "guestTextInfo": {
          "description": "Information for the message sent to the user",
          "$ref": "#/definitions/queueTextInfoType"
        },
        "priority": {
          "description": "The Queue Priority given to this reservation.",
          "type": "integer"
        },
        "queueDate": {
          "description": "The Business date on which the reservation was due to arrive and is currently placed on Queue for Check In.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "timeSpan": {
          "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
          "type": "object",
          "properties": {
            "duration": {
              "type": "string"
            },
            "durationInSeconds": {
              "description": "The total duration, in seconds, the reservation is on Queue.",
              "type": "integer"
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        }
      }
    },
    "reservationQueuePriority": {
      "description": "Response to the request to add a reservation to the Queue for Check-In.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "queueInfo": {
          "description": "Queue Information for this reservation.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationQueuePriorityNumber": {
      "description": "Request to change the current priority of a reservation in Queue for Check-In.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "priority": {
          "description": "Priority which should be assigned to the reservation in Queue. If null, the topmost priority(1) will be assigned. All other reservations in the queue will be adjusted accordingly.",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationQueueRoomTypeStatisticsType": {
      "description": "Type for Room Type statistics for reservations currently in Queue for Check-In. Statistics would be the number of rooms for each room type which is currently in Queue. Statistics will also include the current number of rooms for each room status for the resort at the current time i.e the number of dirty rooms, clean rooms for each room type. In addition, the statistics will include the number of rooms per room type which are Vacant / Occupied.",
      "type": "object",
      "properties": {
        "fOStatus": {
          "description": "The number of rooms for the room type grouped by their FO status i.e Vacant or Occupied.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "frontOfficeStatus": {
                "description": "The FO status code i.e Vacant, Occupied.",
                "$ref": "#/definitions/frontOfficeRoomStatusType"
              },
              "roomStatus": {
                "description": "The total number of rooms for the room type grouped by their Room Status i.e Clean, Dirty etc..",
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "type": "object",
                  "properties": {
                    "housekeepingRoomStatus": {
                      "description": "The room status code example Clean, Dirty etc.",
                      "$ref": "#/definitions/housekeepingRoomStatusType"
                    },
                    "totalRooms": {
                      "description": "The total number of rooms for the room status.",
                      "type": "integer"
                    }
                  }
                }
              },
              "totalRooms": {
                "description": "The total number of rooms for the Front Office status.",
                "type": "integer"
              }
            }
          }
        },
        "roomType": {
          "description": "The room type for the statistics.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "totalInQueue": {
          "description": "The total number of reservations in Queue for this room type.",
          "type": "integer"
        }
      }
    },
    "reservationQueueStatistics": {
      "description": "Response for the fetch of current Reservations In Queue statistics. Contains the statistic information.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "statistics": {
          "description": "Queue Reservation statistics. Currently statistic is by Room Type.",
          "$ref": "#/definitions/reservationQueueStatisticsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationQueueStatisticsType": {
      "description": "Type for statistics of the reservations currently in Queue for Check-In.",
      "type": "object",
      "properties": {
        "averageQueueTimeCurrentReservations": {
          "description": "The average time, in seconds, of the reservations currently in queue.",
          "type": "integer"
        },
        "averageQueueTimeToCheckIn": {
          "description": "The average time, in seconds, a reservation was on queue prior to Check-In.",
          "type": "integer"
        },
        "roomType": {
          "description": "Room Type statistics for the reservations currently in Queue for Check-In.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationQueueRoomTypeStatisticsType"
          }
        }
      }
    },
    "reservationRoomOwnershipType": {
      "description": "Indicates if the assigned reservation room is an Owner/Referral or Regular room.",
      "type": "string",
      "enum": [
        "Owner",
        "Referral",
        "Regular"
      ]
    },
    "reservationRoomSelectionOverrideType": {
      "description": "Define the override flag which will be used when configuring a room to a reservation.",
      "type": "object",
      "properties": {
        "dayUseReserved": {
          "description": "If the current reservation is a Day Use, then check on Reserved rooms can be overridden when assigning rooms.",
          "type": "boolean"
        },
        "dirtyRoom": {
          "description": "Override the room selection even if the selected room has a \"dirty\" state.",
          "type": "boolean"
        },
        "holdRoom": {
          "description": "Override the Hold Room flag in the database and use the value passed.",
          "type": "boolean"
        },
        "inventoryRestriction": {
          "description": "Override the room selection even when there is no inventory.",
          "type": "boolean"
        },
        "occupancyRestriction": {
          "description": "Override the room selection even when room occupancy is exceeded.",
          "type": "boolean"
        },
        "outOfServiceRoom": {
          "description": "Override the room selection even if the selected room has an \"out-of-service\" state.",
          "type": "boolean"
        },
        "overrideExternalChecks": {
          "description": "Forcefully override update. For real-time CRS interfaces, this element is used as force selling indicator.",
          "type": "boolean"
        },
        "overrideInstruction": {
          "description": "Contains user information for the override action performed while booking a reservation.",
          "$ref": "#/definitions/overrideInstructionType"
        },
        "overrideRoomOwnership": {
          "description": "Override the room ownership indicator in the reservation when assigning rooms. This is applicable when Room Rotation OPERA Control is active.",
          "type": "boolean"
        },
        "overrideRotationRoom": {
          "description": "Override the rotation room with the selected room when assigning rooms.",
          "type": "boolean"
        },
        "rateChange": {
          "description": "Defines override rate type.",
          "$ref": "#/definitions/rateChangeInstructionType"
        },
        "rateRestriction": {
          "description": "Override the room selection even when there is rate restriction present for this room type.",
          "type": "boolean"
        },
        "roomNumberLocked": {
          "description": "Override the room number locked flag in the database and use the value passed.",
          "type": "boolean"
        },
        "roomOwnershipType": {
          "description": "Indicates if the reservation room is an owner or referral or regular room. This is applicable when Room Rotation OPERA Control is active.",
          "$ref": "#/definitions/reservationRoomOwnershipType"
        },
        "sleepDiscrepantRoom": {
          "description": "Override the room selection even when HouseKeeping configured the room to still be occupied.",
          "type": "boolean"
        }
      }
    },
    "reservationRoomSelectionType": {
      "description": "Defines search criteria needed to configure a room to a reservation.",
      "type": "object",
      "properties": {
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "includeDepartureRooms": {
          "description": "Indicates if departure rooms are to be included for room assignment.",
          "type": "boolean"
        },
        "includedSharers": {
          "description": "Valid share reservation identifier.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationIdList"
          }
        },
        "orderBy": {
          "description": "When Forecast Rotation is checked, future reservation's point calculation will be considered while determing the room order for the assignment.",
          "$ref": "#/definitions/hotelRoomsOrderBy"
        },
        "overrideInstructions": {
          "description": "If this element is present, override flags will be set when configuring the room to the reservation.",
          "$ref": "#/definitions/reservationRoomSelectionOverrideType"
        },
        "reservationIdList": {
          "$ref": "#/definitions/reservationIdList"
        },
        "roomId": {
          "description": "Room identifier which the reservation will hold.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomNumberLocked": {
          "description": "Update the do not move flag used to locking the reservation room number.",
          "type": "boolean"
        },
        "updateRoomTypeCharged": {
          "description": "Update the Room Type used for the Rate calculation.",
          "type": "boolean"
        }
      }
    },
    "reservationShortInfoType": {
      "type": "object",
      "properties": {
        "guestName": {
          "description": "Guest name that is registered for the reservation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "profileId": {
          "description": "ProfileId of the guest.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "reservationStatusInfo": {
          "$ref": "#/definitions/housekeepingRoomReservationStatusType"
        },
        "stayDateInfo": {
          "$ref": "#/definitions/stayDateInfoType"
        },
        "vipStatus": {
          "description": "VIP status of the guest.",
          "$ref": "#/definitions/vIPStatusType"
        }
      }
    },
    "reservationStatusEnumType": {
      "description": "Reservation Status Enum Type",
      "type": "string",
      "enum": [
        "DueIn",
        "DueOut",
        "CheckedIn",
        "CheckedOut"
      ]
    },
    "reservationStatusStatisticsResponseType": {
      "description": "Reservation Status Statistics",
      "type": "object",
      "properties": {
        "reservationStatusStatistics": {
          "description": "Statistics for each Reservation Status",
          "type": "array",
          "maxItems": 4,
          "items": {
            "$ref": "#/definitions/reservationStatusStatisticsType"
          }
        }
      }
    },
    "reservationStatusStatisticsType": {
      "description": "Reservation Statistics for a Reservation Status",
      "type": "object",
      "properties": {
        "reservationStatus": {
          "description": "Reservation Status.",
          "$ref": "#/definitions/reservationStatusEnumType"
        },
        "roomClasses": {
          "description": "Reservation Statistics for each Room Class",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomClassStatisticsType"
          }
        },
        "total": {
          "description": "Number of reservations.",
          "type": "integer",
          "maximum": 4000,
          "minimum": 0
        }
      }
    },
    "reservationStayHistoryFutureInfoType": {
      "description": "Information of History and Future Reservation details attached to Profiles.",
      "type": "object",
      "properties": {
        "futureList": {
          "description": "Refer to Future list type document.",
          "$ref": "#/definitions/stayFutureListType"
        },
        "historyList": {
          "description": "Refer to History list type document.",
          "$ref": "#/definitions/stayHistoryListType"
        }
      }
    },
    "reservationTaxTypeInfo": {
      "description": "Provides information about the Tax Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "taxExemptNo": {
          "description": "Tax exempt number on the profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationTransactionDiversionType": {
      "description": "A Transaction Diversion Rule Type",
      "type": "object",
      "properties": {
        "code": {
          "description": "Transaction Diversion Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "dailyDetails": {
          "description": "Collection of daily details of a Transaction diversion rule for a particular reservation.",
          "$ref": "#/definitions/transactionDiversionDailyDetailsType"
        },
        "description": {
          "description": "User defined message for the Transaction Diversion Rule.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "displaySequence": {
          "description": "User configured Sequence number.",
          "type": "number"
        },
        "diverted": {
          "description": "Transaction diversions that are diverted .",
          "type": "integer"
        },
        "hotelId": {
          "description": "Hotel code with which Transaction Diversion Rule is associated.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicator that tells whether the transaction diversion rule is active or not.",
          "type": "boolean"
        },
        "level": {
          "description": "Level of the Transaction Diversion rule that can be Property or Reservation.",
          "$ref": "#/definitions/transactionDiversionRuleLevelType"
        },
        "membership": {
          "description": "Membership type to consider while applying Diversion Instruction.",
          "$ref": "#/definitions/membershipTypeLevelType"
        },
        "notes": {
          "description": "The Note details related to the Transaction Diversion Rule.",
          "$ref": "#/definitions/commentInfoType"
        },
        "posted": {
          "description": "Transaction diversions that are posted.",
          "type": "integer"
        },
        "targetRoom": {
          "description": "Room number to receive all the diverted transactions configured for this instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "thresholds": {
          "description": "Threshold Details related to the Transaction diversion rule.",
          "$ref": "#/definitions/thresholdDetailsType"
        },
        "transactionCodes": {
          "description": "Collection of Transaction Code List",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "type": {
          "description": "Transaction Diversion Rule Types",
          "$ref": "#/definitions/transactionDiversionRuleTypeType"
        },
        "vipCode": {
          "description": "VIP code to consider while applying Diversion Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationTransactionDiversionsType": {
      "description": "List of Transaction Diversion rules.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationTransactionDiversionType"
      }
    },
    "reservationTurndownInfoType": {
      "description": "Turndown information for a reservation",
      "type": "object",
      "properties": {
        "allowed": {
          "description": "Indicates if turndown is allowed or not",
          "type": "boolean"
        },
        "status": {
          "description": "Indicates turndown status, values could be required, not required, completed",
          "$ref": "#/definitions/turndownStatusType"
        }
      }
    },
    "reservationsForCCAuthType": {
      "description": "List of reservations with their payment methods.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationForCCAuthType"
      }
    },
    "reservationsInQueue": {
      "description": "Response for the operation to fetch Reservations in Queue",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservations": {
          "description": "List of reservation currently in queue.",
          "$ref": "#/definitions/reservationList"
        },
        "roomStatusInfo": {
          "description": "Master Information regarding the room status for each of the rooms included in the response.",
          "$ref": "#/definitions/hotelRoomsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationsInfo": {
      "description": "Response object to the Fetch Reservation Request operation. Based on the criteria, reservation information is returned.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "masterInfoList": {
          "description": "Refer to Generic common types document",
          "type": "array",
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "reservationInfoList": {
          "description": "Collection of Reservations and their information.",
          "type": "object",
          "properties": {
            "reservationInfo": {
              "description": "Contains details of the reservation.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/reservationInfoType"
              }
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationsSummaryType": {
      "description": "Type which shows all fetched reservations summary depends on Fetch Summary Instruction.",
      "type": "object",
      "properties": {
        "blockSummary": {
          "description": "Holds reservation information related to block(s) searched.",
          "$ref": "#/definitions/blockResvSummaryType"
        },
        "paymentMethodSummary": {
          "description": "Payment methods summary of the reservations.",
          "$ref": "#/definitions/paymentMethodsSummaryType"
        },
        "roomSummary": {
          "description": "Room Summary of the reservations.",
          "$ref": "#/definitions/roomSummaryType"
        }
      }
    },
    "resvForBatchCCAut": {
      "description": "Response which contains a listing of reservations, and associated payment methods, that require credit card authorization.",
      "type": "object",
      "properties": {
        "hotelId": {
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservations": {
          "$ref": "#/definitions/reservationsForCCAuthType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "rewardCertificateType": {
      "description": "Point Saver reward.",
      "type": "string",
      "enum": [
        "Regular",
        "StayAnytime",
        "PointSaver"
      ]
    },
    "roleUserEntryType": {
      "description": "Role or User in which the log book entry belongs to.",
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "user": {
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        }
      }
    },
    "room": {
      "description": "The reservation must still be reserved to use this operation.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for assigning a room to a reservation.",
          "$ref": "#/definitions/reservationRoomSelectionType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomClassStatisticsType": {
      "description": "Reservation Statistics for a Room Class",
      "type": "object",
      "properties": {
        "roomClass": {
          "description": "Room Class name. Available room classes can be retrieved via /listOfValues/hotels/{hotelId}/roomClasses",
          "type": "string",
          "maxLength": 20
        },
        "roomTypes": {
          "description": "Reservation Statistics for each Room Type",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomTypeStatisticsType"
          }
        },
        "total": {
          "description": "Number of reservations.",
          "type": "integer",
          "maximum": 4000,
          "minimum": 0
        }
      }
    },
    "roomCleaningPriorityType": {
      "description": "Type to indicate the cleaning priority for a room.",
      "type": "object",
      "properties": {
        "prioritySequence": {
          "description": "Priority sequence of the room for cleaning.",
          "type": "integer"
        }
      }
    },
    "roomConditionAssigmentType": {
      "description": "Simple type for Room Condition assignment type. Valid values are Available and NotAvailable Only.",
      "type": "string",
      "enum": [
        "Available",
        "NotAvailable"
      ]
    },
    "roomConditionType": {
      "description": "Condition to be assigned on the room.",
      "type": "object",
      "properties": {
        "assignmentType": {
          "description": "Determine if room, after applying condition, is available or not in Room Assignment listing.",
          "$ref": "#/definitions/roomConditionAssigmentType"
        },
        "remarks": {
          "description": "Remarks on room condition assignment.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "roomCondition": {
          "description": "Code and Decription of Condition to be assigned on the room.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "roomDiscrepanciesType": {
      "description": "Room Discrepancies between front office and housekeeping room status and number of persons in the room.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomDiscrepancyType"
      }
    },
    "roomDiscrepancyType": {
      "description": "Simple type for discrepant room status instructions to be used in requests for fetching housekeeping and front office room discrepancy. Valid values are Sleep, Skip, Person Discrepancy, Due Out Only.",
      "type": "string",
      "enum": [
        "Sleep",
        "Skip",
        "PersonDiscrepancy"
      ]
    },
    "roomFeatureType": {
      "description": "Room Feature Information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "A code representing a room feature.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "A code representing a room feature.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "quantity": {
          "description": "Indicates quantity.",
          "type": "integer"
        }
      }
    },
    "roomFeaturesType": {
      "description": "A recurring element that identifies the room features.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomFeatureType"
      }
    },
    "roomHoldType": {
      "type": "object",
      "properties": {
        "comments": {
          "description": "Comments of the room hold.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "holdUntil": {
          "description": "The date and time when hold will expire.",
          "type": "string",
          "format": "date-time"
        },
        "holdUser": {
          "description": "User who placed room on hold.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "roomInterfaceStatus": {
      "description": "Response object for fetching room interface status",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "roomInterfaceStatusList": {
          "description": "Collection of room, reservation and interface status information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomKey": {
      "description": "Request for generation of room key.",
      "type": "object",
      "properties": {
        "additionalRooms": {
          "description": "Collection of additional rooms to be included in key creation of reservation room.",
          "$ref": "#/definitions/codeListType"
        },
        "encoderId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "encoderTerminal": {
          "type": "string",
          "maxLength": 2000
        },
        "keyCardType": {
          "$ref": "#/definitions/keyCardType"
        },
        "keyCardUId": {
          "type": "string",
          "maxLength": 2000
        },
        "keyOptions": {
          "type": "string",
          "maxLength": 2000
        },
        "keyTrack": {
          "description": "KeyTrack Data.",
          "$ref": "#/definitions/keyTrackType"
        },
        "keyType": {
          "$ref": "#/definitions/roomKeyType"
        },
        "keyValidityEnd": {
          "type": "string",
          "format": "date-time"
        },
        "keyValidityStart": {
          "type": "string",
          "format": "date-time"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "noOfKeys": {
          "type": "integer"
        },
        "reservationIdList": {
          "description": "Collection of unique reservation identifiers for the reservation we are trying to make a room key for.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "resort": {
          "type": "string",
          "maxLength": 2000
        },
        "roomKeyGuests": {
          "description": "Collection of of Room key guests for multiple guest room key functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomKeyGuest"
          }
        },
        "roomNumber": {
          "description": "A room number to generate a key for. When creating keys using just the room number, the interface may allow only one-shot keys.",
          "type": "string",
          "maxLength": 2000
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomKeyDetails": {
      "description": "Response for room key creation.",
      "type": "object",
      "properties": {
        "keyCardData": {
          "type": "string",
          "maxLength": 2000
        },
        "keyTrack": {
          "description": "KeyTrack Data.",
          "$ref": "#/definitions/keyTrackType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomKeyEncoderType": {
      "type": "object",
      "properties": {
        "deviceArea": {
          "type": "string"
        },
        "encoderId": {
          "type": "string"
        },
        "interfaceId": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "workstation": {
          "type": "string"
        }
      }
    },
    "roomKeyEncodersType": {
      "description": "Holds the key encoder right.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomKeyEncoderType"
      }
    },
    "roomKeyGuest": {
      "description": "Information about the guest for whom a key can be created.",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "First Name of the guest.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "guestKeyOptions": {
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "guestNameId": {
          "description": "Guest unique identifier to which the instruction will be routed.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "isAdult": {
          "description": "Flag to indicate wheter the guest is an Adult or a child.",
          "type": "boolean"
        },
        "isInactive": {
          "description": "Flag to indicate wheter the guest is an Adult or a child.",
          "type": "boolean"
        },
        "keyNumber": {
          "description": "Key Number of the card.",
          "type": "number"
        },
        "lastName": {
          "description": "Last Name of the guest.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "originalBalance": {
          "description": "Original Balance on the Key card.",
          "type": "number"
        },
        "remainingBalance": {
          "description": "Remaining Balance on the Key card.",
          "type": "number"
        }
      }
    },
    "roomKeyInfo": {
      "description": "Response of fetch room keys operation.",
      "type": "object",
      "properties": {
        "incidentalLimit": {
          "description": "Incidental limit on a reservation.",
          "type": "number"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "roomKeysInfoList": {
          "description": "Collection of Room Keys information.",
          "$ref": "#/definitions/roomKeysInfoListType"
        },
        "totalAuthorization": {
          "description": "Total Authorization on a reservation.",
          "type": "number"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomKeyInfoType": {
      "description": "Contains detail information of room keys .",
      "type": "object",
      "properties": {
        "additionalRooms": {
          "description": "Additional rooms included in the key creation of reservation room.",
          "$ref": "#/definitions/codeListType"
        },
        "guestInfo": {
          "description": "Guest information on the key. This information is available when multiple_guest_key is active.",
          "$ref": "#/definitions/roomKeyGuest"
        },
        "hotelId": {
          "description": "Name of the resort .",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "keyCount": {
          "description": "Number of keys has been created for the reservation .",
          "type": "string",
          "maxLength": 3,
          "minLength": 1
        },
        "keyExpiryDate": {
          "description": "Expiry date and time of the key.",
          "type": "string",
          "format": "date-time"
        },
        "keyOptions": {
          "description": "Key options of the key.",
          "$ref": "#/definitions/codeListType"
        },
        "keyStartDate": {
          "description": "Start date and time of the key.",
          "type": "string",
          "format": "date-time"
        },
        "keyTrack": {
          "description": "KeyTrack Data.",
          "$ref": "#/definitions/keyTrackType"
        },
        "reservationId": {
          "description": "Reservation ID of the reservation of the room key .",
          "$ref": "#/definitions/reservationId"
        },
        "roomId": {
          "description": "Room Number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "roomKeyInterfaceDetailType": {
      "type": "object",
      "properties": {
        "additionalRoomsLimit": {
          "description": "Maximum number of additional rooms allowed.",
          "type": "integer",
          "maximum": 999,
          "minimum": 1
        },
        "encoders": {
          "description": "Available room key interface encoders.",
          "$ref": "#/definitions/roomKeyEncodersType"
        },
        "hotelId": {
          "description": "Hotel code of the interface.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "interfaceDescription": {
          "description": "Description of the interface.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "interfaceName": {
          "description": "Name of the interface.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "interfaceRights": {
          "description": "Room key interface rights.",
          "$ref": "#/definitions/roomKeyInterfaceRightsType"
        },
        "multipleRoomKeys": {
          "description": "Indicator if additional rooms are allowed to be included in key creation.",
          "type": "boolean"
        },
        "propertyDateTime": {
          "description": "Current property date and time.",
          "type": "string",
          "format": "date-time"
        },
        "sendValidStartDateTime": {
          "description": "Indicator if the DLS Interface allows to send valid start date and time.",
          "type": "boolean"
        }
      }
    },
    "roomKeyInterfaceDetails": {
      "description": "Response with the configuration details of active room key interfaces including the available key encoders.",
      "type": "object",
      "properties": {
        "keyInterfaceDetails": {
          "description": "Collection of configuration details of active room key interfaces.",
          "$ref": "#/definitions/roomKeyInterfaceDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomKeyInterfaceDetailsType": {
      "description": "Configuration details of room key interface.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomKeyInterfaceDetailType"
      }
    },
    "roomKeyInterfaceRightType": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "right": {
          "type": "integer"
        },
        "rightsCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "roomKeyInterfaceRightsType": {
      "description": "Holds the key encoder right.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomKeyInterfaceRightType"
      }
    },
    "roomKeyMultipleGuests": {
      "description": "Short room key information containing  information about the multiple guests and room key options .",
      "type": "object",
      "properties": {
        "keyOptions": {
          "type": "string",
          "maxLength": 2000
        },
        "reservationIdList": {
          "description": "Collection of unique reservation identifiers for the reservation we are trying to make a room key for.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "roomKeyGuests": {
          "description": "Collection of of Room key guests for multiple guest room key functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomKeyGuest"
          }
        },
        "roomNumber": {
          "description": "A room number to generate a key for. When creating keys using just the room number, the interface may allow only one-shot keys.",
          "type": "string",
          "maxLength": 2000
        }
      }
    },
    "roomKeyStatus": {
      "description": "Respose for the reading of room key.",
      "type": "object",
      "properties": {
        "guestDepartureDate": {
          "$ref": "#/definitions/dateRangeType"
        },
        "guestDepartureTime": {
          "$ref": "#/definitions/dateTimeRangeType"
        },
        "guestFirstName": {
          "type": "string",
          "maxLength": 2000
        },
        "guestLastName": {
          "type": "string",
          "maxLength": 2000
        },
        "keyOptions": {
          "type": "string",
          "maxLength": 2000
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "room": {
          "type": "string",
          "maxLength": 2000
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomKeyType": {
      "description": "Simple type for representing room key type.",
      "type": "string",
      "enum": [
        "New",
        "Duplicate",
        "Lost",
        "OneShot",
        "RoomMove",
        "ReEncode",
        "Remove",
        "ModifyStay"
      ]
    },
    "roomKeysInfoListType": {
      "description": "Contains details of Room key.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomKeyInfoType"
      }
    },
    "roomMoveDetailType": {
      "description": "Room move history information.",
      "type": "object",
      "properties": {
        "date": {
          "description": "Business date on which room is moved.",
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "description": "Description of why room is moved.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fromRoom": {
          "description": "Room from which guest is moved.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Identifies the hotel code under which room is moved.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "movedBy": {
          "description": "The user who moved the guest.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "reasonCode": {
          "description": "Identifies the room move reason code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationId": {
          "description": "Unique identifier of the reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "toRoom": {
          "description": "Room to which guest is moved.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "roomMoveDetailsType": {
      "description": "List of room move details",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomMoveDetailType"
      }
    },
    "roomMoveHistory": {
      "description": "Response for the fetch room move history of a reservation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "roomMoveHistoryDetails": {
          "description": "List of room move history.",
          "$ref": "#/definitions/roomMoveDetailsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomOutOfOrderType": {
      "description": "Out Of Order and Out Of Service Room information.",
      "type": "object",
      "properties": {
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "newDateRange": {
          "description": "The new start date and end date, if the dates were changed as part of an update. This would be blank for new OO/OS rooms.",
          "$ref": "#/definitions/dateRangeType"
        },
        "reasonCode": {
          "description": "Reason Code why the room is OO/OS.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonDesc": {
          "description": "Reason Description why the room is OO/OS.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "repairRemarks": {
          "description": "Notes or Remarks on the OO/OS room",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "returnStatus": {
          "description": "Room Status which will be used on completion of OO/OS.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "roomStatus": {
          "description": "The out of order or out of service room status OO/OS.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "roomOwnershipType": {
      "description": "Define the search criteria for retrieving room ownership records",
      "type": "object",
      "properties": {
        "contractNumber": {
          "description": "Contract number for room owner.",
          "type": "string"
        },
        "endDate": {
          "description": "End Date of the room ownership record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "profileId": {
          "description": "Profile ID of the room ownership record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "roomCategory": {
          "description": "Room Category of the room ownership record.",
          "type": "string"
        },
        "roomId": {
          "description": "Room Id of room owner.",
          "type": "string"
        },
        "roomOwnershipId": {
          "description": "Unique Id for Room Owner record.",
          "type": "integer"
        },
        "roomType": {
          "description": "Room Type of the room ownership record.",
          "type": "string"
        },
        "startDate": {
          "description": "Start Date of the room ownership record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "status": {
          "description": "Status of the room ownership record.",
          "type": "string"
        }
      }
    },
    "roomPersonsType": {
      "type": "object",
      "properties": {
        "frontOfficePersons": {
          "type": "integer"
        },
        "houseKeepingPersons": {
          "type": "integer"
        }
      }
    },
    "roomRangeType": {
      "type": "object",
      "properties": {
        "fromRoomNumber": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "toRoomNumber": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "roomRateAvailReasonType": {
      "description": "Indicates the Room Rate is not available due to unavailability of enough items for the rate code.",
      "type": "string",
      "enum": [
        "Available",
        "Restricted",
        "RestrictedDueToInventory",
        "RestrictedDueToOccupancy",
        "RestrictedDueToItemInventory"
      ]
    },
    "roomRateType": {
      "type": "object",
      "properties": {
        "availability": {
          "description": "Used to specify an availability status for the room rate. When available value could be either not specified or \"Available\".",
          "$ref": "#/definitions/roomRateAvailReasonType"
        },
        "awards": {
          "description": "Membership Awards code applied on the reservation.",
          "$ref": "#/definitions/resAwardsType"
        },
        "barRanking": {
          "description": "Best Available rates ranking.",
          "type": "integer"
        },
        "bogoDiscount": {
          "description": "Indicates if the Rate Code has BOGO(Bye one Get one) indicator.",
          "type": "boolean"
        },
        "commissionAmount": {
          "description": "Indicates commission amount used by the rate plan.",
          "type": "integer"
        },
        "commissionCode": {
          "description": "Commission Code applicable for commission calculation for Travel Agent/Company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "commissionPercentage": {
          "description": "Indicates commission percentage used by the rate plan.",
          "type": "integer"
        },
        "commissionable": {
          "description": "Indicates Commission is applicable for commission calculation for Travel Agent/Company.",
          "type": "boolean"
        },
        "complimentary": {
          "description": "Indicates this reservation rate is complimentary.",
          "type": "boolean"
        },
        "credentialsRequired": {
          "description": "If true, indicates that credentials is required to sell the rate code.",
          "type": "boolean"
        },
        "discountAllowed": {
          "description": "Indicates if the Rate Code is discountable i.e discounts are allowed on the rate code.",
          "type": "boolean"
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fixedRate": {
          "description": "Fixed Rate Indicator.",
          "type": "boolean"
        },
        "foreignExchange": {
          "description": "Exchange Type information for the postings.",
          "$ref": "#/definitions/foreignExchangeType"
        },
        "guestCounts": {
          "description": "A collection of Guest Counts associated with the room rate.",
          "$ref": "#/definitions/guestCountsType"
        },
        "houseUseOnly": {
          "description": "Indicates this reservation is for House use.",
          "type": "boolean"
        },
        "inventoryLender": {
          "description": "Indicates whether the room type inventory was taken from the allotment or House availability.",
          "type": "string"
        },
        "marketCode": {
          "description": "The code that relates to the market being sold to (e.g., the corporate market, packages).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketCodeDescription": {
          "description": "Description of the market code.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "mealPlans": {
          "description": "Meal plan codes for rate plan code.",
          "$ref": "#/definitions/mealPlansType"
        },
        "numberOfUnits": {
          "description": "The number of rooms.",
          "type": "integer"
        },
        "packages": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/packageElementType"
          }
        },
        "promotionCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "rateDescription": {
          "description": "Rate code description.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "rateGroup": {
          "description": "For RatePlanSet equals BESTAVAILABLERATE, in case Rate Groups are enabled the element provides the rate group for the rate plan code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateLevel": {
          "description": "Rate plan type like Corporate,Regular,Military,Weekend etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rates": {
          "$ref": "#/definitions/ratesType"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "roomId": {
          "description": "A string value representing the unique identification of a room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomRateInfo": {
          "description": "Information about the Room Rate Combination.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "roomType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomTypeCharged": {
          "description": "Room Type used for the Rate calculation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCode": {
          "description": "To specify where the business came from e.g. radio, newspaper ad, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "stayProfiles": {
          "description": "Profile associated with the room Stay.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationProfileType"
          }
        },
        "suppressRate": {
          "type": "boolean"
        },
        "taxFreeGuestCounts": {
          "description": "A collection of Tax Free Guest Counts associated with the room rate. This list does not add to the guest count but just indicates number of tax free guests out of guest counts.",
          "$ref": "#/definitions/guestCountsType"
        },
        "taxIncluded": {
          "description": "If true, indicates if tax is included in the rate code.",
          "type": "boolean"
        },
        "total": {
          "$ref": "#/definitions/totalType"
        },
        "totalPoints": {
          "$ref": "#/definitions/pointsType"
        }
      }
    },
    "roomRoomType": {
      "description": "This type represents the primary room attributes.",
      "type": "object",
      "properties": {
        "accessible": {
          "description": "Indicates whether the room is accessibility compliant.",
          "type": "boolean"
        },
        "building": {
          "description": "Building associated with the room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the room.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "floor": {
          "description": "Floor of the Room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "floorDescription": {
          "description": "Description for the Floor of the Room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "meetingRoom": {
          "description": "Indicates whether the room is a Meeting Room",
          "type": "boolean"
        },
        "roomAssignmentRating": {
          "description": "Assignment Rating associated with the room.",
          "$ref": "#/definitions/ratePlanRatingType"
        },
        "roomCondition": {
          "description": "Code and description of condition assigned on the room.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "roomDescription": {
          "description": "Detail Long Description Of The Room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomFeatures": {
          "description": "Room Features for the room.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "roomId": {
          "description": "Code of the room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "Room type basic information of the room.",
          "$ref": "#/definitions/roomTypeShortInfoType"
        },
        "smokingPreference": {
          "description": "This indicates room smoking preference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "smokingPreferenceDescription": {
          "description": "This indicates the description of the room smoking preference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "roomRoomsType": {
      "description": "Collection of rooms.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomRoomType"
      }
    },
    "roomSectionType": {
      "type": "object",
      "properties": {
        "daySectionCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "eveningSectionCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "roomStatusListType": {
      "description": "Room Status Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/housekeepingRoomStatusType"
      }
    },
    "roomStatusStatisticsCountType": {
      "type": "object",
      "properties": {
        "housekeepingRoomStatus": {
          "type": "string"
        },
        "housekeepingRoomStatusCount": {
          "type": "integer"
        }
      }
    },
    "roomStatusStatisticsListType": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "roomStatusStatistics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/roomStatusStatisticsType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomStatusStatisticsType": {
      "type": "object",
      "properties": {
        "frontOfficeStatus": {
          "type": "string"
        },
        "roomClass": {
          "type": "string"
        },
        "roomStats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/roomStatusStatisticsCountType"
          }
        },
        "roomType": {
          "type": "string"
        }
      }
    },
    "roomStatusType": {
      "type": "object",
      "properties": {
        "frontOfficeStatus": {
          "description": "Front office status ( Occupied/Vacant ).",
          "$ref": "#/definitions/frontOfficeRoomStatusType"
        },
        "housekeepingStatus": {
          "description": "Housekeeping status ( Occupied/Vacant ).",
          "$ref": "#/definitions/frontOfficeRoomStatusType"
        },
        "reservationStatusList": {
          "description": "List of status of the reservation to which this Room is assigned..",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/housekeepingRoomReservationStatusType"
          }
        },
        "roomStatus": {
          "description": "Status of the room (Dirty/Clean/Inspected/Pickup).",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        }
      }
    },
    "roomStayType": {
      "type": "object",
      "properties": {
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "availableUpsellOfferCount": {
          "description": "Number of Upsell Offers Available for this stay. This will only be populated if the Upsell Instruction is included in the Allowed Instruction request",
          "type": "integer"
        },
        "bookingMedium": {
          "description": "Classifies the medium(Channel field on reservation screen) through which the reservation is made.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bookingMediumDescription": {
          "description": "Description of the booking medium.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "currentRoomInfo": {
          "description": "Room information of the reservation for the current day.",
          "$ref": "#/definitions/currentRoomInfoType"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "expectedTimes": {
          "description": "The Expected Arrival and Departure Times.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "guestCounts": {
          "$ref": "#/definitions/guestCountsType"
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready and Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "multiValueAttrs": {
          "description": "Informative indicators indicating different values of an attribute exists over the stay.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 2000
          }
        },
        "originalTimeSpan": {
          "description": "The Original Time Span(Arrival, Departure) which covers the Room Stay. In case of Rolling No Show TimeSpan's StratDate moves forward but OriginalTimeSpan's StratDate remains the same.",
          "$ref": "#/definitions/timeSpanType"
        },
        "ownerReservationType": {
          "description": "Indicates whether reservation is for Unit/Room Owner or Authorized User. If this attribute is not define it is a regular/rental reservation.",
          "$ref": "#/definitions/ownerResTypeType"
        },
        "primaryShareType": {
          "description": "This is populated in case of primary share scenario. This indicates whether this reservation is primary or non primary. Changes or postings to the 'non-primary' share reservation is not allowed.",
          "$ref": "#/definitions/primaryShareTypeType"
        },
        "printRate": {
          "description": "This control whether rate info will be printed in confirmation letter.",
          "type": "boolean"
        },
        "promotion": {
          "description": "Promotions applied to the reservation to get the promotional rate.",
          "$ref": "#/definitions/promotionType"
        },
        "registrationNumber": {
          "description": "Registration Number of the reservation for the current day.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "remoteCheckInAllowed": {
          "description": "Indicates whether the reservation is pre-registered for internet check-in or not.",
          "type": "boolean"
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "roomRates": {
          "description": "A collection of Room Rates associated with a particular Room Stay. Each Room Rate combination can have multiple rates. Example King room, Rack rate plan, Monday through Thursday, weekday amount, Friday and Saturday, weekend amount.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomRateType"
          }
        },
        "suiteWith": {
          "description": "Connecting Rooms.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "total": {
          "description": "The total amount charged for the Room Stay.",
          "$ref": "#/definitions/totalType"
        },
        "totalPoints": {
          "description": "The total number of Points charged for the Room Stay.",
          "$ref": "#/definitions/pointsType"
        },
        "upsellInfo": {
          "description": "Indicates Upsell Information to be applied on Reservation.",
          "$ref": "#/definitions/upsellInfoType"
        }
      }
    },
    "roomSummaryType": {
      "type": "object",
      "properties": {
        "assignedRooms": {
          "description": "Indicates summary of the assigned rooms.",
          "$ref": "#/definitions/assignedRoomsSummaryType"
        },
        "unassignedRooms": {
          "description": "Indicates summary of the unassigned rooms.",
          "$ref": "#/definitions/unassignedRoomsSummaryType"
        }
      }
    },
    "roomType": {
      "description": "This type represents the primary room attributes.",
      "type": "object",
      "properties": {
        "accessible": {
          "description": "Indicates whether the room is accessibility compliant.",
          "type": "boolean"
        },
        "attendant": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/currentServicingAttendantType"
          }
        },
        "building": {
          "description": "Building associated with the room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "componentRoomNumber": {
          "description": "This flag indicates component room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "componentRoomNumbers": {
          "description": "List of component room numbers.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "componentRooms": {
          "description": "This flag indicates component rooms.",
          "$ref": "#/definitions/roomRoomsType"
        },
        "connectingRooms": {
          "description": "This flag indicates connecting rooms.",
          "$ref": "#/definitions/roomRoomsType"
        },
        "description": {
          "description": "Description of the room.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "discrepancy": {
          "description": "Identifies the room discrepancy information.",
          "$ref": "#/definitions/roomDiscrepanciesType"
        },
        "floor": {
          "description": "Floor of the Room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "floorDescription": {
          "description": "Description for the Floor of the Room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hold": {
          "description": "Hold attributes if any.",
          "$ref": "#/definitions/roomHoldType"
        },
        "housekeeping": {
          "description": "Identifies the Housekeeping information..",
          "$ref": "#/definitions/housekeepingType"
        },
        "meetingRoom": {
          "description": "Indicates whether the room is a Meeting Room",
          "type": "boolean"
        },
        "outOfOrder": {
          "description": "Identifies the room Out of Order/Out of Service information.",
          "$ref": "#/definitions/roomsOutOfOrderType"
        },
        "resvInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationShortInfoType"
          }
        },
        "roomAssignmentRating": {
          "description": "Assignment Rating associated with the room.",
          "$ref": "#/definitions/ratePlanRatingType"
        },
        "roomDescription": {
          "description": "Detail Long Description Of The Room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomFeatures": {
          "description": "Room Features for the room.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "roomId": {
          "description": "Code of the room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomSection": {
          "description": "Room sections of the room.",
          "$ref": "#/definitions/roomSectionType"
        },
        "roomType": {
          "description": "Room type basic information of the room.",
          "$ref": "#/definitions/roomTypeShortInfoType"
        },
        "rotationRoomId": {
          "description": "Rotation room of the room type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sitePlanSection": {
          "description": "Identifies the site plan location of the room.",
          "$ref": "#/definitions/sitePlanSectionType"
        },
        "smokingPreference": {
          "description": "This indicates room smoking preference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "smokingPreferenceDescription": {
          "description": "This indicates the description of the room smoking preference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "turndownInfo": {
          "$ref": "#/definitions/turndownInfoType"
        }
      }
    },
    "roomTypeShortInfoType": {
      "description": "Basic information of room type.",
      "type": "object",
      "properties": {
        "accessible": {
          "description": "Indicates if room type is accessible.",
          "type": "boolean"
        },
        "building": {
          "description": "Building associated with the room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "houseKeeping": {
          "description": "Indicates if room type of the room is flagged as housekeeping. This is read-only.",
          "type": "boolean"
        },
        "maximumOccupancy": {
          "description": "Maximum occupancy for the room type.",
          "type": "integer"
        },
        "meetingRoom": {
          "description": "Indicates whether function space can be meeting room.",
          "type": "boolean"
        },
        "minimumOccupancy": {
          "description": "Minimum occupancy for the room type.",
          "type": "integer"
        },
        "pseudo": {
          "description": "Indicates if room is a pseudo. This is read-only.",
          "type": "boolean"
        },
        "roomAssignmentRating": {
          "description": "Assignment Rating associated with the room.",
          "$ref": "#/definitions/ratePlanRatingType"
        },
        "roomClass": {
          "description": "Room Class of the room. This is read-only.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomFeatures": {
          "description": "Room Features for the room.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "roomType": {
          "description": "Room type of the room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "shortDescription": {
          "description": "Short Description of room type.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "smokingPreference": {
          "description": "Specifies the smoking preference for room type of the room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "suite": {
          "description": "Indicates if room is a suite. This is read-only.",
          "type": "boolean"
        }
      }
    },
    "roomTypeStatisticsType": {
      "description": "Reservation Statistics for a Room Type",
      "type": "object",
      "properties": {
        "roomType": {
          "description": "Room Type name. Available room types can be retrieved via /listOfValues/hotels/{hotelId}/roomTypes",
          "type": "string",
          "maxLength": 20
        },
        "total": {
          "description": "Number of reservations.",
          "type": "integer",
          "maximum": 4000,
          "minimum": 0
        }
      }
    },
    "roomsAI": {
      "description": "Request to run AI Room Assignment and allocate rooms to incoming reservations.",
      "type": "object",
      "properties": {
        "hotelCodes": {
          "description": "List of resorts for which the room assignment algorithm needs to run.",
          "$ref": "#/definitions/codeListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomsHoldType": {
      "description": "Hold reason and the list of the rooms that are to be put on hold under that reason.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "Comments to the rooms being put on hold.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Resort where room hold is to take place.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reason": {
          "description": "List of rooms that are to be put on hold.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rooms": {
          "description": "Collection of room numbers that are to be placed on hold.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        }
      }
    },
    "roomsHoldsType": {
      "description": "List of rooms, reason, and comments.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomsHoldType"
      }
    },
    "roomsOutOfOrderType": {
      "description": "Date Range and reasons for a room being Out of Order/Out Of Service (If the room is OO/OS).",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomOutOfOrderType"
      }
    },
    "routingInfoListType": {
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding instructions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/routingInfoType"
      }
    },
    "routingInfoType": {
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding object.",
      "type": "object",
      "properties": {
        "comp": {
          "description": "Comp Accounting Routing Info",
          "type": "object",
          "properties": {
            "compAccountingInfo": {
              "$ref": "#/definitions/compAccountingType"
            },
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            }
          }
        },
        "folio": {
          "description": "Folio routing type.",
          "type": "object",
          "properties": {
            "aRNumber": {
              "description": "Accounts Receivable.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "guestInfo": {
              "description": "Guest details",
              "type": "object",
              "properties": {
                "profileIdList": {
                  "description": "Unique identifiers for the Profile for both internal and external systems.",
                  "$ref": "#/definitions/profileIdList"
                }
              }
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            },
            "paymentMethod": {
              "type": "string",
              "maxLength": 2000
            }
          }
        },
        "refreshFolio": {
          "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
          "type": "boolean"
        },
        "request": {
          "description": "Comp Accounting Request routing",
          "type": "object",
          "properties": {
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        },
        "room": {
          "description": "Room routing type.",
          "type": "object",
          "properties": {
            "guestDisplayName": {
              "description": "Display Name for the guest.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "guestNameId": {
              "description": "Guest unique identifier to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "reservationNameId": {
              "description": "Reservation name id to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "roomId": {
              "description": "Room number to route the instructions.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            }
          }
        }
      }
    },
    "routingInstructionType": {
      "description": "Routing limit can be one of the three: Credit Limit, Percetage Limit, Covers Limit",
      "type": "object",
      "properties": {
        "billingInstructions": {
          "description": "Set of Billing Instructions configured in this time span.",
          "$ref": "#/definitions/billingInstructionsType"
        },
        "covers": {
          "description": "Number of covers for this routing instruction.",
          "type": "number"
        },
        "creditLimit": {
          "description": "Allowable credit amount for this routing instruction. Null value means no limit, 0 equals zero.",
          "type": "number"
        },
        "duration": {
          "description": "Duration of this instruction.",
          "type": "object",
          "properties": {
            "daily": {
              "description": "Flag to indicate if the routing instruction is a daily instruction.",
              "type": "boolean"
            },
            "friday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            },
            "sunday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "timeSpan": {
              "$ref": "#/definitions/timeSpanType"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            }
          }
        },
        "limitUsed": {
          "description": "Amount of Credit used for this routing instruction.",
          "type": "number"
        },
        "percentageLimit": {
          "description": "The routing limit percentage allowed for this routing instruction.",
          "type": "number"
        },
        "routingLinkId": {
          "description": "Internal Routing Link Id identifier to which limit group the instruction belongs.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "transactionCodes": {
          "description": "Set of Transaction Codes configured in this time span.",
          "$ref": "#/definitions/trxCodesInfoType"
        }
      }
    },
    "salesInfoType": {
      "description": "Provides sales information about the profiles of type company, travel agent, source and contact.",
      "type": "object",
      "properties": {
        "accountSource": {
          "description": "Defines the account source.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "accountType": {
          "description": "Defines the account type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "actionCode": {
          "description": "Defines the action code.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "businessSegments": {
          "description": "Defines the Business segments.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "competitionCode": {
          "description": "Defines the competition code.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code used to filter the sales information.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "industryCode": {
          "description": "Defines the industry code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "influence": {
          "description": "Defines the influence for the contact profile.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "preferredRoom": {
          "description": "Defines the Preferred Room for profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "priority": {
          "description": "Defines the priority.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "roomsPotential": {
          "description": "Defines the rooms potential.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "scope": {
          "description": "Defines the scope.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "scopeCity": {
          "description": "Defines the scope city.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "scopeType": {
      "description": "Minimum required and complimentary values are applicable Per Stay.",
      "type": "string",
      "enum": [
        "PerDay",
        "PerStay"
      ]
    },
    "searchMatchType": {
      "description": "Search match indicating attribute and the matching value.",
      "type": "object",
      "properties": {
        "attribute": {
          "description": "Search match attribute.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "value": {
          "description": "Search match value.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "searchMatchesType": {
      "description": "List of Generic Name-Value-Pair Parameters used for super search matches.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/searchMatchType"
      }
    },
    "sentConfirmationStatus": {
      "type": "string",
      "enum": [
        "Pending",
        "Succeeded",
        "Failed"
      ]
    },
    "serviceRequest": {
      "description": "Service request.",
      "type": "object",
      "properties": {
        "action": {
          "description": "Description of the action taken to complete the request.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "closeDescription": {
          "description": "The follow up description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "closedBy": {
          "description": "The user who closed the service request.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "closedDate": {
          "description": "The date-time in which the service request was closed.",
          "type": "string",
          "format": "date-time"
        },
        "code": {
          "description": "Service request code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "comment": {
          "description": "Description of the service request.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "completionDate": {
          "description": "The date-time in which the service request was completed.",
          "type": "string",
          "format": "date-time"
        },
        "department": {
          "description": "The department that is associated with the service request code.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "guaranteedBy": {
          "description": "The user who guaranteed the completion of the service request.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "guestContactMethod": {
          "description": "Communication method picked from guest profile.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "guestName": {
          "description": "The guest name.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code of the service request.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "openDate": {
          "description": "The date-time in which the service request was opened.",
          "type": "string",
          "format": "date-time"
        },
        "priority": {
          "description": "The priority level of the service request.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "profileId": {
          "description": "Unique identifier of the guest.",
          "$ref": "#/definitions/profileId"
        },
        "reservationIdList": {
          "description": "Unique identifier of the reservation.",
          "$ref": "#/definitions/reservationIdList"
        },
        "room": {
          "description": "The room number in which the service request was created.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "serviceRequestId": {
          "description": "Unique identifier of the service request.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "status": {
          "description": "The status of the service request.",
          "$ref": "#/definitions/serviceRequestStatusType"
        }
      }
    },
    "serviceRequestStatusType": {
      "type": "string",
      "enum": [
        "Open",
        "PendingFollowUp",
        "Closed",
        "DoNotDisturb",
        "MakeUpRoom"
      ]
    },
    "serviceRequests": {
      "description": "Service request.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/serviceRequest"
      }
    },
    "serviceRequestsInfo": {
      "description": "Response object for service requests.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "serviceRequestsDetails": {
          "description": "List of service requests.",
          "$ref": "#/definitions/serviceRequests"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "servicingAttendantStatusType": {
      "description": "Possible values for the Status of a Servicing Attendant.",
      "type": "string",
      "enum": [
        "Standby",
        "Break",
        "Working",
        "Completed"
      ]
    },
    "setProcessingInstructions": {
      "description": "Request Type for setting instructions for commission processing on Agent or Reservation level.",
      "type": "object",
      "properties": {
        "agents": {
          "description": "List of commission processing instructions for agents and/or its associated reservations.",
          "$ref": "#/definitions/commissionProcessingAgentsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "shareDistributionInstructionType": {
      "description": "The type of Rate Amount Change to be done on the Sharer reservation. This can be FULL -> Full Rate for each Sharer. SPLIT-> Split the Rate amount between Sharer Reservations. ENTIRE -> This Sharer will get the total amount of the rate code for all the Sharer Reservations.",
      "type": "string",
      "enum": [
        "Full",
        "Entire",
        "Split",
        "CustomSplit"
      ]
    },
    "shiftRooms": {
      "description": "To quickly shift rooms for two reservations that are for the same arrival date and room type",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "sourceRoom": {
          "description": "Source Room request which defines parameters needed to shift rooms.",
          "$ref": "#/definitions/stayRoominfo"
        },
        "targetRoom": {
          "description": "Target Room request which defines parameters needed to shift rooms.",
          "$ref": "#/definitions/stayRoominfo"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "shortReservation": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationInfoList": {
          "description": "Short reservation information response.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "reservationsSummary": {
          "description": "Collection of Reservations summary and their information.",
          "$ref": "#/definitions/reservationsSummaryType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "sitePlanSectionType": {
      "description": "Represents the site plan section record.",
      "type": "object",
      "properties": {
        "coordinates": {
          "description": "The coordinates for this section.",
          "type": "string"
        },
        "description": {
          "description": "The description of this section.",
          "type": "string"
        },
        "linkCode": {
          "description": "The link code for the section.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sectionCode": {
          "description": "The site plan section code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sectionType": {
          "description": "The section type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "sourceOfSaleType": {
      "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
      "type": "object",
      "properties": {
        "sourceCode": {
          "description": "The entity/channel who made the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceType": {
          "description": "Type of entity/channel who made the reservation..",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "statUnitCategoryType": {
      "description": "Supported statistical units.",
      "type": "string",
      "enum": [
        "Numeric",
        "Amount"
      ]
    },
    "statistics": {
      "description": "Response element for frontOffice statistics.",
      "type": "object",
      "properties": {
        "calendarDate": {
          "description": "Statistical date of the requested report.",
          "type": "string",
          "format": "date"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "metricSet": {
          "description": "Base statistic set holder which defines the span of the statistical data.",
          "type": "array",
          "items": {
            "description": ".",
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 2000
              },
              "end": {
                "type": "string",
                "format": "date"
              },
              "metrics": {
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "$ref": "#/definitions/hSKStatType"
                }
              },
              "start": {
                "type": "string",
                "format": "date"
              }
            }
          }
        },
        "statisticsCode": {
          "description": ".",
          "$ref": "#/definitions/hSKStatReportCodeType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "status": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stayDateInfoType": {
      "description": "Room attached with stay detail information",
      "type": "object",
      "properties": {
        "expectedTimes": {
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "stayFutureListType": {
      "description": "A collection of reservation history details attached to Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : Future reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "stayHistoryListType": {
      "description": "A collection of reservation history details attached to Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "stayInfoType": {
      "description": "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.",
      "type": "object",
      "properties": {
        "adultCount": {
          "description": "A collection of Guest Counts associated with Room Stay.",
          "type": "integer"
        },
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "balance": {
          "description": "Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "bookingChannelCode": {
          "description": "Booking channel code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "childCount": {
          "description": "A collection of Child Counts associated with Room Stay.",
          "type": "integer"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "componentRoomType": {
          "description": "True indicates room type is a component type.",
          "type": "boolean"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "depositPayments": {
          "description": "A collection of deposit and/or payments for the Room Stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "expectedTimes": {
          "description": "The expected arrival, return and departure times of the guest.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "fixedRate": {
          "description": "True if the rate is a fixed rate, otherwise false",
          "type": "boolean"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "guestServiceStatus": {
          "description": "Service Status of In House guest like DND or MUP",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "linkCode": {
          "description": "Party code",
          "type": "string",
          "maxLength": 2000
        },
        "marketCode": {
          "description": "Market code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketDescription": {
          "description": "Description of Market code",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "numberOfRooms": {
          "description": "Room Id",
          "type": "integer"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "points": {
          "description": "The Points contains the number of points used to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "promotion": {
          "description": "Promotion Codes",
          "$ref": "#/definitions/promotionType"
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "ratePlanCode": {
          "description": "Rate plan code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateSuppressed": {
          "description": "Whether this rate should be suppressed from view",
          "type": "boolean"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "roomClass": {
          "description": "Room class code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomId": {
          "description": "Room Id",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "roomType": {
          "description": "Room type code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomTypeCharged": {
          "description": "Room type code that was charged",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "scheduledCheckoutTime": {
          "description": "Indicates that this reservation is scheduled for automated check out.",
          "type": "string",
          "format": "date"
        },
        "sourceCode": {
          "description": "Source of business",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "totalAmount": {
          "description": "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "upgradedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "stayReservationInfoType": {
      "description": "The Reservation class contains the current reservation being created or altered.",
      "type": "object",
      "properties": {
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        }
      }
    },
    "stayRoominfo": {
      "description": "Request which contains parameters needed to swap or shift rooms",
      "type": "object",
      "properties": {
        "arrivalDate": {
          "description": "Identifies Reservation arrival date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "roomId": {
          "description": "Room identifier which the reservation will hold.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "Identifies the reservations which are same room type/room category",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "stringLength200": {
      "description": "Used for Character Strings, length 0 to 200.",
      "type": "string",
      "maxLength": 200,
      "minLength": 0
    },
    "stringLength2000": {
      "description": "Used for Character Strings, length 0 to 2000.",
      "type": "string",
      "maxLength": 2000,
      "minLength": 0
    },
    "suggestedRoomType": {
      "description": "List of suggested rooms and component rooms.",
      "type": "object",
      "properties": {
        "componentRoomNumber": {
          "description": "List of component Room number belongs to a room.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "roomId": {
          "description": "Code of the room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "suggestedRooms": {
      "description": "Response of fetch suggested rooms operation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "suggestedRoomsType": {
          "description": "List of suggested rooms for room assignment.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/suggestedRoomType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "surnameType": {
      "description": "Family name, last name.",
      "type": "string",
      "maxLength": 80,
      "minLength": 0
    },
    "swapRooms": {
      "description": "To quickly swap or shift rooms for two reservations that are for the same arrival date and room type",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "sourceRoom": {
          "description": "Source Room request which defines parameters needed to swap rooms.",
          "$ref": "#/definitions/stayRoominfo"
        },
        "targetRoom": {
          "description": "Target Room request which defines parameters needed to swap rooms.",
          "$ref": "#/definitions/stayRoominfo"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taskSheetStatistics": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "taskStatisticsInfo": {
          "description": "Information regarding the Task Sheet statistics.",
          "$ref": "#/definitions/hSKTaskSheetStatisticsInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taskSheetType": {
      "description": "Task Sheet classification.",
      "type": "string",
      "enum": [
        "NoServiceRequired",
        "DoNotDisturb",
        "ManuallyCreated",
        "AutomaticGeneration",
        "Isolated",
        "ExtraRooms"
      ]
    },
    "taxType": {
      "description": "Applicable tax element. This element allows for both percentages and flat amounts. If one field is used, the other should be zero since logically, taxes should be calculated in only one of the two ways.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "code": {
          "description": "Code identifying the fee (e.g.,agency fee, municipality fee).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "type": {
          "description": "Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).",
          "$ref": "#/definitions/amountDeterminationType"
        }
      }
    },
    "taxTypeType": {
      "description": "Provides information about the Tax Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        }
      }
    },
    "taxesType": {
      "description": "A collection of taxes.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "tax": {
          "description": "An individual tax.",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/taxType"
          }
        }
      }
    },
    "telephoneInfoType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "telephoneType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "extension": {
          "description": "Extension to reach a specific party at the phone number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "thresholdDetailsType": {
      "description": "Type for the threshold elements.",
      "type": "object",
      "properties": {
        "complimentary": {
          "description": "The number of quantities, counts or minutes for which transaction diversion is allowed .",
          "type": "integer"
        },
        "entity": {
          "description": "Diversion entity type associated with the charge for the transaction diversion rule .",
          "$ref": "#/definitions/entityType"
        },
        "isEditable": {
          "description": "Configuring this flag to be TRUE will make the thresholds editable.",
          "type": "boolean"
        },
        "minRequired": {
          "description": "Minimum required number of quantities, counts or minutes that must be posted.",
          "type": "integer"
        },
        "scope": {
          "description": "Diversion scope for the transaction diversion rule.",
          "$ref": "#/definitions/scopeType"
        }
      }
    },
    "ticketType": {
      "description": "Reservation Ticket Type Information.",
      "type": "object",
      "properties": {
        "consumptionDate": {
          "description": "Tickets comsumption date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "description": {
          "description": "Package description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "issueDate": {
          "description": "Tickets issue date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "packageCode": {
          "description": "Package Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "price": {
          "description": "Tickets price.",
          "type": "number"
        },
        "quantity": {
          "description": "Number of tickets used to create multiple tickets.",
          "type": "integer"
        },
        "rateCode": {
          "description": "The Rate Code to which tickets belong to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reference": {
          "description": "Free text field for reference information.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reservationProductId": {
          "description": "Reference to the reservation product.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "status": {
          "description": "The Status Code for outbound WS call.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "statusDescription": {
          "description": "The Status Description for outbound WS call.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "ticketId": {
          "description": "Internal Unique ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "ticketNumber": {
          "description": "Ticket number.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "ticketsType": {
      "description": "Collection of TicketType objects.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/ticketType"
      }
    },
    "tierAdministrationType": {
      "description": "Do not upgrade membership. The membership may be downgraded.",
      "type": "string",
      "enum": [
        "Disabled",
        "NoUpgrade"
      ]
    },
    "timeSpanType": {
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "type": "object",
      "properties": {
        "duration": {
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "timeWindowType": {
      "description": "Defines a Time period with start time and an end time.",
      "type": "object",
      "properties": {
        "endTime": {
          "description": "End Time of the Time window.",
          "type": "string"
        },
        "startTime": {
          "description": "Start Time of the Time window.",
          "type": "string"
        }
      }
    },
    "totalType": {
      "description": "The total amount charged for the service including additional amounts and fees.",
      "type": "object",
      "properties": {
        "amountAfterTax": {
          "description": "The total amount including all associated taxes (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "amountBeforeTax": {
          "description": "The total amount not including any associated tax (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "baseAmount": {
          "description": "The rate's base price. Amount excluding price for any add to rate combine line package attached to the rate.Also excludes any discounts",
          "type": "number"
        },
        "code": {
          "description": "Type of charge.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fees": {
          "description": "A collection of fees or service charges.",
          "$ref": "#/definitions/feesType"
        },
        "rateOverride": {
          "description": "When true indicates that the rate amount has been overridden.",
          "type": "boolean"
        },
        "taxes": {
          "description": "A collection of taxes.",
          "$ref": "#/definitions/taxesType"
        }
      }
    },
    "traceResolveType": {
      "type": "object",
      "properties": {
        "resolvedBy": {
          "description": "User that resolved the trace",
          "type": "string"
        },
        "resolvedOn": {
          "description": "Date the trace was resolved",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "traceTimeInfoType": {
      "type": "object",
      "properties": {
        "dateTimeSpan": {
          "description": "Time span for the trace.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "enteredBy": {
          "description": "User that entered this trace.",
          "type": "string"
        },
        "traceOn": {
          "description": "Date of the trace.",
          "type": "string",
          "format": "date-time"
        },
        "traceTime": {
          "description": "Time of the trace",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "trackItActionType": {
      "description": "Identifies the response expected from staff or other parties relative to a Track It ticket.",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/actionStatusType"
        },
        "trackItAction": {
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "trackItGroup": {
      "description": "Group to which the Track It items belong.",
      "type": "string",
      "enum": [
        "Parcel",
        "Valet",
        "Baggage",
        "Lost"
      ]
    },
    "trackItId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "trackItItemType": {
      "description": "Detailed information of a Track It item.",
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/trackItActionType"
        },
        "assignedTo": {
          "$ref": "#/definitions/applicationUserType"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "followUpDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "group": {
          "$ref": "#/definitions/trackItGroup"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "location": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "quantity": {
          "type": "integer"
        },
        "referenceNumber": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationInfo": {
          "$ref": "#/definitions/trackItReservationInfoType"
        },
        "ticketNumber": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "trackItId": {
          "$ref": "#/definitions/trackItId"
        },
        "trackItLogList": {
          "$ref": "#/definitions/trackItLogListType"
        },
        "type": {
          "$ref": "#/definitions/trackItType"
        }
      }
    },
    "trackItItemsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItItemType"
      }
    },
    "trackItLogListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItLogType"
      }
    },
    "trackItLogType": {
      "description": "Individual activity log related to the Track It ticket.",
      "type": "object",
      "properties": {
        "businessDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "description": {
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "logDate": {
          "type": "string",
          "format": "date-time"
        },
        "logUserId": {
          "type": "integer"
        },
        "logUserName": {
          "type": "string"
        },
        "trackItId": {
          "$ref": "#/definitions/trackItId"
        },
        "trackItLogId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "type": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "trackItReservationInfoType": {
      "description": "Reservation info associated with a Track It item.",
      "type": "object",
      "properties": {
        "computedReservationStatus": {
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "guarantee": {
          "$ref": "#/definitions/resGuaranteeType"
        },
        "guestInfo": {
          "$ref": "#/definitions/resGuestInfoType"
        },
        "reservationIdList": {
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationStatus": {
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "roomId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomStatus": {
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "roomType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "trackItType": {
      "description": "Identifies the kind of Parcel, Baggage, or Lost items or Valet-managed vehicles or services.",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "url": {
          "$ref": "#/definitions/uRLType"
        }
      }
    },
    "transactionDiversionDailyDetailType": {
      "description": "List of daily details for Transaction Diversion rule.",
      "type": "object",
      "properties": {
        "date": {
          "description": "Daily details Date about when the rules are posted or diverted.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "diverted": {
          "description": "Transaction diversion rules that are diverted .",
          "type": "integer"
        },
        "posted": {
          "description": "Transaction diversion rules that are posted.",
          "type": "integer"
        }
      }
    },
    "transactionDiversionDailyDetailsType": {
      "description": "List of daily details for Transaction Diversion rule.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionDiversionDailyDetailType"
      }
    },
    "transactionDiversionRuleLevelType": {
      "description": "Reservation level.",
      "type": "string",
      "enum": [
        "Property",
        "Reservation"
      ]
    },
    "transactionDiversionRuleTypeType": {
      "description": "The rule type on which the Transaction Diversion Rule is based. If a reservation has any of the following code, Transaction Diversion rule gets active for that reservation",
      "type": "string",
      "enum": [
        "Vip",
        "Membership"
      ]
    },
    "translationTextType2000": {
      "description": "Contains Multiple translated texts and language codes.",
      "type": "object",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 2000.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType": {
      "description": "Language code for the translation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "description": "Language code for the translation.",
        "type": "object",
        "properties": {
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          },
          "value": {
            "description": "Used for Character Strings, length 0 to 2000.",
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          }
        }
      }
    },
    "transportInfoType": {
      "type": "object",
      "properties": {
        "carrierCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "comments": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "dateTime": {
          "type": "string",
          "format": "date-time"
        },
        "stationCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transportCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transportationReqd": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "trxCodesInfoType": {
      "description": "List of Transaction codes info.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxInfoType"
      }
    },
    "trxInfoType": {
      "description": "Transaction codes info.",
      "type": "object",
      "properties": {
        "articles": {
          "description": "The List of Articles defined for this transaction code, when using the Articles functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/articleInfoType"
          }
        },
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionGroup": {
          "description": "Category of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionSubGroup": {
          "description": "Sub category of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "turndownInfoType": {
      "type": "object",
      "properties": {
        "turndownStatusInfo": {
          "$ref": "#/definitions/turndownStatusType"
        }
      }
    },
    "turndownStatusType": {
      "description": "Simple type for turndown status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Required, Not Required and Completed.",
      "type": "string",
      "enum": [
        "Required",
        "NotRequired",
        "Compeleted"
      ]
    },
    "typeOfMessageType": {
      "description": "The type of Message for Guest Messages.",
      "type": "string",
      "enum": [
        "Tm",
        "Vm"
      ]
    },
    "uRLInfoType": {
      "description": "Web site address.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "url": {
          "description": "Provides URL information.",
          "$ref": "#/definitions/uRLType"
        }
      }
    },
    "uRLType": {
      "description": "Web site address, in IETF(The Internet Engineering Task Force) specified format.",
      "type": "object",
      "properties": {
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "type": {
          "description": "Defines the purpose of the URL address, such as personal, business, public, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "unAssignRoomCriteria": {
      "description": "Request to the remove a room(unassign) from a reserved reservation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "overrideRoomNumberLocked": {
          "description": "Criteria for removing the room from a reservation.",
          "type": "boolean"
        },
        "overrideRoomOwnership": {
          "description": "Override the room ownership indicator in the reservation when removing rooms. This is applicable when Room Rotation OPERA Control is active.",
          "type": "boolean"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "unAssignedRoom": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "unassignedRoomsSummaryType": {
      "description": "Indicates summary of the unassigned rooms.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Number of reservations with unassigned rooms.",
          "type": "string",
          "maxLength": 4,
          "minLength": 4
        }
      }
    },
    "uniqueIDListType": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "uniqueID_Type": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "updateRoomKeys": {
      "description": "Collection of error and warning if any.",
      "type": "object",
      "properties": {
        "errors": {
          "description": "Details of the errors.",
          "$ref": "#/definitions/errorsType"
        },
        "warnings": {
          "description": "Details of the warnings.",
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "upsellInfoType": {
      "description": "Information regarding upsell for a reservation.",
      "type": "object",
      "properties": {
        "originalInfo": {
          "description": "Original Values of the reservation prior to upgrade.",
          "type": "object",
          "properties": {
            "nights": {
              "description": "The number of nights of the reservation before being upgraded.",
              "type": "integer"
            },
            "rateCode": {
              "description": "The Rate Code of the Reservation before it was upgraded",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "roomType": {
              "description": "Original Reservation Room Type before being upgraded.",
              "$ref": "#/definitions/codeDescriptionType"
            },
            "totalAmount": {
              "description": "Total Amount of the reservation before it was upgraded.",
              "$ref": "#/definitions/currencyAmountType"
            }
          }
        },
        "upsellInfo": {
          "description": "Information of a reservation during the process of upgrade.",
          "type": "object",
          "properties": {
            "firstNightUpsellAmount": {
              "description": "First Night Total Amount including Upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "firstNightUpsellCharge": {
              "description": "First Night Upsell Charges.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "percentageSavings": {
              "description": "Percentage savings resulting from accepting upsell offer. This will be calculated as the ratio of the amount saved by accepting the upsell offer to the actual room rate (i.e. room rate when upsell is not offered)",
              "type": "number",
              "maximum": 100,
              "minimum": 0
            },
            "roomLongDescription": {
              "description": "Detail description of the Room Type.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "roomType": {
              "description": "Reservation Room Type for Upsell.",
              "$ref": "#/definitions/codeDescriptionType"
            },
            "ruleCode": {
              "description": "Upsell rule code",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "ruleDescription": {
              "description": "Upsell rule description",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "ruleId": {
              "description": "Upsell Rule Id.",
              "type": "integer"
            },
            "totalActualRateAmount": {
              "description": "Actual Total Room Rate for the Target Upsell Room Type.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellCharge": {
              "description": "Amount that was charged for the upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellMoneyAmount": {
              "description": "Total Amount that was charged including upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellPoints": {
              "description": "Total Upsell Points.",
              "type": "integer"
            },
            "upsellDate": {
              "description": "The date on which reservation is upgraded.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "upsellUser": {
              "description": "User who upgraded the reservation.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            }
          }
        }
      }
    },
    "userDefinedFieldsType": {
      "description": "A common type used to hold user defined fields(UDFs). This type should be used to handle UDFs on RReservation, Profiles, etc.",
      "type": "object",
      "properties": {
        "characterUDFs": {
          "description": "Collection of user defined fields of Character/String Type.",
          "$ref": "#/definitions/characterUDFsType"
        },
        "dateUDFs": {
          "description": "Collection of user defined fields of Date Type.",
          "$ref": "#/definitions/dateUDFsType"
        },
        "numericUDFs": {
          "description": "Collection of user defined fields of Numeric Type.",
          "$ref": "#/definitions/numericUDFsType"
        }
      }
    },
    "userInfoType": {
      "description": "Opera User Information",
      "type": "object",
      "properties": {
        "userId": {
          "description": "User Id of the Opera User",
          "type": "integer"
        },
        "userName": {
          "description": "Name of the Opera User",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "userSessionDefaultsType": {
      "type": "object",
      "properties": {
        "baseLanguage": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyFormat": {
          "type": "string"
        },
        "dbDateFormat": {
          "type": "string"
        },
        "defaultLanguage": {
          "type": "string"
        },
        "javaDateFormat": {
          "type": "string"
        },
        "javaTimeFormat": {
          "type": "string"
        },
        "oracleDateFormat": {
          "type": "string"
        },
        "oracleTimeFormat": {
          "type": "string"
        }
      }
    },
    "userSessionInfoType": {
      "type": "object",
      "properties": {
        "businessDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "cROCountryCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "chain": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cro": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "hotel": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "parameters": {
          "$ref": "#/definitions/parametersType"
        },
        "runningApp": {
          "type": "string"
        },
        "sessionDefaults": {
          "$ref": "#/definitions/userSessionDefaultsType"
        },
        "shareProfiles": {
          "type": "boolean"
        },
        "systemDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "terminal": {
          "type": "string"
        }
      }
    },
    "vIPStatusType": {
      "description": "VIP status of the customer.",
      "type": "object",
      "properties": {
        "code": {
          "description": "VIP status of the customer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Used for Character Strings, length 0 to 2000.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "vIPType": {
      "description": "The supplier's ranking of the customer.",
      "type": "object",
      "properties": {
        "vipCode": {
          "description": "VIP Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "vipDescription": {
          "description": "VIP Description.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "verifiedCheckinReservation": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservation": {
          "description": "Reservation record showing the current state of the reservation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hotelReservationType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "visaInfoType": {
      "type": "object",
      "properties": {
        "visaExpiryDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaIssueDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaNumber": {
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "waitlistResType": {
      "description": "Information regarding why reservation is being /has been waitlisted.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description why the reservation is being /has been waitlisted.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "priorityCode": {
          "description": "Waitlist Priority Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "priorityDescription": {
          "description": "Waitlist priority Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reasonCode": {
          "description": "Waitlist Reason Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonDescription": {
          "description": "Waitlist Reason Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "telephone": {
          "description": "Guest telephone number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "wakeUpCallResvInfoType": {
      "description": "Criteria to search and retrieve wake up calls.",
      "type": "object",
      "properties": {
        "arrival": {
          "description": "Reservation arrival date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "blockCode": {
          "description": "Block code with which wake up call is associated.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "blockId": {
          "description": "Block id with which wake up call is associated.",
          "$ref": "#/definitions/blockId"
        },
        "departure": {
          "description": "Reservation departure date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "extensionNumber": {
          "description": "Room Phone Extension Number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "guestName": {
          "description": "Guest Name.",
          "type": "string"
        },
        "hotelId": {
          "description": "Hotel Code where wake up call is set.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipLevel": {
          "description": "Membership Level of the guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipType": {
          "description": "Membership Type of the guest.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "profileId": {
          "description": "ID of the Guest profile.",
          "$ref": "#/definitions/profileId"
        },
        "reservationIdList": {
          "description": "Collection of reservation identifiers like Reservation Name ID, Confirmation Number, etc.",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationStatus": {
          "description": "Indicates the Actual status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "room": {
          "description": "Hotel room in which wake up call is to ring.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomPhoneNumber": {
          "description": "Room phone number which wake up call is to ring.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "timezone": {
          "description": "Timezone of hotel.",
          "type": "string"
        },
        "vip": {
          "description": "Guest Name.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "wakeUpCallStatusType": {
      "description": "Statuses of the wake up call.",
      "type": "string",
      "enum": [
        "Completed",
        "NoAnswer",
        "Cancelled",
        "Pending"
      ]
    },
    "wakeUpCallType": {
      "description": "Criteria to search and retrieve wake up calls.",
      "type": "object",
      "properties": {
        "callTime": {
          "description": "Time on which wake up call is set.",
          "type": "string",
          "format": "date-time"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "followUpCallTime": {
          "description": "Follow up call time.",
          "type": "string",
          "format": "date-time"
        },
        "instructions": {
          "description": "Special instructions for the wake up call.",
          "type": "string"
        },
        "isFollowUpCall": {
          "description": "Is the call type follow up.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "newCallTime": {
          "description": "New Time on which wake up call is set. Used to change the Followup Call time",
          "type": "string",
          "format": "date-time"
        },
        "newFollowUpCallTime": {
          "description": "New Follow up call time.Used to change the Followup Call time.",
          "type": "string",
          "format": "date-time"
        },
        "processedDate": {
          "description": "Date on which wake up call was processed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "processedTime": {
          "description": "Time on which wake up call was processed.",
          "type": "string"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationInfo": {
          "description": "Hotel room in which wake up call is to ring.",
          "$ref": "#/definitions/wakeUpCallResvInfoType"
        },
        "status": {
          "description": "Time on which wake up call is set.",
          "$ref": "#/definitions/wakeUpCallStatusType"
        },
        "timeSpan": {
          "description": "Date Range to set the Wakeup calls. Only used to create a wake up call.",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "wakeUpCalls": {
      "description": "Fetch wake up calls response.",
      "type": "object",
      "properties": {
        "calls": {
          "description": "List of the wake up calls.",
          "$ref": "#/definitions/wakeUpCallsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "wakeUpCallsType": {
      "description": "List of the wake up calls",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/wakeUpCallType"
      }
    },
    "warningType": {
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "type": "object",
      "properties": {
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "maxLength": 8,
          "minLength": 1
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "description": "Used in conjunction with the Success element to define a business error.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "webUserAccountType": {
      "description": "Web User Account of the guest.",
      "type": "object",
      "properties": {
        "autoGeneratePassword": {
          "description": "A flag which determines if the password is auto generated.",
          "type": "boolean"
        },
        "comments": {
          "description": "Comments.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "domainCode": {
          "description": "Domain code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "history": {
          "description": "Web User Account History.",
          "$ref": "#/definitions/webUserHistoryType"
        },
        "inactive": {
          "description": "Boolean flag that indicates whether the web account is inactive or not.",
          "type": "boolean"
        },
        "locked": {
          "description": "Boolean flag that indicates whether the web account is locked or not.",
          "type": "boolean"
        },
        "loginName": {
          "description": "Login Name of the guest.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "newLoginName": {
          "description": "New Login Name of the guest.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "newPassword": {
          "description": "Login Password.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "securityAnswer": {
          "description": "Answer to the Security Question.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "securityQuestion": {
          "description": "Security Question and its Code associated with the account to verify the user.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "webUserAccountsType": {
      "description": "Web User Accounts List.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/webUserAccountType"
      }
    },
    "webUserHistoryType": {
      "description": "Creation date time, Creator Id, last modification date time and last Modifier Id.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "inactiveDate": {
          "description": "Inactive date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastLogin": {
          "description": "Last login date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastPasswordChange": {
          "description": "Last Password change date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "welcomeOfferOptionsType": {
      "description": "None of the Welcome Offer option is selected.",
      "type": "string",
      "enum": [
        "BonusPoints",
        "Ecoupons",
        "Items",
        "PostIt",
        "NotSelected"
      ]
    },
    "welcomeOfferType": {
      "type": "object",
      "properties": {
        "status": {
          "description": "Determines the status of the welcome offer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Determines the welcome offer option selected while availing the welcome offer.",
          "$ref": "#/definitions/welcomeOfferOptionsType"
        }
      }
    }
  },
  "tags": [
    {
      "description": "The Front Desk Statistics module will provide statistical data related to front desk operations in a property.",
      "name": "FOFStats"
    },
    {
      "description": "Front Desk module provides APIs related to a guests stay in the property. For example, checking a guest into the property, providing room information, splitting reservations, as well as adding wake-up calls to a reservation. This module goes hand-in-hand with cashiering module.",
      "name": "FrontDeskOperations"
    },
    {
      "description": "Commission web service provides commission processing service like payment processing, payment activity and search.",
      "name": "Commissions"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}