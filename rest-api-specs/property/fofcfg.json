{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "title": "OPERA Cloud Front Desk Configuration API",
    "version": "23.2",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality-integrations_ww@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "basePath": "/fof/config/v1",
  "paths": {
    "/accountTypes": {
      "put": {
        "description": "Operation to change account types. <p><strong>OperationId:</strong>putARAccountTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivablesConfig"
        ],
        "summary": "Operation to modify AR Account Types.",
        "operationId": "putARAccountTypes",
        "parameters": [
          {
            "description": "Request object for changing account types.",
            "name": "arAccountTypes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arAccountTypes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create account types. <p><strong>OperationId:</strong>postARAccountTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivablesConfig"
        ],
        "summary": "Operation to create AR Account Types.",
        "operationId": "postARAccountTypes",
        "parameters": [
          {
            "description": "Request object to create account receivables account types",
            "name": "arAccountTypes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arAccountTypes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove account types. <p><strong>OperationId:</strong>deleteARAccountTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivablesConfig"
        ],
        "summary": "Operation to remove AR Account types.",
        "operationId": "deleteARAccountTypes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Property associated with account type",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Account receivable account type",
            "name": "accountTypes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/articles": {
      "get": {
        "description": "Use this API to return articles for one or multiple properties based on search criteria such as hotelIds, transactionCodes, articleCodes, etc. One transaction code can sometimes serve as an umbrella for multiple articles, which can be posted using that transaction code.  For example, a single mini bar food transaction code might cover potato chips, crackers, peanuts, pretzels, and so on.<p><strong>OperationId:</strong>getArticles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Get articles",
        "operationId": "getArticles",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transactionCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "articleCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Unique Universal product code search criteria.",
            "name": "universalProductCode",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Indicator that tells whether to include inactive articles in search results.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetching articles.",
            "schema": {
              "$ref": "#/definitions/articlesInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Articles not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change articles. <p><strong>OperationId:</strong>putArticles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change Articles.",
        "operationId": "putArticles",
        "parameters": [
          {
            "description": "Request to change articles.",
            "name": "articles",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/articles"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create articles. <p><strong>OperationId:</strong>postArticles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create Articles.",
        "operationId": "postArticles",
        "parameters": [
          {
            "description": "Request to create articles.",
            "name": "articles",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/articles"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove articles. <p><strong>OperationId:</strong>deleteArticles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete Articles.",
        "operationId": "deleteArticles",
        "parameters": [
          {
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique code of the article.",
            "name": "articleCodes",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code to which the article belongs.",
            "name": "articleHotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "x-example": [
              "false"
            ],
            "description": "Indicates whether the article is inactive or not.",
            "name": "inactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Display Order sequence.",
            "name": "orderSequence",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Description of the article.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Transaction code to which the article belongs.",
            "name": "transactionCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether the article is available for post it.",
            "name": "availableForPostIt",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Red",
              "DarkRed",
              "Green",
              "DarkGreen",
              "LightGreen",
              "Orange",
              "White",
              "Yellow",
              "DarkYellow",
              "Purple",
              "Brown",
              "Gray",
              "Aqua",
              "Chocolate",
              "Blue",
              "LightBlue",
              "DarkBlue",
              "Cyan",
              "DarkCyan",
              "Magenta",
              "DarkMagenta",
              "Black"
            ],
            "type": "string",
            "description": "Color configuration type. This color configuration provides a visual category of entities.",
            "name": "color",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique Universal product code of the article.",
            "name": "universalProductCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/authorizationConfigRule": {
      "put": {
        "description": " <p><strong>OperationId:</strong>putAuthorizationConfigRule</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change AuthorizationConfigRule.",
        "operationId": "putAuthorizationConfigRule",
        "parameters": [
          {
            "description": "Request object to change authorization rule.",
            "name": "authorizationConfigRules",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/authorizationConfigRules"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": " <p><strong>OperationId:</strong>postAuthorizationConfigRule</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create AuthorizationConfigRule.",
        "operationId": "postAuthorizationConfigRule",
        "parameters": [
          {
            "description": "Request object to create new authorization rule for given hotel code.",
            "name": "authorizationConfigRules",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/authorizationConfigRules"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": " <p><strong>OperationId:</strong>deleteAuthorizationConfigRule</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete AuthorizationConfigRule.",
        "operationId": "deleteAuthorizationConfigRule",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Property associated with authorization rule",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Authorization rule Room type.",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "string",
            "name": "roomClassHotelId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "roomClassCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sourceCodeHotelId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sourceCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Rate category Code.",
            "name": "rateCategory",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Rate code associated to this rule.",
            "name": "rateCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Guarantee code associated to this rule.",
            "name": "guaranteeCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/authorizationConfigRules": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getAuthorizationConfigRules</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch AuthorizationConfigRules.",
        "operationId": "getAuthorizationConfigRules",
        "parameters": [
          {
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for FetchAuthorizationConfigRules.",
            "schema": {
              "$ref": "#/definitions/authorizationConfigRulesInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AuthorizationConfigRules not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/authorizationRule": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getAuthorizationRule</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ],
        "summary": "Operation to fetch AuthorizationRule.",
        "operationId": "getAuthorizationRule",
        "parameters": [
          {
            "type": "string",
            "description": "The hotel code to retrieve authorization rules for.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The guarantee code to retrieve authorization rules for.",
            "name": "guaranteeCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The rate code to retrieve authorization rules for.",
            "name": "rateCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The room type to retrieve authorization rules for.",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The source code to retrieve authorization rules for.",
            "name": "sourceCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "The result element containing the authorization rule matching the requested criteria.",
            "schema": {
              "$ref": "#/definitions/authorizationRule"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AuthorizationRule not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/authorizerGroups": {
      "get": {
        "description": "Operation to fetch Authorizer Groups. <p><strong>OperationId:</strong>getAuthorizerGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch AuthorizerGroups.",
        "operationId": "getAuthorizerGroups",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "authorizerGroupsCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Authorizer Groups.",
            "schema": {
              "$ref": "#/definitions/authorizerGroups"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AuthorizerGroups not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change Authorizer Groups. <p><strong>OperationId:</strong>putAuthorizerGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change AuthorizerGroups.",
        "operationId": "putAuthorizerGroups",
        "parameters": [
          {
            "description": "Request object for changing existing Authorizer Group Configuration.",
            "name": "authorizerGroupsToChange",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/authorizerGroupsToChange"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create Authorizer Groups. <p><strong>OperationId:</strong>postAuthorizerGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create AuthorizerGroups.",
        "operationId": "postAuthorizerGroups",
        "parameters": [
          {
            "description": "Request object for creating new Authorizer Group Configuration.",
            "name": "authorizerGroups",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/authorizerGroups"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove Authorizer Groups. <p><strong>OperationId:</strong>deleteAuthorizerGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete AuthorizerGroups.",
        "operationId": "deleteAuthorizerGroups",
        "parameters": [
          {
            "type": "string",
            "description": "Configuration code.",
            "name": "authorizerGroup",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hotel where the code is configured.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/autoFolioSettlementTypes": {
      "get": {
        "description": "Use this API to get Auto Folio Settlement Types. <p><strong>OperationId:</strong>getAutoFolioSettlementTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Auto Folio Settlement Types",
        "operationId": "getAutoFolioSettlementTypes",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Auto Folio Settlement Types.",
            "schema": {
              "$ref": "#/definitions/autoFolioSettlementTypesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AutoFolioSettlementTypes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Auto Folio Settlement Types. <p><strong>OperationId:</strong>postAutoFolioSettlementTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Auto Folio Settlement Types",
        "operationId": "postAutoFolioSettlementTypes",
        "parameters": [
          {
            "description": "Request object for creating Auto Folio Settlement Types.",
            "name": "autoFolioSettlementTypesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/autoFolioSettlementTypesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/autoFolioSettlementTypes/{code}": {
      "put": {
        "description": "Use this API to update Auto Folio Settlement Types. <p><strong>OperationId:</strong>putAutoFolioSettlementTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Auto Folio Settlement Types",
        "operationId": "putAutoFolioSettlementTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Auto Folio Settlement Types.",
            "name": "code",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Auto Folio Settlement Types.",
            "name": "autoFolioSettlementTypesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/autoFolioSettlementTypesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete Auto Folio Settlement Types. <p><strong>OperationId:</strong>deleteAutoFolioSettlementTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Auto Folio Settlement Types",
        "operationId": "deleteAutoFolioSettlementTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Auto Folio Settlement Types.",
            "name": "code",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/budgetForecast": {
      "get": {
        "description": "Operation to fetch Budget Forecast information. <p><strong>OperationId:</strong>getBudgetForecast</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch BudgetForecast.",
        "operationId": "getBudgetForecast",
        "parameters": [
          {
            "type": "string",
            "description": "Opera Hotel code for the Fetch Revenue information.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Year of revenue to be fetched.",
            "name": "year",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indicate if nights information has to be included.",
            "name": "marketSegmentNights",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indicate if revenue information has to be included.",
            "name": "marketSegmentRevenue",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include ABVariance revenue/nights information.",
            "name": "marketSegmentABVariance",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include AFVariance revenue/nights information.",
            "name": "marketSegmentAFVariance",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include Actual revenue/nights information.",
            "name": "marketSegmentActual",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include Budget revenue/nights information.",
            "name": "marketSegmentBudget",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include FBVariance revenue/nights information.",
            "name": "marketSegmentFBVariance",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include Forecast revenue/nights information.",
            "name": "marketSegmentForecast",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "marketSegmentMarketCodes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indicate if nights information has to be included.",
            "name": "rateSegmentNights",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indicate if revenue information has to be included.",
            "name": "rateSegmentRevenue",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include ABVariance revenue/nights information.",
            "name": "rateSegmentABVariance",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include AFVariance revenue/nights information.",
            "name": "rateSegmentAFVariance",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include Actual revenue/nights information.",
            "name": "rateSegmentActual",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include Budget revenue/nights information.",
            "name": "rateSegmentBudget",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include FBVariance revenue/nights information.",
            "name": "rateSegmentFBVariance",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include Forecast revenue/nights information.",
            "name": "rateSegmentForecast",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "rateSegmentRateCodes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indicate if Value information has to be fetched.",
            "name": "customSegmentCustomValue",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include ABVariance revenue/nights information.",
            "name": "customSegmentABVariance",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include AFVariance revenue/nights information.",
            "name": "customSegmentAFVariance",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include Actual revenue/nights information.",
            "name": "customSegmentActual",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include Budget revenue/nights information.",
            "name": "customSegmentBudget",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include FBVariance revenue/nights information.",
            "name": "customSegmentFBVariance",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include Forecast revenue/nights information.",
            "name": "customSegmentForecast",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "customSegmentCustomCodes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indicate if revenue information has to be fetched.",
            "name": "transactionSegmentRevenue",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include ABVariance revenue/nights information.",
            "name": "transactionSegmentABVariance",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include AFVariance revenue/nights information.",
            "name": "transactionSegmentAFVariance",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include Actual revenue/nights information.",
            "name": "transactionSegmentActual",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include Budget revenue/nights information.",
            "name": "transactionSegmentBudget",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include FBVariance revenue/nights information.",
            "name": "transactionSegmentFBVariance",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include Forecast revenue/nights information.",
            "name": "transactionSegmentForecast",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transactionSegmentTransactionCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Transaction code group of segment code.",
            "name": "transactionSegmentTransactionCodeGrp",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indicate if Covers information has to be included.",
            "name": "cateringSegmentCovers",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indicate if revenue information has to be included.",
            "name": "cateringSegmentRevenue",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include ABVariance revenue/nights information.",
            "name": "cateringSegmentABVariance",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include AFVariance revenue/nights information.",
            "name": "cateringSegmentAFVariance",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include Actual revenue/nights information.",
            "name": "cateringSegmentActual",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include Budget revenue/nights information.",
            "name": "cateringSegmentBudget",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include FBVariance revenue/nights information.",
            "name": "cateringSegmentFBVariance",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to include Forecast revenue/nights information.",
            "name": "cateringSegmentForecast",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Catering code group of segment code.",
            "name": "cateringSegmentCateringCodeGrp",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "cateringSegmentCateringCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for Budget forecast information.",
            "schema": {
              "$ref": "#/definitions/budgetForecastInformation"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "BudForecast not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to Delete Budget Forecast information. <p><strong>OperationId:</strong>deleteBudgetForecast</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete BudgetForecast.",
        "operationId": "deleteBudgetForecast",
        "parameters": [
          {
            "description": "Request to load the Budget or Forecast information.",
            "name": "budgetForecastToDelete",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/budgetForecastToDelete"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/budgetForecast/set": {
      "put": {
        "description": "Operation to add/update Budget Forecast information. <p><strong>OperationId:</strong>setBudgetForecast</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to set BudgetForecast.",
        "operationId": "setBudgetForecast",
        "parameters": [
          {
            "description": "Request to load the Budget or Forecast information.",
            "name": "budgetForecastInformationBase",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/budgetForecastInformationBase"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/cardReaderDelimiters": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getCardReaderDelimiters</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ],
        "summary": "Operation to fetch CardReaderDelimiters.",
        "operationId": "getCardReaderDelimiters",
        "parameters": [
          {
            "type": "integer",
            "x-example": "120",
            "name": "deviceID",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for reading the configured device delimiters.",
            "schema": {
              "$ref": "#/definitions/cardReaderDelimiters"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CardReaderDelimiters not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/cashierDetails/cashiers": {
      "get": {
        "description": "Use this API to return Cashier information based on search criteria such as cashierIDs, limit, name. <p><strong>OperationId:</strong>getCashiers</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Get cashiers",
        "operationId": "getCashiers",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "number"
            },
            "collectionFormat": "multi",
            "x-example": [
              "54"
            ],
            "description": "Numberic code for cashier ID.",
            "name": "cashierIDs",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Partial name of a cashier.",
            "name": "name",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Indicator that tells whether to include inactive cashiers in search results.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "maxLength": 60,
            "minLength": 0,
            "type": "string",
            "description": "Name of the application user associated with the cashier id",
            "name": "appUser",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching information regarding Cashiers.",
            "schema": {
              "$ref": "#/definitions/cashiersDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Cashiers not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/cashierShifts/dropLocations": {
      "get": {
        "description": "Use this API to get Template Cashier Shift Drop Locations. <p><strong>OperationId:</strong>getTemplateCashierShiftDropLocations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Template Cashier Shift Drop Locations",
        "operationId": "getTemplateCashierShiftDropLocations",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Template Cashier Shift Drop Locations.",
            "schema": {
              "$ref": "#/definitions/templateCashierShiftDropLocationsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TemplateCashierShiftDropLocations not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Template Cashier Shift Drop Locations. <p><strong>OperationId:</strong>postTemplateCashierShiftDropLocations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Template Cashier Shift Drop Locations",
        "operationId": "postTemplateCashierShiftDropLocations",
        "parameters": [
          {
            "description": "Request object for creating Template Cashier Shift Drop Locations.",
            "name": "templateCashierShiftDropLocationsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateCashierShiftDropLocationsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/cashierShifts/dropLocations/{dropLocationId}": {
      "put": {
        "description": "Use this API to update Template Cashier Shift Drop Locations. <p><strong>OperationId:</strong>changeTemplateCashierShiftDropLocations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Template Cashier Shift Drop Locations",
        "operationId": "changeTemplateCashierShiftDropLocations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of drop location.",
            "name": "dropLocationId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Template Cashier Shift Drop Locations.",
            "name": "templateCashierShiftDropLocationsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateCashierShiftDropLocationsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete Template Cashier Shift Drop Locations. <p><strong>OperationId:</strong>removeTemplateCashierShiftDropLocations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Template Cashier Shift Drop Locations",
        "operationId": "removeTemplateCashierShiftDropLocations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of drop location.",
            "name": "dropLocationId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/cashiers": {
      "put": {
        "description": "This Operation to Change a Cashier. <p><strong>OperationId:</strong>putCashiers</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change CashiersDetails.",
        "operationId": "putCashiers",
        "parameters": [
          {
            "description": "Request objects for modifying cashiers",
            "name": "cashiers",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cashiers"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to Create Cashier. <p><strong>OperationId:</strong>postCashiers</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create Cashiers.",
        "operationId": "postCashiers",
        "parameters": [
          {
            "description": "Request object for creating cashiers.",
            "name": "cashiers",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cashiers"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/cashiers/nextAvailable": {
      "get": {
        "description": "The operation returns a next available Cashier Number to be used while creating a new Cashier. <p><strong>OperationId:</strong>getAvailableCashierNumber</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch AvailableCashierNumber.",
        "operationId": "getAvailableCashierNumber",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object that returns next available cashier number.",
            "schema": {
              "$ref": "#/definitions/cashierNumber"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AvailableCashierNumber not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/collectingAgentTaxes": {
      "get": {
        "description": "Operation to fetch Collecting Agent Taxes. <p><strong>OperationId:</strong>getCollectingAgentTaxes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch CollectingAgentTaxes.",
        "operationId": "getCollectingAgentTaxes",
        "parameters": [
          {
            "type": "string",
            "description": "It represents Hotel Code",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "taxCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetch Collecting Agent Taxes request.",
            "schema": {
              "$ref": "#/definitions/collectingAgentTaxes"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CollectingAgentTaxes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change Collecting Agent Taxes. <p><strong>OperationId:</strong>putCollectingAgentTaxes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change CollectingAgentTaxes.",
        "operationId": "putCollectingAgentTaxes",
        "parameters": [
          {
            "description": "Request object to change Collecting Agent Taxes.",
            "name": "collectingAgentTaxes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/collectingAgentTaxes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create Collecting Agent Taxes. <p><strong>OperationId:</strong>postCollectingAgentTaxes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create CollectingAgentTaxes.",
        "operationId": "postCollectingAgentTaxes",
        "parameters": [
          {
            "description": "Request object to create Collecting Agent Taxes.",
            "name": "collectingAgentTaxes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/collectingAgentTaxes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove Collecting Agent Taxes. <p><strong>OperationId:</strong>deleteCollectingAgentTaxes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete CollectingAgentTaxes.",
        "operationId": "deleteCollectingAgentTaxes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "It represents Hotel code",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maximum": 5,
              "minimum": 1,
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Primary Key Sequence.",
            "name": "taxCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "taxTypeCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/commissionCodes": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getCommissionCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ],
        "summary": "Operation to fetch commission codes.",
        "operationId": "getCommissionCodes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "commissionCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching commission codes.",
            "schema": {
              "$ref": "#/definitions/commissionCodesSummary"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CommissionCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": " <p><strong>OperationId:</strong>putCommissionCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ],
        "summary": "Operation to change commission codes.",
        "operationId": "putCommissionCodes",
        "parameters": [
          {
            "description": "Request object to update commission codes.",
            "name": "commissionCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/commissionCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": " <p><strong>OperationId:</strong>postCommissionCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ],
        "summary": "Operation to create commission codes.",
        "operationId": "postCommissionCodes",
        "parameters": [
          {
            "description": "Request object to create new commission codes.",
            "name": "commissionCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/commissionCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": " <p><strong>OperationId:</strong>deleteCommissionCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ],
        "summary": "Operation to remove commission codes.",
        "operationId": "deleteCommissionCodes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Property of the commission code.",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Commission code for which details are deleted.",
            "name": "commissionCodes",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/compAuthorizers/set": {
      "put": {
        "description": "Operation to Set Comp Authorizer. <p><strong>OperationId:</strong>setCompAuthorizer</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to set CompAuthorizer.",
        "operationId": "setCompAuthorizer",
        "parameters": [
          {
            "description": "Retrieve a summary of transactions for a guest or a set of guests.",
            "name": "compAuthorizer",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/compAuthorizer"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/compTypes": {
      "put": {
        "description": "Operation to Change Comp Types. <p><strong>OperationId:</strong>changeCompTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to Change Comp Types.",
        "operationId": "changeCompTypes",
        "parameters": [
          {
            "description": "Request object for changing Comp Types.",
            "name": "compTypesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/compTypesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/compTypesStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to Create Comp Types <p><strong>OperationId:</strong>postCompTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to Create Comp Types",
        "operationId": "postCompTypes",
        "parameters": [
          {
            "description": "Request object for creating CompTypes.",
            "name": "compTypesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/compTypesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/compTypes/codes/{compTypesCode}": {
      "delete": {
        "description": "Operation to Remove Comp Types. <p><strong>OperationId:</strong>removeCompTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to Remove Comp Types.",
        "operationId": "removeCompTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Comp Types Code to be deleted.",
            "name": "compTypesCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/configBankAccounts": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getConfigBankAccounts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ],
        "summary": "Operation to fetch config bank accounts.",
        "operationId": "getConfigBankAccounts",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotels",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "bankCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetching Bank Accounts",
            "schema": {
              "$ref": "#/definitions/bankAccountsInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ConfigBankAccounts not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": " <p><strong>OperationId:</strong>putConfigBankAccounts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ],
        "summary": "Operation to change config bank accounts.",
        "operationId": "putConfigBankAccounts",
        "parameters": [
          {
            "description": "Request object to edit Bank Accounts",
            "name": "bankAccounts",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bankAccounts"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": " <p><strong>OperationId:</strong>postConfigBankAccounts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ],
        "summary": "Operation to create config bank accounts.",
        "operationId": "postConfigBankAccounts",
        "parameters": [
          {
            "description": "Request object to create Bank Accounts",
            "name": "bankAccounts",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bankAccounts"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": " <p><strong>OperationId:</strong>deleteConfigBankAccounts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ],
        "summary": "Operation to remove config bank accounts.",
        "operationId": "deleteConfigBankAccounts",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Property of the bank account.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Bank account ID.",
            "name": "bankAccountID",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/contractBillingInstructions": {
      "get": {
        "description": "Use this API to get Contract Billing Instructions. <p><strong>OperationId:</strong>getContractBillingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Contract Billing Instructions",
        "operationId": "getContractBillingInstructions",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Contract Billing Instructions.",
            "schema": {
              "$ref": "#/definitions/contractBillingInstructionsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ContractBillingInstructions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Contract Billing Instructions. <p><strong>OperationId:</strong>postContractBillingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Contract Billing Instructions",
        "operationId": "postContractBillingInstructions",
        "parameters": [
          {
            "description": "Request object for creating Contract Billing Instructions.",
            "name": "contractBillingInstructionsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/contractBillingInstructionsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/contractBillingInstructions/{contractBillingInstructionsId}": {
      "put": {
        "description": "Use this API to update Contract Billing Instructions. <p><strong>OperationId:</strong>putContractBillingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Contract Billing Instructions",
        "operationId": "putContractBillingInstructions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Contract Billing Instructions.",
            "name": "contractBillingInstructionsId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Contract Billing Instructions.",
            "name": "contractBillingInstructionsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/contractBillingInstructionsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete Contract Billing Instructions. <p><strong>OperationId:</strong>deleteContractBillingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Contract Billing Instructions",
        "operationId": "deleteContractBillingInstructions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Contract Billing Instructions.",
            "name": "contractBillingInstructionsId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/creditCardInfo": {
      "get": {
        "description": "Use this API to return the token inclusive cardType and expirationDate for the credit card used in a specific reservation. Oracle does not provide any credit card numbers. Include the hotelId and the cardId in the parameters. The cardId can be returned with the getReservation operation. <p><strong>OperationId:</strong>getCreditCardInfo</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ],
        "summary": "Get credit card token information",
        "operationId": "getCreditCardInfo",
        "parameters": [
          {
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "cardId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "cardIdExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "cardIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "cardIdType",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Additional",
              "ArPayment",
              "Batch",
              "BatchDeposit",
              "BatchDepositRefund",
              "Billing",
              "CheckIn",
              "CheckInManualAuth",
              "Deposit",
              "EndOfDay",
              "EndOfDayDeposit",
              "Manual",
              "Other",
              "PasserBy",
              "PostIt",
              "PreCheckIn",
              "Refund",
              "Scheduled"
            ],
            "type": "string",
            "description": "Currently supported transaction type categories used for credit card authorization.",
            "name": "accessTransactionType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Respose for the fetch credit card information.",
            "schema": {
              "$ref": "#/definitions/creditCardInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CreditCardInfo not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/creditCardTypes/validate": {
      "get": {
        "description": " <p><strong>OperationId:</strong>validateCreditCardType</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ],
        "summary": "Operation to validate CreditCardType.",
        "operationId": "validateCreditCardType",
        "parameters": [
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationID",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "reservationIDIdExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIDIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationIDType",
            "in": "query"
          },
          {
            "type": "string",
            "name": "paymentMethodDescription",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "paymentMethodFolioView",
            "in": "query"
          },
          {
            "type": "string",
            "name": "paymentMethod",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Attach the credit card to profile.",
            "name": "attachCreditCardToProfile",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardHolderName",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumber",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberLast4Digits",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ],
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "name": "cardNumberType",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ],
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "name": "cardType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Expiration date of the credit card",
            "name": "expirationDate",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "expirationDateExpired",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Masked Expiration date of the credit card",
            "name": "expirationDateMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ],
            "type": "string",
            "name": "processing",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "swiped",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "name": "userDefinedCardType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "cardId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "cardIdExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "cardIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "cardIdType",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "currentAuthorizedAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currentAuthorizedAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "approvalAmountNeeded",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "approvalAmountNeededCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "balanceAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "balanceCurrencyCode",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The authorization rule code.",
            "name": "authorizationRuleCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "authorizationRuleAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "authorizationRuleCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A percentage value if the authorization rule is percentage based.",
            "name": "authorizationRulePercent",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "emailFolio",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "emailFolioInfoId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "emailFolioInfoIDExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "emailFolioInfoIDContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "emailFolioInfoType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of the creation.",
            "name": "emailFolioInfoCreateDateTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
            "name": "emailFolioInfoCreatorID",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the e-mail address.",
            "name": "emailFolioInfoEmailAddress",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Html",
              "Text"
            ],
            "type": "string",
            "description": "Supported Email format.",
            "name": "emailFolioInfoEmailFormat",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Identifies the last software system or person to modify a record.",
            "name": "emailFolioInfoLastModifierID",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of last modification.",
            "name": "emailFolioInfoLastModifyDateTime",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Display Order sequence.",
            "name": "emailFolioInfoOrderSequence",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true, indicates a primary information.",
            "name": "emailFolioInfoPrimaryInd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
            "name": "emailFolioInfoPurgeDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
            "name": "emailEmailFolioInfoType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Describes the Type code",
            "name": "emailFolioInfoTypeDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "The result element from validating a credit card number against its vendor's format requirements.",
            "schema": {
              "$ref": "#/definitions/creditCardTypeValidationStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "validateCreditCardType not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/creditCards/decode": {
      "get": {
        "description": " <p><strong>OperationId:</strong>decodeCard</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ],
        "summary": "Operation to Decode Card.",
        "operationId": "decodeCard",
        "parameters": [
          {
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Used for Character Strings, length 0 to 200.",
            "name": "trackData",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Respose for the decoded card information.",
            "schema": {
              "$ref": "#/definitions/decodedCard"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "decodeCard not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/creditCards/readerDevices": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getCreditCardReaderDevices</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ],
        "summary": "Operation to fetch CreditCardReaderDevices.",
        "operationId": "getCreditCardReaderDevices",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetching list of supported credit card reader devices.",
            "schema": {
              "$ref": "#/definitions/creditCardReaderDevices"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CreditCardReaderDevices not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/creditCards/vaultedId": {
      "post": {
        "description": " <p><strong>OperationId:</strong>getCreditCardUniqueId</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ],
        "summary": "Operation to fetch CreditCardUniqueId.",
        "operationId": "getCreditCardUniqueId",
        "parameters": [
          {
            "description": "Request for fetching credit card unique id.",
            "name": "creditCardUniqueIdRQ",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/creditCardUniqueIdRQ"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response for fetching credit card unique id.",
            "schema": {
              "$ref": "#/definitions/creditCardUniqueId"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/currencyExchangeServiceTaxes": {
      "get": {
        "description": "Operation to fetch currency exchange service taxes. <p><strong>OperationId:</strong>getCurrencyExchangeServiceTaxes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch CurrencyExchangeServiceTaxes.",
        "operationId": "getCurrencyExchangeServiceTaxes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetch currency exchange service taxes",
            "schema": {
              "$ref": "#/definitions/currencyExchangeServiceTaxes"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CurrencyExchangeServiceTaxes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change currency exchange service taxes. <p><strong>OperationId:</strong>putCurrencyExchangeServiceTaxes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change ExchangeServiceTaxes.",
        "operationId": "putCurrencyExchangeServiceTaxes",
        "parameters": [
          {
            "description": "Request object for changing currency exchange service taxes",
            "name": "currencyExchangeServiceTaxes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/currencyExchangeServiceTaxes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create currency exchange service taxes. <p><strong>OperationId:</strong>postCurrencyExchangeServiceTaxes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create CurrencyExchangeServiceTaxes.",
        "operationId": "postCurrencyExchangeServiceTaxes",
        "parameters": [
          {
            "description": "Request object for creating new currency exchange service taxes",
            "name": "currencyExchangeServiceTaxes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/currencyExchangeServiceTaxes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove currency exchange service taxes. <p><strong>OperationId:</strong>deleteCurrencyExchangeServiceTaxes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete CurrencyExchangeServiceTaxes.",
        "operationId": "deleteCurrencyExchangeServiceTaxes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Property associated with currency exchange service tax",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Currency exchange service tax code",
            "name": "currencyExchangeServiceTaxCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/customCharges/exemptions": {
      "get": {
        "description": "You can use this API to fetch Custom Charge Exemptions Config. <p><strong>OperationId:</strong>getCustomChargeExemptions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch Custom Charge Exemptions Config.",
        "operationId": "getCustomChargeExemptions",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "configurationId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "false",
            "description": "Indicator that tells whether to include inactive articles in search results.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Custom Charge Exemptions.",
            "schema": {
              "$ref": "#/definitions/customChargeExemptionsConfig"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CustomChargeExemptions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/customTaxTypes": {
      "get": {
        "description": "Use this API to get Custom Tax Types. <p><strong>OperationId:</strong>getCustomTaxTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Custom Tax Types",
        "operationId": "getCustomTaxTypes",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Custom Tax Types.",
            "schema": {
              "$ref": "#/definitions/customTaxTypesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CustomTaxTypes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Custom Tax Types. <p><strong>OperationId:</strong>postCustomTaxTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Custom Tax Types",
        "operationId": "postCustomTaxTypes",
        "parameters": [
          {
            "description": "Request object for creating Custom Tax Types.",
            "name": "customTaxTypesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customTaxTypesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/customTaxTypes/{taxTypeCode}": {
      "put": {
        "description": "Use this API to update Custom Tax Types. <p><strong>OperationId:</strong>changeCustomTaxTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Custom Tax Types",
        "operationId": "changeCustomTaxTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Tax Types.",
            "name": "taxTypeCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Custom Tax Types.",
            "name": "customTaxTypesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customTaxTypesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete Custom Tax Types. <p><strong>OperationId:</strong>removeCustomTaxTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Custom Tax Types",
        "operationId": "removeCustomTaxTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Tax Types.",
            "name": "taxTypeCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/dailyPlanCodes": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getDailyPlanCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch DailyPlanCodes.",
        "operationId": "getDailyPlanCodes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "A flag that determines whether or not to fetch associated transaction codes. Fetches only the arrangement codes when this flag is true.",
            "name": "includeTransactionCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "arrangementCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching daily plan codes.",
            "schema": {
              "$ref": "#/definitions/dailyPlanCodes"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "DailyPlanCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": " <p><strong>OperationId:</strong>putDailyPlanCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change DailyPlanCodes.",
        "operationId": "putDailyPlanCodes",
        "parameters": [
          {
            "description": "Request object for changing daily plan codes.",
            "name": "dailyPlanCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/dailyPlanCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/defaultPaymentMethodRules": {
      "get": {
        "description": "Operation to fetch payment method rule. <p><strong>OperationId:</strong>getDefaultPaymentMethodRule</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch DefaultPaymentMethodRule.",
        "operationId": "getDefaultPaymentMethodRule",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transactionCodes",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "paymentMethods",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "CardRanges"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": [
              "CardRanges"
            ],
            "description": "Simple Type for payment method fetch instruction.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetching default payment method rule.",
            "schema": {
              "$ref": "#/definitions/defaultPaymentMethodRule"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "DefaultPaymentMethodRule not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/exchangeRates": {
      "get": {
        "description": "You can use this API to retrieve exchange rate information for a hotel. You can search by hotel, Currency Code and exchange types. Results can include past, current and future exchange rate information for a currency. <p><strong>OperationId:</strong>getExchangeRatesInfo</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch ExchangeRates.",
        "operationId": "getExchangeRatesInfo",
        "parameters": [
          {
            "type": "string",
            "description": "Property where exchange rate is set.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Cash",
                "Settlement",
                "Posting",
                "Check",
                "TACommission",
                "Membership",
                "Certificate"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "E-certificate conversion.",
            "name": "exchangeTypes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of exchange rates and their information.",
            "schema": {
              "$ref": "#/definitions/exchangeRatesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ExchangeRatesInfo not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to Delete Exchange Rates. <p><strong>OperationId:</strong>deleteExchangeRates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete ExchangeRates.",
        "operationId": "deleteExchangeRates",
        "parameters": [
          {
            "description": "Exchange Rates to be Set.",
            "name": "exchangeRates",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/exchangeRates"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/exchangeRates/set": {
      "put": {
        "description": "The operation sets exchange rates. <p><strong>OperationId:</strong>setExchangeRates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to set ExchangeRates.",
        "operationId": "setExchangeRates",
        "parameters": [
          {
            "description": "Exchange Rates to be Set.",
            "name": "exchangeRates",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/exchangeRates"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/expenseArrangementCodes": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getExpenseArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch ExpenseArrangementCodes.",
        "operationId": "getExpenseArrangementCodes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "A flag that determines whether or not to fetch associated transaction codes. Fetches only the arrangement codes when this flag is true.",
            "name": "includeTransactionCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "arrangementCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching expense arrangement codes.",
            "schema": {
              "$ref": "#/definitions/expenseArrangementCodes"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ExpenseArrangementCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": " <p><strong>OperationId:</strong>putExpenseArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change ExpenseArrangementCodes.",
        "operationId": "putExpenseArrangementCodes",
        "parameters": [
          {
            "description": "Request object for changing expense arrangement codes.",
            "name": "expenseArrangementCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/expenseArrangementCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": " <p><strong>OperationId:</strong>postExpenseArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create ExpenseArrangementCodes.",
        "operationId": "postExpenseArrangementCodes",
        "parameters": [
          {
            "description": "Request object for creating new expense arrangement codes.",
            "name": "expenseArrangementCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/expenseArrangementCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": " <p><strong>OperationId:</strong>deleteExpenseArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete ExpenseArrangementCodes.",
        "operationId": "deleteExpenseArrangementCodes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/expenseArrangementCodes/copy": {
      "put": {
        "description": " <p><strong>OperationId:</strong>copyExpenseArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to copy ExpenseArrangementCodes.",
        "operationId": "copyExpenseArrangementCodes",
        "parameters": [
          {
            "description": "List of the expense arrangement codes to be copied.",
            "name": "expenseArrangementCodesCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/expenseArrangementCodesCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/fiscalFolioParameters": {
      "get": {
        "description": "Operation to fetch Fiscal Folio Parameters. <p><strong>OperationId:</strong>getFiscalFolioParameters</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch FiscalFolioParameters.",
        "operationId": "getFiscalFolioParameters",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "code",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Indicates whether the Fiscal Folio Parameter is user created or from seed data. Set this true to see the standard Fiscal Folio Parameters that are seeded along with the manually created Fiscal Folio Parameters.",
            "name": "internal",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Fiscal Folio Parameter configurations.",
            "schema": {
              "$ref": "#/definitions/fiscalFolioParameters"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FiscalFolioParameters not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change Fiscal Folio Parameters. <p><strong>OperationId:</strong>putFiscalFolioParameters</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change FiscalFolioParameters.",
        "operationId": "putFiscalFolioParameters",
        "parameters": [
          {
            "description": "Request object for changing existing Fiscal Folio Parameter Configurations.",
            "name": "fiscalFolioParameters",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalFolioParameters"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove Fiscal Folio Parameters. <p><strong>OperationId:</strong>deleteFiscalFolioParameters</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete FiscalFolioParameters.",
        "operationId": "deleteFiscalFolioParameters",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Code of the Hotel.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fiscal folio parameter associated with Partner.",
            "name": "partner",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Code of the Fiscal Folio Parameter.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/fiscalGuestTypes": {
      "get": {
        "description": "Use this API to get Fiscal Guest Types. <p><strong>OperationId:</strong>getFiscalGuestTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Fiscal Guest Types",
        "operationId": "getFiscalGuestTypes",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Fiscal Guest Types.",
            "schema": {
              "$ref": "#/definitions/fiscalGuestTypesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FiscalGuestTypes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Fiscal Guest Types. <p><strong>OperationId:</strong>postFiscalGuestTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Fiscal Guest Types",
        "operationId": "postFiscalGuestTypes",
        "parameters": [
          {
            "description": "Request object for creating Fiscal Guest Types.",
            "name": "fiscalGuestTypesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalGuestTypesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/fiscalGuestTypes/{fiscalGuestTypeCode}": {
      "put": {
        "description": "Use this API to update Fiscal Guest Types. <p><strong>OperationId:</strong>changeFiscalGuestTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Fiscal Guest Types",
        "operationId": "changeFiscalGuestTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Fiscal Guest Types.",
            "name": "fiscalGuestTypeCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Fiscal Guest Types.",
            "name": "fiscalGuestTypesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalGuestTypesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete Fiscal Guest Types. <p><strong>OperationId:</strong>removeFiscalGuestTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Fiscal Guest Types",
        "operationId": "removeFiscalGuestTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Fiscal Guest Types.",
            "name": "fiscalGuestTypeCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/fiscalPeriods": {
      "get": {
        "description": "Operation to fetch Fiscal Periods. <p><strong>OperationId:</strong>getFiscalPeriods</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch FiscalPeriods.",
        "operationId": "getFiscalPeriods",
        "parameters": [
          {
            "type": "string",
            "description": "Resort for which the Period is defined.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Year to search for.",
            "name": "year",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Calendar",
              "Fiscal"
            ],
            "type": "string",
            "description": "Defined Values for Fiscal Year Type.",
            "name": "periodType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Period to search.",
            "name": "period",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetching Fiscal Periods",
            "schema": {
              "$ref": "#/definitions/fiscalPeriodsInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FiscalPeriods not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change Fiscal Periods. <p><strong>OperationId:</strong>putFiscalPeriods</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change FiscalPeriods.",
        "operationId": "putFiscalPeriods",
        "parameters": [
          {
            "description": "Request object to edit Fiscal Periods",
            "name": "fiscalPeriodsEdit",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalPeriodsEdit"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create Fiscal Periods. <p><strong>OperationId:</strong>postFiscalPeriods</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create FiscalPeriods.",
        "operationId": "postFiscalPeriods",
        "parameters": [
          {
            "description": "Request object to create Fiscal Periods",
            "name": "fiscalPeriods",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalPeriods"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove Fiscal Periods. <p><strong>OperationId:</strong>deleteFiscalPeriods</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete FiscalPeriods.",
        "operationId": "deleteFiscalPeriods",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Resort for which the Period is defined.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Id of the Year.",
            "name": "yearId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Start Date of the Period",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/fiscalRegions": {
      "get": {
        "description": "Use this API to get Fiscal Regions. <p><strong>OperationId:</strong>getFiscalRegions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Fiscal Regions",
        "operationId": "getFiscalRegions",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Fiscal Regions.",
            "schema": {
              "$ref": "#/definitions/fiscalRegionsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FiscalRegions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Fiscal Regions. <p><strong>OperationId:</strong>postFiscalRegions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Fiscal Regions",
        "operationId": "postFiscalRegions",
        "parameters": [
          {
            "description": "Request object for creating Fiscal Regions.",
            "name": "fiscalRegionsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalRegionsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/fiscalRegions/{regionCode}": {
      "put": {
        "description": "Use this API to update Fiscal Regions. <p><strong>OperationId:</strong>changeFiscalRegions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Fiscal Regions",
        "operationId": "changeFiscalRegions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Region.",
            "name": "regionCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Fiscal Regions.",
            "name": "fiscalRegionsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalRegionsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete Fiscal Regions. <p><strong>OperationId:</strong>removeFiscalRegions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Fiscal Regions",
        "operationId": "removeFiscalRegions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Region.",
            "name": "regionCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/fiscalYears": {
      "get": {
        "description": "Operation to fetch Fiscal Years. <p><strong>OperationId:</strong>getFiscalYears</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch FiscalYears.",
        "operationId": "getFiscalYears",
        "parameters": [
          {
            "type": "string",
            "description": "Search all years for this Resort.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Year to Search.",
            "name": "year",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Calendar",
              "Fiscal"
            ],
            "type": "string",
            "description": "Defined Values for Fiscal Year Type.",
            "name": "yearType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetching Fiscal Years",
            "schema": {
              "$ref": "#/definitions/fiscalYears"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FiscalYears not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change Fiscal Years. <p><strong>OperationId:</strong>putFiscalYears</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change FiscalYears.",
        "operationId": "putFiscalYears",
        "parameters": [
          {
            "description": "Request object to edit Fiscal Years",
            "name": "fiscalYears",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalYears"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create Fiscal Years. <p><strong>OperationId:</strong>postFiscalYears</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create FiscalYears.",
        "operationId": "postFiscalYears",
        "parameters": [
          {
            "description": "Request object to create Fiscal Years",
            "name": "fiscalYears",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalYears"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove Fiscal Years. <p><strong>OperationId:</strong>deleteFiscalYears</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete FiscalYears.",
        "operationId": "deleteFiscalYears",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Resort for which the Year is defined.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Unique id of the Year.",
            "name": "yearId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/flaggedReasons": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getARFlaggedReasons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivablesConfig"
        ],
        "summary": "Operation to fetch AR flagged reasons.",
        "operationId": "getARFlaggedReasons",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "reasonCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "reasonWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description text set to the search criteria",
            "name": "description",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "propertyCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "propertyWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetching Flagged Reasons.",
            "schema": {
              "$ref": "#/definitions/arFlaggedReasons"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ARFlaggedReasons not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": " <p><strong>OperationId:</strong>putARFlaggedReasons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivablesConfig"
        ],
        "summary": "Operation to change AR flagged reasons.",
        "operationId": "putARFlaggedReasons",
        "parameters": [
          {
            "description": "Request object to edit Flagged Reasons.",
            "name": "arFlaggedReasons",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arFlaggedReasons"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": " <p><strong>OperationId:</strong>postARFlaggedReasons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivablesConfig"
        ],
        "summary": "Operation to create AR flagged reasons.",
        "operationId": "postARFlaggedReasons",
        "parameters": [
          {
            "description": "Request object to create Flagged Reason",
            "name": "arFlaggedReasons",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arFlaggedReasons"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": " <p><strong>OperationId:</strong>deleteARFlaggedReasons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivablesConfig"
        ],
        "summary": "Operation to remove AR flagged reasons.",
        "operationId": "deleteARFlaggedReasons",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/folioArrangementCodes": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getFolioArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch FolioArrangementCodes.",
        "operationId": "getFolioArrangementCodes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "A flag that determines whether or not to fetch associated transaction codes. Fetches only the arrangement codes when this flag is true.",
            "name": "includeTransactionCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "arrangementCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching folio arrangement codes.",
            "schema": {
              "$ref": "#/definitions/folioArrangementCodes"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FolioArrangementCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": " <p><strong>OperationId:</strong>putFolioArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change FolioArrangementCodes.",
        "operationId": "putFolioArrangementCodes",
        "parameters": [
          {
            "description": "Request object for changing folio arrangement codes.",
            "name": "folioArrangementCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioArrangementCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": " <p><strong>OperationId:</strong>postFolioArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create FolioArrangementCodes.",
        "operationId": "postFolioArrangementCodes",
        "parameters": [
          {
            "description": "Request object for creating new folio arrangement codes.",
            "name": "folioArrangementCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioArrangementCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": " <p><strong>OperationId:</strong>deleteFolioArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete FolioArrangementCodes.",
        "operationId": "deleteFolioArrangementCodes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/folioArrangementCodes/copy": {
      "put": {
        "description": " <p><strong>OperationId:</strong>copyFolioArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to copy FolioArrangementCodes.",
        "operationId": "copyFolioArrangementCodes",
        "parameters": [
          {
            "description": "List of folio arrangement codes to be copied.",
            "name": "folioArrangementCodesCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioArrangementCodesCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/folioCopyLegends": {
      "get": {
        "description": "Operation to fetch folio copy legends. <p><strong>OperationId:</strong>getFolioCopyLegends</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch FolioCopyLegends.",
        "operationId": "getFolioCopyLegends",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Language code to be searched.",
            "name": "languageCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetch folio copy legend",
            "schema": {
              "$ref": "#/definitions/folioCopyLegends"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FolioCopyLegends not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change folio copy legends information <p><strong>OperationId:</strong>putFolioCopyLegends</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change FolioCopyLegends.",
        "operationId": "putFolioCopyLegends",
        "parameters": [
          {
            "description": "Request object to edit description of folio copy legends",
            "name": "folioCopyLegend",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioCopyLegend"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/folioPrintQueues": {
      "get": {
        "description": "Operation to folio fetch print queues. <p><strong>OperationId:</strong>getFolioPrintQueues</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch FolioPrintQueues.",
        "operationId": "getFolioPrintQueues",
        "parameters": [
          {
            "type": "string",
            "description": "Property to be searched for",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Determines whether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Queue name to be searched for",
            "name": "queueName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetch folio print queues",
            "schema": {
              "$ref": "#/definitions/folioPrintQueues"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FolioPrintQueues not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change folio print queues. <p><strong>OperationId:</strong>putFolioPrintQueues</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change FolioPrintQueues.",
        "operationId": "putFolioPrintQueues",
        "parameters": [
          {
            "description": "Request object for changing folio print queues",
            "name": "folioPrintQueues",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioPrintQueues"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create folio print queues. <p><strong>OperationId:</strong>postFolioPrintQueues</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create FolioPrintQueues.",
        "operationId": "postFolioPrintQueues",
        "parameters": [
          {
            "description": "Request object for creating new folio print queues",
            "name": "folioPrintQueues",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioPrintQueues"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove folio print queues. <p><strong>OperationId:</strong>deleteFolioPrintQueues</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete FolioPrintQueues.",
        "operationId": "deleteFolioPrintQueues",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Property associated with folio print queue",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Folio print queue name",
            "name": "queueName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/folioTypeLegendMappings": {
      "get": {
        "description": "Operation to fetch folio type legend mappings config. <p><strong>OperationId:</strong>getFolioTypeLegendMappingsConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch folio type legend mappings config.",
        "operationId": "getFolioTypeLegendMappingsConfig",
        "parameters": [
          {
            "type": "string",
            "description": "Property associated with folio type legend mapping",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Legend code to which folio types attached.",
            "name": "legendCode",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Folio type to be searched.",
            "name": "folioType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetch folio type legend mapping.",
            "schema": {
              "$ref": "#/definitions/folioTypeLegendMappingsConfigDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FolioTypeLegendMappingsConfig not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change folio type legend mappings config. <p><strong>OperationId:</strong>changeFolioTypeLegendMappingConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change folio type legend mappings config.",
        "operationId": "changeFolioTypeLegendMappingConfig",
        "parameters": [
          {
            "description": "Request object to edit folio type legend mapping information.",
            "name": "folioTypeLegendMappingConfigToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioTypeLegendMappingConfigToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/folioTypeLegendMappingConfigStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create folio type legend mappings config. <p><strong>OperationId:</strong>postFolioTypeLegendMappingConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create folio type legend mappings config.",
        "operationId": "postFolioTypeLegendMappingConfig",
        "parameters": [
          {
            "description": "Request object to create folio type legend mapping information.",
            "name": "folioTypeLegendMappingConfigCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioTypeLegendMappingConfigCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/folioTypesConfig": {
      "get": {
        "description": "Operation to fetch Folio Type Names. <p><strong>OperationId:</strong>getFolioTypesConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch FolioTypesConfig.",
        "operationId": "getFolioTypesConfig",
        "parameters": [
          {
            "type": "string",
            "description": "Folio Type Names belong to Hotels.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "folioTypeNamesCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "taxTypeCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Folio Type Names.",
            "schema": {
              "$ref": "#/definitions/folioTypesConfig"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FolioTypesConfig not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change Folio Type Names. <p><strong>OperationId:</strong>putFolioTypesConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change FolioTypesConfig.",
        "operationId": "putFolioTypesConfig",
        "parameters": [
          {
            "description": "Request object to change Folio Type Names.",
            "name": "folioTypesConfig",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioTypesConfig"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to Create Folio Type Names. <p><strong>OperationId:</strong>postFolioTypesConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create FolioTypesConfig.",
        "operationId": "postFolioTypesConfig",
        "parameters": [
          {
            "description": "Request object to create Folio Type Name.",
            "name": "folioTypesConfig",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioTypesConfig"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove Folio Type Names. <p><strong>OperationId:</strong>deleteFolioTypesConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete FolioTypesConfig.",
        "operationId": "deleteFolioTypesConfig",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/foreignCurrencies": {
      "get": {
        "description": "Operation to fetch Foreign Currencies. <p><strong>OperationId:</strong>getForeignCurrencies</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch ForeignCurrencies.",
        "operationId": "getForeignCurrencies",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": [
              "USD"
            ],
            "description": "Codes to be searched.",
            "name": "currencies",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description text set to the search criteria",
            "name": "description",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Inactive flag used to include/exclude inactive foreign currencies from the search result",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetching Foreign Currencies",
            "schema": {
              "$ref": "#/definitions/foreignCurrencies"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ForeignCurrencies not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change Foreign Currencies. <p><strong>OperationId:</strong>putForeignCurrencies</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change ForeignCurrencies.",
        "operationId": "putForeignCurrencies",
        "parameters": [
          {
            "description": "Request object to edit Foreign Currencies",
            "name": "foreignCurrencies",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/foreignCurrencies"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create Foreign Currencies. <p><strong>OperationId:</strong>postForeignCurrencies</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create ForeignCurrencies.",
        "operationId": "postForeignCurrencies",
        "parameters": [
          {
            "description": "Request object to create Foreign Currencies",
            "name": "foreignCurrencies",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/foreignCurrencies"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove Foreign Currencies. <p><strong>OperationId:</strong>deleteForeignCurrencies</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete ForeignCurrencies.",
        "operationId": "deleteForeignCurrencies",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "currencyCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/generates": {
      "put": {
        "description": "Use this API to update transaction generates for a specific property.<p><strong>OperationId:</strong>putTransactionGenerates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Put transaction generates",
        "operationId": "putTransactionGenerates",
        "parameters": [
          {
            "description": "Request to change transaction generates.",
            "name": "hotelTransactionGenerates",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelTransactionGenerates"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create transaction generates for a specific property.  Generates are rules used to calculate and post additional charges, such as service charges and taxes, when a particular sales charge transaction code is posted to guest, package or AR ledgers.<p><strong>OperationId:</strong>postTransactionGenerates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Post transaction generates",
        "operationId": "postTransactionGenerates",
        "parameters": [
          {
            "description": "Request to create transaction generates.",
            "name": "hotelTransactionGenerates",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelTransactionGenerates"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/globalExchangeRates": {
      "get": {
        "description": "You can use this API to retrieve global exchange rate information for a chain. You can search by Currency Code and exchange types. Results can include past, current and future exchange rate information for a currency. <p><strong>OperationId:</strong>getGlobalExchangeRatesInfo</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch GlobalExchangeRates.",
        "operationId": "getGlobalExchangeRatesInfo",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Membership"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "E-certificate conversion.",
            "name": "exchangeTypes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of global exchange rates and their information.",
            "schema": {
              "$ref": "#/definitions/exchangeRatesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "GlobalExchangeRatesInfo not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to Delete Global Exchange Rates. <p><strong>OperationId:</strong>deleteGlobalExchangeRates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete GlobalExchangeRates.",
        "operationId": "deleteGlobalExchangeRates",
        "parameters": [
          {
            "description": "Global Exchange Rates to be Set.",
            "name": "exchangeRates",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/exchangeRates"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/globalExchangeRates/set": {
      "put": {
        "description": "The operation sets global exchange rates. <p><strong>OperationId:</strong>setGlobalExchangeRates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to set GlobalExchangeRates.",
        "operationId": "setGlobalExchangeRates",
        "parameters": [
          {
            "description": "Exchange Rates to be Set.",
            "name": "exchangeRates",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/exchangeRates"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/groupArrangementCodes": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getGroupArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create GroupArrangementCodes.",
        "operationId": "getGroupArrangementCodes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "A flag that determines whether or not to fetch associated transaction codes. Fetches only the arrangement codes when this flag is true.",
            "name": "includeTransactionCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "arrangementCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching group arrangement codes.",
            "schema": {
              "$ref": "#/definitions/groupArrangementCodes"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "GroupArrangementCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": " <p><strong>OperationId:</strong>putGroupArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change GroupArrangementCodes.",
        "operationId": "putGroupArrangementCodes",
        "parameters": [
          {
            "description": "Request object for changing group arrangement codes.",
            "name": "groupArrangementCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/groupArrangementCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": " <p><strong>OperationId:</strong>postGroupArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create GroupArrangementCodes.",
        "operationId": "postGroupArrangementCodes",
        "parameters": [
          {
            "description": "Request object for creating new group arrangement codes.",
            "name": "groupArrangementCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/groupArrangementCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": " <p><strong>OperationId:</strong>deleteGroupArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete GroupArrangementCodes.",
        "operationId": "deleteGroupArrangementCodes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/groupArrangementCodes/copy": {
      "put": {
        "description": " <p><strong>OperationId:</strong>copyGroupArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to copy GroupArrangementCodes.",
        "operationId": "copyGroupArrangementCodes",
        "parameters": [
          {
            "description": "List of the group arrangement codes to be copied.",
            "name": "groupArrangementCodesCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/groupArrangementCodesCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/guiNumberRules": {
      "get": {
        "description": "Operation to fetch GUI Number rules <p><strong>OperationId:</strong>getGUINumberRules</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch GUINumberRules.",
        "operationId": "getGUINumberRules",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetch GUI number rules",
            "schema": {
              "$ref": "#/definitions/gUINumberRulesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "GUINumberRules not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change GUI Number rules <p><strong>OperationId:</strong>putGUINumberRules</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change GUINumberRules.",
        "operationId": "putGUINumberRules",
        "parameters": [
          {
            "description": "Request object to edit GUI number rules.",
            "name": "gUINumberRulesDetails",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/gUINumberRulesDetails"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotelAdjustmentCodes": {
      "get": {
        "description": "Operation to fetch Adjustment Codes. <p><strong>OperationId:</strong>getAdjustmentCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch AdjustmentCodes.",
        "operationId": "getAdjustmentCodes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "adjustmentCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Adjustment Code configurations.",
            "schema": {
              "$ref": "#/definitions/adjustmentCodes"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AdjustmentCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change Adjustment Codes. <p><strong>OperationId:</strong>putAdjustmentCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change AdjustmentCodes.",
        "operationId": "putAdjustmentCodes",
        "parameters": [
          {
            "description": "Request object for changing existing Adjustment Code Configurations.",
            "name": "adjustmentCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/adjustmentCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create Adjustment Codes. <p><strong>OperationId:</strong>postAdjustmentCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create AdjustmentCodes.",
        "operationId": "postAdjustmentCodes",
        "parameters": [
          {
            "description": "Request object for creating new Adjustment Code Configurations.",
            "name": "adjustmentCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/adjustmentCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove Adjustment Codes. <p><strong>OperationId:</strong>deleteAdjustmentCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete AdjustmentCodes.",
        "operationId": "deleteAdjustmentCodes",
        "parameters": [
          {
            "type": "string",
            "description": "Configuration code.",
            "name": "adjustmentCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hotel where the code is configured.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotelAdjustmentCodes/copy": {
      "put": {
        "description": "Operation to copy Adjustment Codes. <p><strong>OperationId:</strong>copyAdjustmentCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to copy AdjustmentCodes.",
        "operationId": "copyAdjustmentCodes",
        "parameters": [
          {
            "description": "List of the Adjustment Codes to be copied.",
            "name": "adjustmentCodesCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/adjustmentCodesCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotelPaymentMethods": {
      "get": {
        "description": "Operation to fetch payment methods. <p><strong>OperationId:</strong>getPaymentMethods</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch PaymentMethods.",
        "operationId": "getPaymentMethods",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transactionCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "paymentMethods",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "CardRanges"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": [
              "CardRanges"
            ],
            "description": "Simple Type for payment method fetch instruction.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetching payment methods.",
            "schema": {
              "$ref": "#/definitions/paymentMethodsInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "PaymentMethods not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change payment methods. <p><strong>OperationId:</strong>putPaymentMethods</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change PaymentMethods.",
        "operationId": "putPaymentMethods",
        "parameters": [
          {
            "description": "Request to change payment methods.",
            "name": "paymentMethods",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/paymentMethods"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create payment methods. <p><strong>OperationId:</strong>postPaymentMethods</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create PaymentMethods.",
        "operationId": "postPaymentMethods",
        "parameters": [
          {
            "description": "Request to create payment methods.",
            "name": "paymentMethods",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/paymentMethods"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotelPaymentMethods/copy": {
      "put": {
        "description": "Operation to copy payment methods. <p><strong>OperationId:</strong>copyPaymentMethods</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to copy PaymentMethods.",
        "operationId": "copyPaymentMethods",
        "parameters": [
          {
            "description": "List of payment methods to be copied.",
            "name": "paymentMethodsCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/paymentMethodsCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotelTaxTypes": {
      "get": {
        "description": "Operation to fetch Tax Types. <p><strong>OperationId:</strong>getTaxTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch TaxTypes.",
        "operationId": "getTaxTypes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "taxTypeCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Tax Type configurations.",
            "schema": {
              "$ref": "#/definitions/taxTypes"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TaxTypes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change Tax Types. <p><strong>OperationId:</strong>putTaxTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change TaxTypes.",
        "operationId": "putTaxTypes",
        "parameters": [
          {
            "description": "Request object for changing existing Tax Type Configurations.",
            "name": "taxTypes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taxTypes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create Tax Types. <p><strong>OperationId:</strong>postTaxTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create TaxTypes.",
        "operationId": "postTaxTypes",
        "parameters": [
          {
            "description": "Request object for creating new Tax Type Configurations.",
            "name": "taxTypes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taxTypes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove Tax Types. <p><strong>OperationId:</strong>deleteTaxTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete TaxTypes.",
        "operationId": "deleteTaxTypes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "name": "taxTypeCode",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotelTaxTypes/copy": {
      "put": {
        "description": "Operation to copy Tax Types. <p><strong>OperationId:</strong>copyTaxTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to copy TaxTypes.",
        "operationId": "copyTaxTypes",
        "parameters": [
          {
            "description": "List of the Tax Types to be copied.",
            "name": "taxTypesCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taxTypesCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/ARAccountTypes": {
      "get": {
        "description": "Operation to fetch account types. <p><strong>OperationId:</strong>getARAccountTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivablesConfig"
        ],
        "summary": "Operation to fetch AR account types.",
        "operationId": "getARAccountTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Account receivable account type",
            "name": "accountType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Full description of account type",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetch account types",
            "schema": {
              "$ref": "#/definitions/arAccountTypes"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ARAccountTypes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/cashierShifts/dropLocations": {
      "get": {
        "description": "Use this API to get Cashier Shift Drop Locations. <p><strong>OperationId:</strong>getCashierShiftDropLocations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Cashier Shift Drop Locations",
        "operationId": "getCashierShiftDropLocations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Cashier Shift Drop Locations.",
            "schema": {
              "$ref": "#/definitions/cashierShiftDropLocationsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CashierShiftDropLocations not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Cashier Shift Drop Locations. <p><strong>OperationId:</strong>postCashierShiftDropLocations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Cashier Shift Drop Locations",
        "operationId": "postCashierShiftDropLocations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating Cashier Shift Drop Locations.",
            "name": "cashierShiftDropLocationsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cashierShiftDropLocationsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/cashierShifts/dropLocations/{dropLocationId}": {
      "put": {
        "description": "Use this API to update Cashier Shift Drop Locations. <p><strong>OperationId:</strong>changeCashierShiftDropLocations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Cashier Shift Drop Locations",
        "operationId": "changeCashierShiftDropLocations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of drop location.",
            "name": "dropLocationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Cashier Shift Drop Locations.",
            "name": "cashierShiftDropLocationsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cashierShiftDropLocationsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete Cashier Shift Drop Locations. <p><strong>OperationId:</strong>removeCashierShiftDropLocations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Cashier Shift Drop Locations",
        "operationId": "removeCashierShiftDropLocations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of drop location.",
            "name": "dropLocationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/commissionCode/{commissionCode}": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getCommissionCode</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ],
        "summary": "Operation to fetch commission code.",
        "operationId": "getCommissionCode",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Commission Code in OPERA",
            "name": "commissionCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching commission code details.",
            "schema": {
              "$ref": "#/definitions/commissionCodeDetail"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CommissionCode not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/compAuthorizers": {
      "get": {
        "description": "Operation to fetch Authorizer Groups. <p><strong>OperationId:</strong>getCompAuthorizers</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch CompAuthorizers.",
        "operationId": "getCompAuthorizers",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Configuring this flag to be TRUE will return the details of the comp authorizers.",
            "name": "includeCompAuthorizerDetails",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Configuring this flag to be TRUE will return also the inactive authorizers.",
            "name": "includeInactiveAuthorizers",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Configuring this flag to be TRUE will return the terminated authorizers.",
            "name": "includeTerminatedAuthorizers",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Name for the authorizer.",
            "name": "authorizer",
            "in": "query"
          },
          {
            "type": "string",
            "description": "First name for the authorizer.",
            "name": "firstName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Last name for the authorizer.",
            "name": "lastName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all information about the comp authorizers.",
            "schema": {
              "$ref": "#/definitions/compAuthorizers"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CompAuthorizers not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/compBucket/redemption": {
      "get": {
        "description": "You can use this API to fetch Comp Bucket Redemption Codes. <p><strong>OperationId:</strong>getCompBucketRedemptionCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch Comp Bucket Redemption Codes.",
        "operationId": "getCompBucketRedemptionCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "redemptionCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Comp Bucket Redemption Codes configurations.",
            "schema": {
              "$ref": "#/definitions/compBucketRedemptionConfigDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CompBucketRedemptionCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create Comp Bucket Redemption Codes. <p><strong>OperationId:</strong>postCompBucketRedemptionConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create Comp Bucket Redemption Codes.",
        "operationId": "postCompBucketRedemptionConfig",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating new Comp Bucket Redemption Codes configurations.",
            "name": "compBucketRedemptionConfig",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/compBucketRedemptionConfig"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/compBucket/redemption/{redemptionCode}": {
      "get": {
        "description": "You can use this API to fetch Comp Bucket Redemption Codes.<br><p><strong><mark>This API is deprecated. Please use getCompBucketRedemptionCodes instead</mark></strong></p> <p><strong>OperationId:</strong>getCompBucketRedemptionConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch Comp Bucket Redemption Codes.",
        "operationId": "getCompBucketRedemptionConfig",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Bucket Redemption Code",
            "name": "redemptionCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Comp Bucket Redemption Codes configurations.",
            "schema": {
              "$ref": "#/definitions/compBucketRedemptionConfigDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CompBucketRedemptionConfig not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change Comp Bucket Redemption Codes. <p><strong>OperationId:</strong>putCompBucketRedemptionConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change Comp Bucket Redemption Codes.",
        "operationId": "putCompBucketRedemptionConfig",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Bucket Redemption Code",
            "name": "redemptionCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing existing Comp Bucket Redemption Codes configurations.",
            "name": "compBucketRedemptionConfig",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/compBucketRedemptionConfig"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove Comp Bucket Redemption Codes. <p><strong>OperationId:</strong>deleteCompBucketRedemptionConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to remove Comp Bucket Redemption Codes.",
        "operationId": "deleteCompBucketRedemptionConfig",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Bucket Redemption Code",
            "name": "redemptionCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/compTypes": {
      "get": {
        "description": "Operation to Fetch Comp TYpes. <p><strong>OperationId:</strong>getCompTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to Fetch Comp Types.",
        "operationId": "getCompTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the source hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Code is used to identify the CompType.",
            "name": "compTypeCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Comp Types.",
            "schema": {
              "$ref": "#/definitions/compTypesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CompTypes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/customCharges": {
      "get": {
        "description": "You can use this API to fetch Custom Charge Codes. <p><strong>OperationId:</strong>getCustomChargeCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch Custom Charge Codes.",
        "operationId": "getCustomChargeCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "configurationId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Custom Charges.",
            "schema": {
              "$ref": "#/definitions/customChargesConfigDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CustomChargeCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create Custom Charge Codes. <p><strong>OperationId:</strong>postCustomChargesConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create Custom Charge Codes.",
        "operationId": "postCustomChargesConfig",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating new Custom Charges.",
            "name": "customChargesConfig",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customChargesConfig"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/customCharges/configuration/{configurationId}": {
      "get": {
        "description": "You can use this API to fetch Custom Charge Codes.<br><p><strong><mark>This API is deprecated. Please use getCustomChargeCodes instead</mark></strong></p> <p><strong>OperationId:</strong>getCustomChargesConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch Custom Charge Codes.",
        "operationId": "getCustomChargesConfig",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the configuration",
            "name": "configurationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Custom Charges.",
            "schema": {
              "$ref": "#/definitions/customChargesConfigDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CustomChargesConfig not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change Custom ChargeCodes. <p><strong>OperationId:</strong>putCustomChargesConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change Custom Charge Codes.",
        "operationId": "putCustomChargesConfig",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the configuration",
            "name": "configurationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing existing Custom Charges.",
            "name": "customChargesConfig",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customChargesConfig"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove Custom Charge Codes. <p><strong>OperationId:</strong>deleteCustomChargesConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to remove Custom Charge Codes.",
        "operationId": "deleteCustomChargesConfig",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the configuration",
            "name": "configurationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/customCharges/exemptions": {
      "post": {
        "description": "Operation to create Custom Charge Exemptions Config. <p><strong>OperationId:</strong>postCustomChargeExemptionsConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create Custom Charge Exemptions Config.",
        "operationId": "postCustomChargeExemptionsConfig",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "New one or more Custom Charge Exemptions to be created.",
            "name": "customChargeExemptionsConfigToBeCreated",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customChargeExemptionsConfigToBeCreated"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/customCharges/exemptions/{configurationId}": {
      "get": {
        "description": "You can use this API to fetch Custom Charge Exemptions Config.<br><p><strong><mark>This API is deprecated. Please use getCustomChargeExemptions instead</mark></strong></p> <p><strong>OperationId:</strong>getCustomChargeExemptionsConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch Custom Charge Exemptions Config.",
        "operationId": "getCustomChargeExemptionsConfig",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the configuration",
            "name": "configurationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicator that tells whether to include inactive articles in search results.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Custom Charge Exemptions.",
            "schema": {
              "$ref": "#/definitions/customChargeExemptionsConfig"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CustomChargeExemptionsConfig not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change Custom Charge Exemptions Config. <p><strong>OperationId:</strong>putCustomChargeExemptionsConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change Custom Charge Exemptions Config.",
        "operationId": "putCustomChargeExemptionsConfig",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the configuration",
            "name": "configurationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Existing Custom Charge Exemptions to be changed.",
            "name": "customChargeExemptionsConfigToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customChargeExemptionsConfigToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove Custom Charge Exemptions Config. <p><strong>OperationId:</strong>deleteCustomChargeExemptionsConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to remove Custom Charge Exemptions Config.",
        "operationId": "deleteCustomChargeExemptionsConfig",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the configuration",
            "name": "configurationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/customNumbers": {
      "get": {
        "description": "You can use this API to fetch custom number config. <p><strong>OperationId:</strong>getCustomNumbers</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch custom number config.",
        "operationId": "getCustomNumbers",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicator that tells whether to return the inactive custom number configuration in search results.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "configurationId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The description of the custom number configuration code.",
            "name": "description",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Folio",
              "Receipt"
            ],
            "type": "string",
            "description": "Receipt",
            "name": "area",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching custom number configurations.",
            "schema": {
              "$ref": "#/definitions/customNumberConfigDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CustomNumbers not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": " <p><strong>OperationId:</strong>postCustomNumberConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create custom number config.",
        "operationId": "postCustomNumberConfig",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to create custom number configuration.",
            "name": "customNumberConfiguration",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customNumberConfiguration"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/customNumbers/configuration/{configurationId}": {
      "get": {
        "description": "You can use this API to fetch custom number config.<br><p><strong><mark>This API is deprecated. Please use getCustomNumbers instead</mark></strong></p> <p><strong>OperationId:</strong>getCustomNumberConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch custom number config.",
        "operationId": "getCustomNumberConfig",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the configuration",
            "name": "configurationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Indicator that tells whether to return the inactive custom number configuration in search results.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The description of the custom number configuration code.",
            "name": "description",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Folio",
              "Receipt"
            ],
            "type": "string",
            "description": "Receipt",
            "name": "area",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching custom number configurations.",
            "schema": {
              "$ref": "#/definitions/customNumberConfigDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CustomNumberConfig not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": " <p><strong>OperationId:</strong>putCustomNumberConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change custom number config.",
        "operationId": "putCustomNumberConfig",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the configuration",
            "name": "configurationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to change custom number configuration.",
            "name": "customNumberConfiguration",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customNumberConfiguration"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to change custom number configuration.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": " <p><strong>OperationId:</strong>deleteCustomNumberConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to remove custom number config.",
        "operationId": "deleteCustomNumberConfig",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the configuration",
            "name": "configurationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/exchangeRates": {
      "get": {
        "description": "You can use this API to retrieve exchange rate information for a hotel. You can search by hotel, Currency Code and exchange types. Results can include past, current and future exchange rate information for a currency.<br><p><strong><mark>This API is deprecated. Please use getExchangeRatesInfo instead</mark></strong></p> <p><strong>OperationId:</strong>getExchangeRates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch ExchangeRates.",
        "operationId": "getExchangeRates",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Cash",
                "Settlement",
                "Posting",
                "Check",
                "TACommission",
                "Membership",
                "Certificate"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "E-certificate conversion.",
            "name": "exchangeTypes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of exchange rates and their information.",
            "schema": {
              "$ref": "#/definitions/exchangeRatesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": [
                {
                  "baseCurrency": {
                    "code": "USD"
                  },
                  "beginDate": "2020-09-01 00:28:45.0",
                  "buyCommission": "0",
                  "buyRate": "1",
                  "currency": {
                    "code": "AUD"
                  },
                  "exchangeType": [
                    "Cash"
                  ],
                  "status": "Future"
                },
                {
                  "baseCurrency": {
                    "code": "USD"
                  },
                  "beginDate": "2020-01-01 00:28:45.0",
                  "buyCommission": "0",
                  "buyRate": "1.34",
                  "currency": {
                    "code": "AUD"
                  },
                  "exchangeType": [
                    "Cash"
                  ],
                  "status": "Current"
                },
                {
                  "baseCurrency": {
                    "code": "USD"
                  },
                  "beginDate": "2016-09-01 13:04:40.0",
                  "buyCommission": "5",
                  "buyRate": "5",
                  "currency": {
                    "code": "AUD"
                  },
                  "exchangeType": [
                    "Cash"
                  ],
                  "status": "Past"
                }
              ]
            }
          },
          "204": {
            "description": "ExchangeRates not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/exchangeRates/{currencyCode}": {
      "get": {
        "description": "Operation to Fetch Future Past Exchange Rates. <p><strong>OperationId:</strong>getFuturePastExchangeRates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch FuturePastExchangeRates.",
        "operationId": "getFuturePastExchangeRates",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Currency Code in OPERA",
            "name": "currencyCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "enum": [
              "Cash",
              "Settlement",
              "Posting",
              "Check",
              "TACommission",
              "Membership",
              "Certificate"
            ],
            "type": "string",
            "x-example": "Cash",
            "description": "E-certificate conversion.",
            "name": "exchangeTypes",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "name": "dateRangeStart",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "dateRangeEnd",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of exchange rates and their information.",
            "schema": {
              "$ref": "#/definitions/futurePastExchangeRates"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FuturePastExchangeRates not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/fiscalCommands": {
      "get": {
        "description": "Use this API to get fiscal commands. <p><strong>OperationId:</strong>getFiscalCommands</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Get Fiscal Commands",
        "operationId": "getFiscalCommands",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Inactive flag used to include/exclude inactive transaction codes from the search result",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "code",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used for fiscal partner codes. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "partnerCode",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "FiscalCommand",
              "Operation"
            ],
            "type": "string",
            "description": "List of Fiscal Operations supported.",
            "name": "operationType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists available Fiscal Operations.",
            "schema": {
              "$ref": "#/definitions/fiscalCommandsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FiscalCommands not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update configuration fiscal commands. <p><strong>OperationId:</strong>changeFiscalCommands</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Change configuration fiscal commands",
        "operationId": "changeFiscalCommands",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to update existing Fiscal Command.",
            "name": "changeFiscalCommands",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeFiscalCommands"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/fiscalPartners": {
      "get": {
        "description": "Use this API to get fiscal partners. <p><strong>OperationId:</strong>getFiscalPartners</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Get fiscal partners",
        "operationId": "getFiscalPartners",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used for fiscal partner codes. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "partnerCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetch Fiscal Partners Config.",
            "schema": {
              "$ref": "#/definitions/fiscalPartnersDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FiscalPartners not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update configuration fiscal partners. <p><strong>OperationId:</strong>changeFiscalPartners</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Change configuration fiscal partners",
        "operationId": "changeFiscalPartners",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to change Fiscal Partners.",
            "name": "changeFiscalPartners",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeFiscalPartners"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create fiscal partners. <p><strong>OperationId:</strong>postFiscalPartners</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Create fiscal partners",
        "operationId": "postFiscalPartners",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to create Fiscal Partners.",
            "name": "createFiscalPartners",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/createFiscalPartners"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete configuration fiscal partners. <p><strong>OperationId:</strong>removeFiscalPartners</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Delete configuration fiscal partners",
        "operationId": "removeFiscalPartners",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used for fiscal partner codes. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "partnerCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/folios/{folioType}/legends/{legendCode}": {
      "delete": {
        "description": "Operation to remove folio type legend mappings config. <p><strong>OperationId:</strong>removeFolioTypeLegendMappingConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to remove folio type legend mappings config.",
        "operationId": "removeFolioTypeLegendMappingConfig",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Legend Code",
            "name": "legendCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Folio Type",
            "name": "folioType",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the source hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/generates": {
      "get": {
        "description": "Operation to fetch tax types. <p><strong>OperationId:</strong>getGenerateTaxTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch GenerateTaxTypes.",
        "operationId": "getGenerateTaxTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "transactionCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetching tax types.",
            "schema": {
              "$ref": "#/definitions/taxTypesGenerate"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "GenerateTaxTypes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/interfaces/{interfaceLogoId}/customData": {
      "get": {
        "description": "Operation to fetch hotel interface custom data. <p><strong>OperationId:</strong>getHotelInterfaceCustomData</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ],
        "summary": "Operation to fetch hotel interface custom data.",
        "operationId": "getHotelInterfaceCustomData",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel interface logo",
            "name": "interfaceLogoId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "enum": [
              "PrimaryInfo",
              "AdditionalInfo",
              "GeneralInfo",
              "CommunicationInfo",
              "IfcTranslation",
              "IfcClassOfService",
              "IfcImportRooms",
              "WorkstationSetupInfo",
              "PostingsInfo",
              "CustomDataInfo",
              "ExportDataInfo",
              "TransactionCodesInfo"
            ],
            "type": "string",
            "description": "Transaction codes of a Hotel Interface.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for retrieving the details of a Hotel Interface.",
            "schema": {
              "$ref": "#/definitions/hotelInterfaceDetail"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "HotelInterfaceCustomData not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to update hotel interface custom data. <p><strong>OperationId:</strong>updateInterfaceCustomData</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ],
        "summary": "Operation to update hotel interface custom data.",
        "operationId": "updateInterfaceCustomData",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel interface logo",
            "name": "interfaceLogoId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for updating a Hotel Interface.",
            "name": "hotelInterfaceDetail",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelInterfaceDetail"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/template/customNumbers": {
      "post": {
        "description": "You can use this API to create a new template custom number configuration.<br><p><strong><mark>This API is deprecated. Please use postTemplateCustomNumber instead</mark></strong></p> <p><strong>OperationId:</strong>postTemplateCustomNumberConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create a new template custom number configuration.",
        "operationId": "postTemplateCustomNumberConfig",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to create a new template custom number configuration.",
            "name": "templateCustomNumberConfig",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateCustomNumberConfig"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/template/customNumbers/configuration/{configurationId}": {
      "get": {
        "description": "You can use this API to fetch template custom number configuration.<br><p><strong><mark>This API is deprecated. Please use getTemplateCustomNumbers instead</mark></strong></p> <p><strong>OperationId:</strong>getTemplateCustomNumberConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch template custom number configuration.",
        "operationId": "getTemplateCustomNumberConfig",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the configuration",
            "name": "configurationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Indicator that tells whether to return the inactive custom number configuration in search results.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching template custom number configurations.",
            "schema": {
              "$ref": "#/definitions/templateCustomNumberConfigDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TemplateCustomNumberConfig not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "You can use this API to change template custom number configuration.<br><p><strong><mark>This API is deprecated. Please use putTemplateCustomNumber instead</mark></strong></p> <p><strong>OperationId:</strong>putTemplateCustomNumberConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change template custom number configuration.",
        "operationId": "putTemplateCustomNumberConfig",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the configuration",
            "name": "configurationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to change template custom number configuration.",
            "name": "templateCustomNumberConfig",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateCustomNumberConfig"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to change template custom number configuration.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "You can use this API to remove template custom number configuration.<br><p><strong><mark>This API is deprecated. Please use deleteTemplateCustomNumber instead</mark></strong></p> <p><strong>OperationId:</strong>deleteTemplateCustomNumberConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to remove template custom number configuration.",
        "operationId": "deleteTemplateCustomNumberConfig",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the configuration",
            "name": "configurationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/trackItActions": {
      "get": {
        "description": "Use this API to get Track it Actions. <p><strong>OperationId:</strong>getTrackItActions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Track it Actions",
        "operationId": "getTrackItActions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true this boolean will set the criteria to only return Inactive records.",
            "name": "showInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Track it Actions.",
            "schema": {
              "$ref": "#/definitions/trackItActionsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TrackItActions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Track it Actions. <p><strong>OperationId:</strong>postTrackItActions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create Track it Actions",
        "operationId": "postTrackItActions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating new Track it Actions.",
            "name": "trackItActionsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/trackItActionsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/trackItActions/{actionCode}": {
      "put": {
        "description": "Use this API to update Track it Actions. <p><strong>OperationId:</strong>changeTrackItActions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change Track it Actions",
        "operationId": "changeTrackItActions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of action.",
            "name": "actionCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing existing Track it Actions.",
            "name": "trackItActionsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/trackItActionsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete Track it Actions. <p><strong>OperationId:</strong>removeTrackItActions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete Track it Actions",
        "operationId": "removeTrackItActions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of action.",
            "name": "actionCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/trackItLocations": {
      "get": {
        "description": "Use this API to get Track it Locations. <p><strong>OperationId:</strong>getTrackItLocations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Track it Locations",
        "operationId": "getTrackItLocations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true this boolean will set the criteria to only return Inactive records.",
            "name": "showInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Track it Locations.",
            "schema": {
              "$ref": "#/definitions/trackItLocationsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TrackItLocations not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Track it Locations. <p><strong>OperationId:</strong>postTrackItLocations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create Track it Locations",
        "operationId": "postTrackItLocations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating new Track it Locations.",
            "name": "trackItLocationsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/trackItLocationsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/trackItLocations/{locationCode}": {
      "put": {
        "description": "Use this API to update Track it Locations. <p><strong>OperationId:</strong>changeTrackItLocations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change Track it Locations",
        "operationId": "changeTrackItLocations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of location.",
            "name": "locationCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing existing Track it Locations.",
            "name": "trackItLocationsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/trackItLocationsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete Track it Locations. <p><strong>OperationId:</strong>removeTrackItLocations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete Track it Locations",
        "operationId": "removeTrackItLocations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of location.",
            "name": "locationCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/trackItTypes": {
      "get": {
        "description": "Use this API to get Track it Types. <p><strong>OperationId:</strong>getTrackItTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Track it Types",
        "operationId": "getTrackItTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true this boolean will set the criteria to only return Inactive records.",
            "name": "showInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Track it Types.",
            "schema": {
              "$ref": "#/definitions/trackItTypesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TrackItTypes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Track it Types. <p><strong>OperationId:</strong>postTrackItTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create Track it Types",
        "operationId": "postTrackItTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating new Track it Types.",
            "name": "trackItTypesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/trackItTypesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/trackItTypes/{typeCode}": {
      "put": {
        "description": "Use this API to update Track it Types. <p><strong>OperationId:</strong>changeTrackItTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change Track it Types",
        "operationId": "changeTrackItTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of track it type.",
            "name": "typeCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing existing Track it Types.",
            "name": "trackItTypesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/trackItTypesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete Track it Types. <p><strong>OperationId:</strong>removeTrackItTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete Track it Types",
        "operationId": "removeTrackItTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of track it type.",
            "name": "typeCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactionCodeAccessRoles": {
      "get": {
        "description": "Operation to Fetch Transaction Code Access Roles. <p><strong>OperationId:</strong>getTransactionCodeAccessRoles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch TransactionCodeAccessRoles.",
        "operationId": "getTransactionCodeAccessRoles",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Codes",
            "name": "roleCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for information regarding Transaction Code Access Role",
            "schema": {
              "$ref": "#/definitions/transactionCodeAccessRoles"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TransactionCodeAccessRoles not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactionCodes/{transactionCode}/chargeSimulations": {
      "get": {
        "description": "Operation to test posting amount. <p><strong>OperationId:</strong>calculatePosting</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to CalculatePosting.",
        "operationId": "calculatePosting",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Transaction Code in OPERA",
            "name": "transactionCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "x-example": "299",
            "description": "Base amount to test for posting.",
            "name": "postingAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specify this criteria if calculation is based on the tax type.",
            "name": "taxType",
            "in": "query"
          },
          {
            "type": "number",
            "x-example": "299",
            "description": "Specify this criteria if calculation is based on the guest balance.",
            "name": "guestBalance",
            "in": "query"
          },
          {
            "type": "string",
            "x-example": "STD",
            "description": "Specify this criteria if calculation is based on room type.",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for testing posting amount.",
            "schema": {
              "$ref": "#/definitions/calculatedPosting"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "calculatePosting not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactionCodes/{transactionCode}/hotelTransactionCode": {
      "get": {
        "description": "Use this API to return transaction codes based on search criteria such as hotelIds, transactionGroupCodes, transactionSubgroupsCodes, transactionCodes, description, etc.<p><strong>OperationId:</strong>getTransactionCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Get transaction codes",
        "operationId": "getTransactionCode",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Transaction Code in OPERA",
            "name": "transactionCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Header",
                "Generates",
                "Glmapping",
                "AssociatedTrxCodes",
                "MappingCodes"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": [
              "Header"
            ],
            "description": "Simple type for transaction code instructions that can be used for partial operations.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching detailed transaction code.",
            "schema": {
              "$ref": "#/definitions/hotelTransactionCode"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TransactionCode not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactionCodes/{transactionCode}/transactionCodes": {
      "delete": {
        "description": "Operation to remove transaction codes. <p><strong>OperationId:</strong>deleteTransactionCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete TransactionCodes.",
        "operationId": "deleteTransactionCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Transaction Code in OPERA",
            "name": "transactionCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactionDiscounts/{transactionDiscountCode}": {
      "put": {
        "description": "Operation to change Transaction Discounts. <p><strong>OperationId:</strong>putTransactionDiscounts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change TransactionDiscounts.",
        "operationId": "putTransactionDiscounts",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique code for transaction discount",
            "name": "transactionDiscountCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing a Transaction Discount Configuration.",
            "name": "transactionDiscount",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionDiscount"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Additional warnings about the operation.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove Transaction Discounts. <p><strong>OperationId:</strong>deleteTransactionDiscounts</p>",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete TransactionDiscounts.",
        "operationId": "deleteTransactionDiscounts",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Unique code for transaction discount",
            "name": "transactionDiscountCode",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactionGroupCode/{transactionGroupCode}/transactionGroup": {
      "get": {
        "description": "Operation to fetch detailed transaction group. <p><strong>OperationId:</strong>getTransactionGroup</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch TransactionGroup.",
        "operationId": "getTransactionGroup",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Transaction Group Code in OPERA",
            "name": "transactionGroupCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Header",
                "Generates"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": [
              "Header"
            ],
            "description": "Simple type for transaction group instructions that can be used for partial operations.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching detailed transaction group configuration.",
            "schema": {
              "$ref": "#/definitions/transactionGroup"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TransactionGroup not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactionSubGroupCodes/{transactionSubGroupCode}/transactionGroupCodes/{transactionGroupCode}/transactionSubGroup": {
      "get": {
        "description": "Operation to fetch detailed transaction sub group. <p><strong>OperationId:</strong>getTransactionSubgroup</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch TransactionGroup.",
        "operationId": "getTransactionSubgroup",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Transaction Group Code in OPERA",
            "name": "transactionGroupCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Transaction SubGroup Code in OPERA",
            "name": "transactionSubGroupCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Header",
                "Generates"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": [
              "Header"
            ],
            "description": "Simple type for transaction sub group instructions that can be used for partial operations.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching detailed transaction subgroup configuration.",
            "schema": {
              "$ref": "#/definitions/hotelTransactionSubgroup"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TransactionSubgroup not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{sourceHotelId}/customCharges/exemptions/copy": {
      "post": {
        "description": "Operation to copy Custom Charge Exemptions Config. <p><strong>OperationId:</strong>copyCustomChargeExemptionsConfig</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to copy Custom Charge Exemptions Config.",
        "operationId": "copyCustomChargeExemptionsConfig",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel in OPERA",
            "name": "sourceHotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "List of the Custom Charge Exemptions to be copied.",
            "name": "customChargeExemptionsConfigCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customChargeExemptionsConfigCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{sourceHotelId}/fiscalFolioParameters/copy": {
      "put": {
        "description": "Operation to copy Fiscal Folio Parameters. <p><strong>OperationId:</strong>copyFiscalFolioParameters</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to copy FiscalFolioParameters.",
        "operationId": "copyFiscalFolioParameters",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the source hotel in OPERA",
            "name": "sourceHotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for copying Fiscal Folio Parameters to other hotel code(s).",
            "name": "fiscalFolioParametersCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalFolioParametersCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{sourceHotelId}/trackItActions/copy": {
      "put": {
        "description": "Copy Track it Actions. <p><strong>OperationId:</strong>copyTrackItActions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": " Copy Track it Actions",
        "operationId": "copyTrackItActions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of source hotel.",
            "name": "sourceHotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "List of Track it Actions to be copied.",
            "name": "copyTrackItActions",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyTrackItActions"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{sourceHotelId}/trackItLocations/copy": {
      "put": {
        "description": "Copy Track it Locations. <p><strong>OperationId:</strong>copyTrackItLocations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": " Copy Track it Locations",
        "operationId": "copyTrackItLocations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of source hotel.",
            "name": "sourceHotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "List of Track it Locations to be copied.",
            "name": "copyTrackItLocations",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyTrackItLocations"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{sourceHotelId}/trackItTypes/copy": {
      "put": {
        "description": "Copy Track it Types. <p><strong>OperationId:</strong>copyTrackItTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": " Copy Track it Types",
        "operationId": "copyTrackItTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of source hotel.",
            "name": "sourceHotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "List of Track it Types to be copied.",
            "name": "copyTrackItTypes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyTrackItTypes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/noShowPostingRules": {
      "get": {
        "description": "Operation to fetch No Show Posting Rules. <p><strong>OperationId:</strong>getNoShowPostingRules</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch NoShowPostingRules.",
        "operationId": "getNoShowPostingRules",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "sourceCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching No Show Posting Rule Configurations.",
            "schema": {
              "$ref": "#/definitions/noShowPostingRules"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "NoShowPostingRules not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change No Show Posting Rules. <p><strong>OperationId:</strong>putNoShowPostingRules</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change NoShowPostingRules.",
        "operationId": "putNoShowPostingRules",
        "parameters": [
          {
            "description": "Request object for changing existing No Show Posting Rule Configurations.",
            "name": "noShowPostingRulesEdit",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/noShowPostingRulesEdit"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create No Show Posting Rules. <p><strong>OperationId:</strong>postNoShowPostingRules</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create NoShowPostingRules.",
        "operationId": "postNoShowPostingRules",
        "parameters": [
          {
            "description": "Request object for creating new No Show Posting Rule Configuration.",
            "name": "noShowPostingRules",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/noShowPostingRules"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove No Show Posting Rules. <p><strong>OperationId:</strong>deleteNoShowPostingRules</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete NoShowPostingRules.",
        "operationId": "deleteNoShowPostingRules",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Indicates for which hotel this posting rule apply to.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Type of the reservation.",
            "name": "reservationType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Source code of the reservation.",
            "name": "sourceCode",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "AllNights",
                "DepositOnly",
                "FirstNight"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple Type for Posting Rule Types.",
            "name": "postingRule",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/numberDescriptions": {
      "get": {
        "description": "The operation accepts code and/or descriptions for numbers as search criteria in fetch request and returns numbers, descriptions that match the criteria. <p><strong>OperationId:</strong>getNumberDescriptions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch NumberDescriptions.",
        "operationId": "getNumberDescriptions",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used for Number specific codes for OPERA tables. Possible values of this pattern are 1, 10, 17, THOUSAND, BILLION, etc.",
            "name": "numberCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description text set to the search criteria",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetching Numbers and Descriptions",
            "schema": {
              "$ref": "#/definitions/numberDescriptions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "NumberDescriptions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "The operation is to change the description corresponding to a number. <p><strong>OperationId:</strong>putNumberDescriptions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change NumberDescriptions.",
        "operationId": "putNumberDescriptions",
        "parameters": [
          {
            "description": "Request object to edit description of numbers",
            "name": "numberDescriptions",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/numberDescriptions"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/operaControlSequences": {
      "get": {
        "description": "Operation to fetch Opera Document Sequences. <p><strong>OperationId:</strong>getOperaControlSequences</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch OperaControlSequences.",
        "operationId": "getOperaControlSequences",
        "parameters": [
          {
            "type": "string",
            "description": "Hotel code of fetch criteria",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Country Code of fetch criteria",
            "name": "countryCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "name": "HotelCode",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "BillFolioTypes",
                "ArInvoice",
                "SequenceNumbers"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for opera sequence instructions that can be used for partial operations.",
            "name": "fetchInstruction",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object of Opera Control Sequence.",
            "schema": {
              "$ref": "#/definitions/operaControlSequences"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "OperaControlSequences not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change Opera Document Sequences. <p><strong>OperationId:</strong>putOperaControlSequences</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change OperaControlSequences.",
        "operationId": "putOperaControlSequences",
        "parameters": [
          {
            "description": "Request objects for updating Opera Control Sequences",
            "name": "operaControlSequences",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/operaControlSequences"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/packageArrangementCodes": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getPackageArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch PackageArrangementCodes.",
        "operationId": "getPackageArrangementCodes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "arrangementCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "A flag that determines whether to fetch active records or inactive records",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching package arrangement codes.",
            "schema": {
              "$ref": "#/definitions/packageArrangementCodes"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "PackageArrangementCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": " <p><strong>OperationId:</strong>putPackageArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change PackageArrangementCodes.",
        "operationId": "putPackageArrangementCodes",
        "parameters": [
          {
            "description": "Request object for changing package arrangement codes.",
            "name": "packageArrangementCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/packageArrangementCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": " <p><strong>OperationId:</strong>postPackageArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create PackageArrangementCodes.",
        "operationId": "postPackageArrangementCodes",
        "parameters": [
          {
            "description": "Request object for creating new package arrangement codes.",
            "name": "packageArrangementCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/packageArrangementCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": " <p><strong>OperationId:</strong>deletePackageArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete PackageArrangementCodes.",
        "operationId": "deletePackageArrangementCodes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/packageArrangementCodes/copy": {
      "put": {
        "description": " <p><strong>OperationId:</strong>copyPackageArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to copy PackageArrangementCodes.",
        "operationId": "copyPackageArrangementCodes",
        "parameters": [
          {
            "description": "List of the package arrangement codes to be copied.",
            "name": "packageArrangementCodesCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/packageArrangementCodesCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/paymentMethods": {
      "put": {
        "description": "Operation to remove payment methods. <p><strong>OperationId:</strong>removePaymentMethods</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete TransactionArrangementCodes.",
        "operationId": "removePaymentMethods",
        "parameters": [
          {
            "description": "Request to remove payment methods.",
            "name": "paymentMethods",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/paymentMethods"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/prepaidCard": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getPrepaidCard</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ],
        "summary": "Operation to fetch Prepaid Card.",
        "operationId": "getPrepaidCard",
        "parameters": [
          {
            "type": "string",
            "description": "Hotel code.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Prepaid card number.",
            "name": "cardNumber",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "interfaceId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "interfaceIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "PIN code associated for the prepaid card.",
            "name": "pin",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetch Prepaid card operation",
            "schema": {
              "$ref": "#/definitions/prepaidCardDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "PrepaidCard not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/prepaidCardBalance": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getPrepaidCardBalance</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ],
        "summary": "Operation to fetch prepaid card balance.",
        "operationId": "getPrepaidCardBalance",
        "parameters": [
          {
            "type": "string",
            "description": "Hotel code.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Prepaid card number.",
            "name": "cardNumber",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "interfaceId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "interfaceIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "PIN code associated for the prepaid card.",
            "name": "pin",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetch Prepaid card balance.",
            "schema": {
              "$ref": "#/definitions/prepaidCardBalanceDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "PrepaidCardBalance not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/prepaidCards": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getPrepaidCards</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ],
        "summary": "Operation to fetch PrepaidCards.",
        "operationId": "getPrepaidCards",
        "parameters": [
          {
            "type": "string",
            "description": "Hotel code.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Configuring this flag to be TRUE will fetch and return card details from vendor interface.",
            "name": "includeCardDetails",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Prepaid card number.",
            "name": "cardNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room No search criteria.",
            "name": "roomNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Last name search criteria.",
            "name": "nameWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "First name search criteria.",
            "name": "firstNameWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetch Prepaid cards operation",
            "schema": {
              "$ref": "#/definitions/prepaidCards"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "PrepaidCards not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/revenueBucketCodes": {
      "get": {
        "description": "Operation to fetch Revenue Bucket Codes. <p><strong>OperationId:</strong>getRevenueBucketCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch RevenueBucketCodes.",
        "operationId": "getRevenueBucketCodes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "trxCodeArrangementCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Default",
              "Fiscal"
            ],
            "type": "string",
            "description": "Fiscal Bucket Type.",
            "name": "trxCodeArrangementType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "revenueBucketTypesWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Revenue Bucket Codes configurations.",
            "schema": {
              "$ref": "#/definitions/revenueBucketCodes"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RevenueBucketCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change Revenue Bucket Codes. <p><strong>OperationId:</strong>putRevenueBucketCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change RevenueBucketCodes.",
        "operationId": "putRevenueBucketCodes",
        "parameters": [
          {
            "description": "Request object for changing existing Revenue Bucket Codes Configurations.",
            "name": "revenueBucketCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/revenueBucketCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create Revenue Bucket Codes. <p><strong>OperationId:</strong>postRevenueBucketCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create RevenueBucketCodes.",
        "operationId": "postRevenueBucketCodes",
        "parameters": [
          {
            "description": "Request object for creating new Revenue Bucket Codes Configurations.",
            "name": "revenueBucketCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/revenueBucketCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove Revenue Bucket Codes. <p><strong>OperationId:</strong>deleteRevenueBucketCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete RevenueBucketCodes.",
        "operationId": "deleteRevenueBucketCodes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Revenue Export Bucket Type",
            "name": "revenueBucketType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/revenueBucketCodes/copy": {
      "put": {
        "description": "Operation to copy Revenue Bucket Codes. <p><strong>OperationId:</strong>copyRevenueBucketCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to copy RevenueBucketCodes.",
        "operationId": "copyRevenueBucketCodes",
        "parameters": [
          {
            "description": "Request object for copying one or more Revenue Bucket Codes configurations from one source property to one or more target properties.",
            "name": "revenueBucketCodesCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/revenueBucketCodesCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/revenueBucketTypes": {
      "get": {
        "description": "Operation to fetch Revenue Bucket Types. <p><strong>OperationId:</strong>getRevenueBucketTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch RevenueBucketTypes.",
        "operationId": "getRevenueBucketTypes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "revenueBucketTypeCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Default",
              "Fiscal"
            ],
            "type": "string",
            "description": "Fiscal Bucket Type.",
            "name": "bucketType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Revenue Bucket Types configurations.",
            "schema": {
              "$ref": "#/definitions/revenueBucketTypes"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RevenueBucketTypes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change Revenue Bucket Types. <p><strong>OperationId:</strong>putRevenueBucketTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change RevenueBucketTypes.",
        "operationId": "putRevenueBucketTypes",
        "parameters": [
          {
            "description": "Request object for changing existing Revenue Bucket Types Configurations.",
            "name": "revenueBucketTypes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/revenueBucketTypes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create Revenue Bucket Types. <p><strong>OperationId:</strong>postRevenueBucketTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create RevenueBucketTypes.",
        "operationId": "postRevenueBucketTypes",
        "parameters": [
          {
            "description": "Request object for creating new Revenue Bucket Types Configurations.",
            "name": "revenueBucketTypes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/revenueBucketTypes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove Revenue Bucket Types. <p><strong>OperationId:</strong>deleteRevenueBucketTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete RevenueBucketTypes.",
        "operationId": "deleteRevenueBucketTypes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/revenueBucketTypes/copy": {
      "put": {
        "description": "Operation to copy Revenue Bucket Types. <p><strong>OperationId:</strong>copyRevenueBucketTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to copy RevenueBucketTypes.",
        "operationId": "copyRevenueBucketTypes",
        "parameters": [
          {
            "description": "List of the Revenue Bucket Types to be copied.",
            "name": "revenueBucketTypesCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/revenueBucketTypesCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/revenueTypeMapping": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getRevenueTypeMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch RevenueTypeMapping.",
        "operationId": "getRevenueTypeMapping",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "eventTypeCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "revenueTypeCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transactionCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "spaceCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Revenue Type Mapping configurations.",
            "schema": {
              "$ref": "#/definitions/revenueTypeMappingList"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RevenueTypeMapping not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": " <p><strong>OperationId:</strong>putRevenueTypeMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change RevenueTypeMapping.",
        "operationId": "putRevenueTypeMapping",
        "parameters": [
          {
            "description": "Request object to change Revenue Type Mapping configurations.",
            "name": "revenueTypeMapping",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/revenueTypeMapping"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to change Revenue Type Mapping configurations.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to update transaction generates for a specific property.  Generates are rules used to calculate and post additional charges, such as service charges and taxes, when a particular sales charge transaction code is posted to guest, package or AR ledgers.<p><strong>OperationId:</strong>putTransactionGenerates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Post revenue type mapping",
        "operationId": "postRevenueTypeMapping",
        "parameters": [
          {
            "description": "Request object to create Revenue Type Mapping configurations.",
            "name": "revenueTypeMapping",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/revenueTypeMapping"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": " <p><strong>OperationId:</strong>deleteRevenueTypeMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete RevenueTypeMapping.",
        "operationId": "deleteRevenueTypeMapping",
        "parameters": [
          {
            "type": "string",
            "description": "Hotel Code to which the Revenue Type Mapping belongs to.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "revenueTypeMappingID",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides information about the Revenue Type.",
            "name": "revenueType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides information about the Event Type.",
            "name": "eventType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides information about the Space/Location for the Revenue Type.",
            "name": "space",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Transaction code for the Revenue Type.",
            "name": "transactionCode",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Yes",
              "No",
              "Both"
            ],
            "type": "string",
            "description": "For Catering and Event.",
            "name": "cateringOnly",
            "in": "query"
          },
          {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "description": "Service Charge for the Revenue Type.",
            "name": "serviceCharge",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Service Charge for the Revenue Type.",
            "name": "serviceChargeTrxCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Service Charge for the Revenue Type.",
            "name": "serviceChargeCalulationMethod",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/revenueTypeMapping/copy": {
      "put": {
        "description": " <p><strong>OperationId:</strong>copyRevenueTypeMapping</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to copy RevenueTypeMapping.",
        "operationId": "copyRevenueTypeMapping",
        "parameters": [
          {
            "description": "Request object for Copying Revenue Type Mapping.",
            "name": "revenueTypeMappingCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/revenueTypeMappingCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/routingInstructions": {
      "get": {
        "description": "Use this API to return routing instructions based on search criteria such as hotelId, trxCodeArrangementCode, wildCard.  Routing instructions are used to route specific charges to different destinations.<p><strong>OperationId:</strong>getRoutingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Get routing instructions",
        "operationId": "getRoutingInstructions",
        "parameters": [
          {
            "maxItems": 4000,
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "maxItems": 4000,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Codes to be searched.",
            "name": "trxCodeArrangementCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Determines if this is a comp routing code or a routing code.",
            "name": "compAccounting",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching routing instructions.",
            "schema": {
              "$ref": "#/definitions/routingInstructions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RoutingInstructions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change routing instructions. <p><strong>OperationId:</strong>putRoutingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change RoutingInstructions.",
        "operationId": "putRoutingInstructions",
        "parameters": [
          {
            "description": "Request when changing a routing instruction.",
            "name": "routingInstructions",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/routingInstructions"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create routing instructions. <p><strong>OperationId:</strong>postRoutingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create RoutingInstructions.",
        "operationId": "postRoutingInstructions",
        "parameters": [
          {
            "description": "Request to create a routing instruction.",
            "name": "routingInstructions",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/routingInstructions"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove routing instructions. <p><strong>OperationId:</strong>deleteRoutingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete RoutingInstructions.",
        "operationId": "deleteRoutingInstructions",
        "parameters": [
          {
            "type": "string",
            "description": "Hotel where the code is configured.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Configuration code.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/routingInstructions/copy": {
      "put": {
        "description": "Operation to copy routing instructions. <p><strong>OperationId:</strong>copyRoutingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to copy RoutingInstructions.",
        "operationId": "copyRoutingInstructions",
        "parameters": [
          {
            "description": "List of the routing instructions to be copied to hotel code(s).",
            "name": "routingInstructionsCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/routingInstructionsCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/secureApplicationSettings": {
      "put": {
        "description": "Operation to update one or more secure application settings. <p><strong>OperationId:</strong>putSecureApplicationSettings</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ],
        "summary": "Operation to change AR SecureApplicationSettings.",
        "operationId": "putSecureApplicationSettings",
        "parameters": [
          {
            "description": "Request for reading the configured device delimiters.",
            "name": "applicationSecureSetting",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/applicationSecureSetting"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/stopProcessingReasons": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getStopProcessingReasons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ],
        "summary": "Operation to fetch stop processing reasons.",
        "operationId": "getStopProcessingReasons",
        "parameters": [
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Stop Processing Reason.",
            "schema": {
              "$ref": "#/definitions/stopProcessingReasons"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "StopProcessingReasons not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": " <p><strong>OperationId:</strong>putStopProcessingReasons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ],
        "summary": "Operation to change stop processing reasons.",
        "operationId": "putStopProcessingReasons",
        "parameters": [
          {
            "description": "Request object for changing Stop Processing Reason.",
            "name": "stopProcessingReasons",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/stopProcessingReasons"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for changing Stop Processing Reason.",
            "schema": {
              "$ref": "#/definitions/stopProcessingReasons"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": " <p><strong>OperationId:</strong>postStopProcessingReasons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ],
        "summary": "Operation to create stop processing reasons.",
        "operationId": "postStopProcessingReasons",
        "parameters": [
          {
            "description": "Request object for creating Stop Processing Reason",
            "name": "stopProcessingReasons",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/stopProcessingReasons"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": " <p><strong>OperationId:</strong>deleteStopProcessingReasons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ],
        "summary": "Operation to remove stop processing reasons.",
        "operationId": "deleteStopProcessingReasons",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "codes",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/taxBrackets": {
      "get": {
        "description": "Operation to fetch Tax Brackets. This function only be available when the parameter \"Tax Bracket Calculation\" is on. <p><strong>OperationId:</strong>getTaxBrackets</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch TaxBrackets.",
        "operationId": "getTaxBrackets",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "taxPercentagesCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching details about tax brackets.",
            "schema": {
              "$ref": "#/definitions/taxBrackets"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TaxBrackets not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change Tax Brackets. This function only be available when the parameter \"Tax Bracket Calculation\" is on. <p><strong>OperationId:</strong>putTaxBrackets</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change TaxBrackets.",
        "operationId": "putTaxBrackets",
        "parameters": [
          {
            "description": "Request object for changing tax brackets.",
            "name": "taxBrackets",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taxBrackets"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to Create Tax Brackets. This function only be available when the parameter \"Tax Bracket Calculation\" is on. <p><strong>OperationId:</strong>postTaxBrackets</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create TaxBrackets.",
        "operationId": "postTaxBrackets",
        "parameters": [
          {
            "description": "Request object for creating tax brackets.",
            "name": "taxBrackets",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taxBrackets"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove Tax Brackets. This function only be available when the parameter \"Tax Bracket Calculation\" is on. <p><strong>OperationId:</strong>deleteTaxBrackets</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete TaxBrackets.",
        "operationId": "deleteTaxBrackets",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel Code where tax bracket belongs to.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Tax Percentage for which this Tax Bracket applies.",
            "name": "taxPercentage",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/taxBrackets/copy": {
      "put": {
        "description": "Operation to copy Tax Brackets. This function only be available when the parameter \"Tax Bracket Calculation\" is on. <p><strong>OperationId:</strong>copyTaxBrackets</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to copy TaxBrackets.",
        "operationId": "copyTaxBrackets",
        "parameters": [
          {
            "description": "Request object for copying tax brackets.",
            "name": "taxBracketsCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taxBracketsCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/taxCategories": {
      "get": {
        "description": "Use this API to get Tax Category Codes. <p><strong>OperationId:</strong>getFetchTaxCategoryCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Tax Category Codes",
        "operationId": "getFetchTaxCategoryCodes",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Tax Category Codes.",
            "schema": {
              "$ref": "#/definitions/taxCategoryCodesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FetchTaxCategoryCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Tax Category Codes. <p><strong>OperationId:</strong>postTaxCategoryCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Tax Category Codes",
        "operationId": "postTaxCategoryCodes",
        "parameters": [
          {
            "description": "Request object for creating Tax Category Codes.",
            "name": "taxCategoryCodesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taxCategoryCodesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/taxCategories/{taxCategoryCode}": {
      "put": {
        "description": "Use this API to update Tax Category Codes. <p><strong>OperationId:</strong>putTaxCategoryCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Tax Category Codes",
        "operationId": "putTaxCategoryCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Tax Category Codes.",
            "name": "taxCategoryCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Tax Category Codes.",
            "name": "taxCategoryCodesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taxCategoryCodesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete Tax Category Codes. <p><strong>OperationId:</strong>deleteTaxCategoryCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Tax Category Codes",
        "operationId": "deleteTaxCategoryCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Tax Category Codes.",
            "name": "taxCategoryCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/taxOffices": {
      "get": {
        "description": "Use this API to get Tax Offices. <p><strong>OperationId:</strong>getTaxOffices</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Tax Offices",
        "operationId": "getTaxOffices",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Tax Offices.",
            "schema": {
              "$ref": "#/definitions/taxOfficesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TaxOffices not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Tax Offices. <p><strong>OperationId:</strong>postTaxOffices</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Tax Offices",
        "operationId": "postTaxOffices",
        "parameters": [
          {
            "description": "Request object for creating Tax Offices.",
            "name": "taxOfficesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taxOfficesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/taxOffices/{taxOfficeId}": {
      "put": {
        "description": "Use this API to update Tax Offices. <p><strong>OperationId:</strong>changeTaxOffices</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Tax Offices",
        "operationId": "changeTaxOffices",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Tax Offices.",
            "name": "taxOfficeId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Tax Offices.",
            "name": "taxOfficesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taxOfficesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete Tax Offices. <p><strong>OperationId:</strong>removeTaxOffices</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Tax Offices",
        "operationId": "removeTaxOffices",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Tax Offices.",
            "name": "taxOfficeId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/template/customNumbers": {
      "get": {
        "description": "You can use this API to fetch template custom number configuration. <p><strong>OperationId:</strong>getTemplateCustomNumbers</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch template custom number configuration.",
        "operationId": "getTemplateCustomNumbers",
        "parameters": [
          {
            "type": "boolean",
            "description": "Indicator that tells whether to return the inactive custom number configuration in search results.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "configurationId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching template custom number configurations.",
            "schema": {
              "$ref": "#/definitions/templateCustomNumberConfigDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TemplateCustomNumbers not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "You can use this API to change template custom number configuration. <p><strong>OperationId:</strong>putTemplateCustomNumber</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change template custom number configuration.",
        "operationId": "putTemplateCustomNumber",
        "parameters": [
          {
            "description": "Request object to change template custom number configuration.",
            "name": "templateCustomNumberConfig",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateCustomNumberConfig"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to change template custom number configuration.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "You can use this API to create a new template custom number configuration. <p><strong>OperationId:</strong>postTemplateCustomNumber</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create a new template custom number configuration.",
        "operationId": "postTemplateCustomNumber",
        "parameters": [
          {
            "description": "Request object to create a new template custom number configuration.",
            "name": "templateCustomNumberConfig",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateCustomNumberConfig"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "You can use this API to remove template custom number configuration. <p><strong>OperationId:</strong>deleteTemplateCustomNumber</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to remove template custom number configuration.",
        "operationId": "deleteTemplateCustomNumber",
        "parameters": [
          {
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "configurationId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/templateTransactionCodes": {
      "get": {
        "description": "Use this API to return template transaction codes summaries based on search criteria such as transactionGroupCodes, transactionSubgroupsCodes, transactionCodes, wildCard, etc.<p><strong>OperationId:</strong>getTemplateTransactionCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Get template transaction codes",
        "operationId": "getTemplateTransactionCodes",
        "parameters": [
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to indicate whether comp accounting transaction codes are being requested. If true, only comp accounting transaction codes will be returned. If false, only standard transaction codes will be returned.",
            "name": "compTransactionCodes",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Inactive flag used to include/exclude inactive transaction codes from the search result",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transactionGroupCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transactionSubgroupsCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "transactionCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the Transaction code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Property associated with the corporate information brand code in the search criteria",
            "name": "brandCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Unique Universal product code search criteria.",
            "name": "universalProductCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching template transaction codes summary.",
            "schema": {
              "$ref": "#/definitions/templateTransactionCodes"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TemplateTransactionCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change template transaction codes. <p><strong>OperationId:</strong>putTemplateTransactionCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change TemplateTransactionCodes.",
        "operationId": "putTemplateTransactionCodes",
        "parameters": [
          {
            "description": "Request object for changing existing template transaction codes configuration.",
            "name": "templateTransactionCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateTransactionCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create template transaction codes.<p><strong>OperationId:</strong>postTemplateTransactionCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Post template transaction codes",
        "operationId": "postTemplateTransactionCodes",
        "parameters": [
          {
            "description": "Request object for creating new template transaction codes configuration.",
            "name": "templateTransactionCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateTransactionCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove template transaction codes. <p><strong>OperationId:</strong>deleteTemplateTransactionCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete TemplateTransactionCodes.",
        "operationId": "deleteTemplateTransactionCodes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transactionCodes",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/templateTransactionGroups": {
      "get": {
        "description": "Operation to fetch template transaction group. <p><strong>OperationId:</strong>getTemplateTransactionGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch TemplateTransactionGroups.",
        "operationId": "getTemplateTransactionGroups",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "transactionGroupCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Revenue",
              "Payment",
              "Wrapper"
            ],
            "type": "string",
            "description": "Wrapper Transaction Type.",
            "name": "transactionGroupType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetch template transaction groups",
            "schema": {
              "$ref": "#/definitions/templateTransactionGroups"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TemplateTransactionGroups not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change existing template transaction group. <p><strong>OperationId:</strong>putTemplateTransactionGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change TemplateTransactionGroups.",
        "operationId": "putTemplateTransactionGroups",
        "parameters": [
          {
            "description": "Request object to changing Template Transaction Groups Configuration.",
            "name": "templateTransactionGroups",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateTransactionGroups"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create new template transaction group. <p><strong>OperationId:</strong>postTemplateTransactionGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create TemplateTransactionGroups.",
        "operationId": "postTemplateTransactionGroups",
        "parameters": [
          {
            "description": "Request object for creating new Template Transaction Groups Configuration.",
            "name": "templateTransactionGroups",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateTransactionGroups"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove existing template transaction group. <p><strong>OperationId:</strong>deleteTemplateTransactionGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete TemplateTransactionGroups.",
        "operationId": "deleteTemplateTransactionGroups",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "templateTransactionCodes",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/templateTransactionSubGroups": {
      "get": {
        "description": "Operation to fetch template transaction subgroups <p><strong>OperationId:</strong>getTemplateTransactionSubgroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch TemplateTransactionSubgroups.",
        "operationId": "getTemplateTransactionSubgroups",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transactionGroupCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "transactionSubgroupsCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetch template transaction subgroups configuration.",
            "schema": {
              "$ref": "#/definitions/templateTransactionSubgroups"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TemplateTransactionSubgroups not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change template transaction subgroups <p><strong>OperationId:</strong>putTemplateTransactionSubgroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change TemplateTransactionSubgroups.",
        "operationId": "putTemplateTransactionSubgroups",
        "parameters": [
          {
            "description": "Request object for changing existing template transaction subgroups configuration.",
            "name": "templateTransactionSubgroups",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateTransactionSubgroups"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create template transaction subgroups <p><strong>OperationId:</strong>postTemplateTransactionSubgroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create TemplateTransactionSubgroups.",
        "operationId": "postTemplateTransactionSubgroups",
        "parameters": [
          {
            "description": "Request object for creating new template transaction subgroups configuration.",
            "name": "templateTransactionSubgroups",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateTransactionSubgroups"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove template transaction subgroups <p><strong>OperationId:</strong>deleteTemplateTransactionSubgroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete TemplateTransactionSubgroups.",
        "operationId": "deleteTemplateTransactionSubgroups",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Template transaction subgroup configuration code",
            "name": "subgroup",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Template transaction group configuration code",
            "name": "group",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/transactionArrangementCodes": {
      "get": {
        "description": " <p><strong>OperationId:</strong>getTransactionArrangementCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch TransactionArrangementCodes.",
        "operationId": "getTransactionArrangementCodes",
        "parameters": [
          {
            "type": "string",
            "description": "Hotel code for which the transaction codes belong to.",
            "name": "hotelId",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transactionCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching transaction codes with associated arrangement codes.",
            "schema": {
              "$ref": "#/definitions/transactionArrangementCodes"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TransactionArrangementCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/transactionCodeAccessRoles/set": {
      "put": {
        "description": "Operation to Set Transaction Code Access Roles. <p><strong>OperationId:</strong>setTransactionCodeAccessRoles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to set TransactionCodeAccessRoles.",
        "operationId": "setTransactionCodeAccessRoles",
        "parameters": [
          {
            "description": "Request object for Setting a Transaction Code Access Roles",
            "name": "transactionCodeAccessRoles",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionCodeAccessRoles"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/transactionCodeOwnership": {
      "put": {
        "description": "Operation to change ownership of transaction code. <p><strong>OperationId:</strong>putTransactionCodeOwnership</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change TransactionCodeOwnership.",
        "operationId": "putTransactionCodeOwnership",
        "parameters": [
          {
            "description": "Request object for changing ownership of selected transaction codes operation.",
            "name": "transactionCodeOwnership",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionCodeOwnership"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/transactionCodes": {
      "get": {
        "description": "Use this API to return transaction codes based on search criteria such as hotelIds, transactionGroupCodes, transactionSubgroupsCodes, transactionCodes, description, etc.. <p><strong>OperationId:</strong>getTransactionCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch TransactionCodes.",
        "operationId": "getTransactionCodes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Flag to indicate whether comp accounting transaction codes are being requested. If true, only comp accounting transaction codes will be returned. If false, only standard transaction codes will be returned.",
            "name": "compTransactionCodes",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Inactive flag used to include/exclude inactive transaction codes from the search result",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transactionGroupCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transactionSubgroupsCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "transactionCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the Transaction code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Property associated with the corporate information brand code in the search criteria",
            "name": "brandCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Unique Universal product code search criteria.",
            "name": "universalProductCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching hotel's transaction codes summary.",
            "schema": {
              "$ref": "#/definitions/hotelTransactionCodes"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TransactionCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update transaction codes for a specific property.<p><strong>OperationId:</strong>putTransactionCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Put transaction codes",
        "operationId": "putTransactionCodes",
        "parameters": [
          {
            "description": "Request object for changing existing Transaction Codes Configuration.",
            "name": "hotelTransactionCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelTransactionCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for changing existing Transaction Codes Configuration.",
            "schema": {
              "$ref": "#/definitions/transactionCodes"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create transaction codes for a specific property.<p><strong>OperationId:</strong>postTransactionCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Post transaction codes",
        "operationId": "postTransactionCodes",
        "parameters": [
          {
            "description": "Request object for creating new Transaction Codes Configuration.",
            "name": "hotelTransactionCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelTransactionCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/transactionCodes/copy": {
      "put": {
        "description": "Operation to copy transaction codes. <p><strong>OperationId:</strong>copyTransactionCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to copy TransactionCodes.",
        "operationId": "copyTransactionCodes",
        "parameters": [
          {
            "description": "Request object for copying transaction codes in the configuration.",
            "name": "transactionCodesCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionCodesCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/transactionDiscounts": {
      "get": {
        "description": "Operation to fetch Transaction Discounts. <p><strong>OperationId:</strong>getTransactionDiscounts</p>",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch TransactionDiscounts.",
        "operationId": "getTransactionDiscounts",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Discount codes to be searched.",
            "name": "transactionDiscountCodes",
            "in": "query"
          },
          {
            "maxLength": 2000,
            "type": "string",
            "description": "Description text set to the search criteria",
            "name": "description",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Membership"
            ],
            "type": "string",
            "description": "The rule type on which the transaction discount is based.",
            "name": "ruleType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Membership Types set to the search criteria",
            "name": "membershipTypes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Membership Levels set to the search criteria",
            "name": "membershipLevels",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "IncludeCodes"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "When this fetch instruction is passed, the details of article codes and transaction codes attached to the transaction discount are fetched.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-example": "false",
            "description": "Indicator that tells whether to include inactive transaction discounts in search results.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Transaction Discount Configurations.",
            "schema": {
              "$ref": "#/definitions/transactionDiscounts"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "No transaction discounts found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create transaction discounts for a specific hotel. <p><strong>OperationId:</strong>postTransactionDiscounts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create TransactionDiscounts.",
        "operationId": "postTransactionDiscounts",
        "parameters": [
          {
            "description": "Request object for creating new Transaction Discount Configuration.",
            "name": "transactionDiscount",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionDiscount"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/transactionDiversionRules": {
      "get": {
        "description": "Operation to fetch Transaction Diversion Rules. <p><strong>OperationId:</strong>getTransactionDiversionRules</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch TransactionDiversionRules.",
        "operationId": "getTransactionDiversionRules",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "ruleCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Vip",
              "Membership"
            ],
            "type": "string",
            "description": "The rule type on which the Transaction Diversion Rule is based. If a reservation has any of the following code, Transaction Diversion rule gets active for that reservation",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "User defined message for the Transaction Diversion Rule.",
            "name": "description",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Property",
              "Reservation"
            ],
            "type": "string",
            "description": "Reservation level.",
            "name": "level",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "membershipTypeCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "membershipTypeLevels",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "vipCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for information regarding Transaction Diversion Rule",
            "schema": {
              "$ref": "#/definitions/transactionDiversionRules"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TransactionDiversionRules not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change Transaction Diversion Rules. <p><strong>OperationId:</strong>putTransactionDiversionRules</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change TransactionDiversionRules.",
        "operationId": "putTransactionDiversionRules",
        "parameters": [
          {
            "description": "Request object for modifying an existing Transaction Diversion Rule",
            "name": "transactionDiversionRules",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionDiversionRules"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create Transaction Diversion Rules. <p><strong>OperationId:</strong>postTransactionDiversionRules</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create TransactionDiversionRules.",
        "operationId": "postTransactionDiversionRules",
        "parameters": [
          {
            "description": "Request object for creating a Transaction Diversion Rule",
            "name": "transactionDiversionRules",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionDiversionRules"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/transactionDiversionRules/remove": {
      "put": {
        "description": "Operation to remove Transaction Diversion Rules. <p><strong>OperationId:</strong>removeTransactionDiversionRules</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete TransactionDiversionRules.",
        "operationId": "removeTransactionDiversionRules",
        "parameters": [
          {
            "description": "Request object for deleting an existing Transaction Diversion Rule",
            "name": "transactionDiversionRules",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionDiversionRules"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/transactionGenerates": {
      "put": {
        "description": "Operation to remove transaction generates. <p><strong>OperationId:</strong>removeTransactionGenerates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete TransactionGenerates.",
        "operationId": "removeTransactionGenerates",
        "parameters": [
          {
            "description": "Request to remove transaction generates.",
            "name": "hotelTransactionGenerates",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelTransactionGenerates"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/transactionGroups": {
      "get": {
        "description": "Operation to fetch transaction groups. <p><strong>OperationId:</strong>getTransactionGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch TransactionGroups.",
        "operationId": "getTransactionGroups",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "transactionGroupCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Revenue",
              "Payment",
              "Wrapper"
            ],
            "type": "string",
            "description": "Wrapper Transaction Type.",
            "name": "transactionGroupType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Transaction Groups Configuration.",
            "schema": {
              "$ref": "#/definitions/transactionGroups"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TransactionGroups not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change transaction groups. <p><strong>OperationId:</strong>putTransactionGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change TransactionGroups.",
        "operationId": "putTransactionGroups",
        "parameters": [
          {
            "description": "Request object for changing existing Transaction Groups Configuration.",
            "name": "transactionGroups",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionGroups"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create transaction groups. <p><strong>OperationId:</strong>postTransactionGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create TransactionGroups.",
        "operationId": "postTransactionGroups",
        "parameters": [
          {
            "description": "Request object for creating new Transaction Groups Configuration.",
            "name": "transactionGroups",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionGroups"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove transaction groups. <p><strong>OperationId:</strong>deleteTransactionGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete TransactionGroups.",
        "operationId": "deleteTransactionGroups",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/transactionGroups/copy": {
      "put": {
        "description": "Operation to copy transaction groups. <p><strong>OperationId:</strong>copyTransactionGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to copy TransactionGroups.",
        "operationId": "copyTransactionGroups",
        "parameters": [
          {
            "description": "List of the transaction groups to be copied.",
            "name": "transactionGroupsCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionGroupsCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/transactionSubGroups": {
      "get": {
        "description": "Operation to fetch transaction sub groups. <p><strong>OperationId:</strong>getTransactionSubgroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to fetch TransactionSubgroups.",
        "operationId": "getTransactionSubgroups",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transactionGroupCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "transactionSubgroupsCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Transaction Subgroups Configuration.",
            "schema": {
              "$ref": "#/definitions/hotelTransactionSubgroups"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TransactionSubgroups not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Operation to change transaction sub groups. <p><strong>OperationId:</strong>putTransactionSubgroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to change TransactionSubgroups.",
        "operationId": "putTransactionSubgroups",
        "parameters": [
          {
            "description": "Request object for changing existing Transaction Subgroups Configuration.",
            "name": "hotelTransactionSubgroups",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelTransactionSubgroups"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Operation to create transaction sub groups. <p><strong>OperationId:</strong>postTransactionSubgroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to create TransactionSubgroups.",
        "operationId": "postTransactionSubgroups",
        "parameters": [
          {
            "description": "Request object for creating new Transaction Subgroups Configuration.",
            "name": "hotelTransactionSubgroups",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelTransactionSubgroups"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Operation to remove transaction sub groups. <p><strong>OperationId:</strong>deleteTransactionSubgroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to delete TransactionSubgroups.",
        "operationId": "deleteTransactionSubgroups",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Template transaction subgroup configuration code",
            "name": "subgroup",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Template transaction group configuration code",
            "name": "group",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code where the transaction subgroup is configured.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/transactionSubGroups/copy": {
      "put": {
        "description": "Operation to copy transaction subgroups <p><strong>OperationId:</strong>copyTransactionSubgroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ],
        "summary": "Operation to copy TransactionSubgroups.",
        "operationId": "copyTransactionSubgroups",
        "parameters": [
          {
            "description": "Request object to copy transaction subgroups to the properties specified.",
            "name": "transactionSubgroupsCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionSubgroupsCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    }
  },
  "definitions": {
    "aRAccountRefType": {
      "description": "AR account Info.",
      "type": "object",
      "properties": {
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "name": {
          "description": "AR account name.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "aRAccountShortInfoType": {
      "description": "Accounts Receivabales Account details type charged for batched posting.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        }
      }
    },
    "aRAccountStatusType": {
      "description": "Type for the Account Status. Status can be restricted and a message/description added to the Account.",
      "type": "object",
      "properties": {
        "description": {
          "description": "User defined status message on the Account.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "restricted": {
          "description": "Flag to indicate if the Account is restricted.",
          "type": "boolean"
        },
        "restriction": {
          "description": "The Restriction Code added on the Account. This is available when the functionality for adding restriction codes is ON.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "aRAccountType": {
      "description": "Accounts Receivabales Account details type.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountIndicators": {
          "description": "Indicators of additional information attached to the Account.",
          "$ref": "#/definitions/indicatorsType"
        },
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "accountTypeDescription": {
          "description": "The description of the Account Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "address": {
          "description": "Address information for the address which is attached to this AR Account.",
          "$ref": "#/definitions/addressInfoType"
        },
        "agingInfo": {
          "description": "The Aging balance information for this account, by Aging Buckets.",
          "$ref": "#/definitions/aRAgingInfoType"
        },
        "balance": {
          "description": "Open Balance of the Account for this property.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "batchStatement": {
          "description": "Include In Batch Statement",
          "type": "boolean"
        },
        "contactName": {
          "description": "The person to contact for this Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "creditLimit": {
          "description": "The maximum credit allowed for the Account.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "email": {
          "description": "Email information for the Account. This is the Email that is attached to this AR Account.",
          "$ref": "#/definitions/emailInfoType"
        },
        "emailStatementsReminders": {
          "description": "Indicates if the Account has opted to send the statements and reminders to the Account email address by default.",
          "type": "boolean"
        },
        "fixedCharges": {
          "description": "Fixed charges attached to this AR Account.",
          "$ref": "#/definitions/fixedChargesType"
        },
        "hotelId": {
          "description": "Property where the AR Account exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoices": {
          "description": "List of all Invoices.",
          "$ref": "#/definitions/aRInvoicesType"
        },
        "lastReminderInfo": {
          "description": "Report History Type used as based type for Remiders and Statements History types.",
          "type": "object",
          "properties": {
            "age": {
              "description": "The minimum age(days) of the invoices to be included in the Reminder",
              "type": "integer"
            },
            "dateSent": {
              "description": "The Reminder Letter name which is to be used for this Reminder based on the setup on the Account Type.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "historyExists": {
              "description": "Indicates that reminders history exists.",
              "type": "boolean"
            },
            "reportFileName": {
              "description": "Report file name when exists to allow report re-printing.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "reportName": {
              "description": "Report Name.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          }
        },
        "lastStatementInfo": {
          "description": "Report History Type used as based type for Remiders and Statements History types.",
          "type": "object",
          "properties": {
            "dateSent": {
              "description": "The Reminder Letter name which is to be used for this Reminder based on the setup on the Account Type.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "historyExists": {
              "description": "Indicates that statement history exists.",
              "type": "boolean"
            },
            "reportFileName": {
              "description": "Report file name when exists to allow report re-printing.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "reportName": {
              "description": "Report Name.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "statementNo": {
              "description": "When using Statement Numbering, a unique number is associated to the Statement.",
              "type": "integer"
            }
          }
        },
        "monthEndCalcYN": {
          "description": "Month End Calculation.",
          "type": "boolean"
        },
        "notes": {
          "description": "The Note details attached to the Account.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "paymentDueDays": {
          "description": "Number of days on which person can make payment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "payments": {
          "description": "List of all Payments made.",
          "$ref": "#/definitions/aRPaymentsType"
        },
        "permanent": {
          "description": "Indicates if this is a Permanent Account. Permanent Accounts cannot be deleted.",
          "type": "boolean"
        },
        "primary": {
          "description": "Indicates if this Account is the Primary Account for this Guest/Company.",
          "type": "boolean"
        },
        "printFoliosWithStatement": {
          "description": "Indicates if associated folios should be printed by default with the statement.",
          "type": "boolean"
        },
        "profileId": {
          "description": "Internal Profile ID for the AR Account.",
          "$ref": "#/definitions/profileId"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        },
        "summary": {
          "description": "The Summary Information of the Invoices for the Account.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "telephones": {
          "description": "The Telephone and Fax details attached to the Account.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/telephoneInfoType"
          }
        },
        "traces": {
          "description": "The Trace details attached to the Account.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/traceType"
          }
        },
        "type": {
          "description": "The type of Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "yearViewInfo": {
          "description": "The Year View balance information for this account.",
          "$ref": "#/definitions/aRYearViewInfoType"
        }
      }
    },
    "aRAccountTypeType": {
      "description": "Information which uniquely identifies account type",
      "type": "object",
      "properties": {
        "accountType": {
          "description": "Account receivable account type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "creditLimit": {
          "description": "Maximum credit available for account type",
          "type": "number"
        },
        "description": {
          "description": "Full description of account type",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "financeCharge": {
          "description": "Finance charges will allow user to post a flat amount or percentage finance charge based on user-defined cycle.",
          "$ref": "#/definitions/aRFinanceChargeType"
        },
        "hotelId": {
          "description": "Property associated with account type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "printPreference": {
          "description": "Print preference whether to print statement with invoice details or with out invoice details or print separate folios",
          "$ref": "#/definitions/aRPrintPreferenceType"
        },
        "reminderCycle": {
          "description": "When reminder letters needs to be generated. user can choose from End of month or Day cycle",
          "$ref": "#/definitions/aRReminderCycleType"
        },
        "reminderDelayDays": {
          "description": "Defines the number of days(aging) within which the payment must be made for a account type, if not a reminder is generated.",
          "type": "integer"
        },
        "statementMode": {
          "description": "Statements for all account types will be prepared using this statement mode",
          "$ref": "#/definitions/statementType"
        },
        "statementName": {
          "description": "Statement file name that account receivable account types uses",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "statementNameDesc": {
          "description": "Description associated with statement file name",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        }
      }
    },
    "aRAccountTypesType": {
      "description": "Holds collection of account types",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRAccountTypeType"
      }
    },
    "aRAgingInfoType": {
      "description": "Information regarding the aging balances for an account.",
      "type": "object",
      "properties": {
        "aging": {
          "description": "The debit and credit balance per Aging bucket.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/aRAgingType"
          }
        },
        "totalOutstanding": {
          "description": "The total debit and credit balance of the account.",
          "$ref": "#/definitions/aRBalanceType"
        }
      }
    },
    "aRAgingType": {
      "description": "Aging information for an Aging Bucket.",
      "type": "object",
      "properties": {
        "agingBucketRange": {
          "description": "The bucket description in terms of days. Example : 0-31 days",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "agingDate": {
          "description": "The start date and end date for this Aging bucket.",
          "$ref": "#/definitions/dateRangeType"
        },
        "agingEndDay": {
          "description": "The end number of days for this Aging bucket. Example: For the range 31-60 days, this would be 60.",
          "type": "integer"
        },
        "agingStartDay": {
          "description": "The start number of days for this Aging bucket. Example: For the range 31-60 days, this would be 31.",
          "type": "integer"
        },
        "balanceInfo": {
          "description": "The balance amounts for this bucket. Contains the Debit Balance, Credit Balance and the Total Balance.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "sequence": {
          "description": "The sequence for display.",
          "type": "integer"
        }
      }
    },
    "aRBalanceType": {
      "description": "Balance information for AR.",
      "type": "object",
      "properties": {
        "credit": {
          "description": "The credit Balance amount. Any payment that is Unallocated i.e not applied against an invoice, is included in this.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debit": {
          "description": "Debit Balance amount. The amount owed by the Account.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "total": {
          "description": "The total balance i.e Debit minus Credit amounts.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "aRDaysCycleType": {
      "description": "Reminder letters will be generated based on the number of days for which the account has had an outstanding balance",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRDaysReminderCycleType"
      }
    },
    "aRDaysReminderCycleType": {
      "description": "Custom reminder cycles determine which to generated statements for the account with outstanding balances",
      "type": "object",
      "properties": {
        "accountTypeReminderCycleId": {
          "description": "Internal number associated with daily reminder type",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "noOfDays": {
          "description": "Number of days in the reminder cycle",
          "type": "integer"
        },
        "reportName": {
          "description": "File name for the reminder letter to be granted for this cycle",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "aREndOfMonthCycleType": {
      "description": "Reminder letters will be generated at the end of each month if user specifies this element",
      "type": "object",
      "properties": {
        "reportName": {
          "description": "Reminder letter file name for the reminder letter to be generated at the end of month",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "reportNameDesc": {
          "description": "Description associated with reminder letter.",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        }
      }
    },
    "aRFinanceChargeType": {
      "description": "Finance charges will allow user to post a flat amount or percentage finance charge based on user-defined cycle.",
      "type": "object",
      "properties": {
        "daysOlderThan": {
          "description": "Number of days after which an outstanding balance triggers",
          "type": "integer"
        },
        "financeCharge": {
          "description": "Determines how the finance charge will be applied to outstanding balance valid values are F, P",
          "type": "string",
          "maxLength": 1,
          "minLength": 1
        },
        "financeChargeValue": {
          "description": "Amount or percentage value",
          "type": "number"
        },
        "includeUnallocatedPayments": {
          "description": "If true unallocated payments are subtracted from the outstanding balances before finance charge is calculated",
          "type": "boolean"
        },
        "postOnDay": {
          "description": "Day of the month when the end of day procedure should run",
          "type": "integer"
        }
      }
    },
    "aRFlaggedReasonType": {
      "description": "Details for AR Flagged Reason.",
      "type": "object",
      "properties": {
        "code": {
          "description": "AR Flagged Reason Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of AR Flagged Reason.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "displaySequence": {
          "description": "Display sequence for AR Flagged Reason.",
          "type": "number"
        },
        "hotelId": {
          "description": "Hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "aRFlaggedReasonsType": {
      "description": "List of the Flagged Reason to be configured or fetched",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRFlaggedReasonType"
      }
    },
    "aRInvoiceCategory": {
      "type": "string",
      "enum": [
        "Normal",
        "Credit",
        "OldBalance",
        "PasserBy"
      ]
    },
    "aRInvoiceType": {
      "description": "Details of an AR Invoice.",
      "type": "object",
      "properties": {
        "addresseeInfo": {
          "description": "Addressee Information for the folio. This is available when the Addressee functionality is used and and Addressee is attached to the folio of the Invoice.",
          "$ref": "#/definitions/profileInfoType"
        },
        "adjusted": {
          "type": "boolean"
        },
        "age": {
          "description": "The Aging age of the invoice",
          "type": "integer"
        },
        "allowPartialTransferYn": {
          "description": "Flag to check Partail Transfer Allowed.",
          "type": "boolean"
        },
        "amount": {
          "description": "Current Amount of the Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Amount still open which has not been paid",
          "$ref": "#/definitions/currencyAmountType"
        },
        "canBeModified": {
          "description": "Flag to indicate if postings or adjustments can be made to the invoice.",
          "type": "boolean"
        },
        "cashierInfo": {
          "description": "Cashier information. Contains Id and Name details of the cashier.",
          "$ref": "#/definitions/cashierInfoType"
        },
        "closeDate": {
          "description": "Close date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "compressed": {
          "type": "boolean"
        },
        "compressedDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "customNumbers": {
          "description": "Unique Custom Numbers associated with this record.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/customNumberType"
          }
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fiscalResponseType": {
          "description": "Provides information which is used for fiscal response processing.",
          "$ref": "#/definitions/fiscalResponseType"
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "guestName": {
          "description": "Name of the Guest who consumed these transactions.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "guestProfileId": {
          "description": "Guest Profile ID of the invoice.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Property where the invoice exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "invoiceType": {
          "description": "Invoice code of the invoice.",
          "$ref": "#/definitions/aRInvoiceCategory"
        },
        "market": {
          "description": "Invoice market code.",
          "$ref": "#/definitions/marketCodeInfoType"
        },
        "originalAmount": {
          "description": "Original Amount of the Invoice",
          "$ref": "#/definitions/currencyAmountType"
        },
        "parentInvoiceNo": {
          "type": "number"
        },
        "paymentCard": {
          "description": "Payment card details.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "payments": {
          "description": "Total Payments made to this Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingDate": {
          "description": "Posting date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "printed": {
          "description": "Flag to check Invoice Statement is Printed.",
          "type": "boolean"
        },
        "printedDate": {
          "description": "Invoice Statement Printed Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "remark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reservationId": {
          "description": "Reservation ID of the invoice.",
          "$ref": "#/definitions/reservationId"
        },
        "reservationInfo": {
          "description": "Reservation guest details.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "revenueDate": {
          "description": "Revenue date ID of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "roomClass": {
          "description": "Invoice room class code.",
          "$ref": "#/definitions/roomClassCodeInfoType"
        },
        "source": {
          "description": "Invoice source code.",
          "$ref": "#/definitions/sourceCodeInfoType"
        },
        "statementNo": {
          "description": "Statementno of the invoice.",
          "type": "integer"
        },
        "status": {
          "description": "Status of the invoice.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "storedDebitFolioId": {
          "description": "ID of the Stored Debit Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedDebitFolioName": {
          "description": "Name of the Stored Debit Folio.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "storedFolioId": {
          "description": "ID of the Stored Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedFolioName": {
          "description": "Name of the Stored Folio.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionCode": {
          "description": "Transaction code of the invoice.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionInfo": {
          "description": "Transaction information .",
          "$ref": "#/definitions/trxInfoType"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier of the Invoice.",
          "type": "number"
        },
        "transferDate": {
          "description": "Transfer date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferredIn": {
          "type": "boolean"
        },
        "transferredOut": {
          "type": "boolean"
        }
      }
    },
    "aRInvoicesType": {
      "description": "A collection of AR Invoices.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRInvoiceType"
      }
    },
    "aRPaymentType": {
      "description": "Details of an AR Payment.",
      "type": "object",
      "properties": {
        "age": {
          "description": "The Aging age of the payment.",
          "type": "integer"
        },
        "amount": {
          "description": "Amount of the Payment.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amountUsed": {
          "description": "Total amount applied against an invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Amount still open which has not been applied against any invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cashierInfo": {
          "description": "Cashier information. Contains Id and Name details of the cashier.",
          "$ref": "#/definitions/cashierInfoType"
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "paymentCard": {
          "description": "Payment card details.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "postingDate": {
          "description": "Posting date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "remark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "revenueDate": {
          "description": "Revenue date ID of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "sequenceNo": {
          "description": "When this PostingType is used to return the postings generated by a batch request, the sequence number is used to relate to the Request's sequence number.",
          "type": "integer"
        },
        "transactionCode": {
          "description": "Transaction code of the Payment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Date of the Payment.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier of the Payment.",
          "type": "number"
        },
        "transferDate": {
          "description": "Transfer of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferredIn": {
          "type": "boolean"
        },
        "transferredOut": {
          "type": "boolean"
        }
      }
    },
    "aRPaymentsType": {
      "description": "A collection of AR Payments.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRPaymentType"
      }
    },
    "aRPrintPreferenceType": {
      "description": "Preference type when separate folios has to be included in the statement",
      "type": "string",
      "enum": [
        "InvoicesWithoutDetails",
        "InvoicesWithDetails",
        "SeparateFolios"
      ]
    },
    "aRReminderCycleType": {
      "description": "When reminder letters needs to be generated. user can choose from End of month or Day cycle",
      "type": "object",
      "properties": {
        "daysCycle": {
          "description": "Reminder letters are generate at user-defined cycles if user specifies this element",
          "$ref": "#/definitions/aRDaysCycleType"
        },
        "endOfMonthCycle": {
          "description": "Reminder letters are generated at the end of month if user specifies this element",
          "$ref": "#/definitions/aREndOfMonthCycleType"
        }
      }
    },
    "aRYearViewInfoType": {
      "description": "Information regarding Year View balances for an account.",
      "type": "object",
      "properties": {
        "totalOutstanding": {
          "description": "The total debit and credit balance of the account.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "yearView": {
          "description": "The debit and credit balance per account.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/aRYearViewType"
          }
        }
      }
    },
    "aRYearViewType": {
      "description": "Year information for an Year View.",
      "type": "object",
      "properties": {
        "balanceInfo": {
          "description": "The balance amounts for this date range. Contains the Debit Balance, Credit Balance and the Total Balance.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "dateRange": {
          "description": "The period start and end date.",
          "$ref": "#/definitions/dateRangeType"
        },
        "runningTotal": {
          "description": "The running total balance for the date range.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "addressInfoType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "addressSearchType": {
      "description": "Address Details such as city, state, country, postal code etc.",
      "type": "object",
      "properties": {
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "excludeNoCity": {
          "description": "When true indicates that only profiles with city will be fetched.",
          "type": "boolean"
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "streetAddress": {
          "description": "First Line of Street Address. For profile search it matches the first Address line.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "addressType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "maxLength": 80,
            "minLength": 0
          }
        },
        "barCode": {
          "description": "The postal barcode for the address.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        },
        "updateReservations": {
          "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
          "type": "boolean"
        }
      }
    },
    "adjustmentCodeType": {
      "description": "Provides information about Adjustment Codes.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Amount or Percentage Value for Adjustment Code",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amountOrPercentageFlag": {
          "description": "Adjustment Code Calculation Type, valid values are Amount and Percentage.",
          "$ref": "#/definitions/amountOrPercentage"
        },
        "bIRGuest": {
          "description": "BIR Guest Type in Adjustment Codes.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "code": {
          "description": "Adjustment Reason Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "codeType": {
          "description": "Correction type. e.g. ADJ for adjustment, COR for correction, DEL for deletion.",
          "$ref": "#/definitions/adjustmentReasonCodeType"
        },
        "description": {
          "description": "Adjustment Reason Description",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "adjustmentCodes": {
      "type": "object",
      "properties": {
        "adjustmentCodes": {
          "description": "Collection of Adjustment Code configurations.",
          "$ref": "#/definitions/adjustmentCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "adjustmentCodesCopy": {
      "type": "object",
      "properties": {
        "adjustmentCode": {
          "description": "List of the Adjustment Codes to be copied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "adjustmentCodesType": {
      "description": "Holds Adjustment Code details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/adjustmentCodeType"
      }
    },
    "adjustmentReasonCodeType": {
      "description": "Defines values for Adjustment reason codes. e.g. ADJ for adjustment, COR for correction, DEL for deletion.",
      "type": "string",
      "enum": [
        "Adjustment",
        "Correction",
        "Deletion",
        "ServiceRecovery",
        "CreditBill"
      ]
    },
    "advanceCheckInType": {
      "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
      "type": "object",
      "properties": {
        "advanceCheckedIn": {
          "description": "Indicates if the reservation is marked as Advance Checked In",
          "type": "boolean"
        },
        "eTRComments": {
          "description": "ETR Comments",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "expectedReturnTime": {
          "description": "Expected Return Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "amountOrPercentage": {
      "description": "Adjustment Code calculation type based on details.",
      "type": "string",
      "enum": [
        "Amount",
        "Percent"
      ]
    },
    "anonymizationStatusType": {
      "description": "Guest has been anonymized.",
      "type": "string",
      "enum": [
        "Requested",
        "Anonymized"
      ]
    },
    "anonymizationType": {
      "description": "Provides information about guest's anonymization status.",
      "type": "object",
      "properties": {
        "anonymizationDate": {
          "description": "Date and Time when the guest was anonymized.",
          "type": "string",
          "format": "date-time"
        },
        "anonymizationStatus": {
          "description": "Status of anonymization such as Requested or Anonymized.",
          "$ref": "#/definitions/anonymizationStatusType"
        }
      }
    },
    "applicationSecureSetting": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "settings": {
          "description": "Contains a single application setting to update.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationSecureSettingType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "applicationSecureSettingType": {
      "description": "Internal settings that is mainly used to get a secure information on the type.",
      "type": "object",
      "properties": {
        "levelCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "levelType": {
          "$ref": "#/definitions/applicationSettingLevelType"
        },
        "name": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "securedValue": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "applicationSettingLevelType": {
      "type": "string",
      "enum": [
        "Global",
        "Hotel",
        "Cro"
      ]
    },
    "applicationUserType": {
      "description": "Information to uniquely identify an application user",
      "type": "object",
      "properties": {
        "appUser": {
          "description": "Name of the application user",
          "type": "string",
          "maxLength": 140,
          "minLength": 0
        },
        "appUserId": {
          "description": "Unique numeric ID of the application user",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "arAccountTypes": {
      "description": "Request object for changing account types.",
      "type": "object",
      "properties": {
        "accountTypes": {
          "description": "Collection of account types that needs to be created",
          "$ref": "#/definitions/aRAccountTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "arFlaggedReasons": {
      "description": "Response for fetching Flagged Reasons.",
      "type": "object",
      "properties": {
        "aRFlaggedReasons": {
          "description": "Collection of Flagged Reasons.",
          "$ref": "#/definitions/aRFlaggedReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "articleInfoType": {
      "description": "Information regarding an article.",
      "type": "object",
      "properties": {
        "articleCode": {
          "description": "Unique code of the article.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the article.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel code to which the article belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates whether the article is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "postIt": {
          "description": "Post it information of the article.",
          "$ref": "#/definitions/articlePostItType"
        },
        "price": {
          "description": "Default price of the article.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionCode": {
          "description": "Transaction code to which the article belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "articlePostItType": {
      "description": "Post it information of an article.",
      "type": "object",
      "properties": {
        "availableForPostIt": {
          "description": "Indicates whether the article is available for post it.",
          "type": "boolean"
        },
        "color": {
          "description": "Color indicator which is only configurable if article is available for post it.",
          "$ref": "#/definitions/colorType"
        }
      }
    },
    "articles": {
      "description": "Request to change articles.",
      "type": "object",
      "properties": {
        "articles": {
          "description": "Collection of articles.",
          "$ref": "#/definitions/articlesType"
        },
        "hotelId": {
          "description": "Hotel context for the articles.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "articlesInfo": {
      "type": "object",
      "properties": {
        "articles": {
          "description": "Collection of articles.",
          "$ref": "#/definitions/articlesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "articlesType": {
      "description": "Holds collection of articles.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/articleInfoType"
      }
    },
    "authBillingInstructionsType": {
      "description": "Set of Billing Instruction codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/codeDescriptionType"
      }
    },
    "authTransactionCodesType": {
      "description": "List of Transaction codes info.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/codeDescriptionType"
      }
    },
    "authorizationConfigRuleType": {
      "description": "Authorization configuration Rule Type.Authorization Rules specify the rule (or rules) that the property uses for credit card authorizations",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Amount to be applied to all rules with an amount configured in the formula.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guaranteeCode": {
          "description": "Guarantee code associated to this rule.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property associated with authorization rule",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ignoreDepositsYN": {
          "description": "Ignore deposits paid for calculation of the amount to be authorized.",
          "type": "boolean"
        },
        "maxDaysToAuthorize": {
          "description": "A maximum of two digits to set the number of days to authorize for a credit card. If the field is left blank, authorizations will be done for the entire stay duration of the reservation",
          "type": "integer"
        },
        "percentage": {
          "description": "Percentage to be applied to all rules with a percentage configured in the formula.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "rateCategory": {
          "description": "Authorization rule Rate Category code.",
          "$ref": "#/definitions/rateCategoryType"
        },
        "rateCode": {
          "description": "Rate code associated to this rule.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomClass": {
          "description": "Authorization rule room class code.",
          "$ref": "#/definitions/roomClassCodeInfoType"
        },
        "roomType": {
          "description": "Authorization rule Room type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ruleDescription": {
          "description": "Rule Number description for current authorization.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "ruleNo": {
          "description": "Rule Number for current authorization.",
          "type": "integer"
        },
        "sourceCode": {
          "description": "Authorization rule source code.",
          "$ref": "#/definitions/sourceCodeInfoType"
        }
      }
    },
    "authorizationConfigRules": {
      "type": "object",
      "properties": {
        "authorizationConfigRulesType": {
          "description": "Authorization configuration rule type.",
          "$ref": "#/definitions/authorizationConfigRulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizationConfigRulesInfo": {
      "type": "object",
      "properties": {
        "authorizationConfigRulesType": {
          "description": "List of authorization configuration rule type.",
          "$ref": "#/definitions/authorizationConfigRulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizationConfigRulesType": {
      "description": "List of AuthorizationRuleType.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/authorizationConfigRuleType"
      }
    },
    "authorizationRule": {
      "type": "object",
      "properties": {
        "authorizationRule": {
          "description": "The authorization rule details.",
          "$ref": "#/definitions/authorizationRuleType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizationRuleType": {
      "description": "Configured rule for computing the amount to authorize.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The amount applicable to the authorization rule.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "code": {
          "description": "The authorization rule code.",
          "type": "integer",
          "pattern": "[0-9]{1,9}"
        },
        "percent": {
          "description": "A percentage value if the authorization rule is percentage based.",
          "type": "number"
        }
      }
    },
    "authorizerGroupType": {
      "description": "A representation of the information contained by a Authorizer Group.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Authorizer Group code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Authorizer Group.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code to which the Authorizer Group belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateCode": {
          "description": "Rate Code of the Authorizer Group.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionLimits": {
          "description": "Transactions information of the Authorizer Group.",
          "$ref": "#/definitions/authorizerTrxLimitsType"
        }
      }
    },
    "authorizerGroups": {
      "type": "object",
      "properties": {
        "authorizerGroups": {
          "description": "Collection of Authorizer Groups fetched.",
          "$ref": "#/definitions/authorizerGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizerGroupsCriteriaType": {
      "description": "Criteria to change authorizer group.",
      "type": "object",
      "properties": {
        "authorizerGroups": {
          "description": "Authorizer Groups Configuration to be changed.",
          "$ref": "#/definitions/authorizerGroupsType"
        },
        "updateAuthorizers": {
          "description": "If true, updates all authorizers in the group.",
          "type": "boolean"
        }
      }
    },
    "authorizerGroupsToChange": {
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Authorizer Groups Configuration to be changed.",
          "$ref": "#/definitions/authorizerGroupsCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizerGroupsType": {
      "description": "Authorizer Group",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/authorizerGroupType"
      }
    },
    "authorizerInfoType": {
      "description": "Authorizer Information",
      "type": "object",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        }
      }
    },
    "authorizerTrxLimitType": {
      "description": "A representation of the information of Transaction Limit.",
      "type": "object",
      "properties": {
        "billingInstructions": {
          "description": "Set of Billing Instructions configured for the Authorizer Group.",
          "$ref": "#/definitions/authBillingInstructionsType"
        },
        "creditLimit": {
          "description": "Credit Limit for a transaction.",
          "type": "number"
        },
        "groupHeaderId": {
          "description": "Group Header Id for a transaction row.",
          "type": "number"
        },
        "occurrenceLimit": {
          "description": "Occurrence Limit for a transaction.",
          "type": "number"
        },
        "transactionCodes": {
          "description": "Set of Transaction Codes configured for the Authorizer Group.",
          "$ref": "#/definitions/authTransactionCodesType"
        }
      }
    },
    "authorizerTrxLimitsType": {
      "description": "Set of Transaction Limit configured for the Authorizer Group.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/authorizerTrxLimitType"
      }
    },
    "autoFolioSettlementTypeType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "autoFolioSettlementTypesCriteria": {
      "description": "Request object for creating Auto Folio Settlement Types.",
      "type": "object",
      "properties": {
        "autoFolioSettlementTypes": {
          "description": "Auto Folio Settlement Typesto be created.",
          "$ref": "#/definitions/autoFolioSettlementTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "autoFolioSettlementTypesDetails": {
      "description": "Response object for fetching Auto Folio Settlement Types.",
      "type": "object",
      "properties": {
        "autoFolioSettlementTypes": {
          "description": "Collection of Auto Folio Settlement Types.",
          "$ref": "#/definitions/autoFolioSettlementTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "autoFolioSettlementTypesToBeChanged": {
      "description": "Request object for changing Auto Folio Settlement Types.",
      "type": "object",
      "properties": {
        "autoFolioSettlementTypes": {
          "description": "Auto Folio Settlement Typesto be changed.",
          "$ref": "#/definitions/autoFolioSettlementTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "autoFolioSettlementTypesType": {
      "description": "List of Auto Folio Settlement Types.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/autoFolioSettlementTypeType"
      }
    },
    "bankAccounts": {
      "description": "Request object to edit Bank Accounts",
      "type": "object",
      "properties": {
        "bankAccounts": {
          "description": "Details of the Bank Accounts to edit",
          "$ref": "#/definitions/configBankAccountsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "updateDefault": {
          "description": "Update default confirmation response",
          "type": "boolean"
        },
        "updateDefaultForCurrency": {
          "description": "Update default for currency confirmation response",
          "type": "boolean"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bankAccountsInfo": {
      "description": "Response for fetching Bank Accounts",
      "type": "object",
      "properties": {
        "bankAccounts": {
          "description": "Collection of Bank Accounts",
          "$ref": "#/definitions/configBankAccountsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "basicEmailType": {
      "description": "Email address",
      "type": "string",
      "maxLength": 2000,
      "minLength": 0
    },
    "bedTaxReportingType": {
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "type": "object",
      "properties": {
        "taxRegistrationNo": {
          "description": "Tax Registration Number for Maldives Bed Tax Reporting.",
          "type": "number"
        },
        "taxableDays": {
          "description": "Number of days for which the Maldives tax is applicable.",
          "type": "integer"
        },
        "visaExpiryDate": {
          "description": "Visa Expiration Date used for Maldives Bed Tax Reporting",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaIssueDate": {
          "description": "Visa Issue Date used for Maldives Bed Tax Reporting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaNumber": {
          "description": "Visa number used for Maldives Bed Tax Reporting",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "billingPrivilegesType": {
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "type": "object",
      "properties": {
        "allowAutoCheckin": {
          "description": "Indicated if a new reservation should be created and automatically checked in whenever the room is checked out. Available for pseudo room types only.",
          "type": "boolean"
        },
        "autoSettlement": {
          "description": "Indicates if the is a candidate for auto folio settlement.",
          "type": "boolean"
        },
        "autoSettlementFreq": {
          "description": "The interval of days between each auto folio settlement.",
          "type": "integer"
        },
        "autoSettlementType": {
          "description": "The folio settlement type for auto folio settlement.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "creditLimitAutoPay": {
          "description": "Indicates if the reservation will be included in the Automatic Credit Limit Overages process and also be listed in the Credit Limit Overages screen results.",
          "type": "boolean"
        },
        "directBillAuthorized": {
          "description": "If Direct bill is authorized this will hold User ID who authorized it.",
          "type": "boolean"
        },
        "folioCloseDate": {
          "description": "Date when folio was closed. This works with PostStayCharging flag.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postStayCharging": {
          "description": "Indicates if the reservation has charging privileges after checkout.",
          "type": "boolean"
        },
        "postingRestriction": {
          "description": "Flag used by interface program during check in.",
          "type": "boolean"
        },
        "preStayCharging": {
          "description": "Indicates if the reservation has charging privileges before arrival.",
          "type": "boolean"
        },
        "scheduledCheckout": {
          "description": "Indicates if the guest is scheduled for automatic check out.",
          "type": "boolean"
        },
        "scheduledCheckoutTime": {
          "description": "Time of automatic check out if guest is schedule for automatic check out.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "videoCheckout": {
          "description": "Indicates if the guest can do video checkout",
          "type": "boolean"
        }
      }
    },
    "blockIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "bucketRedemptionCodeType": {
      "description": "This gives detailed information about redemption code.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code is used to identify a trx code arrangement.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "compTransactionCode": {
          "description": "Comp Transaction code which form the trx code arrangement.",
          "$ref": "#/definitions/compTrxInfoType"
        },
        "description": {
          "description": "Description of the trx code arrangement code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "Identifies the hotel code for which the trx code arrangement is specified.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "bucketRedemptionCodesType": {
      "description": "Details for Bucket Redemption codes along with associated transaction codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/bucketRedemptionCodeType"
      }
    },
    "bucketTypeType": {
      "description": "Fiscal Bucket Type.",
      "type": "string",
      "enum": [
        "Default",
        "Fiscal"
      ]
    },
    "budgetForecastCateringInfoBaseType": {
      "description": "Budget Forecast information for budget Catering codes.",
      "type": "object",
      "properties": {
        "cateringCodeInformation": {
          "description": "Budget Forecast information for Catering segment code .",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cateringCodeInformationBaseType"
          }
        },
        "covers": {
          "description": "Flag to indicate if covers information has to be included.",
          "type": "boolean"
        },
        "revenue": {
          "description": "Flag to indicate if revenue information has to be included.",
          "type": "boolean"
        }
      }
    },
    "budgetForecastCateringInfoType": {
      "description": "Budget Forecast information for budget Catering codes.",
      "type": "object",
      "properties": {
        "cateringCodeInformation": {
          "description": "Budget Forecast totals information for Catering segment.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cateringCodeInformationType"
          }
        },
        "cateringTotalsInformation": {
          "description": "Budget Forecast totals information for Catering segment.",
          "$ref": "#/definitions/cateringTotalsInformationType"
        }
      }
    },
    "budgetForecastCustomInfoBaseType": {
      "description": "Budget Forecast information for budget Custom codes.",
      "type": "object",
      "properties": {
        "customCodeInformation": {
          "description": "Budget Forecast information for Custom segment code .",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/customCodeInformationBaseType"
          }
        },
        "customValue": {
          "description": "Flag to indicate if values information has to be included.",
          "type": "boolean"
        }
      }
    },
    "budgetForecastCustomInfoType": {
      "description": "Budget Forecast information for budget Custom codes.",
      "type": "object",
      "properties": {
        "customCodeInformation": {
          "description": "Budget Forecast information for Custom segment code .",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/customCodeInformationType"
          }
        },
        "customCodeTotalInformation": {
          "description": "Budget Forecast information for Custom segment code .",
          "$ref": "#/definitions/customCodeTotalInformationType"
        }
      }
    },
    "budgetForecastInformation": {
      "type": "object",
      "properties": {
        "budgetForecastInformation": {
          "description": "Budget forecast information for segment codes.",
          "$ref": "#/definitions/budgetForecastInformationType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "budgetForecastInformationBase": {
      "type": "object",
      "properties": {
        "budgetForecastInformation": {
          "description": "Search criteria for budget forecast information.",
          "$ref": "#/definitions/budgetForecastInformationBaseType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "budgetForecastInformationBaseType": {
      "description": "Holds budget forecast information for included segment types.",
      "type": "object",
      "properties": {
        "cateringSegmentInformation": {
          "description": "Holds budget forecast information for Catering Code segment.",
          "$ref": "#/definitions/budgetForecastCateringInfoBaseType"
        },
        "customSegmentInformation": {
          "description": "Holds budget forecast information for Custom Code segment.",
          "$ref": "#/definitions/budgetForecastCustomInfoBaseType"
        },
        "hotelId": {
          "description": "Opera Hotel code for the Fetch Revenue information.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketSegmentInformation": {
          "description": "Holds budget forecast information for MarketCode segment.",
          "$ref": "#/definitions/budgetForecastMarketInfoBaseType"
        },
        "rateSegmentInformation": {
          "description": "Holds budget forecast information for RateCode segment.",
          "$ref": "#/definitions/budgetForecastRateInfoBaseType"
        },
        "transactionSegmentInformation": {
          "description": "Holds budget forecast information for Transaction Code segment.",
          "$ref": "#/definitions/budgetForecastTransactionInfoBaseType"
        },
        "year": {
          "description": "Year of revenue to be fetched.",
          "type": "string",
          "maxLength": 4,
          "minLength": 4
        }
      }
    },
    "budgetForecastInformationType": {
      "description": "Holds budget forecast information for included segment types.",
      "type": "object",
      "properties": {
        "cateringSegmentInformation": {
          "description": "Holds budget forecast information for Catering Code segment.",
          "$ref": "#/definitions/budgetForecastCateringInfoType"
        },
        "customSegmentInformation": {
          "description": "Holds budget forecast information for Custom Code segment.",
          "$ref": "#/definitions/budgetForecastCustomInfoType"
        },
        "marketSegmentInformation": {
          "description": "Holds budget forecast information for MarketCode segment.",
          "$ref": "#/definitions/budgetForecastMarketInfoType"
        },
        "rateSegmentInformation": {
          "description": "Holds budget forecast information for RateCode segment.",
          "$ref": "#/definitions/budgetForecastRateInfoType"
        },
        "transactionSegmentInformation": {
          "description": "Holds budget forecast information for Transaction Code segment.",
          "$ref": "#/definitions/budgetForecastTransactionInfoType"
        }
      }
    },
    "budgetForecastMarketInfoBaseType": {
      "description": "Budget Forecast information for budget segment codes.",
      "type": "object",
      "properties": {
        "marketCodeInformation": {
          "description": "Budget Forecast information for budget segment code .",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/marketCodeInformationBaseType"
          }
        },
        "nights": {
          "description": "Flag to indicate if nights information is included.",
          "type": "boolean"
        },
        "revenue": {
          "description": "Flag to indicate if revenue information is included.",
          "type": "boolean"
        }
      }
    },
    "budgetForecastMarketInfoType": {
      "description": "Budget Forecast information for budget segment codes.",
      "type": "object",
      "properties": {
        "marketCodeInformation": {
          "description": "Budget Forecast information for segment.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/marketCodeInformationType"
          }
        },
        "marketCodeTotalInformation": {
          "description": "Budget Forecast totals information for segment.",
          "$ref": "#/definitions/marketCodeTotalInformationType"
        }
      }
    },
    "budgetForecastRateInfoBaseType": {
      "description": "Budget Forecast information for budget segment codes.",
      "type": "object",
      "properties": {
        "nights": {
          "description": "Flag to indicate if nights information has to be included.",
          "type": "boolean"
        },
        "rateCodeInformation": {
          "description": "Budget Forecast information for budget segment code .",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/rateCodeInformationBaseType"
          }
        },
        "revenue": {
          "description": "Flag to indicate if revenue information has to be included.",
          "type": "boolean"
        }
      }
    },
    "budgetForecastRateInfoType": {
      "description": "Budget Forecast information for budget segment codes.",
      "type": "object",
      "properties": {
        "rateCodeInformation": {
          "description": "Budget Forecast totals information for Rate segment.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/rateCodeInformationType"
          }
        },
        "rateCodeTotalInformation": {
          "description": "Budget Forecast totals information for Rate segment.",
          "$ref": "#/definitions/rateCodeTotalInformationType"
        }
      }
    },
    "budgetForecastToDelete": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "segmentCodeInformation": {
          "description": "Search criteria for budget forecast information.",
          "$ref": "#/definitions/deleteSegmentCodeBudgetInformationType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "budgetForecastTransactionInfoBaseType": {
      "description": "Budget Forecast information for budget Transaction codes.",
      "type": "object",
      "properties": {
        "revenue": {
          "description": "Flag to indicate if revenue information has to be included.",
          "type": "boolean"
        },
        "transactionCodeInformation": {
          "description": "Budget Forecast information for Transaction segment code .",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/transactionCodeInformationBaseType"
          }
        }
      }
    },
    "budgetForecastTransactionInfoType": {
      "description": "Budget Forecast information for budget Transaction codes.",
      "type": "object",
      "properties": {
        "transactionCodeInformation": {
          "description": "Budget Forecast information for Transaction segment code .",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/transactionCodeInformationType"
          }
        },
        "transactionCodeTotalsInformation": {
          "description": "Budget Forecast information for Transaction segment code .",
          "$ref": "#/definitions/transactionCodeTotalsInformationType"
        }
      }
    },
    "budgetInfoDeleteType": {
      "description": "Daily information.",
      "type": "string",
      "enum": [
        "Monthly",
        "Daily"
      ]
    },
    "calculatePointsType": {
      "description": "Defines when the points are to be calculated.",
      "type": "string",
      "enum": [
        "Always",
        "Prompt",
        "Never"
      ]
    },
    "calculatePostingCharge": {
      "description": "Corresponds to each charge that will be posted against the transaction code based from the test criteria.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The amount that will be posted against the transaction code.",
          "type": "number"
        },
        "basePosting": {
          "description": "Indicates whether it is the base posting.",
          "type": "boolean"
        },
        "bucket": {
          "description": "The amount that will be posted for each bucket.",
          "$ref": "#/definitions/postingBucket"
        },
        "description": {
          "description": "Description of the transaction code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "formula": {
          "description": "The formula that is used to calculate the generates.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel code of the associated transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "level": {
          "description": "Defines the level from which the transaction generates was created.",
          "$ref": "#/definitions/generateLevelType"
        },
        "sequence": {
          "description": "The order in which the charge will be posted. The base posting will always be 0 (zero) followed by generates associated in order of which they were created.",
          "type": "integer"
        },
        "transactionCode": {
          "description": "The associated transaction code of the posting.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "calculatePostingResult": {
      "description": "List of charges that will be posted against the transaction code based from the test criteria.",
      "type": "object",
      "properties": {
        "charges": {
          "description": "Charges that will be posted based from the criteria defined.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/calculatePostingCharge"
          }
        },
        "totalAmount": {
          "description": "The full amount that would be posted.",
          "type": "number"
        }
      }
    },
    "calculatedPosting": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "result": {
          "description": "List of charges that will be posted against the transaction code based from the test criteria.",
          "$ref": "#/definitions/calculatePostingResult"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cardNumberTypeType": {
      "description": "Simple type for indicating if credit card number is tokenized.",
      "type": "string",
      "enum": [
        "CardNumber",
        "Token"
      ]
    },
    "cardOptionType": {
      "description": "Switch card options.",
      "type": "object",
      "properties": {
        "either": {
          "description": "Indicates that either Issue Number or Start Date is sufficient.",
          "type": "boolean"
        },
        "requireIssueNumber": {
          "description": "Indicates whether issue number is mandatory or not.",
          "type": "boolean"
        },
        "requireStartDate": {
          "description": "Indicates whether start date is mandatory or not.",
          "type": "boolean"
        }
      }
    },
    "cardPaymentProcessingType": {
      "description": "Manual Processing.",
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardPaymentTrxSetupType": {
      "description": "Card Payment Transaction Code configuration details.",
      "type": "object",
      "properties": {
        "accountReceivable": {
          "description": "AR account information to route the payments.",
          "$ref": "#/definitions/aRAccountRefType"
        },
        "commission": {
          "description": "Commission percentage on the payment.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "displayCode": {
          "description": "Display code of the payment Transaction Code.",
          "type": "string",
          "maxLength": 8,
          "minLength": 0
        },
        "interfaceCode": {
          "description": "Card Payment's internal interface code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "processingType": {
          "description": "Type of processing for the payment.",
          "$ref": "#/definitions/cardPaymentProcessingType"
        }
      }
    },
    "cardProcessingType": {
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardRangeType": {
      "description": "Card number start and end range.",
      "type": "object",
      "properties": {
        "from": {
          "description": "Starting range of the card.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "to": {
          "description": "End range of the card.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        }
      }
    },
    "cardRangesType": {
      "description": "Card number start and end range.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cardRangeType"
      }
    },
    "cardReaderDelimiters": {
      "type": "object",
      "properties": {
        "delimiters": {
          "description": "Delimiters configured for the requested device.",
          "$ref": "#/definitions/cardReaderDelimitersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cardReaderDelimitersType": {
      "description": "Configured delimiters for parsing a card track data based on a particular card reader device.",
      "type": "object",
      "properties": {
        "additionalInfoEndSeparator": {
          "description": "Character to be used as Additional Info End Separator.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "additionalInfoFormatType": {
          "description": "String to be used to indicate whether KSNField, ET1Field, ET2Field should be interpreted as field positions or field IDs.",
          "type": "string"
        },
        "additionalInfoSeparator": {
          "description": "Character to be used as Additional Info Separator.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "cardHolderNameSeparator": {
          "description": "Character to be used as Guest Name separator.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "deviceId": {
          "description": "Device ID to which this delimiter is assigned.",
          "type": "integer"
        },
        "eT1Field": {
          "description": "Interpreted as the field position or field ID of Encrypted Track 1, depending on the value of Additional Information Format Type.",
          "type": "integer"
        },
        "eT2Field": {
          "description": "Interpreted as the field position or field ID of Encrypted Track 2, depending on the value of Additional Information Format Type.",
          "type": "integer"
        },
        "encryptionFormatCode": {
          "description": "Encryption Format Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "endOfTrackSeparator": {
          "description": "Character to be used as End of Track Separator.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "expirationDateStartCharacter": {
          "description": "Character that will denote the start of Expiry Date.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "kSNField": {
          "description": "Interpreted as the field position or field ID of KSN, depending on the value of Additional Information Format Type.",
          "type": "integer"
        },
        "manualTokenPattern": {
          "description": "The Regular Expression pattern of the token that is present in the track data if data was inputted manually through the device instead of swiping.",
          "type": "string"
        },
        "secureDevice": {
          "description": "A flag indicating whether the data from the device is encrypted or not.",
          "type": "boolean"
        },
        "softwareId": {
          "description": "Software ID of device.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "track2Separator": {
          "description": "Character to be used as Track2 Separator.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "trackDataPattern": {
          "description": "The Regular Expression pattern of the track data that is generated by this device.",
          "type": "string"
        }
      }
    },
    "cardTypeType": {
      "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
      "type": "string",
      "enum": [
        "Ab",
        "Am",
        "Ax",
        "Cb",
        "Dc",
        "Ds",
        "Dt",
        "Ec",
        "Er",
        "Jc",
        "Jl",
        "Mc",
        "Nb",
        "So",
        "St",
        "Sw",
        "Va",
        "Xy",
        "Zz",
        "Cp",
        "Cu"
      ]
    },
    "cardUsageRulesType": {
      "description": "Provides information on the various authorization options for a given card type .",
      "type": "object",
      "properties": {
        "addressVerification": {
          "description": "Indicates if this payment method requires an address verification.",
          "type": "boolean"
        },
        "authorizationAtCheckin": {
          "description": "Indicates if this payment method can be used for Authorization at check in.",
          "type": "boolean"
        },
        "authorizationDuringStay": {
          "description": "Indicates if this payment method can be used for Authorization during stay.",
          "type": "boolean"
        },
        "authorizationReversal": {
          "description": "Indicates if this payment method can be used for Authorization reversal can be done.",
          "type": "boolean"
        },
        "authorizationSettlementAtCheckout": {
          "description": "Indicates if this payment method can be used for Authorization settlement can happen during checkout.",
          "type": "boolean"
        },
        "cVVCheck": {
          "description": "Indicates if this payment method needs CVV check.",
          "type": "boolean"
        },
        "chipAndPin": {
          "description": "Indicates if this payment method is a chip and pin.",
          "type": "boolean"
        },
        "promptAtCheckin": {
          "description": "Indicates if this payment method needs a prompt during check in.",
          "type": "boolean"
        }
      }
    },
    "cardValidationRuleTypeType": {
      "description": "Defines rules to be used for card validation.",
      "type": "string",
      "enum": [
        "Mod7",
        "Mod10",
        "Udef",
        "Novalid"
      ]
    },
    "cashierId": {
      "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
      "type": "number"
    },
    "cashierInfoType": {
      "description": "Cashier information. Contains Id and Name details of the cashier.",
      "type": "object",
      "properties": {
        "cashierId": {
          "description": "Cashier Id of the Cashier.",
          "type": "number"
        },
        "cashierName": {
          "description": "Cashier Name.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "cashierNumber": {
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierShiftDropLocationType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "hotelId": {
          "description": "Hotel of the record.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "cashierShiftDropLocationsCriteria": {
      "description": "Request object for creating Cashier Shift Drop Locations.",
      "type": "object",
      "properties": {
        "cashierShiftDropLocations": {
          "description": "Cashier Shift Drop Locations to be created.",
          "$ref": "#/definitions/cashierShiftDropLocationsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierShiftDropLocationsDetails": {
      "description": "Response object for fetching Cashier Shift Drop Locations.",
      "type": "object",
      "properties": {
        "cashierShiftDropLocations": {
          "description": "Collection of Cashier Shift Drop Locations.",
          "$ref": "#/definitions/cashierShiftDropLocationsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierShiftDropLocationsToBeChanged": {
      "description": "Request object for changing Cashier Shift Drop Locations.",
      "type": "object",
      "properties": {
        "cashierShiftDropLocations": {
          "description": "Cashier Shift Drop Locations to be changed.",
          "$ref": "#/definitions/cashierShiftDropLocationsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierShiftDropLocationsType": {
      "description": "List of Cashier Shift Drop Locations.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cashierShiftDropLocationType"
      }
    },
    "cashierType": {
      "description": "Cashiers Information.",
      "type": "object",
      "properties": {
        "appUsers": {
          "description": "List of application users associated with the cashier",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/applicationUserType"
          }
        },
        "attachedUser": {
          "description": "User(s) assigned to the cashier.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "cashierId": {
          "description": "Numeric code for cashier ID.",
          "type": "number"
        },
        "cashierType": {
          "description": "Cashier / Interface Cashier / LDAP Template options are provided.",
          "$ref": "#/definitions/cashierTypeType"
        },
        "currencyCode": {
          "description": "The currency code used by the hotel that the cashier belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "floatOverShort": {
          "description": "Selected if the cashier is allowed to drop below or above the required drop amount.",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicator that tells whether the cashier is active or not.",
          "type": "boolean"
        },
        "kiosk": {
          "description": "Indicator that this cashier is the one to be used by Kiosk Partner to carry out postings and payments for the guest.",
          "type": "boolean"
        },
        "name": {
          "description": "Name assigned to the cashier.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "open": {
          "description": "Indicator that tells whether the cashier is open or not.",
          "type": "boolean"
        },
        "startingAmount": {
          "description": "The Starting Amount in the Cashier drawer.",
          "type": "number"
        },
        "usageInfo": {
          "description": "Information about how the cashier is used.",
          "type": "object",
          "properties": {
            "history": {
              "description": "Statistics about the use of the cashier.",
              "type": "object",
              "properties": {
                "lastOpened": {
                  "description": "The date that the cashier last opened.",
                  "type": "string",
                  "format": "date",
                  "maxLength": 8
                },
                "timesOpened": {
                  "description": "The number of times the cashier has opened their account today.",
                  "type": "integer"
                }
              }
            },
            "maximumDailyUses": {
              "description": "The Maximum Daily Uses for the cashier.",
              "type": "integer"
            }
          }
        }
      }
    },
    "cashierTypeType": {
      "description": "The types of cashier.",
      "type": "string",
      "enum": [
        "Cashier",
        "InterfaceCashier",
        "LDAPTemplate"
      ]
    },
    "cashieringTransactionTypeType": {
      "description": "Wrapper Transaction Type.",
      "type": "string",
      "enum": [
        "Revenue",
        "Payment",
        "Wrapper"
      ]
    },
    "cashiers": {
      "type": "object",
      "properties": {
        "cashiers": {
          "description": "List of cashiers to be modified.",
          "$ref": "#/definitions/cashiersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashiersDetails": {
      "type": "object",
      "properties": {
        "cashiers": {
          "description": "Lists of cashiers and their information.",
          "$ref": "#/definitions/cashiersType"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashiersType": {
      "description": "Details about a cashier.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cashierType"
      }
    },
    "cateringCodeInformationBaseType": {
      "description": "Budget Forecast information for Catering segment code.",
      "type": "object",
      "properties": {
        "budgetInfo": {
          "description": "Budget Revenue information for a Catering code.",
          "$ref": "#/definitions/cateringInfoType"
        },
        "cateringCode": {
          "description": "Catering segment code for which budget forecast information is fetched.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cateringCodeDescription": {
          "description": "Catering code description for segment code.",
          "type": "string"
        },
        "cateringCodeGrp": {
          "description": "Catering code group of segment code.",
          "type": "string"
        },
        "forecastInfo": {
          "description": "Forecast Revenue information for a Catering code.",
          "$ref": "#/definitions/cateringInfoType"
        }
      }
    },
    "cateringCodeInformationType": {
      "description": "Budget Forecast information for Catering segment code.",
      "type": "object",
      "properties": {
        "aBVarianceInfo": {
          "description": "Actual Budget variance for a Catering code.",
          "$ref": "#/definitions/cateringVarianceInfoType"
        },
        "aFVarianceInfo": {
          "description": "Actual Forecast variance for a Catering code.",
          "$ref": "#/definitions/cateringVarianceInfoType"
        },
        "actualInfo": {
          "description": "Actual Revenue information for a Catering code.",
          "$ref": "#/definitions/cateringInfoType"
        },
        "budgetInfo": {
          "description": "Budget Revenue information for a Catering code.",
          "$ref": "#/definitions/cateringInfoType"
        },
        "cateringCode": {
          "description": "Catering segment code for which budget forecast information is fetched.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cateringCodeDescription": {
          "description": "Catering code description for segment code.",
          "type": "string"
        },
        "cateringCodeGrp": {
          "description": "Catering code group of segment code.",
          "type": "string"
        },
        "fBVarianceInfo": {
          "description": "Forecast Budget variance for a Catering code.",
          "$ref": "#/definitions/cateringVarianceInfoType"
        },
        "forecastInfo": {
          "description": "Forecast Revenue information for a Catering code.",
          "$ref": "#/definitions/cateringInfoType"
        }
      }
    },
    "cateringInfoType": {
      "description": "Revenue and Covers information for a catering segment code. Holds total and monthly information.",
      "type": "object",
      "properties": {
        "monthlyInfo": {
          "description": "Catering information for each month for segment code.",
          "type": "array",
          "maxItems": 12,
          "items": {
            "$ref": "#/definitions/monthlyCateringInfoType"
          }
        },
        "totalCovers": {
          "description": "Total Covers for segment code.",
          "type": "number"
        },
        "totalRevenue": {
          "description": "Total revenue for segment code.",
          "type": "number"
        }
      }
    },
    "cateringOnlyType": {
      "description": "For Catering and Event.",
      "type": "string",
      "enum": [
        "Yes",
        "No",
        "Both"
      ]
    },
    "cateringTotalsInformationType": {
      "description": "Budget Forecast totals information for Catering segment.",
      "type": "object",
      "properties": {
        "aBVarianceTotalInfo": {
          "description": "Actual Budget variance for a Catering code.",
          "$ref": "#/definitions/cateringVarianceInfoType"
        },
        "aFVarianceTotalInfo": {
          "description": "Actual Forecast variance for a Catering code.",
          "$ref": "#/definitions/cateringVarianceInfoType"
        },
        "actualTotalInfo": {
          "description": "Actual Revenue information for a Catering code.",
          "$ref": "#/definitions/cateringInfoType"
        },
        "budgetTotalInfo": {
          "description": "Budget Revenue information for a Catering code.",
          "$ref": "#/definitions/cateringInfoType"
        },
        "fBVarianceTotalInfo": {
          "description": "Forecast Budget variance for a Catering code.",
          "$ref": "#/definitions/cateringVarianceInfoType"
        },
        "forecastTotalInfo": {
          "description": "Forecast Revenue information for a Catering code.",
          "$ref": "#/definitions/cateringInfoType"
        }
      }
    },
    "cateringVarianceInfoType": {
      "description": "Monthly Variance information.",
      "type": "array",
      "maxItems": 12,
      "items": {
        "$ref": "#/definitions/monthlyCateringVarianceInfoType"
      }
    },
    "changeFiscalCommands": {
      "description": "Request object to edit Fiscal Commands.",
      "type": "object",
      "properties": {
        "fiscalPartners": {
          "description": "Change existing Fiscal Commands.",
          "$ref": "#/definitions/fiscalCommandsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeFiscalPartners": {
      "description": "Request object to edit Fiscal Partners.",
      "type": "object",
      "properties": {
        "fiscalPartners": {
          "description": "Change existing Fiscal Partners.",
          "$ref": "#/definitions/fiscalPartnersType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeTransactionCodeOwnershipType": {
      "description": "Change Transaction Code Ownership configuration details.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code for which to update ownership of the Transaction codes",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ownershipStatus": {
          "description": "Ownership status to which the Transaction Codes have to be changed",
          "$ref": "#/definitions/trxOwnershipType"
        },
        "transactionCodes": {
          "description": "List of unique Transaction Codes.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "classOfServiceType": {
      "type": "object",
      "properties": {
        "cosChkRg": {
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "cosMsgCmdRg": {
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "cosMsgLmpRg": {
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "definedNameFormat": {
          "description": "Defined name format in the class of service.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/definedNameFormatType"
          }
        },
        "guestDataChangeCo": {
          "type": "boolean"
        },
        "resvInQueue": {
          "description": "Indicates whethe a message will be triggered when a room/reservation is placed on QUEUE",
          "type": "boolean"
        },
        "roomEquipCi": {
          "type": "boolean"
        },
        "roomEquipCo": {
          "type": "boolean"
        },
        "standardNameFormat": {
          "description": "Standard name format in the class of service.",
          "type": "string",
          "maxLength": 5,
          "minLength": 0
        }
      }
    },
    "codeDescriptionType": {
      "description": "This contains a generic code and description information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "maxLength": 20,
        "minLength": 0
      }
    },
    "codeType": {
      "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
      "type": "string",
      "maxLength": 20,
      "minLength": 0
    },
    "collectingAgentTaxType": {
      "description": "Type which holds Collecting Agent Taxes primary details.",
      "type": "object",
      "properties": {
        "calculatedOnArrangementCodes": {
          "description": "Collection of Arrangement Codes based on which the Collecting Agent Tax will be calculated.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "calculatedOnTransactionCodes": {
          "description": "Collection of Transaction Codes based on which the Collecting Agent Tax will be calculated.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "hotelId": {
          "description": "It represents Hotel code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "newTaxType": {
          "description": "New Tax Type for which tax is applicable.",
          "$ref": "#/definitions/codeListType"
        },
        "percentage": {
          "description": "Percentage used to calculate the Taxes",
          "type": "integer"
        },
        "taxCode": {
          "description": "Primary Key Sequence",
          "$ref": "#/definitions/taxCodeSeqType"
        },
        "taxTransactionCode": {
          "description": "The Transaction Code used to post the Taxes.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "taxType": {
          "description": "Tax Type for which tax is applicable.",
          "$ref": "#/definitions/codeListType"
        },
        "taxVoid": {
          "description": "Indicates the Collecting Agent Tax that cannot be combined with this Tax. When this Tax is calculated then the Tax for the TaxVoid sequence will not be calculated.",
          "$ref": "#/definitions/taxCodeSeqType"
        },
        "triggerAmount": {
          "description": "Minimum Net amount (gross minus taxes) that the folio has to reach to apply the Tax.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "collectingAgentTaxes": {
      "type": "object",
      "properties": {
        "collectingAgentTaxes": {
          "description": "Collection of Collecting Agent Taxes details.",
          "$ref": "#/definitions/collectingAgentTaxesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "collectingAgentTaxesType": {
      "description": "Type which holds collection of Agent Tax details",
      "type": "object",
      "properties": {
        "collectingAgentTax": {
          "description": "It represent Agent Tax details.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/collectingAgentTaxType"
          }
        },
        "overrideCollectingAgentTaxes": {
          "description": "Flag that indicates if Collecting Agent Taxes check should be skipped when given Tax code already exist.",
          "type": "boolean"
        }
      }
    },
    "colorType": {
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "type": "string",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "commentInfoType": {
      "description": "Comment related to the profile/reservation.",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "commentType": {
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "type": "object",
      "properties": {
        "actionDate": {
          "description": "Indicates at which date an action described in the comment must be taken.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "actionType": {
          "description": "Specifies type of action described in the comments.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "commentTitle": {
          "description": "Specifies Comment's Title.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "confidential": {
          "description": "When true, the comment may be confidential.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "If specified comment belongs to the Hotel, otherwise it is a global comment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "internal": {
          "description": "When true, the comment may not be shown to the consumer. When false, the comment may be shown to the consumer.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "notificationLocation": {
          "description": "Notification Location associated with the Note.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "overrideInternal": {
          "description": "When true, the note internal could be modified.",
          "type": "boolean"
        },
        "protectDescription": {
          "description": "When true, the note title will be populated from the note type description and couldn't be modified.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "type": {
          "description": "Specifies type of the comment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Comment type Description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        }
      }
    },
    "commissionBasedOnType": {
      "description": "Commission based on Revenue.",
      "type": "string",
      "enum": [
        "Reservation",
        "Revenue"
      ]
    },
    "commissionCalculationType": {
      "description": "Commission calculation type based on details.",
      "type": "object",
      "properties": {
        "reservationBasedCommission": {
          "$ref": "#/definitions/reservationBasedCommissionType"
        },
        "revenueBasedCommission": {
          "$ref": "#/definitions/revenueBasedCommissionType"
        }
      }
    },
    "commissionCodeDetail": {
      "description": "Response object for fetching commission code details.",
      "type": "object",
      "properties": {
        "commissionCodeDetail": {
          "description": "Collection of commission code details.",
          "$ref": "#/definitions/commissionCodeDetailType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionCodeDetailType": {
      "description": "Commission code detail.",
      "type": "object",
      "properties": {
        "commissionCodeInfo": {
          "description": "Commission code details.",
          "$ref": "#/definitions/commissionCodeInfoType"
        }
      }
    },
    "commissionCodeHoldStatusType": {
      "description": "Commission Code Hold Status type",
      "type": "object",
      "properties": {
        "holdAccountReceivables": {
          "description": "Hold accoutn receivables status for commission code.",
          "type": "boolean"
        },
        "holdAlways": {
          "description": "Hold always status for commission code.",
          "type": "boolean"
        },
        "holdPrepaid": {
          "description": "Hold prepaid status for commission code.",
          "type": "boolean"
        }
      }
    },
    "commissionCodeInfoType": {
      "description": "Commission code info.",
      "type": "object",
      "properties": {
        "commissionCalculation": {
          "description": "Commission calculation type based on details.",
          "$ref": "#/definitions/commissionCalculationType"
        },
        "commissionCode": {
          "description": "Commission code for which details are fetched.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "commissionCodeHoldStatus": {
          "description": "Commission code hold status details.",
          "$ref": "#/definitions/commissionCodeHoldStatusType"
        },
        "description": {
          "description": "Commission code description for which details are fetched.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property of the commission codes.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationHistoryRecords": {
          "description": "Commission paid manually details.",
          "$ref": "#/definitions/commissionPaidDetailsType"
        },
        "sequence": {
          "description": "Commission code sequence number.",
          "type": "integer"
        },
        "taxPercentage": {
          "description": "Commission paid Tax details.",
          "type": "number"
        }
      }
    },
    "commissionCodeSummaryInfoType": {
      "description": "Commission codes summary details.",
      "type": "object",
      "properties": {
        "basedOn": {
          "description": "Commission based on information.",
          "$ref": "#/definitions/commissionBasedOnType"
        },
        "commissionAmount": {
          "description": "Commission amount that needs to be paid.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "commissionCode": {
          "description": "Commission code details.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "default": {
          "type": "boolean"
        },
        "description": {
          "description": "Commission code description for which details are fetched.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property of the commission codes.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sequence": {
          "description": "Commission code sequence number.",
          "type": "integer"
        },
        "taxPercentage": {
          "description": "Commission paid Tax details.",
          "type": "number"
        }
      }
    },
    "commissionCodeTransactionType": {
      "description": "Revenue based commission details.",
      "type": "object",
      "properties": {
        "basedOnNetAmount": {
          "type": "boolean"
        },
        "commissionPaidDetails": {
          "$ref": "#/definitions/commissionPaidDetailsType"
        },
        "transactionCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionCodeDesc": {
          "type": "string"
        }
      }
    },
    "commissionCodes": {
      "description": "Request object to update commission codes.",
      "type": "object",
      "properties": {
        "commissionCodes": {
          "description": "Commission codes information to update.",
          "$ref": "#/definitions/commissionCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionCodesSummary": {
      "description": "Response object for fetching commission codes.",
      "type": "object",
      "properties": {
        "commissionCodesSummary": {
          "description": "Collection of commission code details.",
          "$ref": "#/definitions/commissionCodesSummaryType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionCodesSummaryType": {
      "description": "Commission code details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionCodeSummaryInfoType"
      }
    },
    "commissionCodesType": {
      "description": "Commission code details object.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionCodeInfoType"
      }
    },
    "commissionConfigPaymentMethodType": {
      "description": "This value of the enum is used for Payment methods",
      "type": "string",
      "enum": [
        "Check",
        "CentrallyPaid",
        "Eft"
      ]
    },
    "commissionPaidDetailsType": {
      "description": "Commission paid details.",
      "type": "object",
      "properties": {
        "commissionAmount": {
          "description": "Commission amount that needs to be paid.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "commissionType": {
          "description": "Indicates the type of commission paid to agent.",
          "type": "string",
          "maxLength": 1,
          "minLength": 1
        },
        "perNight": {
          "type": "boolean"
        },
        "perStay": {
          "type": "boolean"
        },
        "weekEndCommissionAmount": {
          "description": "Commission amount that needs to be paid over weekend.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "commissionPayoutToType": {
      "type": "string",
      "enum": [
        "TravelAgent",
        "Source",
        "TravelAgentSource",
        "None"
      ]
    },
    "communicationStatusType": {
      "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
      "type": "string",
      "enum": [
        "Pending",
        "Completed",
        "Failed",
        "Sent",
        "Received",
        "Cancelled",
        "PendingAvailability"
      ]
    },
    "compAuthorizer": {
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to fetch the check details.",
          "$ref": "#/definitions/compAuthorizerType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compAuthorizerDetailType": {
      "description": "Detail information related to comp authorizers.",
      "type": "object",
      "properties": {
        "arrangementCode": {
          "description": "Arrangement code for the detail limit.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "arrangementId": {
          "description": "Arrangement id for the arrangement code.",
          "type": "integer"
        },
        "authorizationGroup": {
          "description": "Authorization group for the instruction.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "description": {
          "description": "Description for the transaction code or the arrangement code.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "rateCode": {
          "description": "Rate code for the instruction.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "transactionCode": {
          "description": "Transaction code for the detail limit.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        }
      }
    },
    "compAuthorizerHeaderType": {
      "description": "Detail information related to comp authorizers.",
      "type": "object",
      "properties": {
        "compAuthorizerDetails": {
          "description": "Comp authorizer details information.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/compAuthorizerDetailType"
          }
        },
        "creditLimit": {
          "description": "Credit limit associated for the authorizer.",
          "type": "integer"
        },
        "occurenceLimit": {
          "description": "Credit limit already used up for the authorizer.",
          "type": "integer"
        }
      }
    },
    "compAuthorizerType": {
      "description": "Information related to comp authorizers.",
      "type": "object",
      "properties": {
        "aRAccount": {
          "description": "AR account for the comp authorizers.",
          "$ref": "#/definitions/aRAccountType"
        },
        "authorizer": {
          "description": "Name for the authorizer.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "authorizerDisplayName": {
          "description": "Display name for the authorizer.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "authorizerId": {
          "description": "Unique id for the authorizer.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "compAuthorizerHeaders": {
          "description": "Comp authorizer details information.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/compAuthorizerHeaderType"
          }
        },
        "firstName": {
          "description": "First name for the authorizer.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicator that tells whether the authorizer is active or not.",
          "type": "boolean"
        },
        "lastName": {
          "description": "Last name for the authorizer.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "name": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "overrideWarning": {
          "description": "Indicator that tells whether to override warnings when deactivating authorizer.",
          "type": "boolean"
        },
        "profileId": {
          "description": "Profile Id of the authorizer.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "totalCreditLimit": {
          "description": "Credit limit associated for the authorizer.",
          "type": "integer"
        }
      }
    },
    "compAuthorizers": {
      "type": "object",
      "properties": {
        "compAuthorizerInfo": {
          "description": "Comp authorizer information.",
          "$ref": "#/definitions/compAuthorizersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compAuthorizersType": {
      "description": "Information associated for an authorizer.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/compAuthorizerType"
      }
    },
    "compBucketRedemptionConfig": {
      "description": "Request object for creating new Comp Bucket Redemption Codes configurations.",
      "type": "object",
      "properties": {
        "bucketRedemptionCodes": {
          "description": "Bucket Redemption Codes Configurations to be created.",
          "$ref": "#/definitions/bucketRedemptionCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compBucketRedemptionConfigDetails": {
      "description": "Response object for fetching Comp Bucket Redemption Codes configurations.",
      "type": "object",
      "properties": {
        "bucketRedemptionCodes": {
          "description": "Collection of Comp Bucket Redemption Codes configurations.",
          "$ref": "#/definitions/bucketRedemptionCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compTrxInfoType": {
      "description": "Transaction codes info.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "compTypeType": {
      "description": "Information representation of Comp Type.",
      "type": "object",
      "properties": {
        "compTypeCode": {
          "description": "Code is used to identify the CompType.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "compTypeDescription": {
          "description": "Text is used to describe the CompType.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "displayOrder": {
          "description": "Comp Type record sequence number.",
          "type": "number"
        }
      }
    },
    "compTypesCriteria": {
      "description": "Request object for creating CompTypes.",
      "type": "object",
      "properties": {
        "compTypes": {
          "description": "Comp Types to be created.",
          "$ref": "#/definitions/compTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compTypesDetails": {
      "description": "Response object for fetching Comp Types.",
      "type": "object",
      "properties": {
        "compTypes": {
          "description": "Collection of Comp Types.",
          "$ref": "#/definitions/compTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compTypesStatus": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compTypesToBeChanged": {
      "description": "Request object for changing Comp Types.",
      "type": "object",
      "properties": {
        "compTypes": {
          "description": "Comp Types to be changed.",
          "$ref": "#/definitions/compTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compTypesType": {
      "description": "List of Comp Types.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/compTypeType"
      }
    },
    "configBankAccountType": {
      "description": "Indentifier for a Bank Account.",
      "type": "object",
      "properties": {
        "bankAccountId": {
          "description": "Bank account ID.",
          "type": "number"
        },
        "bankAccountNumber": {
          "description": "Account number at the bank.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "bankCode": {
          "description": "Unique code of the bank.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bankName": {
          "description": "Name of the bank account.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "branchCode": {
          "description": "Code for the branch of the bank.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "checkStubLines": {
          "description": "Number of lines to be printed on check stub.",
          "type": "number"
        },
        "currency": {
          "description": "Currency associated with the bank account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "default": {
          "description": "Default Bank Account for that resort.",
          "type": "boolean"
        },
        "defaultForCurrency": {
          "description": "Used mainly to figure out default bank for resort and currency combination.",
          "type": "boolean"
        },
        "editCheckNumber": {
          "description": "Check number allowed to be edited true/false.",
          "type": "boolean"
        },
        "format": {
          "description": "Type of format for Payment Method.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property of the bank account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "lastExportDate": {
          "description": "Used to hold last exported date for commission export.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastExportFileNo": {
          "description": "Used to hold last exported filename for commission export.",
          "type": "integer"
        },
        "minProcessingAmount": {
          "description": "Minimum amount required to produce a check through commission processing for the selected account.",
          "type": "number"
        },
        "nextCheckNumber": {
          "description": "Next check number used by commission handling module for bank account selected.",
          "type": "number"
        },
        "paymentMethod": {
          "description": "Type of payment associated with the bank account.",
          "$ref": "#/definitions/commissionConfigPaymentMethodType"
        },
        "positivePayExport": {
          "description": "Indicate that the bank account uses Positive Pay Export.",
          "type": "boolean"
        },
        "report1099": {
          "description": "Indicates that bank account uses 1099 report.",
          "type": "boolean"
        },
        "routingNumber": {
          "description": "Routing number for the bank account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceImportDirectory": {
          "description": "Source directory for importing commission information.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "targetImportDirectory": {
          "description": "Target directory where import files will be stored.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "validateIATANumber": {
          "description": "Force validation of TA/Source IATA number during commision payment process.",
          "type": "boolean"
        }
      }
    },
    "configBankAccountsType": {
      "description": "List of bank accounts.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/configBankAccountType"
      }
    },
    "configCopyRevenueBucketCodeType": {
      "description": "Copy instructions for copying Revenue Bucket Codes to hotel code(s)",
      "type": "object",
      "properties": {
        "copyCodes": {
          "description": "This holds a List of copy codes",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "revenueBucketType": {
          "description": "This holds a Revenue Bucket Type",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        }
      }
    },
    "configRoutingInstructionType": {
      "description": "Routing limit can be one of the three: Covers, Limit, Percent. It is not mandatory to set value of either. This field is available when the Cashiering>Routing Limits application function is set to Y.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code is used to identify a trx code arrangement.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "compAccounting": {
          "description": "Determines if this is a comp routing code or a routing code.",
          "type": "boolean"
        },
        "covers": {
          "description": "Number of covers for this routing instruction. Null means no value has been specified.",
          "type": "number"
        },
        "daily": {
          "description": "Signifies whether a separate routing instruction has to be generated for each day of the stay.",
          "type": "boolean"
        },
        "daysOfWeek": {
          "description": "The selected days of the week indicate the days which will be selected on the Routing Instructions screen when this routing code is chosen for the routing instructions.",
          "$ref": "#/definitions/timeSpanDaysOfWeekType"
        },
        "description": {
          "description": "Description of the trx code arrangement code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "Identifies the hotel code for which the trx code arrangement is specified.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inheritAuthRateCode": {
          "description": "Reservation to inherit Rate Code from Authorizer.",
          "type": "boolean"
        },
        "limit": {
          "description": "Allowable credit amount for this routing instruction. Null means no value has been specified.",
          "type": "number"
        },
        "percent": {
          "description": "The routing limit percentage allowed for this routing instruction. Null means no value has been specified.",
          "type": "number"
        },
        "transactionCodes": {
          "description": "Collection of transaction codes which form the trx code arrangement.",
          "$ref": "#/definitions/trxCodesInfoType"
        }
      }
    },
    "configRoutingInstructionsType": {
      "description": "This type holds a collection of routing instructions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/configRoutingInstructionType"
      }
    },
    "contractBillingInstructionType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "comments": {
          "description": "Additional Comment.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "contractBillingInstructionsCriteria": {
      "description": "Request object for creating Contract Billing Instructions.",
      "type": "object",
      "properties": {
        "contractBillingInstructions": {
          "description": "Contract Billing Instructionsto be created.",
          "$ref": "#/definitions/contractBillingInstructionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "contractBillingInstructionsDetails": {
      "description": "Response object for fetching Contract Billing Instructions.",
      "type": "object",
      "properties": {
        "contractBillingInstructions": {
          "description": "Collection of Contract Billing Instructions.",
          "$ref": "#/definitions/contractBillingInstructionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "contractBillingInstructionsToBeChanged": {
      "description": "Request object for changing Contract Billing Instructions.",
      "type": "object",
      "properties": {
        "contractBillingInstructions": {
          "description": "Contract Billing Instructionsto be changed.",
          "$ref": "#/definitions/contractBillingInstructionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "contractBillingInstructionsType": {
      "description": "List of Contract Billing Instructions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/contractBillingInstructionType"
      }
    },
    "controlSequenceCodeType": {
      "description": "Indicates control sequences used for bills. Eg. CREDIT_BILL, FATTURA etc.",
      "type": "string",
      "enum": [
        "AcknowledgeReceipt",
        "Statement",
        "Folio",
        "OfficialReceipt",
        "Bill",
        "ArInvoice",
        "SupportingDocument"
      ]
    },
    "controlSequenceType": {
      "description": "Provides information about the Opera Control Sequence",
      "type": "object",
      "properties": {
        "controlCode": {
          "description": "Identifier of Opera Control Sequence",
          "$ref": "#/definitions/controlSequenceCodeType"
        },
        "countryCode": {
          "description": "Opera Control Sequence belongs to country",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "folioType": {
          "description": "Opera Control Sequence associated with folio",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "hotelId": {
          "description": "Control Sequence code associated with Hotel",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "maximum": {
          "description": "Maximum value of Opera Control Sequence",
          "type": "number"
        },
        "minimum": {
          "description": "Minimum value of Opera Control Sequence",
          "type": "number"
        },
        "sequenceValue": {
          "description": "Current Sequence Value for the OPERA Sequence",
          "type": "number"
        }
      }
    },
    "controlSequencesType": {
      "description": "List of Control Sequence details",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/controlSequenceType"
      }
    },
    "copyConfigurationCodeType": {
      "description": "Information needed to copy configuration code from one property to the other.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Source hotel code from which code is to be copied from.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceHotelCode": {
          "description": "Code that is to be copied.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetHotelCode": {
          "description": "Property to which configuration code type to be copied to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        }
      }
    },
    "copyConfigurationCodesType": {
      "description": "Information needed to copy configuration code from one property to the other.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/copyConfigurationCodeType"
      }
    },
    "copyCustomChargeExemptionConfigType": {
      "description": "Information needed to copy Custom Charge Exemption from one property to the other.",
      "type": "object",
      "properties": {
        "exemptionCodes": {
          "description": "Custom Charge Exemption to be copied.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "sourceHotelCode": {
          "description": "Property from which Custom Charge Exemptions to be copied from.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetHotelCode": {
          "description": "Property to which Custom Charge Exemptions to be copied to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        }
      }
    },
    "copyFiscalFolioParametersInfoType": {
      "description": "The type gives details of the source Fiscal Folio Parameter to be copied along with information of the target where the Fiscal Folio Parameter is being copied. Details include source code, hotel code, description, Internal, value with which the Fiscal Folio Parameter will be copied under the target hotel code.",
      "type": "object",
      "properties": {
        "copyAs": {
          "description": "The code and description to be used for fiscal folio parameter being copied under the target hotel code.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "sourceCode": {
          "description": "Source Fiscal Folio Parameter to be copied.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "targetHotelCode": {
          "description": "Target hotel code where the Fiscal Folio Parameter will be copied to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "copyFiscalFolioParametersType": {
      "description": "Copy instructions for Fiscal Folio Parameters.",
      "type": "object",
      "properties": {
        "copyFiscalFolioParametersInfo": {
          "description": "Provides information about the target hotel code where the source Fiscal Folio Parameter will be copied to, what the Fiscal Folio Parameter will be named under the target hotel code and the description of the Fiscal Folio Parameter under the target hotel code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/copyFiscalFolioParametersInfoType"
          }
        },
        "sourceHotelCode": {
          "description": "Source hotel code from where Fiscal Folio Parameter(s) have to be copied.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "copyRevenueTypeMappingCriteriaType": {
      "description": "Provides Revenue Type Mapping details that needs to be copied.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/copyRevenueTypeMappingListType"
      }
    },
    "copyRevenueTypeMappingListType": {
      "description": "Type used for Revenue Type mapping.",
      "type": "object",
      "properties": {
        "cateringOnly": {
          "description": "Flag to indicate if the Revenue Type is used for catering or event only.",
          "$ref": "#/definitions/cateringOnlyType"
        },
        "eventList": {
          "description": "List of Event Types.",
          "$ref": "#/definitions/codeListType"
        },
        "eventType": {
          "description": "Provides information about the Event Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code to which the Revenue Type Mapping belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "isCateringOnly": {
          "description": "This flag will notify the service that transactional postings will not be returned.",
          "type": "boolean"
        },
        "isEventType": {
          "description": "This flag will notify the service that transactional postings will not be returned.",
          "type": "boolean"
        },
        "isSpace": {
          "description": "This flag will notify the service that transactional postings will not be returned.",
          "type": "boolean"
        },
        "revenueType": {
          "description": "Provides information about the Revenue Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "revenueTypeMappingId": {
          "description": "Unique Identifier for Revenue Type Mapping.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "serviceCharge": {
          "description": "Service Charge for the Revenue Type.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "serviceChargeCalulationMethod": {
          "description": "Service Charge for the Revenue Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "serviceChargeTrxCode": {
          "description": "Service Charge for the Revenue Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "space": {
          "description": "Provides information about the Space/Location for the Revenue Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "spaceList": {
          "description": "List of the Space/Location.",
          "$ref": "#/definitions/codeListType"
        },
        "transactionCode": {
          "description": "Transaction code for the Revenue Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "copyTrackItActions": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "trackItActions": {
          "description": "List of Track it Actions to be copied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyTrackItLocations": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "trackItLocations": {
          "description": "List of Track it Locations to be copied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyTrackItTypes": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "trackItTypes": {
          "description": "List of Track it Types to be copied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyTransactionCodeType": {
      "description": "The type gives details of the source transaction code to be copied. Details also include the new code and description with which the transaction code will be copied under the same hotel code.",
      "type": "object",
      "properties": {
        "copyAs": {
          "description": "The code and description to be used for the transaction code being copied. Transaction code will be copied to the same hotel code with a different code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "sourceTransactionCode": {
          "description": "Source transaction code to be copied.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "copyTransactionCodesType": {
      "description": "Collection of transaction codes to be copied within same hotel",
      "type": "object",
      "properties": {
        "copyGenerates": {
          "description": "Indicator that tells whether the transaction code generates should be copied or not.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Source hotel code from where transaction codes(s) have to be copied. The transaction codes will be copied to the same hotel code with a different code and description.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionCode": {
          "description": "List of transaction codes to be copied within the same hotel code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/copyTransactionCodeType"
          }
        }
      }
    },
    "copyTransactionSubgroupsType": {
      "description": "Copy information required to copy transaction subgroup type",
      "type": "object",
      "properties": {
        "hotels": {
          "description": "List of hotels to which the template transaction subgroups needs to be copied.",
          "$ref": "#/definitions/codeListType"
        },
        "transactionSubgroups": {
          "description": "Template transaction subgroups that needs to be copied to the properties specified.",
          "$ref": "#/definitions/templateTransactionSubgroupIDsType"
        }
      }
    },
    "countryNameType": {
      "description": "Code for a country or a nationality.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Used for Character Strings, length 0 to 200.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "createFiscalPartners": {
      "description": "Request object to create Fiscal Partners",
      "type": "object",
      "properties": {
        "fiscalPeriods": {
          "description": "Details of the Fiscal Periods to edit",
          "$ref": "#/definitions/fiscalPartnersType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardInfo": {
      "type": "object",
      "properties": {
        "creditCard": {
          "description": "Credit card information.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardReaderDevices": {
      "type": "object",
      "properties": {
        "devices": {
          "description": "List of supported credit card reader devices.",
          "$ref": "#/definitions/listOfDevicesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardReaderDevicesType": {
      "description": "Supported credit card reader devices.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the device.",
          "type": "string"
        },
        "deviceId": {
          "description": "Device ID assigned to the credit card reader device.",
          "type": "integer"
        },
        "secureDevice": {
          "description": "A flag indicating whether the data from the device is encrypted or not.",
          "type": "boolean"
        },
        "trackDataPattern": {
          "description": "The Regular Expression pattern of the track data that is generated by this device.",
          "type": "string"
        }
      }
    },
    "creditCardServiceActionType": {
      "description": "Instruction to call direct vendor service.",
      "type": "string",
      "enum": [
        "IfcInterface",
        "DirectVendor"
      ]
    },
    "creditCardTypeValidationStatus": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "valid": {
          "description": "A flag indicating whether the credit card number meets its vendor's format requirements",
          "type": "boolean"
        },
        "validatedPaymentMethod": {
          "description": "Validated card type payment method. This object will be present if the requested payment method was successfully evaluated to be a credit card.",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardUniqueId": {
      "type": "object",
      "properties": {
        "creditCardUniqueIdInfo": {
          "description": "This object will be present if the requested card was successfully evaluated to be a credit card.",
          "$ref": "#/definitions/creditCardUniqueIdInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardUniqueIdInfoType": {
      "description": "Information about the credit card unique id.",
      "type": "object",
      "properties": {
        "actionType": {
          "description": "Based on Action Type credit card services will be called. By default it will call IFC service. e.g. IFC, Direct Vendor",
          "$ref": "#/definitions/creditCardServiceActionType"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "boolean"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "creditCardName": {
          "description": "Card name holder.",
          "type": "string"
        },
        "creditCardNumber": {
          "description": "Credit card number.",
          "type": "string"
        },
        "creditCardNumberLast4Digits": {
          "description": "Last 4 digits of a credit card.",
          "type": "string"
        },
        "creditCardType": {
          "description": "Credit card type.",
          "type": "string"
        },
        "errorCode": {
          "description": "Error code for a unique id request failure.",
          "type": "string"
        },
        "errorMessage": {
          "description": "Error message for a unique id request failure.",
          "type": "string"
        },
        "expirationDateString": {
          "description": "Expiration date in string representation.",
          "type": "string"
        },
        "successYn": {
          "description": "Success flag after requesting a unique id.",
          "type": "string"
        },
        "terminalId": {
          "description": "Terminal ID from where this request originated.",
          "type": "string",
          "maxLength": 128,
          "minLength": 0
        },
        "uniqueId": {
          "description": "Unique id of credit card.",
          "type": "string"
        }
      }
    },
    "creditCardUniqueIdRQ": {
      "description": "Request for fetching credit card unique id.",
      "type": "object",
      "properties": {
        "creditCardUniqueId": {
          "description": "Contains the unique id information request.",
          "$ref": "#/definitions/creditCardUniqueIdType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardUniqueIdType": {
      "description": "Information about the credit card unique id.",
      "type": "object",
      "properties": {
        "actionType": {
          "description": "Based on Action Type credit card services will be called. By default it will call IFC service. e.g. IFC, Direct Vendor",
          "$ref": "#/definitions/creditCardServiceActionType"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "boolean"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "creditCardName": {
          "description": "Card name holder.",
          "type": "string"
        },
        "creditCardNumber": {
          "description": "Credit card number.",
          "type": "string"
        },
        "creditCardNumberLast4Digits": {
          "description": "Last 4 digits of a credit card.",
          "type": "string"
        },
        "creditCardType": {
          "description": "Credit card type.",
          "type": "string"
        },
        "expirationDateString": {
          "description": "Expiration date in string representation.",
          "type": "string"
        },
        "terminalId": {
          "description": "Terminal ID from where this request originated.",
          "type": "string",
          "maxLength": 128,
          "minLength": 0
        },
        "uniqueId": {
          "description": "Unique id of credit card.",
          "type": "string"
        }
      }
    },
    "creditLimitType": {
      "type": "object",
      "properties": {
        "creditLimit": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "percentage": {
          "type": "number",
          "maximum": 100,
          "minimum": 0
        }
      }
    },
    "currencyAmountType": {
      "description": "A monetary value expressed with a currency code.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        }
      }
    },
    "currencyExchangeServiceTaxType": {
      "description": "Currency exchange service tax identification details",
      "type": "object",
      "properties": {
        "amountFrom": {
          "description": "Starting value of exchange equivalent range",
          "type": "number"
        },
        "amountTo": {
          "description": "End value of exchange equivalent range",
          "type": "number"
        },
        "baseAmount": {
          "description": "Base tax basis of local currency. This is normally configured to the resulting tax basis of the previous tax slab range.",
          "type": "number"
        },
        "code": {
          "description": "Currency exchange service tax code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotel": {
          "description": "Property associated with currency exchange service tax",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "maxServiceTax": {
          "description": "Maximimum service tax to be collected",
          "type": "number"
        },
        "minServiceTax": {
          "description": "Minimum service tax to be collected",
          "type": "number"
        },
        "percentage": {
          "description": "Percentage of local currency",
          "type": "number"
        }
      }
    },
    "currencyExchangeServiceTaxes": {
      "type": "object",
      "properties": {
        "currencyExchangeServiceTaxes": {
          "$ref": "#/definitions/currencyExchangeServiceTaxesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "currencyExchangeServiceTaxesType": {
      "description": "List of currency exchange service taxes",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/currencyExchangeServiceTaxType"
      }
    },
    "currencyExchangeType": {
      "description": "E-certificate conversion.",
      "type": "string",
      "enum": [
        "Cash",
        "Settlement",
        "Posting",
        "Check",
        "TACommission",
        "Membership",
        "Certificate"
      ]
    },
    "currencyHandlingType": {
      "description": "Simple Type for Posting Limit Types.",
      "type": "string",
      "enum": [
        "Local",
        "Foreign"
      ]
    },
    "currencyLimitType": {
      "description": "Type used for Currency Limits.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Indicates the curresponding limit for amount.",
          "type": "number"
        },
        "currencyType": {
          "description": "Indicates what type of currency it is Local/Foreign.",
          "$ref": "#/definitions/currencyHandlingType"
        },
        "postingLimit": {
          "description": "Indicated the Posting Limit.",
          "$ref": "#/definitions/postingLimitType"
        }
      }
    },
    "customChargeExemptionConfigType": {
      "description": "Provides information about Exemptions.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Exemption Desciption",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "endDate": {
          "description": "Date till the Exemption will be effective.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "exemption": {
          "description": "Exemption",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactiveDate": {
          "description": "Date when this Exemption is Inactive",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "includeInactive": {
          "description": "Indicator that tells whether to include inactive Custom Charge Ememptions.",
          "type": "boolean"
        },
        "percentage": {
          "description": "Exemption Percentage",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "propertyExemption": {
          "description": "Flag specifying if custom charge exemptions is property level or not.",
          "type": "boolean"
        },
        "startDate": {
          "description": "Date when this Exemption will be effective",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "customChargeExemptionsConfig": {
      "description": "Response object for fetching Custom Charge Exemptions.",
      "type": "object",
      "properties": {
        "customChargeExemptionsConfig": {
          "description": "Collection of Custom Charge Exemptions.",
          "$ref": "#/definitions/customChargeExemptionsConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customChargeExemptionsConfigCopy": {
      "type": "object",
      "properties": {
        "customChargeExemptionsConfigCopy": {
          "description": "List of the Custom Charge Exemptions to be copied.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/copyCustomChargeExemptionConfigType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customChargeExemptionsConfigToBeChanged": {
      "type": "object",
      "properties": {
        "customChargeExemptionsConfig": {
          "description": "Existing Custom Charge Exemptions to be changed.",
          "type": "array",
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/customChargeExemptionsConfigType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customChargeExemptionsConfigToBeCreated": {
      "type": "object",
      "properties": {
        "customChargeExemptionsConfig": {
          "description": "New one or more Custom Charge Exemptions to be created.",
          "type": "array",
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/customChargeExemptionsConfigType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customChargeExemptionsConfigType": {
      "description": "Holds Exemption details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customChargeExemptionConfigType"
      }
    },
    "customChargeRuleTypeOption": {
      "description": "The Custom Charge is only posted for the maximum number of nights of the stay.",
      "type": "string",
      "enum": [
        "MaxNoNights"
      ]
    },
    "customChargeRuleTypeType": {
      "description": "The rule types for custom charge.",
      "type": "object",
      "properties": {
        "customChargeRuleType": {
          "description": "Identifies the Custom Charge rule type.",
          "$ref": "#/definitions/customChargeRuleTypeOption"
        },
        "customChargeRuleTypeValue": {
          "description": "Identifies the Custom Charge rule type value.",
          "type": "integer"
        }
      }
    },
    "customChargeType": {
      "description": "This gives detailed information about Custom Charges.",
      "type": "object",
      "properties": {
        "active": {
          "description": "Flag specifying if custom charge code is active or not.",
          "type": "boolean"
        },
        "customChargeCode": {
          "description": "Code is used to identify the Custom Charge.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "customChargeRuleType": {
          "description": "Identifies the rule for which the Custom Charge code is specified.",
          "$ref": "#/definitions/customChargeRuleTypeType"
        },
        "dateRange": {
          "description": "Identifies the date range for which the Custom Charge code is specified.",
          "$ref": "#/definitions/dateRangeType"
        },
        "description": {
          "description": "Description for the Custom Charge code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "Identifies the hotel code for which the Custom Charge code is specified.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "price": {
          "description": "Identifies the price for which the Custom Charge code is specified.",
          "type": "number"
        },
        "priority": {
          "description": "Identifies the priority for which the Custom Charge code is specified.",
          "type": "integer"
        }
      }
    },
    "customChargesConfig": {
      "description": "Request object for creating new Custom Charges.",
      "type": "object",
      "properties": {
        "customCharges": {
          "description": "Custom Charges to be created.",
          "$ref": "#/definitions/customChargesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customChargesConfigDetails": {
      "description": "Response object for fetching Custom Charges.",
      "type": "object",
      "properties": {
        "customCharges": {
          "description": "Collection of Custom Charges codes.",
          "$ref": "#/definitions/customChargesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customChargesType": {
      "description": "Details for Custom Charges Codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customChargeType"
      }
    },
    "customCodeInformationBaseType": {
      "description": "Budget Forecast information for Custom segment code.",
      "type": "object",
      "properties": {
        "budgetValueInfo": {
          "description": "Budget Value information for a Custom code.",
          "$ref": "#/definitions/customValueInfoType"
        },
        "customCode": {
          "description": "Custom code for which budget forecast information is fetched.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "customCodeDescription": {
          "description": "Custom code description for Custom code.",
          "type": "string"
        },
        "forecastValueInfo": {
          "description": "Forecast Value information for a Custom code.",
          "$ref": "#/definitions/customValueInfoType"
        }
      }
    },
    "customCodeInformationType": {
      "description": "Budget Forecast information for Custom segment code.",
      "type": "object",
      "properties": {
        "aBVarianceInfo": {
          "description": "Actual Budget Value variance for a Custom code.",
          "$ref": "#/definitions/customVarianceInfoType"
        },
        "aFVarianceInfo": {
          "description": "Actual Forecast Value variance for a Custom code.",
          "$ref": "#/definitions/customVarianceInfoType"
        },
        "actualValueInfo": {
          "description": "Actual Value information for a Custom code.",
          "$ref": "#/definitions/customValueInfoType"
        },
        "budgetValueInfo": {
          "description": "Budget Value information for a Custom code.",
          "$ref": "#/definitions/customValueInfoType"
        },
        "customCode": {
          "description": "Custom code for which budget forecast information is fetched.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "customCodeDescription": {
          "description": "Custom code description for Custom code.",
          "type": "string"
        },
        "fBVarianceInfo": {
          "description": "Forecast Budget Value variance for a Custom code.",
          "$ref": "#/definitions/customVarianceInfoType"
        },
        "forecastValueInfo": {
          "description": "Forecast Value information for a Custom code.",
          "$ref": "#/definitions/customValueInfoType"
        }
      }
    },
    "customCodeTotalInformationType": {
      "description": "Budget Forecast information for Custom segment.",
      "type": "object",
      "properties": {
        "aBVarianceTotalInfo": {
          "description": "Actual Budget Value variance for a Custom code.",
          "$ref": "#/definitions/customVarianceInfoType"
        },
        "aFVarianceTotalInfo": {
          "description": "Actual Forecast Value variance for a Custom code.",
          "$ref": "#/definitions/customVarianceInfoType"
        },
        "actualTotalInfo": {
          "description": "Actual Value information for a Custom code.",
          "$ref": "#/definitions/customValueInfoType"
        },
        "budgetTotalInfo": {
          "description": "Budget Value information for a Custom code.",
          "$ref": "#/definitions/customValueInfoType"
        },
        "fBVarianceTotalInfo": {
          "description": "Forecast Budget Value variance for a Custom code.",
          "$ref": "#/definitions/customVarianceInfoType"
        },
        "forecastTotalInfo": {
          "description": "Forecast Value information for a Custom code.",
          "$ref": "#/definitions/customValueInfoType"
        }
      }
    },
    "customNumberConfigDetails": {
      "description": "Response object for fetching custom number configurations.",
      "type": "object",
      "properties": {
        "customNumberConfigurationList": {
          "description": "Collection of custom number configurations.",
          "$ref": "#/definitions/customNumberConfigurationListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customNumberConfiguration": {
      "description": "Request object to create custom number configuration.",
      "type": "object",
      "properties": {
        "customNumberConfiguration": {
          "description": "Custom number configuration to be created.",
          "$ref": "#/definitions/customNumberConfigurationType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customNumberConfigurationAreaType": {
      "description": "Receipt",
      "type": "string",
      "enum": [
        "Folio",
        "Receipt"
      ]
    },
    "customNumberConfigurationListType": {
      "description": "Details about custom number configuration.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customNumberConfigurationType"
      }
    },
    "customNumberConfigurationType": {
      "description": "Custom number configuration details.",
      "type": "object",
      "properties": {
        "area": {
          "description": "The area where this custom number will be used.",
          "$ref": "#/definitions/customNumberConfigurationAreaType"
        },
        "code": {
          "description": "Custom number configuration code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "condition": {
          "description": "The condition to be met to generate and apply the custom number.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "description": {
          "description": "The description of the custom number configuration code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "formula": {
          "description": "The formula to generate the custom number.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel context for the custom number configuration.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inActive": {
          "description": "Indicator that tells whether the configuration is active or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "timeSpan": {
          "description": "The begin and end date of the custom number configuration.",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "customNumberTemplateConfigurationListType": {
      "description": "Details about template custom number configuration.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customNumberTemplateConfigurationType"
      }
    },
    "customNumberTemplateConfigurationType": {
      "description": "Custom number configuration details.",
      "type": "object",
      "properties": {
        "area": {
          "description": "The area where this custom number will be used.",
          "$ref": "#/definitions/customNumberConfigurationAreaType"
        },
        "code": {
          "description": "Custom number configuration code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "condition": {
          "description": "The condition to be met to generate and apply the custom number.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "description": {
          "description": "The description of the custom number configuration code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "formula": {
          "description": "The formula to generate the custom number.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "inActive": {
          "description": "Indicator that tells whether the configuration is active or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "timeSpan": {
          "description": "The begin and end date of the custom number configuration.",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "customNumberType": {
      "description": "Custom number",
      "type": "string",
      "maxLength": 200,
      "minLength": 0
    },
    "customTaxTypeType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "customTaxTypesCriteria": {
      "description": "Request object for creating Custom Tax Types.",
      "type": "object",
      "properties": {
        "customTaxTypes": {
          "description": "Custom Tax Types to be created.",
          "$ref": "#/definitions/customTaxTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customTaxTypesDetails": {
      "description": "Response object for fetching Custom Tax Types.",
      "type": "object",
      "properties": {
        "customTaxTypes": {
          "description": "Collection of Custom Tax Types.",
          "$ref": "#/definitions/customTaxTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customTaxTypesToBeChanged": {
      "description": "Request object for changing Custom Tax Types.",
      "type": "object",
      "properties": {
        "customTaxTypes": {
          "description": "Custom Tax Types to be changed.",
          "$ref": "#/definitions/customTaxTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customTaxTypesType": {
      "description": "List of Custom Tax Types.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customTaxTypeType"
      }
    },
    "customValueInfoType": {
      "description": "Value information for a CUSTOM segment code. Holds total and monthly Value information.",
      "type": "object",
      "properties": {
        "monthlyValueInfo": {
          "description": "Value information for each month for CUSTOM segment code.",
          "type": "array",
          "maxItems": 12,
          "items": {
            "$ref": "#/definitions/monthlyValueInfoType"
          }
        },
        "totalValue": {
          "description": "Total Value for CUSTOM segment code.",
          "type": "number"
        }
      }
    },
    "customVarianceInfoType": {
      "description": "Monthly Value Variance information.",
      "type": "array",
      "maxItems": 12,
      "items": {
        "$ref": "#/definitions/monthlyCustomVarianceInfoType"
      }
    },
    "cycleFiscalPeriodType": {
      "description": "Fiscal Year Cycle Period creation type.",
      "type": "object",
      "properties": {
        "cycle": {
          "description": "Type of Cycle Period to create.",
          "$ref": "#/definitions/cyclePeriodType"
        },
        "hotelId": {
          "description": "Resort for which the Period is defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "periodPrefix": {
          "description": "Prefix added to all period to be created",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "yearId": {
          "description": "Id of the Year.",
          "type": "number"
        }
      }
    },
    "cycleFiscalPeriodsType": {
      "description": "List of Cycle Fiscal Periods.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cycleFiscalPeriodType"
      }
    },
    "cyclePeriodType": {
      "description": "Signifies Calendar Period",
      "type": "string",
      "enum": [
        "FourWeeks",
        "FourFourFiveWeeks",
        "FourFiveFourWeeks",
        "FiveFourFourWeeks",
        "CalendarMonth"
      ]
    },
    "dailyPlanCodeType": {
      "description": "Generic Type to specify unique/primary id for the code. mostly used for Hotel level configuration codes removal request.",
      "type": "object",
      "properties": {
        "arrangementId": {
          "description": "Primay key of arrangement codes",
          "type": "number"
        },
        "code": {
          "description": "Configuration code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Folio Group Code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "hotelId": {
          "description": "Hotel where the code is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "revenue": {
          "description": "specify whether the arrangement postings are classed as revenue.",
          "type": "boolean"
        },
        "taxTypeCode": {
          "description": "information about the tax type code linked to the folio arrangment Code.",
          "type": "string"
        },
        "transactionCodes": {
          "description": "Transaction codes that are associated to the folio grouping codes.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "dailyPlanCodes": {
      "type": "object",
      "properties": {
        "dailyPlanCodes": {
          "description": "Collection of daily plan codes.",
          "$ref": "#/definitions/dailyPlanCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "dailyPlanCodesType": {
      "description": "Details for daily plan code along with associated transaction codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dailyPlanCodeType"
      }
    },
    "dateRangeType": {
      "description": "Date Range with Start and End dates.",
      "type": "object",
      "properties": {
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "dateTimeSpanType": {
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "type": "object",
      "properties": {
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "decodedCard": {
      "type": "object",
      "properties": {
        "creditCard": {
          "description": "This object will be present if the requested card was successfully evaluated to be a credit card.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "defaultPaymentMethodRule": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "rule": {
          "description": "Payment method default rule information.",
          "$ref": "#/definitions/paymentMethodValidationRuleType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "definedNameFormatType": {
      "type": "object",
      "properties": {
        "definedFormatId": {
          "description": "ID of the defined name format.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "expression": {
          "description": "Expression of the defined name format It basically contains all formats that are being set.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "expressionTable": {
          "description": "Table from which the info will be retrieved.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code where the defined name format is associated.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "logo": {
          "description": "Logo of the hotel interface.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "deleteSegmentCodeBudgetInformationType": {
      "description": "Holds segment and segment code information to delete.",
      "type": "object",
      "properties": {
        "cateringCodeInformation": {
          "description": "Catering Segment code information to delete.",
          "$ref": "#/definitions/deleteSegmentCodeInfoType"
        },
        "customCodeInformation": {
          "description": "Custom Segment code information to delete.",
          "$ref": "#/definitions/deleteSegmentCodeInfoType"
        },
        "hotelId": {
          "description": "Opera Hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketCodeInformation": {
          "description": "Market Segment code information to delete.",
          "$ref": "#/definitions/deleteSegmentCodeInfoType"
        },
        "rateCodeInformation": {
          "description": "Rate Segment code information to delete.",
          "$ref": "#/definitions/deleteSegmentCodeInfoType"
        },
        "transactionCodeInformation": {
          "description": "Transaction Segment code information to delete.",
          "$ref": "#/definitions/deleteSegmentCodeInfoType"
        },
        "year": {
          "description": "Year of revenue.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "deleteSegmentCodeInfoType": {
      "description": "Holds segment code information to delete.",
      "type": "object",
      "properties": {
        "budget": {
          "description": "Flag to include Budget revenue/nights information.",
          "type": "boolean"
        },
        "budgetMonth": {
          "description": "holds budget month information if daily information of a month needs to be deleted.",
          "$ref": "#/definitions/monthNoType"
        },
        "deleteInformation": {
          "description": "holds budget information type to delete.",
          "$ref": "#/definitions/budgetInfoDeleteType"
        },
        "forecast": {
          "description": "Flag to include Forecast revenue/nights information.",
          "type": "boolean"
        },
        "segment": {
          "description": "holds segment name of which segment code belongs to.",
          "$ref": "#/definitions/segmentNameType"
        },
        "segmentCode": {
          "description": "segment code to delete budget information.",
          "$ref": "#/definitions/codeListType"
        },
        "segmentCodeGroup": {
          "description": "segment code group.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "depositTypeType": {
      "description": "Represents the Folio Deposit Type.",
      "type": "string",
      "enum": [
        "Receipts",
        "Folios"
      ]
    },
    "doNotPostGenerateType": {
      "description": "Existance of this type indicates that the generate will not be effective. This is mainly used on Tax Type based generates rule.",
      "type": "object"
    },
    "emailInfoType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "emailType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "entityType": {
      "description": "Indicates the rule is based on Minutes associated with the charge.",
      "type": "string",
      "enum": [
        "ThresholdCount",
        "ThresholdQuantity",
        "ThresholdMinutes"
      ]
    },
    "errorInstance": {
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "title": "Error Instance Details",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "exceptionDetailType": {
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "title": "Error Detail",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "exchangeRateType": {
      "description": "Exchange rate configuration type.",
      "type": "object",
      "properties": {
        "baseCurrency": {
          "description": "Exchange rate base currency.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "beginDate": {
          "description": "Date on which the rate is to become active.",
          "type": "string",
          "format": "date-time"
        },
        "buyCommission": {
          "description": "Percentage of the amount that is to be a commission for the currency buy operation.",
          "type": "number"
        },
        "buyRate": {
          "description": "Buy Rate for foreign currency.",
          "type": "number"
        },
        "comment": {
          "description": "Comments associated with the exchange rate.",
          "type": "string"
        },
        "currency": {
          "description": "Currency code.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "exchangeType": {
          "description": "Type for exchange calculation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/currencyExchangeType"
          }
        },
        "hotelId": {
          "description": "Property where exchange rate is set.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sellCommission": {
          "description": "Percentage of the amount that is to be a commission for the currency sell operation.",
          "type": "number"
        },
        "sellRate": {
          "description": "Sell Rate for foreign currency.",
          "type": "number"
        },
        "status": {
          "description": "Status past, present, or future.",
          "$ref": "#/definitions/statusTypes"
        }
      }
    },
    "exchangeRates": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "rates": {
          "description": "Exchange Rates to be Set.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/exchangeRateType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "exchangeRatesDetails": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "rates": {
          "description": "Collection of exchange rates and their information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/exchangeRateType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "expenseArrangementCodeType": {
      "description": "Generic Type to specify unique/primary id for the code. mostly used for Hotel level configuration codes removal request.",
      "type": "object",
      "properties": {
        "arrangementId": {
          "description": "Primay key of arrangement codes",
          "type": "number"
        },
        "code": {
          "description": "Configuration code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Folio Group Code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "hotelId": {
          "description": "Hotel where the code is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "revenue": {
          "description": "specify whether the arrangement postings are classed as revenue.",
          "type": "boolean"
        },
        "taxTypeCode": {
          "description": "information about the tax type code linked to the folio arrangment Code.",
          "type": "string"
        },
        "transactionCodes": {
          "description": "Transaction codes that are associated to the folio grouping codes.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "expenseArrangementCodes": {
      "type": "object",
      "properties": {
        "expenseArrangementCodes": {
          "description": "Collection of expense arrangement codes.",
          "$ref": "#/definitions/expenseArrangementCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "expenseArrangementCodesCopy": {
      "type": "object",
      "properties": {
        "expenseArrangementCode": {
          "description": "List of the expense arrangement codes to be copied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "expenseArrangementCodesType": {
      "description": "Details for expense arrangement code along with associated transaction codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/expenseArrangementCodeType"
      }
    },
    "exportMappingLinkedCodeType": {
      "description": "Details of linked code.",
      "type": "object",
      "properties": {
        "defaultMappedValue": {
          "description": "Default value.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "exportMappingCode": {
          "description": "Mapping code attached to linked code.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "exportMappingId": {
          "description": "Mapping id associated with linked code.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "linkedCode": {
          "description": "Linked code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "lovName": {
          "description": "Name of the LOV group to be used.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "mappedValue": {
          "description": "Linked code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "mappingCodeDescription": {
          "description": "Description of the export mapping code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "mappingTypeDescription": {
          "description": "Description of the export mapping type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "externalReferenceType": {
      "description": "This type contains unique information of external reference.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique ID of external reference.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "ID context for external reference.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "ID extension for external reference.",
          "type": "integer"
        }
      }
    },
    "externalReferencesType": {
      "description": "This type contains unique information of external reference.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/externalReferenceType"
      }
    },
    "facilityCodeType": {
      "description": "Facility Housekeeping Code, its description and quantity.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Facility code value.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Facility Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "quantity": {
          "description": "Signifies the quantity.",
          "type": "integer"
        }
      }
    },
    "facilityCodesType": {
      "description": "List of the facility codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/facilityCodeType"
      }
    },
    "facilityTaskType": {
      "description": "Information regarding facility task on a reservation.",
      "type": "object",
      "properties": {
        "date": {
          "description": "The Date on which the task is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "supplies": {
          "description": "Supplies associated with the task.",
          "$ref": "#/definitions/facilityCodesType"
        },
        "task": {
          "description": "The Task Code.",
          "$ref": "#/definitions/housekeepingTaskCodeType"
        }
      }
    },
    "fiscalCommandType": {
      "description": "Fiscal Command details.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Fiscal Command description that is only used during a fetch.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "fiscalCommandCode": {
          "description": "Fiscal Command.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "fiscalPartnerCodes": {
          "description": "Configured Fiscal Partners of fiscal Command.",
          "$ref": "#/definitions/fiscalPartnerCodeListType"
        },
        "hotelId": {
          "description": "Unique code of the hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "A flag that determines whether to fetch active records or inactive records.",
          "type": "boolean"
        }
      }
    },
    "fiscalCommandsDetails": {
      "description": "Response object for fetching Fiscal Commands.",
      "type": "object",
      "properties": {
        "fiscalPartners": {
          "$ref": "#/definitions/fiscalCommandsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalCommandsType": {
      "description": "List of FiscalCommands.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fiscalCommandType"
      }
    },
    "fiscalFolioParameterType": {
      "description": "Provides information about the Fiscal Folio Parameter.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Fiscal Folio Parameter.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Fiscal Folio Parameter.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "internal": {
          "description": "Indicates whether the Fiscal Folio Parameter is user created or from seed data.",
          "type": "boolean"
        },
        "partner": {
          "description": "Fiscal folio parameter associated with Partner.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "value": {
          "description": "Parameter value of the Fiscal Folio Parameter.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "fiscalFolioParameters": {
      "type": "object",
      "properties": {
        "fiscalFolioParameters": {
          "description": "Collection of Fiscal Folio Parameter configurations.",
          "$ref": "#/definitions/fiscalFolioParametersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalFolioParametersCopy": {
      "description": "Request object for copying Fiscal Folio Parameters to other hotel code(s).",
      "type": "object",
      "properties": {
        "fiscalFolioParameter": {
          "description": "Fiscal Folio Parameter Configurations to be copied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericHotelCodeCodeType"
          }
        },
        "fiscalFolioParameters": {
          "description": "List of the Fiscal Folio Parameters to be copied to other hotel code(s).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/copyFiscalFolioParametersType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalFolioParametersType": {
      "description": "Holds Fiscal Folio Parameter details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fiscalFolioParameterType"
      }
    },
    "fiscalGuestTypeType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "fiscalGuestTypesCriteria": {
      "description": "Request object for creating Fiscal Guest Types.",
      "type": "object",
      "properties": {
        "fiscalGuestTypes": {
          "description": "Fiscal Guest Typesto be created.",
          "$ref": "#/definitions/fiscalGuestTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalGuestTypesDetails": {
      "description": "Response object for fetching Fiscal Guest Types.",
      "type": "object",
      "properties": {
        "fiscalGuestTypes": {
          "description": "Collection of Fiscal Guest Types.",
          "$ref": "#/definitions/fiscalGuestTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalGuestTypesToBeChanged": {
      "description": "Request object for changing Fiscal Guest Types.",
      "type": "object",
      "properties": {
        "fiscalGuestTypes": {
          "description": "Fiscal Guest Typesto be changed.",
          "$ref": "#/definitions/fiscalGuestTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalGuestTypesType": {
      "description": "List of Fiscal Guest Types.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fiscalGuestTypeType"
      }
    },
    "fiscalPartnerCodeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fiscalPartnerCodeType"
      }
    },
    "fiscalPartnerCodeType": {
      "description": "Used for fiscal partner codes. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
      "type": "string",
      "maxLength": 100,
      "minLength": 0
    },
    "fiscalPartnerType": {
      "description": "Fiscal partner Type",
      "type": "object",
      "properties": {
        "fiscalFolioProfile": {
          "description": "Payment types associated with Fiscal Partner.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "fiscalPayloadTypes": {
          "description": "Types of payload supported by the Fiscal Partner.",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/fiscalPayloadType"
          }
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "partnerCode": {
          "description": "Fiscal Partner Code.",
          "$ref": "#/definitions/fiscalPartnerCodeType"
        },
        "paymentTypes": {
          "description": "Payment types associated with Fiscal Partner.",
          "$ref": "#/definitions/codeListType"
        },
        "priority": {
          "description": "Priority order for processing.",
          "type": "integer"
        }
      }
    },
    "fiscalPartnersDetails": {
      "description": "Response object for fetching Fiscal Partners.",
      "type": "object",
      "properties": {
        "fiscalPartners": {
          "$ref": "#/definitions/fiscalPartnersType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalPartnersType": {
      "description": "Details of Fiscal Partners.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fiscalPartnerType"
      }
    },
    "fiscalPayloadType": {
      "type": "string",
      "enum": [
        "CheckOut",
        "FolioGeneration"
      ]
    },
    "fiscalPeriodEditType": {
      "description": "Values of the old primary key.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Resort for which the Period is defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "newPeriod": {
          "description": "Edited values of the fiscal period.",
          "$ref": "#/definitions/fiscalPeriodType"
        },
        "startDate": {
          "description": "Start Date of the Period",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "yearId": {
          "description": "Id of the Year.",
          "type": "number"
        }
      }
    },
    "fiscalPeriodType": {
      "description": "Fiscal Period Type",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the current Period.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Period.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "endDate": {
          "description": "End Date of the Period.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotelId": {
          "description": "Resort for which the Period is defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "periodType": {
          "description": "Type of the Period.",
          "$ref": "#/definitions/yearTypeType"
        },
        "startDate": {
          "description": "Start Date of the Period",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "year": {
          "description": "Year for the current Period.",
          "type": "number"
        },
        "yearId": {
          "description": "Id of the Year.",
          "type": "number"
        }
      }
    },
    "fiscalPeriods": {
      "type": "object",
      "properties": {
        "cycleFiscalPeriods": {
          "description": "Details of the Cycle Fiscal Periods",
          "type": "object",
          "properties": {
            "cycleFiscalPeriods": {
              "description": "Details of the Cycle Fiscal Periods",
              "$ref": "#/definitions/cycleFiscalPeriodsType"
            },
            "forceDelete": {
              "description": "If true all overlapping periods will be deleted. No further confirmation required.",
              "type": "boolean"
            }
          }
        },
        "fiscalPeriods": {
          "description": "Details of the Fiscal Periods to be created",
          "$ref": "#/definitions/fiscalPeriodsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalPeriodsEdit": {
      "type": "object",
      "properties": {
        "fiscalPeriods": {
          "description": "Details of the Fiscal Periods to edit",
          "$ref": "#/definitions/fiscalPeriodsEditType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalPeriodsEditType": {
      "description": "List of Fiscal Periods.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fiscalPeriodEditType"
      }
    },
    "fiscalPeriodsInfo": {
      "type": "object",
      "properties": {
        "fiscalPeriods": {
          "description": "Collection of Fiscal Periods",
          "$ref": "#/definitions/fiscalPeriodsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalPeriodsType": {
      "description": "List of Fiscal Periods.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fiscalPeriodType"
      }
    },
    "fiscalRegionType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "fiscalRegionsCriteria": {
      "description": "Request object for creating Fiscal Regions.",
      "type": "object",
      "properties": {
        "fiscalRegions": {
          "description": "Fiscal Regions to be created.",
          "$ref": "#/definitions/fiscalRegionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalRegionsDetails": {
      "description": "Response object for fetching Fiscal Regions.",
      "type": "object",
      "properties": {
        "fiscalRegions": {
          "description": "Collection of Fiscal Regions.",
          "$ref": "#/definitions/fiscalRegionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalRegionsToBeChanged": {
      "description": "Request object for changing Fiscal Regions.",
      "type": "object",
      "properties": {
        "fiscalRegions": {
          "description": "Fiscal Regions to be changed.",
          "$ref": "#/definitions/fiscalRegionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalRegionsType": {
      "description": "List of Fiscal Regions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fiscalRegionType"
      }
    },
    "fiscalResponseType": {
      "description": "Provides information which is used for fiscal response processing.",
      "type": "object",
      "properties": {
        "folioSeqId": {
          "description": "Fiscal Folio sequence ID stored in queue table.",
          "type": "integer"
        },
        "retryFiscalPrinting": {
          "description": "Flag to do the retrieval process of fiscal printing or not.",
          "type": "boolean"
        }
      }
    },
    "fiscalYearType": {
      "description": "Fiscal Year Type",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the Year.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "endDate": {
          "description": "End Date of the Year.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotelId": {
          "description": "Resort for which the Year is defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "startDate": {
          "description": "Start Date of the Year.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "year": {
          "description": "Number of the Year.",
          "type": "number"
        },
        "yearId": {
          "description": "Unique id of the Year.",
          "type": "number"
        },
        "yearType": {
          "description": "Type of the Year.",
          "$ref": "#/definitions/yearTypeType"
        }
      }
    },
    "fiscalYears": {
      "type": "object",
      "properties": {
        "fiscalYears": {
          "description": "Collection of Fiscal Years",
          "$ref": "#/definitions/fiscalYearsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalYearsType": {
      "description": "List of Fiscal Years.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fiscalYearType"
      }
    },
    "fixedChargeDetailType": {
      "description": "Fixed charge amount could be specified by flat fee or be a percentage of the rate amount.",
      "type": "object",
      "properties": {
        "article": {
          "description": "Holds related article code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "chargeAmount": {
          "description": "Price of the product.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "Percentage of the rate amount.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "quantity": {
          "description": "Quantity of the product.",
          "type": "integer"
        },
        "roomNights": {
          "description": "Holds number of comp or cash room night to allocate.",
          "type": "integer"
        },
        "supplement": {
          "description": "Additional information regarding the fixed charge.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transaction": {
          "description": "Transaction code and description of a fixed charge.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "fixedChargeFrequencyType": {
      "description": "Yearly.",
      "type": "string",
      "enum": [
        "O",
        "D",
        "W",
        "M",
        "Q",
        "Y"
      ]
    },
    "fixedChargeScheduleType": {
      "description": "Holds schedule of fixed charge.",
      "type": "object",
      "properties": {
        "dateToExecute": {
          "description": "Date of when to execute yearly fixed charge. Applicable when frequency is Yearly.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "dayToExecute": {
          "description": "Day of when to execute fixed charge. Applicable when frequency is Daily or Weekly.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency of a fixed charge.",
          "$ref": "#/definitions/fixedChargeFrequencyType"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "fixedChargeType": {
      "description": "Holds fixed charge information.",
      "type": "object",
      "properties": {
        "charge": {
          "description": "Holds specific details of fixed charge.",
          "$ref": "#/definitions/fixedChargeDetailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "schedule": {
          "description": "Holds schedule of fixed charge.",
          "$ref": "#/definitions/fixedChargeScheduleType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "fixedChargesType": {
      "description": "Holds fixed charge detail.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fixedChargeType"
      }
    },
    "flatAmtGenerateType": {
      "description": "Defines Flat Amount rule for generates.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Flat Amount of the generate.",
          "type": "number"
        }
      }
    },
    "folioArrangementCodeType": {
      "description": "Generic Type to specify unique/primary id for the code. mostly used for Hotel level configuration codes removal request.",
      "type": "object",
      "properties": {
        "arrangementId": {
          "description": "Primay key of arrangement codes",
          "type": "number"
        },
        "code": {
          "description": "Configuration code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Folio Group Code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "hotelId": {
          "description": "Hotel where the code is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "revenue": {
          "description": "specify whether the arrangement postings are classed as revenue.",
          "type": "boolean"
        },
        "taxTypeCode": {
          "description": "information about the tax type code linked to the folio arrangment Code.",
          "type": "string"
        },
        "transactionCodes": {
          "description": "Transaction codes that are associated to the folio grouping codes.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "folioArrangementCodes": {
      "type": "object",
      "properties": {
        "folioArrangementCodes": {
          "description": "Collection of folio arrangement codes.",
          "$ref": "#/definitions/folioArrangementCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioArrangementCodesCopy": {
      "type": "object",
      "properties": {
        "folioArrangementCode": {
          "description": "List of folio arrangement codes to be copied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioArrangementCodesType": {
      "description": "Details for folio arrangement code along with associated transaction codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioArrangementCodeType"
      }
    },
    "folioCopyLegend": {
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to fetch folio copy legends description",
          "$ref": "#/definitions/folioCopyLegendType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioCopyLegendType": {
      "description": "Search criteria to fetch folio copy legends information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Term code to be searched.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Term description",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "languageCode": {
          "description": "Language code to be searched.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "folioCopyLegends": {
      "type": "object",
      "properties": {
        "legends": {
          "$ref": "#/definitions/folioCopyLegendsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioCopyLegendsType": {
      "description": "Details about folio copy legends.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioCopyLegendType"
      }
    },
    "folioPrintQueueType": {
      "description": "Folio Print queue identification details",
      "type": "object",
      "properties": {
        "billNumber": {
          "description": "Last folio number",
          "type": "integer"
        },
        "fiscalBillNumber": {
          "description": "Last fiscal bill number",
          "type": "integer"
        },
        "hotelId": {
          "description": "Property associated with folio print queue",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates whether the folio print queue is inactive or not.",
          "type": "boolean"
        },
        "incrementalValue": {
          "description": "Incremental Value",
          "type": "integer"
        },
        "queueName": {
          "description": "Folio print queue name",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        }
      }
    },
    "folioPrintQueues": {
      "type": "object",
      "properties": {
        "folioPrintQueues": {
          "$ref": "#/definitions/folioPrintQueuesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioPrintQueuesType": {
      "description": "List of folio print queues",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioPrintQueueType"
      }
    },
    "folioReportGroupType": {
      "description": "The Folio Report Group name. The folio report will be defined under each group and based on where the folio has to be printed, Opera will pick up the correct folio report name to print.",
      "type": "string",
      "enum": [
        "Guest",
        "Group",
        "AccountsReceivables",
        "PasserBy",
        "PostIt",
        "Expense",
        "CorrectionHeader"
      ]
    },
    "folioReportType": {
      "description": "Folio Report associated with the Folio Type Name. Includes Name Of the folio report,the Group for Folio Type Name belongs to and the Language Code for which the folio is effective.",
      "type": "object",
      "properties": {
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "reportGroup": {
          "description": "Report group to which the report is being added.",
          "$ref": "#/definitions/folioReportGroupType"
        },
        "reportName": {
          "description": "Name of the .REP or .RDF file. .REP or .RDF extension is not needed.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "folioReportsType": {
      "description": "Information details of the Folio Reports associated with Folio Type Name.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioReportType"
      }
    },
    "folioStatusType": {
      "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
      "type": "string",
      "enum": [
        "Deposit",
        "Void",
        "Ok",
        "Zero",
        "Compress",
        "Converted",
        "Internal"
      ]
    },
    "folioTextsType": {
      "description": "This stores the description for the type of tax calculation especially with tax exemption, etc.",
      "type": "array",
      "maxItems": 2,
      "items": {
        "type": "object",
        "properties": {
          "row": {
            "description": "Row number of the additional text.",
            "type": "integer"
          },
          "text": {
            "description": "Additional text field to display on the folio.",
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          }
        }
      }
    },
    "folioTypeConfigType": {
      "description": "Information detail for uniquely identifying a Folio Type Name.",
      "type": "object",
      "properties": {
        "aRFolio": {
          "description": "Folio type is Account Receivable or not, used in certain countries.",
          "type": "boolean"
        },
        "allowCreditFolio": {
          "description": "Allowed to create credit folio on existing folio type if user gives the credit on the folio otherwise user is not allowed to give a credit, used in certain countries.",
          "type": "boolean"
        },
        "allowFolioCompression": {
          "description": "Allowed to create compressed folio on existing folio type if user tries to compress on the folio otherwise user is not allowed to compress, used in certain countries.",
          "type": "boolean"
        },
        "allowFolioConversion": {
          "description": "Folio type used for Converting the Folios, used in certain countries.",
          "type": "boolean"
        },
        "associatedCreditFolioType": {
          "description": "Stores the Linked Associated Credit Folio Type.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "cityLedgerFolio": {
          "description": "Folio type is used for City Ledger bills or not or not, used in certain countries.",
          "type": "boolean"
        },
        "code": {
          "description": "Configuration code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "compressedFolio": {
          "description": "Folio type is Compressible or not, indicates that the folio which was created is a Compressed Folio based on the AllowFolioCompression flag, used in certain countries.",
          "type": "boolean"
        },
        "correctionFolio": {
          "description": "Folio type is the correction or not, used in certain countries.",
          "type": "boolean"
        },
        "creditFolio": {
          "description": "Folio type used for Credit Folio or not, indicates that the folio which was created is a Credit Folio based on the AllowCreditFolio flag , used in certain countries.",
          "type": "boolean"
        },
        "debitFolio": {
          "description": "Folio type is a debit folio or not, used in certain countries.",
          "type": "boolean"
        },
        "depositFolio": {
          "description": "Folio type is a deposit folio type or not, used in certain countries.",
          "type": "boolean"
        },
        "documentCode": {
          "description": "Document code which can be defined on each folio type, which is an alphanumeric value can be used on Invoices or other documents for tax purposes. E.g. In case of Portugal, this value is combined with Folio Number for ATCUD requirements.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "fiscalFolio": {
          "description": "Folio Type is fiscal or not, used in certain countries.",
          "type": "boolean"
        },
        "folioReports": {
          "description": "Collection of reports associated with a Folio Type Name.",
          "$ref": "#/definitions/folioReportsType"
        },
        "folioUsed": {
          "description": "Flag to indicate if the Folio Type has been used to create a Folio.",
          "type": "boolean"
        },
        "guestClassification": {
          "description": "Type of guest Individual, Professional, etc, used in certain countries.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel where the code is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "informationFolio": {
          "description": "Used only for Information and Pro-forma folios in certain countries.",
          "type": "boolean"
        },
        "internalFolio": {
          "description": "Folio type is internal or not, used in certain countries.",
          "type": "boolean"
        },
        "manualFolio": {
          "description": "Folio type has a manual folio type associated or not, used in certain countries.",
          "type": "boolean"
        },
        "profileAttributes": {
          "description": "Determines the Folio Type based on attributes of the Payee Profile.",
          "$ref": "#/definitions/folioTypeProfileAttributes"
        },
        "sendFiscalFolio": {
          "description": "Adding this flag at folio type level would decide to send fiscal folio (generate payload) or not.",
          "type": "boolean"
        },
        "simpleFolio": {
          "description": "Folio type is a simple folio type or not, used in certain countries.",
          "type": "boolean"
        },
        "supplementalFolio": {
          "description": "Folio type is a supplemental folio ( debit bill ) type or not, used in certain countries.",
          "type": "boolean"
        },
        "taxFolio": {
          "description": "To indicate if the folio type is to be used for a tax folio. Used in Greece Country.",
          "type": "boolean"
        },
        "taxType": {
          "description": "Name Tax Type associated with folio type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionServiceType": {
          "description": "Identify the service type of transaction, used in certain countries.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "useNationality": {
          "description": "Folio type is used for Local national or foreigner, used in certain countries.",
          "type": "boolean"
        },
        "useOriginalFolioStayDetails": {
          "description": "Use original folio stay details on the folio which was created using the folio type.",
          "type": "boolean"
        },
        "useTaxNumber": {
          "description": "Folio type is used for profiles which have a tax number or not, used in certain countries.",
          "type": "boolean"
        }
      }
    },
    "folioTypeLegendMappingConfigCriteria": {
      "description": "Request object to create folio type legend mapping information.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to create folio type legend mapping.",
          "$ref": "#/definitions/folioTypeLegendMappingConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTypeLegendMappingConfigStatus": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTypeLegendMappingConfigToBeChanged": {
      "description": "Request object to edit folio type legend mapping information.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to edit folio type legend mapping.",
          "$ref": "#/definitions/folioTypeLegendMappingConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTypeLegendMappingConfigType": {
      "description": "Folio type legened mapping information.",
      "type": "object",
      "properties": {
        "folioType": {
          "description": "Folio type attached to the legend.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "folioTypeDescription": {
          "description": "Folio type description attached to the legend.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property associated with folio type legend mapping",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "legendCode": {
          "description": "Legend code to which folio types attached.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "folioTypeLegendMappingsConfigDetails": {
      "description": "Response object for fetch folio type legend mapping.",
      "type": "object",
      "properties": {
        "legends": {
          "$ref": "#/definitions/folioTypeLegendMappingsConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTypeLegendMappingsConfigType": {
      "description": "Details about folio type legened mapping.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioTypeLegendMappingConfigType"
      }
    },
    "folioTypeProfileAttributes": {
      "description": "Profile is not configured with Tax Id.",
      "type": "string",
      "enum": [
        "WithoutTaxId"
      ]
    },
    "folioTypesConfig": {
      "type": "object",
      "properties": {
        "folioTypes": {
          "description": "Collection of Folio Type Name details.",
          "$ref": "#/definitions/folioTypesConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTypesConfigType": {
      "description": "Information details of the Folio Type Names.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioTypeConfigType"
      }
    },
    "foreignCurrencies": {
      "type": "object",
      "properties": {
        "foreignCurrencies": {
          "description": "Collection of Foreign Currencies",
          "$ref": "#/definitions/foreignCurrenciesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "foreignCurrenciesType": {
      "description": "List of the Foreign Currencies to be configured or fetched",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/foreignCurrencyType"
      }
    },
    "foreignCurrencyType": {
      "description": "Provides information about the Foreign Currency Code.",
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "Code of the Foreign Currency",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyLimits": {
          "description": "Provides information about various limits on the Currency Code",
          "type": "array",
          "maxItems": 6,
          "items": {
            "$ref": "#/definitions/currencyLimitType"
          }
        },
        "decimals": {
          "description": "Number of Decimal places defined for the Foreign Currency Code",
          "type": "integer"
        },
        "description": {
          "description": "Description of the Foreign Currency Code",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "displaySequence": {
          "description": "Display Sequence",
          "type": "number"
        },
        "inactive": {
          "description": "Indicates if the Foreign Currency Code is inactive",
          "type": "boolean"
        },
        "sellCurrency": {
          "description": "Indicates if the Currency is available for selling",
          "type": "boolean"
        },
        "symbol": {
          "description": "Symbol defined for the Currency",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        }
      }
    },
    "formattedTextTextType": {
      "description": "Provides text and indicates whether it is formatted or not.",
      "type": "object",
      "properties": {
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "functionArgumentType": {
      "description": "This type provided details of a function argument and the value it holds.",
      "type": "object",
      "properties": {
        "dataType": {
          "description": "Specifies the datatype of the function argument.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "name": {
          "description": "Specifies the name of the function argument.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "position": {
          "description": "Specifies the position of the function argument in the argument list.",
          "type": "integer"
        },
        "required": {
          "description": "Argument of the function mandatory or not.",
          "type": "boolean"
        },
        "value": {
          "description": "Specifies the value held by the function argument.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "functionArgumentsType": {
      "description": "Collection of function arguments and their corresponding values.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/functionArgumentType"
      }
    },
    "futurePastExchangeRates": {
      "description": "Collection of exchange rates and their information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/exchangeRateType"
      }
    },
    "gLMappingType": {
      "description": "Gl mapping for transaction codes specific to hotels like Hilton.",
      "type": "object",
      "properties": {
        "accountCode": {
          "description": "Hilton GL Account code Description",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "accountDescription": {
          "description": "Hilton GL Account code Description",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "accountingCategory": {
          "description": "Hilton Account Category Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "chargeCode": {
          "description": "Hilton GL Charge Category Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "Hilton GL Account Currency Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "departmentCode": {
          "description": "Hilton Department Group Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "itemId": {
          "description": "Hilton Department Group Item Id",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "productCode": {
          "description": "Hilton Product Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "statCode": {
          "description": "Hilton GL Account StatCode",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "gUINumberPeriodType": {
      "description": "Period set November-December",
      "type": "string",
      "enum": [
        "JanuaryFebruary",
        "MarchApril",
        "MayJune",
        "JulyAugust",
        "SeptemberOctober",
        "NovemberDecember"
      ]
    },
    "gUINumberRule": {
      "description": "GUI Number rule",
      "type": "object",
      "properties": {
        "beginNo": {
          "description": "BeginNo associated with GUI number",
          "type": "integer"
        },
        "currentFiscalBillNo": {
          "description": "CurrentFiscalBillNo associated with GUI number",
          "type": "integer"
        },
        "endNo": {
          "description": "EndNo associated with GUI number",
          "type": "integer"
        },
        "hotelId": {
          "description": "Property associated with GUI number",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "period": {
          "description": "Period associated with GUI number, each Period defined by two month sets example JANUARY/FEBRUARY",
          "$ref": "#/definitions/gUINumberPeriodType"
        },
        "periodCode": {
          "description": "Period code associated with period",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "prefix": {
          "description": "Prefix associated with GUI number.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        }
      }
    },
    "gUINumberRules": {
      "description": "List of GUI number rules",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/gUINumberRule"
      }
    },
    "gUINumberRulesDetails": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "rules": {
          "$ref": "#/definitions/gUINumberRules"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "generalInfoType": {
      "type": "object",
      "properties": {
        "allPrintDetailOn": {
          "description": "Indicator for Default All Print Details On.",
          "type": "boolean"
        },
        "allowCCCancelTransaction": {
          "description": "Allow CC cancel transactions of a Hotel Interface",
          "type": "boolean"
        },
        "allowVideoCheckout": {
          "description": "Indicator if video checkout is allowed or not.",
          "type": "boolean"
        },
        "cardPresentFlag": {
          "description": "Card present of a Hotel Interface",
          "type": "boolean"
        },
        "ccVaultFunction": {
          "description": "CC vault of a Hotel Interface",
          "type": "boolean"
        },
        "checkBalance": {
          "description": "One of the video checkout options whether to check the balance.",
          "type": "boolean"
        },
        "checkCreditLimit": {
          "description": "One of the video checkout options whether to check the credit limit.",
          "type": "boolean"
        },
        "checkRouting": {
          "description": "One of the video checkout options whether to check the routing.",
          "type": "boolean"
        },
        "courtesyCardHandling": {
          "description": "Courtesy card handling command of a Hotel Interface",
          "type": "boolean"
        },
        "createSVCheckIn": {
          "description": "Create stored value during checkin of a Hotel Interface",
          "type": "boolean"
        },
        "departmentCode1": {
          "description": "Department code 1 of a the Hotel Interface",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "departmentCode2": {
          "description": "Department code 2 of a the Hotel Interface",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "device": {
          "description": "Device of a the Hotel Interface",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "displayPhoneName": {
          "description": "Indicator if the phone name will be displayed.",
          "type": "boolean"
        },
        "enableDBVerification": {
          "description": "Enable DB verification of a Hotel Interface",
          "type": "boolean"
        },
        "enableFailover": {
          "description": "Enable failover of a Hotel Interface",
          "type": "boolean"
        },
        "enableResend": {
          "description": "Enable resend of a Hotel Interface",
          "type": "boolean"
        },
        "folioDisplayOption": {
          "description": "Folio display option of the Hotel Interface applicable to VID and MSC. \"0\" means folio display option off. \"A\" means a guest folio display option. \"U\" means user defined folio display option.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "handleNightAudit": {
          "description": "Handle night audit command of a Hotel Interface",
          "type": "boolean"
        },
        "iPAddress": {
          "description": "IP Address of a the Hotel Interface",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "keyPinActive": {
          "description": "Indicator if the Key Pin is active or not.",
          "type": "boolean"
        },
        "portNumber1": {
          "description": "Logical port number 1 of a the Hotel Interface",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "portNumber2": {
          "description": "Logical port number 2 of a the Hotel Interface",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "portNumber3": {
          "description": "Logical port number 3 of a the Hotel Interface",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "portNumber4": {
          "description": "Logical port number 4 of a the Hotel Interface",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "prevWake": {
          "description": "Used by the Interface module (IFC7.exe).",
          "type": "integer"
        },
        "regularTransaction": {
          "description": "Regular transaction command of a Hotel Interface",
          "type": "boolean"
        },
        "rollupTransactions": {
          "description": "Rollup transactions flag of the Hotel Interface",
          "type": "boolean"
        },
        "sVRedeemTrx": {
          "description": "Stored value reedeem transaction of a the Hotel Interface",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "sendARAuthType": {
          "description": "Send AR auth type of a Hotel Interface",
          "type": "boolean"
        },
        "sendEndOfDay": {
          "description": "Send end of day of a Hotel Interface",
          "type": "boolean"
        },
        "sendEnhancedFields": {
          "description": "Send enhanced fields of a Hotel Interface",
          "type": "boolean"
        },
        "showSVTransaction": {
          "description": "Show SV transaction of a Hotel Interface",
          "$ref": "#/definitions/sVTransactionType"
        },
        "showStoredValuePin": {
          "description": "Show stored value pin of a Hotel Interface",
          "type": "boolean"
        },
        "storedValueSystem": {
          "description": "Stored value system of a Hotel Interface",
          "type": "boolean"
        },
        "userDefinedFolio1": {
          "description": "Indicator if the User defined folio 1 is utilized.",
          "type": "boolean"
        },
        "userDefinedFolio2": {
          "description": "Indicator if the User defined folio 2 is utilized.",
          "type": "boolean"
        },
        "userDefinedFolio3": {
          "description": "Indicator if the User defined folio 3 is utilized.",
          "type": "boolean"
        },
        "userDefinedFolio4": {
          "description": "Indicator if the User defined folio 4 is utilized.",
          "type": "boolean"
        },
        "wakeDelay": {
          "description": "Wakeup delay value of the Hotel Interface.",
          "type": "integer"
        },
        "wakeRetry": {
          "description": "Wakeup retry limit of the Hotel Interface. Value range is 0 to 999.",
          "type": "integer"
        },
        "wakeupHandledBy": {
          "description": "Determines who handles the wakeup calls, either by Opera (0) or a Vendor (1).",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "wakeupYn": {
          "description": "Indicator if the Hotel Interface handles wakeup calls.",
          "type": "boolean"
        }
      }
    },
    "generateAdjustmentTypeType": {
      "description": "Generates calculation bucket/group. Percentage generates are calculated against amount in one of the the calculation bucket.",
      "type": "string",
      "enum": [
        "DuringEndOfDay",
        "PromptAtCheckOut",
        "NoAdjustment"
      ]
    },
    "generateCalcBucketType": {
      "description": "Generates calculation bucket/group. Percentage generates are calculated against amount in one of the the calculation bucket.",
      "type": "string",
      "enum": [
        "Base",
        "Bucket1",
        "Bucket2",
        "Bucket3"
      ]
    },
    "generateCalcRuleType": {
      "description": "Defines the Calculation Rule for the generate.",
      "type": "object",
      "properties": {
        "flatAmount": {
          "description": "Defines Flat Amount rule for generates.",
          "$ref": "#/definitions/flatAmtGenerateType"
        },
        "percentage": {
          "description": "Defines percentage rule for generates.",
          "$ref": "#/definitions/percentageGenerateType"
        },
        "posting": {
          "description": "Advance Generates posting rules, this is only applicable when Advance Generates parameter is active.",
          "$ref": "#/definitions/generatePostingRuleType"
        },
        "roundingMethod": {
          "description": "Defines the rounding method to be used.",
          "$ref": "#/definitions/generateRoundingMethodType"
        },
        "taxTypeBased": {
          "description": "Defines TaxType Based Generat Calculation.",
          "$ref": "#/definitions/taxTypesGenerateType"
        },
        "uDF": {
          "description": "Defines User Defined Function to calculate generates.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "uDFFunctionArguments": {
          "description": "The function argument name-value combination accepted by the User Defined Function.",
          "$ref": "#/definitions/functionArgumentsType"
        },
        "uDFFunctionName": {
          "description": "The function name of the User Defined Function used to calculate generates.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "generateCalculationBucketsType": {
      "description": "Defines the buckets the generated amount can be added to.",
      "type": "object",
      "properties": {
        "bucket1": {
          "description": "Generate Calculation Bucket1.",
          "type": "boolean"
        },
        "bucket2": {
          "description": "Generate Calculation Bucket2.",
          "type": "boolean"
        },
        "bucket3": {
          "description": "Generate Calculation Bucket3.",
          "type": "boolean"
        }
      }
    },
    "generateLevelType": {
      "description": "Defines the level from which the generates was created.",
      "type": "string",
      "enum": [
        "Group",
        "SubGroup",
        "TransactionCode"
      ]
    },
    "generatePostingRuleType": {
      "description": "Advance Generates posting rules.",
      "type": "object",
      "properties": {
        "adjustmentType": {
          "description": "Indicates type of adjustment procedure required, if there is a need due to the ApplicableDays setting.",
          "$ref": "#/definitions/generateAdjustmentTypeType"
        },
        "applicableDays": {
          "description": "Generates are posted/applicable only for first Applicable Days of the stay.",
          "type": "integer"
        }
      }
    },
    "generateRoundingMethodType": {
      "description": "This type is only available for properties with zero decimals. If a property is using decimal points, this type will not be available. The rounding methods which can be specified are: UP, DOWN or NONE.",
      "type": "string",
      "enum": [
        "Up",
        "Down",
        "None"
      ]
    },
    "generateType": {
      "description": "Defines the Generate and its Calculation Rules",
      "type": "object",
      "properties": {
        "addGeneratedAmtTo": {
          "description": "Defines the buckets the generated amount will be added to.",
          "$ref": "#/definitions/generateCalculationBucketsType"
        },
        "code": {
          "description": "Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "generateId": {
          "description": "Unique ID of the Generate.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "level": {
          "description": "Defines the level from which the generates was created.",
          "$ref": "#/definitions/generateLevelType"
        },
        "rule": {
          "description": "Defines percentage rule for generates.",
          "$ref": "#/definitions/generateCalcRuleType"
        }
      }
    },
    "generatesSetupType": {
      "description": "Defines the Generates Setup and its Calculation Rules.",
      "type": "object",
      "properties": {
        "addBaseAmtTo": {
          "description": "Defines the buckets the base or posting amount will be added to.",
          "$ref": "#/definitions/generateCalculationBucketsType"
        },
        "generates": {
          "description": "Defines the Generates and its Calculation Rules.",
          "$ref": "#/definitions/generatesType"
        }
      }
    },
    "generatesType": {
      "description": "Defines the Generate and its Calculation Rules.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/generateType"
      }
    },
    "genericHotelCodeCodeType": {
      "description": "Generic Type to specify unique/primary id for the code. mostly used for Hotel level configuration codes removal request.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Configuration code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel where the code is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "givenNameType": {
      "description": "Given name, first name or names",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "groupArrangementCodeType": {
      "description": "Generic Type to specify unique/primary id for the code. mostly used for Hotel level configuration codes removal request.",
      "type": "object",
      "properties": {
        "arrangementId": {
          "description": "Primay key of arrangement codes",
          "type": "number"
        },
        "code": {
          "description": "Configuration code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Folio Group Code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "hotelId": {
          "description": "Hotel where the code is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "revenue": {
          "description": "specify whether the arrangement postings are classed as revenue.",
          "type": "boolean"
        },
        "taxTypeCode": {
          "description": "information about the tax type code linked to the folio arrangment Code.",
          "type": "string"
        },
        "transactionCodes": {
          "description": "Transaction codes that are associated to the folio grouping codes.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "groupArrangementCodes": {
      "type": "object",
      "properties": {
        "groupArrangementCodes": {
          "description": "Collection of group arrangement codes.",
          "$ref": "#/definitions/groupArrangementCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "groupArrangementCodesCopy": {
      "type": "object",
      "properties": {
        "groupArrangementCode": {
          "description": "List of the group arrangement codes to be copied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "groupArrangementCodesType": {
      "description": "Details for group arrangement code along with associated transaction codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/groupArrangementCodeType"
      }
    },
    "guestHousekeepingServiceRequestType": {
      "description": "Possible values for the Guest Service Status.",
      "type": "string",
      "enum": [
        "DoNotDisturb",
        "MakeUpRoom",
        "NoStatusSelected"
      ]
    },
    "guestLastStayInfoType": {
      "description": "Contains last stay related details of the guest.",
      "type": "object",
      "properties": {
        "lastStayDate": {
          "description": "Guest's last stay date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastStayRate": {
          "description": "The Rate amount of the guest's last stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "lastStayRoom": {
          "description": "Room Number where the guest stayed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "totalStay": {
          "description": "The total number of previous stay of the guest.",
          "type": "integer"
        }
      }
    },
    "hotelInterfaceDetail": {
      "description": "Request object for changing Hotel Interface Data.",
      "type": "object",
      "properties": {
        "details": {
          "description": "Details.",
          "$ref": "#/definitions/hotelInterfaceDetailType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelInterfaceDetailType": {
      "type": "object",
      "properties": {
        "additionalInfo": {
          "description": "Additional information of a Hotel Interface.",
          "$ref": "#/definitions/interfaceAdditionalInfoType"
        },
        "classOfServiceInfo": {
          "description": "Information related to Class of Service of a Hotel Interface.",
          "$ref": "#/definitions/classOfServiceType"
        },
        "communicationInfo": {
          "description": "Communication related information of a Hotel Interface.",
          "$ref": "#/definitions/interfaceCommunicationInfoType"
        },
        "customDataInfo": {
          "description": "Information related to Custom Data of a Hotel Interface.",
          "$ref": "#/definitions/interfaceCustomDataInfoType"
        },
        "exportDataInfo": {
          "description": "Information related to Export Data of a Hotel Interface.",
          "$ref": "#/definitions/interfaceExportDataInfoType"
        },
        "generalInfo": {
          "description": "General information of a Hotel Interface.",
          "$ref": "#/definitions/generalInfoType"
        },
        "importRoomsInfo": {
          "description": "Information related to Import Rooms of a Hotel Interface.",
          "$ref": "#/definitions/importRoomsType"
        },
        "postingsInfo": {
          "description": "Postings of a hotel interface.",
          "$ref": "#/definitions/postingInfoType"
        },
        "primaryInfo": {
          "description": "Primary information of a Hotel Interface.",
          "$ref": "#/definitions/interfacePrimaryInfoType"
        },
        "transactionsInfo": {
          "description": "Postings of a hotel interface.",
          "$ref": "#/definitions/transactionCodeInfoType"
        },
        "translationInfo": {
          "description": "Communication related information of a Hotel Interface.",
          "$ref": "#/definitions/translationType"
        },
        "workstationSetupInfo": {
          "description": "Workstation setup of a hotel interface.",
          "$ref": "#/definitions/workstationSetupType"
        }
      }
    },
    "hotelInterfaceStatusType": {
      "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
      "type": "string",
      "enum": [
        "Stopped",
        "Running",
        "Waiting",
        "StopInitiated",
        "StartInitiated",
        "RebootInitiated",
        "Other"
      ]
    },
    "hotelInterfaceType": {
      "type": "object",
      "properties": {
        "activeFlag": {
          "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "interfaceName": {
          "description": "Name of the Hotel Interface",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "interfaceType": {
          "description": "Three letter code for each interface that identifies the interface.",
          "$ref": "#/definitions/hotelInterfaceTypeType"
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "machineName": {
          "description": "Unique machine name of the running IFC.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "status": {
          "description": "The current status of the IFC.",
          "$ref": "#/definitions/hotelInterfaceStatusType"
        }
      }
    },
    "hotelInterfaceTypeType": {
      "description": "XML Posting Interface",
      "type": "string",
      "enum": [
        "Bms",
        "Cas",
        "Ccw",
        "Dls",
        "Eft",
        "Exp",
        "Mak",
        "Mbs",
        "Msc",
        "Pbx",
        "Pos",
        "Svs",
        "Tik",
        "Vid",
        "Vms",
        "Www",
        "Xml"
      ]
    },
    "hotelNoShowPostingRuleType": {
      "description": "Provides information about No Show Posting Rule Configuration.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Indicates for which hotel this posting rule apply to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "postingRule": {
          "description": "Posting Rule to be selected.",
          "$ref": "#/definitions/postingRuleType"
        },
        "reservationType": {
          "description": "Type of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCode": {
          "description": "Source code of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "hotelNoShowPostingRulesType": {
      "description": "Holds No Show Posting Rules Configuration details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelNoShowPostingRuleType"
      }
    },
    "hotelTransactionCode": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactionCode": {
          "description": "Detailed information regarding transaction code.",
          "$ref": "#/definitions/hotelTransactionCodeType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelTransactionCodeType": {
      "description": "Transaction Code configuration details.",
      "type": "object",
      "properties": {
        "adjustmentCode": {
          "description": "Transaction code to be used to make adjustments on the posting made using this transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "allowServiceRecovery": {
          "description": "Flag to identify if this transaction code already used as service recovery adjustment code.",
          "type": "boolean"
        },
        "amounts": {
          "description": "Default Amounts for the Transaction Codes.",
          "$ref": "#/definitions/trxCodeAmountsType"
        },
        "associatedTransactionCodes": {
          "description": "Code and description of the standard transaction code associated to this comp transaction code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "classification": {
          "description": "Transaction Code classification details.",
          "$ref": "#/definitions/trxCodeClassificationType"
        },
        "code": {
          "description": "Unique Transaction Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "compTransaction": {
          "description": "If true indicates this transaction codes is for Comp Accounting.",
          "type": "boolean"
        },
        "description": {
          "description": "Transaction Code descriptions.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "gLMapping": {
          "description": "Gl mapping for transaction codes specific to hotels like Hilton.",
          "$ref": "#/definitions/gLMappingType"
        },
        "generatesSetup": {
          "description": "Transaction code's generates setup.",
          "$ref": "#/definitions/generatesSetupType"
        },
        "hotelId": {
          "description": "Hotel's Transaction Code configuration detail.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "mappingCodes": {
          "description": "Mapping code and value attached to Transaction Code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/exportMappingLinkedCodeType"
          }
        },
        "paymentSetup": {
          "description": "Payment Transaction Code configuration details.",
          "$ref": "#/definitions/paymentTrxSetupType"
        },
        "printTrxReceipt": {
          "type": "boolean"
        },
        "serviceRecoveryAdjustmentCode": {
          "description": "Transaction code to be used to make service recovery adjustments on the posting made using this transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionAdjustments": {
          "description": "Combination of Adjustment Reason Code and Transaction Adjustment Code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/transactionAdjustmentType"
          }
        },
        "trxSetup": {
          "description": "Transaction code setup/config details.",
          "$ref": "#/definitions/trxSetupType"
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "hotelTransactionCodes": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactionCodes": {
          "description": "Collection of hotel's transaction codes summary.",
          "$ref": "#/definitions/hotelTransactionCodesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelTransactionCodesType": {
      "description": "Transaction Code configuration details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelTransactionCodeType"
      }
    },
    "hotelTransactionDiscountType": {
      "description": "Provides information about Transaction Discount Configuration.",
      "type": "object",
      "required": [
        "hotelId",
        "transactionDiscountCode",
        "description",
        "ruleType",
        "codeType",
        "discountAttributes"
      ],
      "properties": {
        "amount": {
          "description": "The amount applicable to the transaction discount.This would be a positive amount indicating the discount.",
          "type": "number",
          "format": "double",
          "minimum": 0
        },
        "articleCodes": {
          "description": "Collection of article codes eligible for transaction discounts.",
          "type": "array",
          "maxItems": 2000,
          "items": {
            "type": "string"
          }
        },
        "codeType": {
          "description": "The rule type on which the Transaction Discount is based.",
          "$ref": "#/definitions/transactionDiscountCodeType"
        },
        "description": {
          "description": "Description of the transaction discount.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 1
        },
        "discountAttributes": {
          "description": "Holds Transaction Discounts Attributes details.If discount is applied to a membership type, only membership type details are required. If discount is applied on a membership level , membership type and membership level details are required.",
          "type": "array",
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/transactionDiscountsAttributeType"
          }
        },
        "hotelId": {
          "description": "Indicates for which hotel this transaction discount apply to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 1
        },
        "inactive": {
          "description": "Indicates whether the transaction discount is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number",
          "minimum": 1
        },
        "percent": {
          "description": "A percentage value if the transaction discount is percentage based.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "ruleType": {
          "description": "The rule type on which the Transaction Discount is based.",
          "$ref": "#/definitions/transactionDiscountRuleType"
        },
        "transactionCodes": {
          "description": "Collection of transaction codes eligible for transaction discounts.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "transactionDiscountCode": {
          "description": "Unique code of the transaction discount.",
          "type": "string",
          "maxLength": 20,
          "minLength": 1
        },
        "transactionDiscountId": {
          "description": "Unique code of the transaction discount.",
          "type": "number"
        }
      }
    },
    "hotelTransactionGenerates": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactionGenerates": {
          "description": "Transaction generates to be created.",
          "$ref": "#/definitions/hotelTransactionGeneratesSetupType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelTransactionGeneratesSetupType": {
      "description": "Defines the Generates Setup and its Calculation Rules.",
      "type": "object",
      "properties": {
        "addBaseAmtTo": {
          "description": "Defines the buckets the base or posting amount will be added to.",
          "$ref": "#/definitions/generateCalculationBucketsType"
        },
        "generates": {
          "description": "Defines the Generates and its Calculation Rules.",
          "$ref": "#/definitions/generatesType"
        },
        "hotelId": {
          "description": "Hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionCode": {
          "description": "Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionGroup": {
          "description": "Transaction group.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionSubGroup": {
          "description": "Transaction sub group.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "hotelTransactionGroupType": {
      "description": "Transaction Group configuration information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Transaction Group Configuration Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Transaction Group.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "generatesAvailable": {
          "description": "Flag to determine whether generates are available or not",
          "type": "boolean"
        },
        "generatesSetup": {
          "description": "Transaction group's generates setup.",
          "$ref": "#/definitions/generatesSetupType"
        },
        "hotelId": {
          "description": "Hotel Code where the Transaction Group is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sequence": {
          "description": "Display sequence for the code type.",
          "type": "integer"
        },
        "type": {
          "description": "Transaction type to which the corresponding transaction group belongs.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        }
      }
    },
    "hotelTransactionGroupsType": {
      "description": "Hotel's Transaction Group configuration.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelTransactionGroupType"
      }
    },
    "hotelTransactionSubgroup": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactionSubgroup": {
          "description": "Detailed information regarding transaction subgroup.",
          "$ref": "#/definitions/hotelTransactionSubgroupType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelTransactionSubgroupType": {
      "description": "Transaction Subgroup configuration Information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Transaction Subroup Configuration Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Transaction Subgroup.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "generatesAvailable": {
          "description": "Flag to determine whether generates are available or not",
          "type": "boolean"
        },
        "generatesSetup": {
          "description": "Transaction subgroup's generates setup.",
          "$ref": "#/definitions/generatesSetupType"
        },
        "group": {
          "description": "Transaction Group Configuration Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "groupDescription": {
          "description": "Description of the Transaction Group.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code where the Transaction Subgroup is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "newGroup": {
          "description": "Use this attribute to update the existing group during change operation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sequence": {
          "description": "Display sequence for the code type.",
          "type": "integer"
        },
        "type": {
          "description": "Transaction type to which the corresponding transaction group belongs. This is an information only attribute.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        }
      }
    },
    "hotelTransactionSubgroups": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactionSubgroups": {
          "description": "Collection of Transaction Subgroups Configuration.",
          "$ref": "#/definitions/hotelTransactionSubgroupsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelTransactionSubgroupsType": {
      "description": "Hotel's Transaction Subgroup configuration.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelTransactionSubgroupType"
      }
    },
    "hotelTrxCodesAccessType": {
      "description": "Transaction Codes associated with particular Hotel",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionCode": {
          "description": "Transaction Code and Description. Description is for information only and is used for fetch operation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        }
      }
    },
    "housekeepingRoomStatusType": {
      "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
      "type": "string",
      "enum": [
        "Clean",
        "Dirty",
        "Pickup",
        "Inspected",
        "OutOfOrder",
        "OutOfService"
      ]
    },
    "housekeepingTaskCodeType": {
      "description": "Information related to a Task Code. Task Codes are used to generate task sheets in Rooms Management.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The Code for the task.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Task Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "facilityDepartureTask": {
          "description": "Indicates if this task code is the default departure task for Facility Tasks. This requires",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property where this task code is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "instructions": {
          "description": "Instructions for this Task Code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "sequence": {
          "description": "Ordering sequence for display.",
          "type": "integer"
        }
      }
    },
    "ifcMenuTypeType": {
      "description": "Data Card System",
      "type": "string",
      "enum": [
        "Cas",
        "Kss",
        "Mbs",
        "Pbx",
        "Pos",
        "Vss",
        "Dcs"
      ]
    },
    "importRoomsType": {
      "type": "object",
      "properties": {
        "inXlatId": {
          "description": "Translation table for incoming messages.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "ioLines": {
          "description": "Indicator for support of Input/Output Lines for Hotel Room Categories.",
          "type": "boolean"
        },
        "ouXlatId": {
          "description": "Translation table for outgoing messages.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "requiresLineNumberSetup": {
          "description": "Indicator for Requires line number setup, from Import Rooms related information of a Hotel Interface.",
          "type": "boolean"
        },
        "selectedRoomTypes": {
          "description": "Concatenated label of Hotel Room Categories for which SendToInterface flag should be set as true.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "virtualNumberSetup": {
          "description": "Indicator for Virtual number setup, from Import Rooms related information of a Hotel Interface.",
          "type": "boolean"
        }
      }
    },
    "indicatorType": {
      "description": "Lamp indicator Type.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        },
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "indicatorsType": {
      "description": "Collection of lamp indicators.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "instanceLink": {
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "type": "object",
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ],
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "interfaceAdditionalInfoType": {
      "type": "object",
      "properties": {
        "activeFlag": {
          "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
          "type": "boolean"
        },
        "additionalRoomsLimit": {
          "description": "Maximum number of additional rooms allowed.",
          "type": "integer",
          "maximum": 999,
          "minimum": 1
        },
        "autoStartFlag": {
          "description": "Decides if the interface will be started automatically when the controller is restarted.",
          "type": "boolean"
        },
        "cashierId": {
          "description": "Cashier Number.",
          "type": "integer"
        },
        "controllerPort": {
          "description": "Opera IFC controller (server) port for the connecting clients.",
          "type": "integer"
        },
        "deleteIfcKeysOnKeyDelete": {
          "description": "Indicator if the Interface Keys will be deleted on KeyDelete.",
          "type": "boolean"
        },
        "displayFlag": {
          "description": "True if the interface will be displayed.",
          "type": "boolean"
        },
        "interfaceStatus": {
          "description": "Status if the Hotel Interface is STOPPED or RUNNING. This is different from the Active Flag, which is either 1 or 0.",
          "$ref": "#/definitions/hotelInterfaceStatusType"
        },
        "menuName": {
          "description": "Name of the Interface sub-menu",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "menuType": {
          "description": "Internal representation for Interface Type",
          "$ref": "#/definitions/ifcMenuTypeType"
        },
        "msgExpiresAfter": {
          "description": "(Internal Use) Message Expires After",
          "type": "string",
          "maxLength": 8,
          "minLength": 0
        },
        "multipleRoomKey": {
          "description": "Indicator if the Hotel Interface allows multiple room selection for keys.",
          "type": "boolean"
        },
        "nAStart": {
          "description": "Indicator if the Hotel Interface handles night audit commands.",
          "type": "boolean"
        },
        "onlineKeySystem": {
          "description": "Indicator if the Hotel Interface is an online key system.",
          "type": "boolean"
        },
        "pathId1": {
          "description": "Used if interface has to support more than one front office system.",
          "type": "integer"
        },
        "sendRoomStatus": {
          "description": "Indicator if the Room Status will be sent.",
          "type": "boolean"
        },
        "sendTrack1Data": {
          "description": "Indicator for Hotel Interface Send Track 1 Data.",
          "type": "boolean"
        },
        "sendTrack2Data": {
          "description": "Indicator for Hotel Interface Send Track 2 Data.",
          "type": "boolean"
        },
        "sendValidStartDateTime": {
          "description": "Indicator if the DLS Interface allows to send valid start date and time.",
          "type": "boolean"
        },
        "telephoneCharge": {
          "description": "Indicates on what the post unit charge is based on.",
          "$ref": "#/definitions/telephoneChargeType"
        },
        "timeout": {
          "description": "Used by the Interface module. ( IFC7.exe )",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "useDataThroughFlag": {
          "type": "boolean"
        },
        "version": {
          "description": "Version no. of each external interface that is installed",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "vncPort": {
          "description": "VNC server port for connecting to a VNC server.",
          "type": "integer"
        }
      }
    },
    "interfaceCommunicationInfoType": {
      "type": "object",
      "properties": {
        "serialPortConfig": {
          "$ref": "#/definitions/serialPortConfigType"
        },
        "tCPConfig": {
          "$ref": "#/definitions/tCPConfigType"
        }
      }
    },
    "interfaceControlArticleType": {
      "type": "object",
      "properties": {
        "articleNo": {
          "description": "Article Number of a translation article setup.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "description": {
          "description": "Description of a translation article setup.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code of the hotel interface.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "internalCode": {
          "description": "Internal code of a translation article setup.",
          "type": "integer"
        },
        "logo": {
          "description": "Logo of the hotel interface.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "selector": {
          "description": "Selector of a translation article setup.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        }
      }
    },
    "interfaceControlCfgType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the hotel interface.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "internalCode": {
          "description": "Internal code of a translation configuration setup.",
          "type": "integer"
        },
        "logo": {
          "description": "Logo of the hotel interface.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "merchantId": {
          "description": "Merchant Id of a translation configuration setup.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "originCode": {
          "description": "Origin code of a translation configuration setup.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        }
      }
    },
    "interfaceControlLangType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the hotel interface.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "internalCode": {
          "description": "Internal code of a translation language setup.",
          "type": "integer"
        },
        "languageCode": {
          "description": "Language code of a translation language setup.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "logo": {
          "description": "Logo of the hotel interface.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "selector": {
          "description": "Selector of a translation language setup.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        }
      }
    },
    "interfaceControlSpecType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the hotel interface.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "internalCode": {
          "description": "Internal code of a translation specification setup.",
          "type": "integer"
        },
        "logo": {
          "description": "Logo of the hotel interface.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "position": {
          "description": "Position of a translation specification setup.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "priority": {
          "description": "Priority of a translation specification setup.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "selector": {
          "description": "Selector of a translation specification setup.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "specification": {
          "description": "Specification of a translation specification setup.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        }
      }
    },
    "interfaceCustomDataDetailType": {
      "description": "This gives information of custom detail of a hotel interface.",
      "type": "object",
      "properties": {
        "customDataField": {
          "description": "Specifies the type of data stored.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "customDataValue": {
          "description": "Specifies the actual data corresponding to each value in the field.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "interfaceCustomDataDetailsType": {
      "description": "Collection of custom data details of a hotel interface.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/interfaceCustomDataDetailType"
      }
    },
    "interfaceCustomDataInfoType": {
      "description": "This type holds the custom data of a hotel interface.",
      "type": "object",
      "properties": {
        "exportAsXml": {
          "description": "Specifies whether the details have to be exported as XML. If true, then the details are exported as XML else details are exported as text.",
          "type": "boolean"
        },
        "includeDoorcardField": {
          "description": "Specifies whether the Doorcard field details have to be included in the XML Export. If true, Doorcard field details will be included in the XML Export else details will not be included. This field is available only when the Export as XML field is selected.",
          "type": "boolean"
        },
        "interfaceCustomDataDetails": {
          "description": "Collection of custom data details of a hotel interface.",
          "$ref": "#/definitions/interfaceCustomDataDetailsType"
        }
      }
    },
    "interfaceExportDataDetailType": {
      "description": "This gives information of export detail of a hotel interface.",
      "type": "object",
      "properties": {
        "columnName": {
          "description": "Specifies the column name found in the table.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "columnSelected": {
          "description": "Specifies whether the column is chosen to be included in the export.",
          "type": "boolean"
        },
        "dataLength": {
          "description": "Specifies the length of data in the column.",
          "type": "integer"
        },
        "dataType": {
          "description": "Specifies the type of data in the column.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceTableName": {
          "description": "Specifies the table where the event data is stored.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "xMLTagName": {
          "description": "Specifies the tag name found in the export.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        }
      }
    },
    "interfaceExportDataDetailsType": {
      "description": "Collection of export data details of a hotel interface.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/interfaceExportDataDetailType"
      }
    },
    "interfaceExportDataInfoType": {
      "description": "This type holds the export data of a hotel interface.",
      "type": "object",
      "properties": {
        "interfaceExportDataDetails": {
          "description": "Collection which shows the manually selected columns for the export data of a hotel interface.",
          "$ref": "#/definitions/interfaceExportDataDetailsType"
        },
        "interfaceExportDataMandatoryDetails": {
          "description": "Collection which shows the mandatory columns for the export data of a hotel interface.",
          "$ref": "#/definitions/interfaceExportDataDetailsType"
        }
      }
    },
    "interfacePrimaryInfoType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "interfaceName": {
          "description": "Name of the Hotel Interface",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "interfaceProductCode": {
          "description": "FKT Logo required for the external interface.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "interfaceType": {
          "description": "Three letter code for each interface that identifies the interface.",
          "$ref": "#/definitions/hotelInterfaceTypeType"
        },
        "licenseCode": {
          "description": "Interface License code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "machineId": {
          "description": "The ID stored in IFC_MACHINES table.",
          "type": "integer"
        },
        "machineName": {
          "description": "Unique machine name of the running IFC.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "productCode": {
          "description": "Three letter code that uniquely identifies the external interface.",
          "type": "string",
          "maxLength": 4,
          "minLength": 0
        }
      }
    },
    "interfaceRightsStatusType": {
      "type": "object",
      "properties": {
        "category": {
          "description": "Category code of this interface right.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "description": {
          "description": "User defined description for an Interface Right.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "right": {
          "description": "Internal code for each allowed right of a Hotel Interface record.",
          "type": "integer"
        },
        "statusCode": {
          "description": "User defined code for an Interface Right.",
          "type": "string",
          "maxLength": 5,
          "minLength": 0
        }
      }
    },
    "interfaceWorkstationType": {
      "type": "object",
      "properties": {
        "deviceIp": {
          "description": "IP of a workstation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "deviceLocation": {
          "description": "Device Group / Area.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code of a workstation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "internalCode": {
          "description": "Internal code of a workstation.",
          "type": "integer"
        },
        "location": {
          "description": "Location of a workstation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "logo": {
          "description": "Logo of a workstation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Type of a workstation.",
          "type": "string",
          "maxLength": 2,
          "minLength": 0
        },
        "workstation": {
          "description": "Workstation of a hotel interface.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "itemizerShortInfoType": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the itemizer on a transaction code setup.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "itemNumber": {
          "description": "Itemizer number which is the split post on a transaction code setup.",
          "type": "integer"
        },
        "itemizerName": {
          "description": "Itemizer name on a transaction code setup.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        }
      }
    },
    "itemizerType": {
      "type": "object",
      "properties": {
        "splitCode": {
          "description": "Split code of the itemizer setup.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "splitFactor": {
          "description": "Split factor of the itemizer setup.",
          "type": "integer"
        },
        "splitPost": {
          "description": "Split posting of the itemizer setup.",
          "type": "integer"
        },
        "splitText": {
          "description": "Split text of the itemizer setup.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "listOfDevicesType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/creditCardReaderDevicesType"
      }
    },
    "marketCodeInfoType": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketGroup": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "marketCodeInformationBaseType": {
      "description": "Budget Forecast information for budget segment code.",
      "type": "object",
      "properties": {
        "budgetRevenueInfo": {
          "description": "Budget Revenue information for a segment code.",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "forecastRevenueInfo": {
          "description": "Forecast Revenue information for a segment code.",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "marketCode": {
          "description": "Segment code for which budget forecast information is fetched.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketCodeDescription": {
          "description": "Segment code description for segment code.",
          "type": "string"
        }
      }
    },
    "marketCodeInformationType": {
      "description": "Budget Forecast information for budget segment code.",
      "type": "object",
      "properties": {
        "aBVarianceInfo": {
          "description": "Actual Budget Revenue variance for a segment code.",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        },
        "aFVarianceInfo": {
          "description": "Actual Forecast Revenue variance for a segment code.",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        },
        "actualRevenueInfo": {
          "description": "Actual Revenue information for a segment code.",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "budgetRevenueInfo": {
          "description": "Budget Revenue information for a segment code.",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "fBVarianceInfo": {
          "description": "Forecast Budget Revenue variance for a segment code.",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        },
        "forecastRevenueInfo": {
          "description": "Forecast Revenue information for a segment code.",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "marketCode": {
          "description": "Segment code for which budget forecast information is fetched.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketCodeDescription": {
          "description": "Segment code description for segment code.",
          "type": "string"
        }
      }
    },
    "marketCodeTotalInformationType": {
      "description": "Budget Forecast information for segment.",
      "type": "object",
      "properties": {
        "aBVarianceTotalInfo": {
          "description": "Actual Budget Revenue variance for a segment .",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        },
        "aFVarianceTotalInfo": {
          "description": "Actual Forecast Revenue variance for a segment .",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        },
        "actualTotalInfo": {
          "description": "Actual Revenue information for a segment .",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "budgetTotalInfo": {
          "description": "Budget Revenue information for a segment .",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "fBVarianceTotalInfo": {
          "description": "Forecast Budget Revenue variance for a segment .",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        },
        "forecastTotalInfo": {
          "description": "Forecast Revenue information for a segment .",
          "$ref": "#/definitions/revenueNightsInfoType"
        }
      }
    },
    "maskDialNumberType": {
      "description": "Mask the dialled digits as per the room configuration.",
      "type": "string",
      "enum": [
        "NoMasking",
        "MaskLast2Digits",
        "MaskLast4Digits",
        "Mask4DigitsLeaveLast2Intact",
        "MaskAllExceptFirst2",
        "MaskAll",
        "MaskingPerRoom"
      ]
    },
    "membershipInfoType": {
      "description": "The Membership object identifies the frequent customer reward program.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The account identification number for this particular member in this particular program.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "bonusCode": {
          "description": "The code or name of the bonus program. BonusCode can be used to indicate the level of membership (Gold Club, Platinum member, etc.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Membership ID (Unique ID from the memberships table).",
          "type": "number"
        },
        "membershipLevel": {
          "description": "The code or name of the membership level and indicates the level of membership (Gold Club, Platinum member, etc.). This is same as the BonusCode.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipLevelDesc": {
          "description": "The description of the Bonus Code.(Platinum for code P)",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "membershipTypeDesc": {
          "description": "The description of the ProgramCode.(Delta Previlige for code DP)",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "programCode": {
          "description": "The code or name of the membership program ('Hertz', 'AAdvantage', etc.).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "membershipTypeLevelType": {
      "type": "object",
      "properties": {
        "level": {
          "description": "Description type for Rule Details",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Code type for Rule Details",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "monthNoType": {
      "description": "December.",
      "type": "string",
      "enum": [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "12"
      ]
    },
    "monthlyCateringInfoType": {
      "description": "Holds monthly Catering summary information",
      "type": "object",
      "properties": {
        "covers": {
          "description": "No of Covers for a month.",
          "type": "integer"
        },
        "month": {
          "description": "Month number",
          "type": "integer"
        },
        "revenue": {
          "description": "Revenue total for a month.",
          "type": "number"
        }
      }
    },
    "monthlyCateringVarianceInfoType": {
      "description": "Variance information for a catering segment code for a month.",
      "type": "object",
      "properties": {
        "coversVariance": {
          "description": "Variance for a month.",
          "type": "number"
        },
        "month": {
          "description": "Month number",
          "type": "integer"
        },
        "revenueVariance": {
          "description": "Variance for a month.",
          "type": "number"
        }
      }
    },
    "monthlyCustomVarianceInfoType": {
      "description": "Value Variance information for a CUSTOM code for a month.",
      "type": "object",
      "properties": {
        "month": {
          "description": "Month number",
          "type": "integer"
        },
        "variance": {
          "description": "Variance for a month.",
          "type": "number"
        }
      }
    },
    "monthlyRevenueNightsInfoType": {
      "description": "Holds monthly revenue summary information",
      "type": "object",
      "properties": {
        "month": {
          "description": "Month number",
          "type": "integer"
        },
        "revenue": {
          "description": "Revenue total for a month.",
          "type": "number"
        },
        "roomNights": {
          "description": "No of nights for a month.",
          "type": "integer"
        }
      }
    },
    "monthlyRevenueNightsVarianceInfoType": {
      "description": "Revenue Variance information for a segment code for a month.",
      "type": "object",
      "properties": {
        "month": {
          "description": "Month number",
          "type": "integer"
        },
        "nightsVariance": {
          "description": "Variance for a month.",
          "type": "number"
        },
        "revenueVariance": {
          "description": "Variance for a month.",
          "type": "number"
        }
      }
    },
    "monthlyTransactionInfoType": {
      "description": "Holds monthly Revenue summary information",
      "type": "object",
      "properties": {
        "month": {
          "description": "Month number",
          "type": "integer"
        },
        "revenue": {
          "description": "Revenue information for a month.",
          "type": "number"
        }
      }
    },
    "monthlyTransactionVarianceInfoType": {
      "description": "Revenue Variance information for a segment code for a month.",
      "type": "object",
      "properties": {
        "month": {
          "description": "Month number",
          "type": "integer"
        },
        "revenueVariance": {
          "description": "Variance for a month.",
          "type": "number"
        }
      }
    },
    "monthlyValueInfoType": {
      "description": "Holds monthly value summary information",
      "type": "object",
      "properties": {
        "month": {
          "description": "Month number",
          "type": "integer"
        },
        "value": {
          "description": "Value information for a month.",
          "type": "number"
        }
      }
    },
    "namePrefixType": {
      "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "nameTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Agent",
        "Contact",
        "Source",
        "Group",
        "Employee",
        "Hotel",
        "Purge"
      ]
    },
    "noShowPostingRuleEditType": {
      "description": "Provides information about No Show Posting Rule Configuration.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Indicates for which hotel this posting rule apply to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "newRule": {
          "description": "New rule values for reservation type, source code and posting rule.",
          "$ref": "#/definitions/noShowPostingRuleType"
        },
        "postingRule": {
          "description": "Posting Rule to be selected.",
          "$ref": "#/definitions/postingRuleType"
        },
        "reservationType": {
          "description": "Type of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCode": {
          "description": "Source code of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "noShowPostingRuleType": {
      "description": "Provides information about No Show Posting Rule Configuration.",
      "type": "object",
      "properties": {
        "postingRule": {
          "description": "Posting Rule to be selected.",
          "$ref": "#/definitions/postingRuleType"
        },
        "reservationType": {
          "description": "Type of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCode": {
          "description": "Source code of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "noShowPostingRules": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "noShowPostingRules": {
          "description": "Collection of No Show Posting Rule Configurations.",
          "$ref": "#/definitions/hotelNoShowPostingRulesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "noShowPostingRulesEdit": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "noShowPostingRules": {
          "description": "No Show Posting Rule Configurations to be changed.",
          "$ref": "#/definitions/noShowPostingRulesEditType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "noShowPostingRulesEditType": {
      "description": "Contains new rules along with associated old rules to edit.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/noShowPostingRuleEditType"
      }
    },
    "numberCodeType": {
      "description": "Used for Number specific codes for OPERA tables. Possible values of this pattern are 1, 10, 17, THOUSAND, BILLION, etc.",
      "type": "string",
      "maxLength": 200,
      "minLength": 0
    },
    "numberDescriptionType": {
      "description": "Indicates type definition for Numbers.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Indicates Description text for a number",
          "$ref": "#/definitions/translationTextType4000"
        },
        "numberCode": {
          "description": "Indicates code for a number",
          "$ref": "#/definitions/numberCodeType"
        }
      }
    },
    "numberDescriptions": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "numberDescriptions": {
          "description": "Collection of Numbers and Descriptions",
          "$ref": "#/definitions/numberDescriptionsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "numberDescriptionsType": {
      "description": "Individual number and description.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/numberDescriptionType"
      }
    },
    "operaControlSequences": {
      "type": "object",
      "properties": {
        "controlSequences": {
          "description": "Collection of Opera Control Sequence details.",
          "$ref": "#/definitions/controlSequencesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "operaVersionNumberType": {
      "description": "Current Opera Version Number",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "pMS_ResStatusType": {
      "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "type": "string",
      "enum": [
        "Reserved",
        "Requested",
        "NoShow",
        "Cancelled",
        "InHouse",
        "CheckedOut",
        "Waitlisted",
        "DueIn",
        "DueOut",
        "Walkin",
        "PendingCheckout"
      ]
    },
    "packageArrangementCodeType": {
      "description": "Generic Type to specify unique/primary id for the code. mostly used for Hotel level configuration codes removal request.",
      "type": "object",
      "properties": {
        "arrangementId": {
          "description": "Primay key of arrangement codes",
          "type": "number"
        },
        "code": {
          "description": "Configuration code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Folio Group Code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "hotelId": {
          "description": "Hotel where the code is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Represents whether the package arrangement code is inactive or not",
          "type": "boolean"
        },
        "revenue": {
          "description": "specify whether the arrangement postings are classed as revenue.",
          "type": "boolean"
        },
        "taxTypeCode": {
          "description": "information about the tax type code linked to the folio arrangment Code.",
          "type": "string"
        }
      }
    },
    "packageArrangementCodes": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "packageArrangementCodes": {
          "description": "Collection of package arrangement codes.",
          "$ref": "#/definitions/packageArrangementCodesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "packageArrangementCodesCopy": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "packageArrangementCode": {
          "description": "List of the package arrangement codes to be copied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "packageArrangementCodesType": {
      "description": "Details for package arrangement codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/packageArrangementCodeType"
      }
    },
    "payeeInfoType": {
      "description": "Payee information.",
      "type": "object",
      "properties": {
        "payeeAccountInfo": {
          "description": "AR account short info of the payee.",
          "$ref": "#/definitions/aRAccountShortInfoType"
        },
        "payeeAddress": {
          "description": "Address of the payee.",
          "$ref": "#/definitions/addressInfoType"
        },
        "payeeAddressCount": {
          "description": "Payee multiple address count.",
          "type": "integer"
        },
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeName": {
          "description": "Name of the payee.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "payeeReferenceCurrency": {
          "description": "Reference currency of the payee.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "payeeTaxNumber": {
          "description": "The tax number of the payee.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "paymentCardType": {
      "description": "Contains credit card information.",
      "type": "object",
      "properties": {
        "cardType": {
          "description": "Internal code of credit card type.",
          "$ref": "#/definitions/cardTypeType"
        },
        "cardUsageRules": {
          "description": "Contains valid usages of the card.",
          "$ref": "#/definitions/cardUsageRulesType"
        },
        "merchantNumber": {
          "description": "The merchant number to use when settling or transmitting credit card information.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "option": {
          "description": "Switch card options.",
          "$ref": "#/definitions/cardOptionType"
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "userDefinedCardType": {
          "description": "User defined credit card type if credit card type from a defined list is not provided.",
          "type": "string",
          "maxLength": 2,
          "minLength": 0
        },
        "validation": {
          "description": "Contains rules to validate card information.",
          "$ref": "#/definitions/paymentMethodValidationRuleType"
        }
      }
    },
    "paymentMethodTransactionInfoType": {
      "description": "Provides information about the transactions including the transaction code, group, subgroup and the posting amount.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "postingAmount": {
          "$ref": "#/definitions/postingAmountType"
        },
        "surcharge": {
          "description": "Surcharge information regarding the payment method.",
          "$ref": "#/definitions/surchargeType"
        },
        "transactionCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionDisplay": {
          "type": "string",
          "maxLength": 8,
          "minLength": 0
        },
        "transactionGroup": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionSubGroup": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "paymentMethodType": {
      "description": "Provides information about the payment methods. CreditCardCode and CreditCardType help to determine if EFTs are allowed.",
      "type": "object",
      "properties": {
        "calculatePoints": {
          "description": "Defines when the points are to be calculated.",
          "$ref": "#/definitions/calculatePointsType"
        },
        "creditLimit": {
          "description": "Contains the credit limit of a transaction.",
          "$ref": "#/definitions/creditLimitType"
        },
        "description": {
          "description": "Description of the payment method.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property from which the payment method belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates whether the payment method is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "paymentCard": {
          "description": "Contains credit card information.",
          "$ref": "#/definitions/paymentCardType"
        },
        "paymentMethod": {
          "description": "Defines the unique identifier for this payment method.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "paymentMethodTransactionInfo": {
          "description": "Contains summary information of the transaction.",
          "$ref": "#/definitions/paymentMethodTransactionInfoType"
        },
        "paymentMethodUsage": {
          "description": "Contains various usage options permitted for the payment method.",
          "$ref": "#/definitions/paymentMethodUsageType"
        }
      }
    },
    "paymentMethodUsageType": {
      "description": "This provides information about the various usage options permitted for the given payment method.",
      "type": "object",
      "properties": {
        "accountsReceivable": {
          "description": "Indicates if this payment method can be used for Accounts Receivables.",
          "type": "boolean"
        },
        "billing": {
          "description": "Indicates if the payment method can be used for Guest Billing",
          "type": "boolean"
        },
        "cash": {
          "description": "Indicates if this payment method is a Cash type payment method.",
          "type": "boolean"
        },
        "compAccounting": {
          "description": "Indicates if this payment method can be used for Comp Accounting.",
          "type": "boolean"
        },
        "deposit": {
          "description": "Indicates if this payment method can be used for Deposit payments.",
          "type": "boolean"
        },
        "posting": {
          "description": "Indicates if postings can be manually added to the Reservation when this payment method is used.",
          "type": "boolean"
        },
        "reservation": {
          "description": "Indicates if this payment method can be used as a Reservation payment method.",
          "type": "boolean"
        }
      }
    },
    "paymentMethodValidationRuleType": {
      "description": "Payment method card validation rules.",
      "type": "object",
      "properties": {
        "formula": {
          "description": "Formula used for card validation. Only valid in case of user defined validation.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "length": {
          "description": "Valid lengths of card number.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "prefix": {
          "description": "Valid card number prefix.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "ranges": {
          "description": "Collection of card number ranges.",
          "$ref": "#/definitions/cardRangesType"
        },
        "rule": {
          "description": "Defines rules to be used for card validation.",
          "$ref": "#/definitions/cardValidationRuleTypeType"
        }
      }
    },
    "paymentMethods": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "paymentMethods": {
          "description": "Collection of payment methods.",
          "$ref": "#/definitions/paymentMethodsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "paymentMethodsCopy": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "paymentMethods": {
          "description": "List of payment methods to be copied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "paymentMethodsInfo": {
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "paymentMethods": {
          "description": "Collection of payment methods.",
          "$ref": "#/definitions/paymentMethodsType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "paymentMethodsType": {
      "description": "Holds the various types of payment methods.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/paymentMethodType"
      }
    },
    "paymentTrxCodeTypeType": {
      "description": "Other Payment Type Transaction.",
      "type": "string",
      "enum": [
        "Cash",
        "Check",
        "CreditCard",
        "Others"
      ]
    },
    "paymentTrxSetupType": {
      "description": "Payment Transaction Code setup details.",
      "type": "object",
      "properties": {
        "card": {
          "description": "Card payment setup information.",
          "$ref": "#/definitions/cardPaymentTrxSetupType"
        },
        "generateTaxInvoice": {
          "description": "Indicates if the Transaction Code payment will generate a Tax Invoice at the time of making a payment. Tax Invoices are used in Thailand.",
          "type": "boolean"
        },
        "iRS8300Reporting": {
          "description": "True indicates the Transaction Code payment will be reposted to IRS according to the rule specified by IRS.",
          "type": "boolean"
        },
        "paymentType": {
          "description": "Type of payment this transaction code represents.",
          "$ref": "#/definitions/paymentTrxCodeTypeType"
        },
        "roundingFactor": {
          "description": "True indicates the Transaction Code posting will have a rounding effect.",
          "type": "boolean"
        },
        "usage": {
          "description": "Payment Transaction Code usage information.",
          "$ref": "#/definitions/paymentTrxUsageType"
        }
      }
    },
    "paymentTrxUsageType": {
      "description": "Payment Transaction Code usage details.",
      "type": "object",
      "properties": {
        "aR": {
          "description": "True indicates the payment Transaction Code is used for AR payments.",
          "type": "boolean"
        },
        "cashier": {
          "description": "Indicates whether Profiles are shared across the Hotels within the chain or not.",
          "type": "boolean"
        },
        "comp": {
          "description": "True indicates the payment Transaction Code is used for Comp payments.",
          "type": "boolean"
        },
        "deposit": {
          "description": "True indicates the payment Transaction Code is used for deposits.",
          "type": "boolean"
        },
        "interHotelDeposit": {
          "description": "True indicates the payment Transaction Code is used for inter hotel deposits.",
          "type": "boolean"
        },
        "interHotelPayment": {
          "description": "True indicates the payment Transaction Code inter hotel payments.",
          "type": "boolean"
        }
      }
    },
    "percentageGenerateType": {
      "description": "Defines percentage rule for generates.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Percentage Amount.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "calculatedOn": {
          "description": "Calculation bucket the percentage generates are calculated against.",
          "$ref": "#/definitions/generateCalcBucketType"
        },
        "useTaxBracket": {
          "description": "Determines if tax bracket calculations are to apply to generates.",
          "type": "boolean"
        }
      }
    },
    "phoneNumberType": {
      "description": "Phone number",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "pointsType": {
      "description": "The Redeem Points contains the number of points required to book a room type.",
      "type": "object",
      "properties": {
        "awardsType": {
          "description": "Awards type for the award type rate code.",
          "type": "string"
        },
        "points": {
          "description": "No of points required to book this Room Stay.",
          "type": "integer"
        }
      }
    },
    "postingAccountType": {
      "type": "object",
      "properties": {
        "account": {
          "description": "Account of posting accounts in transaction codes setup.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "accountDescription": {
          "description": "Account description of posting accounts in transaction codes setup.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "autoBalance": {
          "description": "Auto balance flag of postings setup.",
          "type": "boolean"
        },
        "description": {
          "description": "Description of posting accounts in transaction codes setup.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "id": {
          "description": "Internal ID to reference the records.",
          "type": "number"
        },
        "paymentMethod": {
          "description": "Payment method of posting accounts in transaction codes setup.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "salesOutlet": {
          "description": "Sales outlet of posting accounts in transaction codes setup.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "transactionCode": {
          "description": "Transaction code of posting accounts in transaction codes setup.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "postingAmountType": {
      "type": "object",
      "properties": {
        "maximumAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "minimumAmount": {
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "postingBucket": {
      "description": "Holds the amount that will be stored in each bucket after posting.",
      "type": "object",
      "properties": {
        "bucket1": {
          "description": "Holds amount for sub-total 1.",
          "type": "number"
        },
        "bucket2": {
          "description": "Holds amount for sub-total 2.",
          "type": "number"
        },
        "bucket3": {
          "description": "Holds amount for sub-total 3.",
          "type": "number"
        }
      }
    },
    "postingInfoType": {
      "type": "object",
      "properties": {
        "articleNoPrefix": {
          "description": "Article Prefix of postings setup.",
          "type": "boolean"
        },
        "chargeScaling": {
          "description": "Charge scaling of postings setup.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "conversion": {
          "description": "Conversion of postings setup.",
          "type": "integer"
        },
        "dialedNumberMasking": {
          "description": "Type of number masking used for the dialed numbers in the particular interface.",
          "$ref": "#/definitions/maskDialNumberType"
        },
        "generatesTax": {
          "description": "IFC generate tax of postings setup.",
          "type": "boolean"
        },
        "noPostFlag": {
          "description": "No post flag of postings setup.",
          "type": "boolean"
        },
        "overrideCreditLimit": {
          "description": "Override credit limit of postings setup.",
          "type": "boolean"
        },
        "postType": {
          "description": "Post type of postings setup.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "postings": {
          "description": "Postings of postings setup.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "reference": {
          "description": "Reference of postings setup.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "referenceField": {
          "description": "Reference field of postings setup.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "supplement": {
          "description": "Supplement of postings setup.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "zeroChargePostings": {
          "description": "Zero charge posting of postings setup.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        }
      }
    },
    "postingLimitType": {
      "description": "Simple Type for Posting Limit Types.",
      "type": "string",
      "enum": [
        "Daily",
        "Monthly",
        "PerTransaction"
      ]
    },
    "postingRuleType": {
      "description": "Simple Type for Posting Rule Types.",
      "type": "string",
      "enum": [
        "AllNights",
        "DepositOnly",
        "FirstNight"
      ]
    },
    "prepaidCardBalanceDetails": {
      "description": "Response for fetch Prepaid card balance operation",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "prepaidCardDetails": {
          "description": "Prepaid Card balance details type.",
          "$ref": "#/definitions/prepaidCardInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "prepaidCardDetails": {
      "description": "Response for fetch Prepaid card operation",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "prepaidCardDetails": {
          "description": "Prepaid Card details type.",
          "$ref": "#/definitions/prepaidCardInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "prepaidCardDetailsType": {
      "description": "Prepaid Card Details.",
      "type": "object",
      "properties": {
        "activateDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "balanceTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "creditTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "expiredDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "initialCreditTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "initialLoadDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservedTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactions": {
          "description": "Holds fixed charge detail.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/prepaidCardTransactionType"
          }
        },
        "validUntilDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "prepaidCardInfoType": {
      "description": "Detailed information about the prepaid card.",
      "type": "object",
      "properties": {
        "availableCashoutAmount": {
          "description": "Available cashout of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Balance of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cardNo": {
          "description": "Prepaid card number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberMasked": {
          "description": "Masked Prepaid card / account number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "expiryDate": {
          "description": "Expiry Date of the prepaid card.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotelId": {
          "description": "Hotel context for the prepaid card.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "initialCredit": {
          "description": "Initial Credit of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "initialLoadDate": {
          "description": "Initial Load Date of the prepaid card.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "interfaceId": {
          "description": "The unique ID for the Interface.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "issueDate": {
          "description": "Issue Date of the prepaid card.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "operaTransactionsActive": {
          "description": "Indicate if opera transactions are included on the transactions list.",
          "type": "boolean"
        },
        "prepaidCardTransactions": {
          "description": "List of prepaid card transactions.",
          "$ref": "#/definitions/prepaidCardTransactionsType"
        },
        "reservationId": {
          "description": "The reservation name id where the transaction is associated.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reservedAmount": {
          "description": "Reserved Amount of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalCredit": {
          "description": "Total Credit of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalDebit": {
          "description": "Total Debt of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "validUntil": {
          "description": "Validity of the prepaid card amount.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "vendorTransactionsActive": {
          "description": "Indicate if vendor transactions are included on the transactions list.",
          "type": "boolean"
        }
      }
    },
    "prepaidCardTransactionInfoType": {
      "description": "Prepaid Card Transactions",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Prepaid card transaction amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cancellable": {
          "description": "Indicate if the transaction is cancellable or not.",
          "type": "boolean"
        },
        "date": {
          "description": "Prepaid card transaction date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "profileId": {
          "description": "The guest name id associated to the card.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "source": {
          "description": "Prepaid card transaction source.",
          "$ref": "#/definitions/prepaidCardTransactionSourceType"
        },
        "transactionNo": {
          "description": "Opera transaction number.",
          "type": "integer"
        },
        "type": {
          "description": "Prepaid card transaction type.",
          "$ref": "#/definitions/prepaidCardTrxTypeType"
        },
        "vendorTransactionNo": {
          "description": "Vendor transaction number.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        }
      }
    },
    "prepaidCardTransactionSourceType": {
      "description": "Vendor transaction source type.",
      "type": "string",
      "enum": [
        "Opera",
        "Vendor"
      ]
    },
    "prepaidCardTransactionType": {
      "description": "Prepaid Card transaction.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Prepaid Card Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionDate": {
          "description": "Transaction number of the Prepaid card transaction.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Transaction number of the Prepaid card transaction.",
          "type": "number"
        },
        "transactionType": {
          "description": "Transaction type enumeration.",
          "$ref": "#/definitions/prepaidCardTrxTypeType"
        }
      }
    },
    "prepaidCardTransactionsType": {
      "description": "Prepaid card transaction details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/prepaidCardTransactionInfoType"
      }
    },
    "prepaidCardTrxTypeType": {
      "description": "Reload transaction.",
      "type": "string",
      "enum": [
        "Activate",
        "Cancel",
        "Cashout",
        "Inquiry",
        "Issue",
        "Redeem",
        "Reload"
      ]
    },
    "prepaidCardType": {
      "description": "Holds fixed charge information.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Prepaid Card Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cardDetails": {
          "description": "Prepaid Card details from vendor.",
          "$ref": "#/definitions/prepaidCardDetailsType"
        },
        "cardNo": {
          "description": "Prepaid card / account number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberMasked": {
          "description": "Masked Prepaid card / account number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "firstName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "giftCard": {
          "description": "Indicates a gift card type.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel context for the Reservations.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "interfaceId": {
          "description": "The unique ID for the Interface.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "pinCode": {
          "description": "Prepaid card pin code.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "profileId": {
          "description": "Card / Account holder name ID",
          "$ref": "#/definitions/profileId"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationId": {
          "description": "The unique ID of the reservation to which this record applies.",
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "prepaidCards": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "prepaidCards": {
          "description": "Prepaid Card details type.",
          "$ref": "#/definitions/prepaidCardsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "prepaidCardsType": {
      "description": "Holds fixed charge detail.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/prepaidCardType"
      }
    },
    "profileId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "profileIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "profileInfoType": {
      "description": "Provides information about attached profiles to the block.",
      "type": "object",
      "properties": {
        "city": {
          "description": "City for the profile attached to the block.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "name": {
          "description": "Name for the profile attached to the block.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "phone": {
          "description": "Phone for the profile attached to the block.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "profileId": {
          "description": "Opera ID for the profile attached to the block.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "type": {
          "description": "Defines the type of Linked profiles for a block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "promotionType": {
      "description": "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "type": "object",
      "properties": {
        "couponCode": {
          "description": "Promotion Coupon Code when promotion is setup to have a valid coupon code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "promotionCode": {
          "description": "Promotion code associated with the rate plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "promotionName": {
          "description": "Promotion code Name associated with the rate plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "queueTextInfoType": {
      "description": "Information regarding the message sent to guest.",
      "type": "object",
      "properties": {
        "sentBy": {
          "description": "User name of the user who sent message.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "sentTime": {
          "description": "Time the text was last sent to the user.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "rateCategoryType": {
      "description": "This type represents the rate category type.",
      "type": "object",
      "properties": {
        "rateCategory": {
          "description": "Rate category Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateCategoryDetails": {
          "description": "Begin date for the rate category.",
          "type": "object",
          "properties": {
            "beginDate": {
              "description": "Begin date for the rate category.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "description": {
              "description": "Description of rate category.",
              "type": "string",
              "maxLength": 200,
              "minLength": 0
            },
            "endDate": {
              "description": "End date for the rate category.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "rateClass": {
              "description": "Active date of the room category.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "sellSequence": {
              "description": "Indicates rate category sell sequence.",
              "type": "number"
            }
          }
        }
      }
    },
    "rateCodeInformationBaseType": {
      "description": "Budget Forecast information for budget segment code.",
      "type": "object",
      "properties": {
        "budgetRevenueInfo": {
          "description": "Budget Revenue information for a segment code.",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "forecastRevenueInfo": {
          "description": "Forecast Revenue information for a segment code.",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "rateCode": {
          "description": "Segment code for which budget forecast information is fetched.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateCodeDescription": {
          "description": "Segment code description for segment code.",
          "type": "string"
        }
      }
    },
    "rateCodeInformationType": {
      "description": "Budget Forecast information for budget segment code.",
      "type": "object",
      "properties": {
        "aBVarianceInfo": {
          "description": "Actual Budget Revenue variance for a segment code.",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        },
        "aFVarianceInfo": {
          "description": "Actual Forecast Revenue variance for a segment code.",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        },
        "actualRevenueInfo": {
          "description": "Actual Revenue information for a segment code.",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "budgetRevenueInfo": {
          "description": "Budget Revenue information for a segment code.",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "fBVarianceInfo": {
          "description": "Forecast Budget Revenue variance for a segment code.",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        },
        "forecastRevenueInfo": {
          "description": "Forecast Revenue information for a segment code.",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "rateCode": {
          "description": "Segment code for which budget forecast information is fetched.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateCodeDescription": {
          "description": "Segment code description for segment code.",
          "type": "string"
        }
      }
    },
    "rateCodeTotalInformationType": {
      "description": "Budget Forecast information for segment.",
      "type": "object",
      "properties": {
        "aBVarianceTotalInfo": {
          "description": "Actual Budget Revenue variance for a segment .",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        },
        "aFVarianceTotalInfo": {
          "description": "Actual Forecast Revenue variance for a segment .",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        },
        "actualTotalInfo": {
          "description": "Actual Revenue information for a segment .",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "budgetTotalInfo": {
          "description": "Budget Revenue information for a segment .",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "fBVarianceTotalInfo": {
          "description": "Forecast Budget Revenue variance for a segment .",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        },
        "forecastTotalInfo": {
          "description": "Forecast Revenue information for a segment .",
          "$ref": "#/definitions/revenueNightsInfoType"
        }
      }
    },
    "resAccessRestrictionType": {
      "description": "Indicates any Updates/Changes on the reservation as well as Reservation Cancellation are not allowed.",
      "type": "string",
      "enum": [
        "Change",
        "Cancel",
        "ChangeOrCancel"
      ]
    },
    "resAccompanyGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "resAccompanyGuestListType": {
      "description": "Collection of accompany guests",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAccompanyGuestInfoType"
      }
    },
    "resAttachedProfileListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAttachedProfileType"
      }
    },
    "resAttachedProfileType": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Attached profile name",
          "type": "string"
        },
        "profileIdList": {
          "description": "Collection of unique profile identifiers",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "resCashieringType": {
      "description": "Cashiering Information for the reservation.",
      "type": "object",
      "properties": {
        "bedTaxReporting": {
          "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
          "$ref": "#/definitions/bedTaxReportingType"
        },
        "billingPrivileges": {
          "description": "Billing privileges set on the reservation.",
          "$ref": "#/definitions/billingPrivilegesType"
        },
        "compAccounting": {
          "description": "Information regarding comp accounting on the reservation.",
          "$ref": "#/definitions/resCompAccountingType"
        },
        "financiallyResponsible": {
          "description": "The guest from whom payment has to be recovered (direct guest).",
          "type": "boolean"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "lastRoomAndTaxPostedDate": {
          "description": "Date of the last Room And Tax posting. Used primarily to know the date in case of Advance Billing.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "periodicFolio": {
          "description": "Information regarding periodic folios set on the reservation.",
          "$ref": "#/definitions/resPeriodicFolioType"
        },
        "proratedBilling": {
          "description": "In case of Appartment style billing indicates whether a prorated amount should be used for an Apartment Style Billing rate.",
          "type": "boolean"
        },
        "reservationPreConfiguredRoutingInstruction": {
          "description": "Information regarding the selected preconfigured routing instruction on the reservation.",
          "$ref": "#/definitions/resPreConfiguredRoutingInstrType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "reverseAdvanceCheckInAllowed": {
          "description": "This attribute is to verify if reverse advance check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/reservationTaxTypeInfo"
        },
        "transactionsPosted": {
          "description": "Specifies whether reservation has a financial transaction associated with it.",
          "type": "boolean"
        }
      }
    },
    "resCommunicationType": {
      "description": "Communication details for a reservation.",
      "type": "object",
      "properties": {
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        }
      }
    },
    "resCompAccountingType": {
      "description": "Information regarding comp accounting on the reservation.",
      "type": "object",
      "properties": {
        "authorizer": {
          "description": "ID of the employee who will act as the host for this guest.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "compPostings": {
          "description": "Indicates if the Comp Billing/posting Exist",
          "type": "string",
          "maxLength": 5,
          "minLength": 0
        },
        "compType": {
          "description": "Code used to identify the casino comp type and ranking of a guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resExpectedTimesType": {
      "description": "Holds the Arrival and Departure Time Information",
      "type": "object",
      "properties": {
        "reservationExpectedArrivalTime": {
          "description": "Arrival Time",
          "type": "string",
          "format": "date-time"
        },
        "reservationExpectedDepartureTime": {
          "description": "Departure Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "resGuaranteeType": {
      "description": "Validations type record returned after Validations are done.",
      "type": "object",
      "properties": {
        "guaranteeCode": {
          "description": "Guarantee Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "onHold": {
          "description": "Guarantee Code.",
          "type": "boolean"
        },
        "shortDescription": {
          "description": "Guarantee Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "resGuestExternalInfoType": {
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "type": "object",
      "properties": {
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        }
      }
    },
    "resGuestInfoType": {
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "type": "object",
      "properties": {
        "accompanyGuests": {
          "description": "List of guest names that are accompanying the reservation guest",
          "$ref": "#/definitions/resAccompanyGuestListType"
        },
        "address": {
          "description": "Address information that is attached to the reservation guest",
          "$ref": "#/definitions/addressSearchType"
        },
        "alternateFullName": {
          "description": "Altername full display name",
          "type": "string"
        },
        "alternateGivenName": {
          "description": "Alternate given name, first name or names",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "alternateSurname": {
          "description": "Alternate family name, last name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "birthDate": {
          "description": "Date of birth",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "email": {
          "description": "Email address",
          "$ref": "#/definitions/basicEmailType"
        },
        "externalInfo": {
          "description": "External information about the guest associated with the reservation.",
          "$ref": "#/definitions/resGuestExternalInfoType"
        },
        "fullName": {
          "description": "Full display name",
          "type": "string"
        },
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "guestLastStayInfo": {
          "description": "Contains information regarding the last stay of this guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "guestRestricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        },
        "guestRestrictedCode": {
          "description": "Guest profile restricted reason code",
          "type": "string"
        },
        "guestRestrictedReasonDesc": {
          "description": "Guest profile restricted reason description",
          "type": "string"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "membership": {
          "description": "The Membership object identifying the frequent customer reward program.",
          "$ref": "#/definitions/membershipInfoType"
        },
        "middleName": {
          "description": "The middle name of the person name",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
          "$ref": "#/definitions/namePrefixType"
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nameType": {
          "$ref": "#/definitions/nameTypeType"
        },
        "nationality": {
          "description": "Affiliation or ethnicity to a particular country.",
          "$ref": "#/definitions/countryNameType"
        },
        "phoneNumber": {
          "description": "Phone number",
          "$ref": "#/definitions/phoneNumberType"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        },
        "surnamePrefix": {
          "description": "e.g \"van der\", \"von\", \"de\"",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "vip": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "$ref": "#/definitions/vIPType"
        }
      }
    },
    "resHousekeepingType": {
      "description": "Holds housekeeping turndown service information for the room.",
      "type": "object",
      "properties": {
        "expectedServiceTime": {
          "description": "Expected Start Time for housekeeping task(s).",
          "type": "string"
        },
        "facilityTaskInfo": {
          "description": "The facility task applicable for the current day. This will be information only and not used for any updates.",
          "$ref": "#/definitions/facilityTaskType"
        },
        "instructions": {
          "description": "Turndown instructions for the room.",
          "type": "string"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "roomStatus": {
          "description": "Current room status. Current room status is populated only if room is assigned to the reservation and reservation is due in or in house.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "serviceTime": {
          "description": "This is the Turndown room service time.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "turndownRequested": {
          "description": "Indicates whether guest wants turndown facility or not.",
          "type": "boolean"
        }
      }
    },
    "resMobileNotificationsType": {
      "description": "Contains the status of Room Ready and Key Ready messages.",
      "type": "object",
      "properties": {
        "checkoutMessageReceived": {
          "description": "Indicates if the Mobile checkout message is received.",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Error message when Mobile Notification has failed.",
          "type": "string"
        },
        "keyReady": {
          "description": "Denotes the status of Key Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "requiresAction": {
          "description": "Indicates if user action is required. The action could be for sending Room Ready or Key Ready Notification. It could also be for initiating Checkout",
          "type": "boolean"
        },
        "roomReady": {
          "description": "Denotes the status of Room Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        }
      }
    },
    "resPaymentCardType": {
      "description": "Information on a credit card for the customer.",
      "type": "object",
      "properties": {
        "approvalAmountNeeded": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "Approval code sent by the credit card company on a successful authorization.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "attachCreditCardToProfile": {
          "description": "Attach the credit card to profile.",
          "type": "boolean"
        },
        "cardHolderName": {
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cardNumber": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberMasked": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardOrToken": {
          "description": "This contains information on whether credit card is tokenized (token enabled). A value of 'Token' indicates credit card is token enabled and 'CardNumber' indicates non token environment for this payment card type.",
          "$ref": "#/definitions/cardNumberTypeType"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
          "type": "boolean"
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "currentAuthorizedAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "expirationDate": {
          "description": "Expiration date of the credit card",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expirationDateExpired": {
          "type": "boolean"
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "swiped": {
          "type": "boolean"
        },
        "userDefinedCardType": {
          "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
          "type": "string",
          "maxLength": 2,
          "minLength": 0
        }
      }
    },
    "resPeriodicFolioType": {
      "description": "Information regarding periodic folios set on the reservation.",
      "type": "object",
      "properties": {
        "frequency": {
          "description": "Frequency in number of days when folios should be printed for this reservation.",
          "type": "integer"
        },
        "lastFolioDate": {
          "description": "Latest date when a folio was printed using the \"Periodic Batch Folios\" option",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastSettlementDate": {
          "description": "Latest date when a direct bill settlement was automatically done using the \"Direct Bill Batch Folios\" option.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "resPreConfiguredRoutingInstrType": {
      "description": "Instruction to attach Pre-Configured Routing Instructions to a Reservation.",
      "type": "object",
      "properties": {
        "authorizerInfo": {
          "description": "The authorizer information for Promotion Code with attached Complimentary Routing",
          "$ref": "#/definitions/authorizerInfoType"
        },
        "profileType": {
          "description": "Profile Type with attached Routing Instruction.",
          "$ref": "#/definitions/resProfileTypeType"
        },
        "promotionCode": {
          "description": "Promotion Code with attached Complimentary Routing.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "Rate Code with attached Routing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resProfileTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Group",
        "TravelAgent",
        "Source",
        "ReservationContact",
        "BillingContact",
        "Addressee"
      ]
    },
    "resRevenueBalanceType": {
      "description": "Revenue and Balance Amount summary for the reservation.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "Balance amount on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "foodAndBevRevenue": {
          "description": "Food and Beverage Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "nonRevenue": {
          "description": "Total Non Revenue posted on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "otherRevenue": {
          "description": "Other Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomRevenue": {
          "description": "Room Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalFixedCharge": {
          "description": "Total Fixed Charges on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPayment": {
          "description": "Total payment received for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalRevenue": {
          "description": "Total Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "resSharedGuestInfoType": {
      "description": "Contains information regarding the share reservation.",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "profileId": {
          "$ref": "#/definitions/profileId"
        }
      }
    },
    "resSharedGuestListType": {
      "description": "Collection of shared guest reservations.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resSharedGuestInfoType"
      }
    },
    "reservationAllowedActionType": {
      "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
      "type": "string",
      "enum": [
        "Cancel",
        "Move",
        "PreCharge",
        "PostCharge",
        "FacilitySchedule",
        "Upsell",
        "PreCheckIn",
        "PostToNoShowCancel",
        "NoShow",
        "NameChange",
        "Discount",
        "EnrollToPrimaryMembership",
        "EnrollInProgress"
      ]
    },
    "reservationAllowedActionsType": {
      "description": "Allowed action.",
      "type": "array",
      "maxItems": 11,
      "items": {
        "$ref": "#/definitions/reservationAllowedActionType"
      }
    },
    "reservationBasedCommissionType": {
      "description": "Reservation based commission details.",
      "type": "object",
      "properties": {
        "commissionPaidDetails": {
          "$ref": "#/definitions/commissionPaidDetailsType"
        }
      }
    },
    "reservationBlockType": {
      "description": "Key information about the block for a reservation.",
      "type": "object",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers for the reservation.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "The Name of the block that is attached to the reservation.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "This is the HotelCode of the Block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationDepositType": {
      "description": "Reservation Deposit Type.",
      "type": "object",
      "properties": {
        "amountOwed": {
          "description": "Deposit Amount Owed.",
          "type": "number"
        },
        "amountPaid": {
          "description": "Deposit Amount Paid.",
          "type": "number"
        },
        "amountRequired": {
          "description": "Deposit Amount Required.",
          "type": "number"
        },
        "dueDate": {
          "description": "Deposit Due Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hasOutstanding": {
          "description": "Resolves whether reservation has outstanding deposit.",
          "type": "boolean"
        },
        "hasPaid": {
          "description": "Resolves whether reservation has paid deposit.",
          "type": "boolean"
        },
        "postingDate": {
          "description": "Deposit Posting Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "reservationFolioWindowType": {
      "description": "Folio window view which holds the set of folios for a reservation.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "Running balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "payeeInfo": {
          "description": "The window's configured payee information.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "paymentMethod": {
          "description": "Payment Method Type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationFolioWindowsType": {
      "description": "Collection of reservation folio windows.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationFolioWindowType"
      }
    },
    "reservationId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "reservationIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "reservationInfoType": {
      "description": "The Reservation class contains the current reservation being created or altered.",
      "type": "object",
      "properties": {
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "allowedActions": {
          "description": "Collection of reservation allowed actions.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "cancellationInfo": {
          "description": "Information regarding why reservation has been/was cancelled.",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "description": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          }
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "commissionPayoutTo": {
          "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
          "$ref": "#/definitions/commissionPayoutToType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "deposit": {
          "description": "Holds reservation deposit information.",
          "$ref": "#/definitions/reservationDepositType"
        },
        "displayColor": {
          "description": "Color setting of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "expectedServiceTime": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "guestPreferredCurrency": {
          "description": "Currency code preferred by guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelInterfaceStatusList": {
          "description": "Collection of Hotel Interfaces and rights, this is populated only when fetching interface status for rooms.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInterfaceStatusType"
          }
        },
        "hotelName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "housekeeping": {
          "description": "Information regarding housekeeping for this reservation.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "keyCount": {
          "description": "Number of keys created for the reservation.",
          "type": "integer"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastPrivacyPromptDate": {
          "description": "Last Privacy Prompt Date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready, Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "openFolio": {
          "description": "Returns true when reservation has an open folio.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.",
          "type": "boolean"
        },
        "paymentMethod": {
          "description": "Payment Method.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preRegistered": {
          "description": "Defines if the reservation is pre-registered or not.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "reservationFolioWindows": {
          "description": "Collection of reservation folio windows.",
          "$ref": "#/definitions/reservationFolioWindowsType"
        },
        "reservationGuest": {
          "description": "Collection of guests associated with the reservation.",
          "$ref": "#/definitions/resGuestInfoType"
        },
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "reservationPaymentMethod": {
          "description": "Payment method used for this reservation",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "roomStatus": {
          "description": "Current room status",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "specials": {
          "description": "Set of reservation preferences which belongs to the Specials group.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/taxTypeType"
        },
        "turndownInfo": {
          "description": "Currency code preferred by guest.",
          "$ref": "#/definitions/reservationTurndownInfoType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is not in Waitlist status anymore.",
          "$ref": "#/definitions/waitlistResType"
        },
        "walkInIndicator": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "welcomeOffer": {
          "description": "This flag will determine wheather the reservation is eligible for Welcome Offer or not.",
          "type": "boolean"
        }
      }
    },
    "reservationInterfaceStatusType": {
      "description": "Hotel Interface Type for a reservation and status of the various services",
      "type": "object",
      "properties": {
        "hotelInterface": {
          "description": "Hotel interface information for the reservation",
          "$ref": "#/definitions/hotelInterfaceType"
        },
        "interfaceRights": {
          "description": "Contains a list of status/rights for the various services under this interface",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceRightsStatusType"
          }
        },
        "roomExtension": {
          "description": "Identifier for the room extension",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationPaymentMethodType": {
      "type": "object",
      "properties": {
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            }
          }
        },
        "folioView": {
          "type": "integer"
        },
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "paymentMethod": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationQueueInformationType": {
      "description": "Information regarding the Date, Duration and Priority of the reservation on Queue for Check in.",
      "type": "object",
      "properties": {
        "averageQueueTimeCurrentReservations": {
          "description": "The average time, in seconds, of the reservations currently in queue.",
          "type": "integer"
        },
        "averageQueueTimeToCheckIn": {
          "description": "The average time, in seconds, a reservation was on queue prior to Check-In.",
          "type": "integer"
        },
        "guestTextInfo": {
          "description": "Information for the message sent to the user",
          "$ref": "#/definitions/queueTextInfoType"
        },
        "priority": {
          "description": "The Queue Priority given to this reservation.",
          "type": "integer"
        },
        "queueDate": {
          "description": "The Business date on which the reservation was due to arrive and is currently placed on Queue for Check In.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "timeSpan": {
          "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
          "type": "object",
          "properties": {
            "duration": {
              "type": "string"
            },
            "durationInSeconds": {
              "description": "The total duration, in seconds, the reservation is on Queue.",
              "type": "integer"
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        }
      }
    },
    "reservationTaxTypeInfo": {
      "description": "Provides information about the Tax Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "taxExemptNo": {
          "description": "Tax exempt number on the profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationTurndownInfoType": {
      "description": "Turndown information for a reservation",
      "type": "object",
      "properties": {
        "allowed": {
          "description": "Indicates if turndown is allowed or not",
          "type": "boolean"
        },
        "status": {
          "description": "Indicates turndown status, values could be required, not required, completed",
          "$ref": "#/definitions/turndownStatusType"
        }
      }
    },
    "revenueBasedCommissionType": {
      "description": "Revenue based commission details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionCodeTransactionType"
      }
    },
    "revenueBucketCodeType": {
      "description": "This gives detailed information about a trx code arrangement.",
      "type": "object",
      "properties": {
        "bucketType": {
          "description": "Flag to identify Fiscal related bucket types.",
          "$ref": "#/definitions/bucketTypeType"
        },
        "bucketValue": {
          "description": "Stores the default value for the arrangement code for revenue buckets in order to group transaction codes.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "code": {
          "description": "Code is used to identify a trx code arrangement.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the trx code arrangement code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "Identifies the hotel code for which the trx code arrangement is specified.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "pointsEligible": {
          "description": "Bucket is eligible for membership points",
          "type": "boolean"
        },
        "revenueBucketType": {
          "description": "This holds Revenue Bucket Type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionCodes": {
          "description": "Collection of transaction codes which form the trx code arrangement.",
          "$ref": "#/definitions/trxCodesInfoType"
        }
      }
    },
    "revenueBucketCodes": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "revenueBucketCodes": {
          "description": "Collection of Revenue Bucket Codes configurations.",
          "$ref": "#/definitions/revenueBucketCodesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "revenueBucketCodesCopy": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "revenueBucketCodes": {
          "description": "List of the Revenue Bucket Codes to be copied to hotel code(s)",
          "$ref": "#/definitions/configCopyRevenueBucketCodeType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "revenueBucketCodesType": {
      "description": "Details for Revenue Bucket codes along with associated transaction codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/revenueBucketCodeType"
      }
    },
    "revenueBucketTypeType": {
      "description": "Provides information about Revenue Bucket Types.",
      "type": "object",
      "properties": {
        "bucketTrxCodes": {
          "description": "Provides ability to configure same transaction code in multiple buckets.",
          "type": "boolean"
        },
        "bucketType": {
          "description": "Flag to identify Fiscal related bucket types.",
          "$ref": "#/definitions/bucketTypeType"
        },
        "code": {
          "description": "Revenue Bucket Type Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Revenue Bucket Type Description",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "revenueBucketTypes": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "revenueBucketTypes": {
          "description": "Collection of Revenue Bucket Types configurations.",
          "$ref": "#/definitions/revenueBucketTypesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "revenueBucketTypesCopy": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "revenueBucketTypes": {
          "description": "List of the Revenue Bucket Types to be copied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "revenueBucketTypesType": {
      "description": "Holds Revenue Bucket Type details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/revenueBucketTypeType"
      }
    },
    "revenueNightsInfoType": {
      "description": "Revenue information for a segment code. Holds total and monthly revenue information.",
      "type": "object",
      "properties": {
        "monthlyRevenueInfo": {
          "description": "Revenue information for each month for segment code.",
          "type": "array",
          "maxItems": 12,
          "items": {
            "$ref": "#/definitions/monthlyRevenueNightsInfoType"
          }
        },
        "totalNights": {
          "description": "Total Nights for segment code.",
          "type": "number"
        },
        "totalRevenue": {
          "description": "Total revenue for segment code.",
          "type": "number"
        }
      }
    },
    "revenueNightsVarianceInfoType": {
      "description": "Monthly Revenue Variance information.",
      "type": "array",
      "maxItems": 12,
      "items": {
        "$ref": "#/definitions/monthlyRevenueNightsVarianceInfoType"
      }
    },
    "revenueTypeMapping": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "revenueTypeMapping": {
          "description": "Revenue type mapping to be changed.",
          "$ref": "#/definitions/revenueTypeMappingType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "revenueTypeMappingCopy": {
      "description": "Request object for Copying Revenue Type Mapping.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for copying Revenue Type Mapping.",
          "$ref": "#/definitions/copyRevenueTypeMappingCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "revenueTypeMappingList": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "revenueTypeMappingList": {
          "description": "Collection of Revenue Type mapping configurations.",
          "$ref": "#/definitions/revenueTypeMappingListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "revenueTypeMappingListType": {
      "description": "Collection of multiple Revenue type mapping codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/revenueTypeMappingType"
      }
    },
    "revenueTypeMappingType": {
      "description": "Type used for Revenue Type mapping.",
      "type": "object",
      "properties": {
        "cateringOnly": {
          "description": "Flag to indicate if the Revenue Type is used for catering or event only.",
          "$ref": "#/definitions/cateringOnlyType"
        },
        "eventType": {
          "description": "Provides information about the Event Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code to which the Revenue Type Mapping belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "revenueType": {
          "description": "Provides information about the Revenue Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "revenueTypeMappingId": {
          "description": "Unique Identifier for Revenue Type Mapping.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "serviceCharge": {
          "description": "Service Charge for the Revenue Type.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "serviceChargeCalulationMethod": {
          "description": "Service Charge for the Revenue Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "serviceChargeTrxCode": {
          "description": "Service Charge for the Revenue Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "space": {
          "description": "Provides information about the Space/Location for the Revenue Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionCode": {
          "description": "Transaction code for the Revenue Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "roleLevelType": {
      "type": "string",
      "enum": [
        "Global",
        "Template",
        "Chain",
        "Brand",
        "Property"
      ]
    },
    "roomClassCodeInfoType": {
      "description": "Code of the room class type.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomClassCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "routingInstructions": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "routingInstructions": {
          "description": "Collection of routing instructions fetched.",
          "$ref": "#/definitions/configRoutingInstructionsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "routingInstructionsCopy": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "routingInstructions": {
          "description": "List of the routing instructions to be copied to hotel code(s).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "sVTransactionType": {
      "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
      "type": "string",
      "enum": [
        "OperaTransaction",
        "VendorTransaction",
        "OperaAndVendorTransaction"
      ]
    },
    "scopeType": {
      "description": "Minimum required and complimentary values are applicable Per Stay.",
      "type": "string",
      "enum": [
        "PerDay",
        "PerStay"
      ]
    },
    "searchMatchType": {
      "description": "Search match indicating attribute and the matching value.",
      "type": "object",
      "properties": {
        "attribute": {
          "description": "Search match attribute.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "value": {
          "description": "Search match value.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "searchMatchesType": {
      "description": "List of Generic Name-Value-Pair Parameters used for super search matches.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/searchMatchType"
      }
    },
    "segmentNameType": {
      "description": "Forecast.",
      "type": "string",
      "enum": [
        "Market",
        "Rate",
        "Custom",
        "Transaction",
        "Catering"
      ]
    },
    "serialPortConfigType": {
      "type": "object",
      "properties": {
        "baudRate": {
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "dataBits": {
          "type": "integer"
        },
        "parity": {
          "type": "string",
          "enum": [
            "Odd",
            "Even"
          ]
        },
        "portNumber": {
          "description": "IP address of the interface server",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "stopBits": {
          "type": "integer"
        }
      }
    },
    "sourceCodeInfoType": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceGroup": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "sourceOfSaleType": {
      "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
      "type": "object",
      "properties": {
        "sourceCode": {
          "description": "The entity/channel who made the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceType": {
          "description": "Type of entity/channel who made the reservation..",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "statementType": {
      "description": "The Types of Statements that can be used on an Account Type.",
      "type": "string",
      "enum": [
        "BalanceForward",
        "IndividualOpenItems"
      ]
    },
    "status": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "statusTypes": {
      "description": "Defines status in terms of time.",
      "type": "string",
      "enum": [
        "Future",
        "Current",
        "Past"
      ]
    },
    "stayInfoType": {
      "description": "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.",
      "type": "object",
      "properties": {
        "adultCount": {
          "description": "A collection of Guest Counts associated with Room Stay.",
          "type": "integer"
        },
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "balance": {
          "description": "Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "bookingChannelCode": {
          "description": "Booking channel code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "childCount": {
          "description": "A collection of Child Counts associated with Room Stay.",
          "type": "integer"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "componentRoomType": {
          "description": "True indicates room type is a component type.",
          "type": "boolean"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "depositPayments": {
          "description": "A collection of deposit and/or payments for the Room Stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "expectedTimes": {
          "description": "The expected arrival, return and departure times of the guest.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "fixedRate": {
          "description": "True if the rate is a fixed rate, otherwise false",
          "type": "boolean"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "guestServiceStatus": {
          "description": "Service Status of In House guest like DND or MUP",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "linkCode": {
          "description": "Party code",
          "type": "string",
          "maxLength": 2000
        },
        "marketCode": {
          "description": "Market code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketDescription": {
          "description": "Description of Market code",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "numberOfRooms": {
          "description": "Room Id",
          "type": "integer"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "points": {
          "description": "The Points contains the number of points used to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "promotion": {
          "description": "Promotion Codes",
          "$ref": "#/definitions/promotionType"
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "ratePlanCode": {
          "description": "Rate plan code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateSuppressed": {
          "description": "Whether this rate should be suppressed from view",
          "type": "boolean"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "roomClass": {
          "description": "Room class code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomId": {
          "description": "Room Id",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "roomType": {
          "description": "Room type code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomTypeCharged": {
          "description": "Room type code that was charged",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "scheduledCheckoutTime": {
          "description": "Indicates that this reservation is scheduled for automated check out.",
          "type": "string",
          "format": "date"
        },
        "sourceCode": {
          "description": "Source of business",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "totalAmount": {
          "description": "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "upgradedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "stopProcessingReasonType": {
      "description": "Details for Stop Processing Reason.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code is used to identify a Stop Processing Reason.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Stop Processing Reason.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "displaySequence": {
          "description": "Stop Processing Reason display sequence Number.",
          "type": "number"
        }
      }
    },
    "stopProcessingReasons": {
      "description": "Response object for fetching Stop Processing Reason.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "stopProcessingReasons": {
          "description": "Collection of Stop Processing Reasons.",
          "$ref": "#/definitions/stopProcessingReasonsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stopProcessingReasonsType": {
      "description": "List of the Stop Processing Reasons to be configured or fetched",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/stopProcessingReasonType"
      }
    },
    "surchargeType": {
      "description": "Surcharge information regarding the payment configuration.",
      "type": "object",
      "properties": {
        "minimum": {
          "description": "Indicates the minimum credit card transaction amount for which the surcharge applies.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percentage": {
          "description": "Indicates the percentage amount for a credit card transaction.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        }
      }
    },
    "surnameType": {
      "description": "Family name, last name.",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "tCPConfigType": {
      "type": "object",
      "properties": {
        "iPAddress": {
          "description": "IP address of the interface server",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "portNumber": {
          "description": "Logical Port assignment",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "taxBracketAmountType": {
      "description": "Details used for storing information about a tax bracket amount.",
      "type": "object",
      "properties": {
        "endAmount": {
          "description": "Bracket End amount for this tax. If the net amount falls within the Bracket Start and End amount, the tax defined is applied as the tax amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "startAmount": {
          "description": "Bracket Start amount for this tax. If the net amount falls within the Bracket Start and End amount, the tax defined is applied as the tax amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "taxAmount": {
          "description": "Tax amount which should be applied.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "taxBracketAmountsType": {
      "description": "Details used for storing information about a tax bracket amount.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/taxBracketAmountType"
      }
    },
    "taxBracketType": {
      "description": "This gives information for uniquely identifying a tax bracket detail.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the Tax Bracket.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "hotelId": {
          "description": "Hotel Code where tax bracket belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "taxBracketAmounts": {
          "description": "List of tax bracket amount details.",
          "$ref": "#/definitions/taxBracketAmountsType"
        },
        "taxPercentage": {
          "description": "Tax Percentage for which this Tax Bracket applies.",
          "type": "number"
        },
        "threshold": {
          "description": "The threshold(max) amount for which Tax Brackets are defined for this percentage.",
          "type": "number"
        }
      }
    },
    "taxBrackets": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "taxBrackets": {
          "description": "Collection containing information of tax brackets.",
          "$ref": "#/definitions/taxBracketsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxBracketsCopy": {
      "type": "object",
      "properties": {
        "copyInstructions": {
          "description": "List of the Tax Brackets details to be copied to hotel(s).",
          "$ref": "#/definitions/copyConfigurationCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxBracketsType": {
      "description": "Details used for storing information about a tax bracket.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/taxBracketType"
      }
    },
    "taxCategoryCodeType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "taxCategoryCodesCriteria": {
      "description": "Request object for creating Tax Category Codes.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "taxCategoryCodes": {
          "description": "Tax Category Codesto be created.",
          "$ref": "#/definitions/taxCategoryCodesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxCategoryCodesDetails": {
      "description": "Response object for fetching Tax Category Codes.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "taxCategoryCodes": {
          "description": "Collection of Tax Category Codes.",
          "$ref": "#/definitions/taxCategoryCodesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxCategoryCodesToBeChanged": {
      "description": "Request object for changing Tax Category Codes.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "taxCategoryCodes": {
          "description": "Tax Category Codesto be changed.",
          "$ref": "#/definitions/taxCategoryCodesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxCategoryCodesType": {
      "description": "List of Tax Category Codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/taxCategoryCodeType"
      }
    },
    "taxCodeSeqType": {
      "description": "Primary Key Sequence.",
      "type": "integer",
      "maximum": 5,
      "minimum": 1
    },
    "taxOfficeType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "taxOfficesCriteria": {
      "description": "Request object for creating Tax Offices.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "taxOffices": {
          "description": "Tax Officesto be created.",
          "$ref": "#/definitions/taxOfficesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxOfficesDetails": {
      "description": "Response object for fetching Tax Offices.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "taxOffices": {
          "description": "Collection of Tax Offices.",
          "$ref": "#/definitions/taxOfficesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxOfficesToBeChanged": {
      "description": "Request object for changing Tax Offices.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "taxOffices": {
          "description": "Tax Officesto be changed.",
          "$ref": "#/definitions/taxOfficesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxOfficesType": {
      "description": "List of Tax Offices.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/taxOfficeType"
      }
    },
    "taxTypeCalcRuleType": {
      "description": "Defines the Calculation Rule for the generate.",
      "type": "object",
      "properties": {
        "doNotPost": {
          "description": "Existence of this element indicates that generate will not be calculated/posted.",
          "$ref": "#/definitions/doNotPostGenerateType"
        },
        "flatAmount": {
          "description": "Defines Flat Amount rule for generates.",
          "$ref": "#/definitions/flatAmtGenerateType"
        },
        "percentage": {
          "description": "Defines percentage rule for generates.",
          "$ref": "#/definitions/percentageGenerateType"
        },
        "roundingMethod": {
          "description": "Defines the rounding method to be used.",
          "$ref": "#/definitions/generateRoundingMethodType"
        },
        "uDF": {
          "description": "Defines User Defined Function to calculate generates.",
          "$ref": "#/definitions/uDFGenerateType"
        }
      }
    },
    "taxTypeGenerateScheduleType": {
      "description": "Defines the Calculation Rule for the Tax Type for a specific date schedule",
      "type": "object",
      "properties": {
        "rule": {
          "description": "Defines percentage rule for generates.",
          "$ref": "#/definitions/taxTypeCalcRuleType"
        },
        "startDate": {
          "description": "Date when this schedule will be effective.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "taxTypeGenerateType": {
      "description": "Defines the Calculation Rules for the Tax Type",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "schedule": {
          "description": "Defines the Calculation Rule for the Tax Type for a specific date schedule",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/taxTypeGenerateScheduleType"
          }
        }
      }
    },
    "taxTypeType": {
      "description": "Provides information about the Tax Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        }
      }
    },
    "taxTypes": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "taxTypes": {
          "description": "Collection of Tax Type configurations.",
          "$ref": "#/definitions/taxTypesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxTypesCopy": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "taxType": {
          "description": "List of the Tax Types to be copied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxTypesGenerate": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "taxTypes": {
          "description": "Tax types fetched.",
          "$ref": "#/definitions/taxTypesGenerateType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxTypesGenerateType": {
      "description": "Defines the Calculation Rule for the Tax Type for a specific date schedule",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/taxTypeGenerateType"
      }
    },
    "taxTypesType": {
      "description": "Holds Tax Type details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/taxTypeType"
      }
    },
    "telephoneChargeType": {
      "description": "Auto Choose",
      "type": "string",
      "enum": [
        "0",
        "1",
        "2"
      ]
    },
    "telephoneInfoType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "telephoneType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "extension": {
          "description": "Extension to reach a specific party at the phone number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "templateCashierShiftDropLocationType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "templateCashierShiftDropLocationsCriteria": {
      "description": "Request object for creating Template Cashier Shift Drop Locations.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateCashierShiftDropLocations": {
          "description": "Template Cashier Shift Drop Locations to be created.",
          "$ref": "#/definitions/templateCashierShiftDropLocationsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateCashierShiftDropLocationsDetails": {
      "description": "Response object for fetching Template Cashier Shift Drop Locations.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateCashierShiftDropLocations": {
          "description": "Collection of Template Cashier Shift Drop Locations.",
          "$ref": "#/definitions/templateCashierShiftDropLocationsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateCashierShiftDropLocationsToBeChanged": {
      "description": "Request object for changing Template Cashier Shift Drop Locations.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateCashierShiftDropLocations": {
          "description": "Template Cashier Shift Drop Locations to be changed.",
          "$ref": "#/definitions/templateCashierShiftDropLocationsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateCashierShiftDropLocationsType": {
      "description": "List of Template Cashier Shift Drop Locations.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateCashierShiftDropLocationType"
      }
    },
    "templateCustomNumberConfig": {
      "description": "Request object to create a new template custom number configuration.",
      "type": "object",
      "properties": {
        "customNumberConfiguration": {
          "description": "Custom number template configuration to be created.",
          "$ref": "#/definitions/customNumberTemplateConfigurationType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateCustomNumberConfigDetails": {
      "description": "Response object for fetching template custom number configurations.",
      "type": "object",
      "properties": {
        "customNumberConfigurationList": {
          "description": "Collection of template custom number configurations.",
          "$ref": "#/definitions/customNumberTemplateConfigurationListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateTransactionCodeType": {
      "description": "Transaction Code configuration details.",
      "type": "object",
      "properties": {
        "adjustmentCode": {
          "description": "Transaction code to be used to make adjustments on the posting made using this transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "allowServiceRecovery": {
          "description": "Flag to identify if this transaction code already used as service recovery adjustment code.",
          "type": "boolean"
        },
        "amounts": {
          "description": "Default Amounts for the Transaction Codes.",
          "$ref": "#/definitions/trxCodeAmountsType"
        },
        "associatedTransactionCodes": {
          "description": "Code and description of the standard transaction code associated to this comp transaction code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "classification": {
          "description": "Transaction Code classification details.",
          "$ref": "#/definitions/trxCodeClassificationType"
        },
        "code": {
          "description": "Unique Transaction Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "compTransaction": {
          "description": "If true indicates this transaction codes is for Comp Accounting.",
          "type": "boolean"
        },
        "description": {
          "description": "Transaction Code descriptions.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "gLMapping": {
          "description": "Gl mapping for transaction codes specific to hotels like Hilton.",
          "$ref": "#/definitions/gLMappingType"
        },
        "generatesSetup": {
          "description": "Transaction code's generates setup.",
          "$ref": "#/definitions/generatesSetupType"
        },
        "mappingCodes": {
          "description": "Mapping code and value attached to Transaction Code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/exportMappingLinkedCodeType"
          }
        },
        "paymentSetup": {
          "description": "Payment Transaction Code configuration details.",
          "$ref": "#/definitions/paymentTrxSetupType"
        },
        "serviceRecoveryAdjustmentCode": {
          "description": "Transaction code to be used to make service recovery adjustments on the posting made using this transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionAdjustments": {
          "description": "Combination of Adjustment Reason Code and Transaction Adjustment Code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/transactionAdjustmentType"
          }
        },
        "trxSetup": {
          "description": "Transaction code setup/config details.",
          "$ref": "#/definitions/trxSetupType"
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "templateTransactionCodes": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactionCodes": {
          "description": "Collection of template transaction codes summary.",
          "$ref": "#/definitions/templateTransactionCodesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateTransactionCodesType": {
      "description": "Template transaction code configuration details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateTransactionCodeType"
      }
    },
    "templateTransactionGroups": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactionGroups": {
          "description": "Collection of template transaction groups.",
          "$ref": "#/definitions/templateTransactionGroupsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateTransactionGroupsType": {
      "description": "Template transaction groups.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionGroupType"
      }
    },
    "templateTransactionSubgroupIDType": {
      "description": "Information that uniquely identifies template transaction subgroups",
      "type": "object",
      "properties": {
        "group": {
          "description": "Template transaction group configuration code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "subgroup": {
          "description": "Template transaction subgroup configuration code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "templateTransactionSubgroupIDsType": {
      "description": "List of template transaction subgroup IDs",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateTransactionSubgroupIDType"
      }
    },
    "templateTransactionSubgroups": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactionSubgroups": {
          "description": "Collection of template transaction subgroups configuration.",
          "$ref": "#/definitions/templateTransactionSubgroupsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateTransactionSubgroupsType": {
      "description": "Template transaction subgroup configurations.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionSubgroupType"
      }
    },
    "thresholdDetailsType": {
      "description": "Type for the threshold elements.",
      "type": "object",
      "properties": {
        "complimentary": {
          "description": "The number of quantities, counts or minutes for which transaction diversion is allowed .",
          "type": "integer"
        },
        "entity": {
          "description": "Diversion entity type associated with the charge for the transaction diversion rule .",
          "$ref": "#/definitions/entityType"
        },
        "isEditable": {
          "description": "Configuring this flag to be TRUE will make the thresholds editable.",
          "type": "boolean"
        },
        "minRequired": {
          "description": "Minimum required number of quantities, counts or minutes that must be posted.",
          "type": "integer"
        },
        "scope": {
          "description": "Diversion scope for the transaction diversion rule.",
          "$ref": "#/definitions/scopeType"
        }
      }
    },
    "timeSpanDaysOfWeekType": {
      "description": "Container for Time span with days of week.",
      "type": "object",
      "properties": {
        "friday": {
          "type": "boolean"
        },
        "monday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        },
        "sunday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        }
      }
    },
    "timeSpanType": {
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "type": "object",
      "properties": {
        "duration": {
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "traceResolveType": {
      "type": "object",
      "properties": {
        "resolvedBy": {
          "description": "User that resolved the trace",
          "type": "string"
        },
        "resolvedOn": {
          "description": "Date the trace was resolved",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "traceTimeInfoType": {
      "type": "object",
      "properties": {
        "dateTimeSpan": {
          "description": "Time span for the trace.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "enteredBy": {
          "description": "User that entered this trace.",
          "type": "string"
        },
        "traceOn": {
          "description": "Date of the trace.",
          "type": "string",
          "format": "date-time"
        },
        "traceTime": {
          "description": "Time of the trace",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "traceType": {
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "departmentId": {
          "description": "Indicates the Department code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationId": {
          "description": "Reservation ID of the reservation for which the traces are to be retrieved.",
          "$ref": "#/definitions/reservationId"
        },
        "resolveInfo": {
          "description": "Information regarding the status of the trace",
          "$ref": "#/definitions/traceResolveType"
        },
        "timeInfo": {
          "description": "Date of the trace.",
          "$ref": "#/definitions/traceTimeInfoType"
        },
        "traceText": {
          "description": "The information this trace contains.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "trackItActionConfigType": {
      "description": "Track It Action Information Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Track It Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Track It Code.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "displaySequence": {
          "description": "Display Sequence.",
          "type": "number"
        },
        "hotelId": {
          "description": "Property to which the Track It Code is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates if the Track it Code is inactive.",
          "type": "boolean"
        },
        "status": {
          "description": "Status of the Track it Action.",
          "$ref": "#/definitions/trackItActionStatusType"
        },
        "trackItGroup": {
          "description": "Track it Group details for the Track it Code",
          "$ref": "#/definitions/trackItGroupType"
        }
      }
    },
    "trackItActionStatusType": {
      "description": "Defined Values for Status of the Track it Action.",
      "type": "string",
      "enum": [
        "Open",
        "Closed"
      ]
    },
    "trackItActionsConfigType": {
      "description": "Track It Action Collection element.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItActionConfigType"
      }
    },
    "trackItActionsCriteria": {
      "description": "Request object for creating new Track it Actions.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "trackItActions": {
          "description": "Track it Actions to be created.",
          "$ref": "#/definitions/trackItActionsConfigType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trackItActionsDetails": {
      "description": "Response object for fetching Track it Actions.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "trackItActions": {
          "description": "Collection of Track it Actions.",
          "$ref": "#/definitions/trackItActionsConfigType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trackItActionsToBeChanged": {
      "description": "Request object for changing existing Track it Actions.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "trackItActions": {
          "description": "Track it Actions to be changed.",
          "$ref": "#/definitions/trackItActionsConfigType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trackItGroupType": {
      "type": "object",
      "properties": {
        "baggage": {
          "description": "Indicates if the Track It belongs to the Baggage Group.",
          "type": "boolean"
        },
        "lost": {
          "description": "Indicates if the Track It belongs to the Lost Group.",
          "type": "boolean"
        },
        "parcel": {
          "description": "Indicates if the Track It belongs to the Parcel Group.",
          "type": "boolean"
        },
        "valet": {
          "description": "Indicates if the Track It belongs to the Valet Group.",
          "type": "boolean"
        }
      }
    },
    "trackItLocationConfigType": {
      "description": "Track It Location Information Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Track It Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Track It Code.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "displaySequence": {
          "description": "Display Sequence.",
          "type": "number"
        },
        "hotelId": {
          "description": "Property to which the Track It Code is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates if the Track it Code is inactive.",
          "type": "boolean"
        },
        "trackItGroup": {
          "description": "Track it Group details for the Track it Code",
          "$ref": "#/definitions/trackItGroupType"
        }
      }
    },
    "trackItLocationsConfigType": {
      "description": "Track It Locations Collection element.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItLocationConfigType"
      }
    },
    "trackItLocationsCriteria": {
      "description": "Request object for creating new Track it Locations.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "trackItLocations": {
          "description": "Track it Locations to be created.",
          "$ref": "#/definitions/trackItLocationsConfigType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trackItLocationsDetails": {
      "description": "Response object for fetching Track it Locations.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "trackItLocations": {
          "description": "Collection of Track it Locations.",
          "$ref": "#/definitions/trackItLocationsConfigType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trackItLocationsToBeChanged": {
      "description": "Request object for changing existing Track it Locations.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "trackItLocations": {
          "description": "Track it Locations to be changed.",
          "$ref": "#/definitions/trackItLocationsConfigType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trackItTypeConfigType": {
      "description": "Track It Type Information Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Track It Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Track It Code.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "displaySequence": {
          "description": "Display Sequence.",
          "type": "number"
        },
        "hotelId": {
          "description": "Property to which the Track It Code is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates if the Track it Code is inactive.",
          "type": "boolean"
        },
        "includePromptToSendMessage": {
          "description": "Indicator to send a message to the guest when a new trackit item is created.",
          "type": "boolean"
        },
        "messageCode": {
          "description": "Code of the Message to be sent.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "trackItGroup": {
          "description": "Track it Group details for the Track it Code",
          "$ref": "#/definitions/trackItGroupType"
        },
        "website": {
          "description": "Website associated with Track it type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "trackItTypesConfigType": {
      "description": "Track It Type Collection element.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItTypeConfigType"
      }
    },
    "trackItTypesCriteria": {
      "description": "Request object for creating new Track it Types.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "trackItTypes": {
          "description": "Track it Types to be created.",
          "$ref": "#/definitions/trackItTypesConfigType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trackItTypesDetails": {
      "description": "Response object for fetching Track it Types.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "trackItTypes": {
          "description": "Collection of Track it Types.",
          "$ref": "#/definitions/trackItTypesConfigType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trackItTypesToBeChanged": {
      "description": "Request object for changing existing Track it Types.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "trackItTypes": {
          "description": "Track it Types to be changed.",
          "$ref": "#/definitions/trackItTypesConfigType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionAdjustmentType": {
      "description": "Combination of Adjustment Reason Code and Transaction Adjustment Code.",
      "type": "object",
      "properties": {
        "adjustmentReasonCode": {
          "description": "Adjustment reason Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "adjustmentTransactionCode": {
          "description": "Adjustment Transaction Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "transactionArrangementCodeType": {
      "description": "This has arrangement codes association details for a transaction code.",
      "type": "object",
      "properties": {
        "dailyPlanCode": {
          "description": "Daily plan code that is associated with the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "expenseArrangementCode": {
          "description": "Expense arrangement code that is associated with the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "folioArrangementCode": {
          "description": "Folio arrangement code that is associated with the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "groupArrangementCode": {
          "description": "Group arrangement code that is associated with the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionCode": {
          "description": "Transaction code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "transactionArrangementCodes": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactionArrangementCodes": {
          "description": "Collection of transaction code with associated arrangement codes.",
          "$ref": "#/definitions/transactionArrangementCodesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionArrangementCodesType": {
      "description": "Contains transaction codes along with associated arrangement codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionArrangementCodeType"
      }
    },
    "transactionCodeAccessRoles": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactionAccessRoles": {
          "description": "Collection of User roles and their information",
          "$ref": "#/definitions/trxCodeAccessRolesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionCodeDetailType": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of transaction code setup.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "description": {
          "description": "Description of transaction code setup.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "dialedDigits": {
          "description": "Dialed digits of transaction code setup.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "itemizersShortInfo": {
          "description": "Itemizer short info of transaction code setup.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/itemizerShortInfoType"
          }
        },
        "lineType": {
          "description": "Line type of transaction code setup.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "paymentNum": {
          "description": "Payment number of transaction code setup.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "postRoute": {
          "description": "Post route of transaction code setup.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "revenueCenter": {
          "description": "Revenue center of transaction code setup.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "rowNum": {
          "description": "Row number of transaction code setup.",
          "type": "integer"
        },
        "servingPeriod": {
          "description": "Serving period of transaction code setup.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "terminal": {
          "description": "Terminal of transaction code setup.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "tipCode": {
          "description": "Tip code of transaction code setup.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "userId": {
          "description": "User id of transaction code setup.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        }
      }
    },
    "transactionCodeInfoType": {
      "type": "object",
      "properties": {
        "allChargesCode": {
          "description": "All charges code of transaction code setup",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "calcTrxCodePosting": {
          "description": "Calculated transaction code posting of transaction code setup",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "cashCreditCardPosting": {
          "description": "Cash or credit card posting of transaction code setup",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "differencePosting": {
          "description": "Difference posting of transaction code setup",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "itemizers": {
          "description": "Split information of transaction code setup.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/itemizerType"
          }
        },
        "miniBarCode": {
          "description": "Minibar charges code of transaction code setup",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "numberOfDialedDigits": {
          "description": "Number of dialed digits transaction code setup",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "postingAccounts": {
          "description": "Postings information of transaction codes setup.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/postingAccountType"
          }
        },
        "subtotalPosting": {
          "description": "Subtotal posting of transaction code setup",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "transactionCodes": {
          "description": "Split information of transaction code setup.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/transactionCodeDetailType"
          }
        }
      }
    },
    "transactionCodeInformationBaseType": {
      "description": "Budget Forecast information for Transaction segment code.",
      "type": "object",
      "properties": {
        "budgetInfo": {
          "description": "Budget revenue information for a Transaction code.",
          "$ref": "#/definitions/transactionInfoType"
        },
        "forecastInfo": {
          "description": "Forecast revenue information for a Transaction code.",
          "$ref": "#/definitions/transactionInfoType"
        },
        "transactionCode": {
          "description": "Transaction code for which budget forecast information is fetched.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionCodeDescription": {
          "description": "Transaction code description for Transaction code.",
          "type": "string"
        },
        "transactionCodeGrp": {
          "description": "Transaction code group of segment code.",
          "type": "string"
        }
      }
    },
    "transactionCodeInformationType": {
      "description": "Budget Forecast information for Transaction segment code.",
      "type": "object",
      "properties": {
        "aBVarianceInfo": {
          "description": "Actual Budget revenue variance for a Transaction code.",
          "$ref": "#/definitions/transactionVarianceInfoType"
        },
        "aFVarianceInfo": {
          "description": "Actual Forecast revenue variance for a Transaction code.",
          "$ref": "#/definitions/transactionVarianceInfoType"
        },
        "actualInfo": {
          "description": "Actual revenue information for a Transaction code.",
          "$ref": "#/definitions/transactionInfoType"
        },
        "budgetInfo": {
          "description": "Budget revenue information for a Transaction code.",
          "$ref": "#/definitions/transactionInfoType"
        },
        "fBVarianceInfo": {
          "description": "Forecast Budget revenue variance for a Transaction code.",
          "$ref": "#/definitions/transactionVarianceInfoType"
        },
        "forecastInfo": {
          "description": "Forecast revenue information for a Transaction code.",
          "$ref": "#/definitions/transactionInfoType"
        },
        "transactionCode": {
          "description": "Transaction code for which budget forecast information is fetched.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionCodeDescription": {
          "description": "Transaction code description for Transaction code.",
          "type": "string"
        },
        "transactionCodeGrp": {
          "description": "Transaction code group of segment code.",
          "type": "string"
        }
      }
    },
    "transactionCodeOwnership": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactionCodes": {
          "description": "Transaction Code and ownership status information.",
          "$ref": "#/definitions/changeTransactionCodeOwnershipType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionCodeTotalsInformationType": {
      "description": "Budget Forecast totals information for Transaction segment.",
      "type": "object",
      "properties": {
        "aBVarianceTotalInfo": {
          "description": "Actual Budget revenue variance for a Transaction.",
          "$ref": "#/definitions/transactionVarianceInfoType"
        },
        "aFVarianceTotalInfo": {
          "description": "Actual Forecast revenue variance for a Transaction.",
          "$ref": "#/definitions/transactionVarianceInfoType"
        },
        "actualTotalInfo": {
          "description": "Actual revenue information for a Transaction.",
          "$ref": "#/definitions/transactionInfoType"
        },
        "budgetTotalInfo": {
          "description": "Budget revenue information for a Transaction.",
          "$ref": "#/definitions/transactionInfoType"
        },
        "fBVarianceTotalInfo": {
          "description": "Forecast Budget revenue variance for a Transaction.",
          "$ref": "#/definitions/transactionVarianceInfoType"
        },
        "forecastTotalInfo": {
          "description": "Forecast revenue information for a Transaction.",
          "$ref": "#/definitions/transactionInfoType"
        }
      }
    },
    "transactionCodeTypeType": {
      "description": "Other Charges Transaction.",
      "type": "string",
      "enum": [
        "Lodging",
        "FoodAndBeverage",
        "Telephone",
        "Minibar",
        "Tax",
        "NonRevenue",
        "Others"
      ]
    },
    "transactionCodes": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "trxCodeUsages": {
          "description": "Contains a list of elements on which the transaction code is used. When attempting to set a transaction code as inactive, a check is performed to make sure the transaction code is not being used before the change operation can be performed. If there are usages, the change operation will fail and this element will be populated with the associated usages for reference.",
          "$ref": "#/definitions/trxCodeUsagesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionCodesCopy": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactionCodes": {
          "description": "List of the transaction codes to be copied.",
          "$ref": "#/definitions/copyTransactionCodesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionDiscount": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactionDiscount": {
          "description": "Request to create or change a Transaction Discount",
          "$ref": "#/definitions/hotelTransactionDiscountType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionDiscountCodeType": {
      "description": "The code type on which the transaction discount is based.",
      "type": "string",
      "enum": [
        "Article",
        "Transaction"
      ]
    },
    "transactionDiscountRuleType": {
      "description": "The rule type on which the transaction discount is based.",
      "type": "string",
      "enum": [
        "Membership"
      ]
    },
    "transactionDiscountType": {
      "description": "The type on which the transaction discount is based. e.g MembershipType , MembershipLevel",
      "type": "string",
      "enum": [
        "MembershipType",
        "MembershipLevel"
      ]
    },
    "transactionDiscounts": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactionDiscounts": {
          "description": "Collection of Transaction Discount Configurations.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelTransactionDiscountType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionDiscountsAttributeType": {
      "type": "object",
      "properties": {
        "transactionDiscountType": {
          "description": "Holds Transaction Discounts Attribute. e.g if the discount is applied to a membership type only or if it's applied to a membership level of a membership type.",
          "$ref": "#/definitions/transactionDiscountType"
        },
        "transactionDiscountTypeValue": {
          "description": "Holds the value of transaction discount type. e.g the value of the membership type can be given when transactionDiscountType is set to MembershipType",
          "type": "string",
          "maxLength": 200,
          "minLength": 1
        }
      }
    },
    "transactionDiversionRuleLevelType": {
      "description": "Reservation level.",
      "type": "string",
      "enum": [
        "Property",
        "Reservation"
      ]
    },
    "transactionDiversionRuleType": {
      "description": "A Transaction Diversion Rule Type",
      "type": "object",
      "properties": {
        "code": {
          "description": "Transaction Diversion Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "User defined message for the Transaction Diversion Rule.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "displaySequence": {
          "description": "User configured Sequence number.",
          "type": "number"
        },
        "hotelId": {
          "description": "Hotel code with which Transaction Diversion Rule is associated.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicator that tells whether the transaction diversion rule is active or not.",
          "type": "boolean"
        },
        "level": {
          "description": "Level of the Transaction Diversion rule that can be Property or Reservation.",
          "$ref": "#/definitions/transactionDiversionRuleLevelType"
        },
        "membership": {
          "description": "Membership type to consider while applying Diversion Instruction.",
          "$ref": "#/definitions/membershipTypeLevelType"
        },
        "targetRoom": {
          "description": "Room number to receive all the diverted transactions configured for this instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "thresholds": {
          "description": "Threshold Details related to the Transaction diversion rule.",
          "$ref": "#/definitions/thresholdDetailsType"
        },
        "transactionCodes": {
          "description": "Collection of Transaction Code List",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "type": {
          "description": "Transaction Diversion Rule Types",
          "$ref": "#/definitions/transactionDiversionRuleTypeType"
        },
        "vipCode": {
          "description": "VIP code to consider while applying Diversion Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "transactionDiversionRuleTypeType": {
      "description": "The rule type on which the Transaction Diversion Rule is based. If a reservation has any of the following code, Transaction Diversion rule gets active for that reservation",
      "type": "string",
      "enum": [
        "Vip",
        "Membership"
      ]
    },
    "transactionDiversionRules": {
      "type": "object",
      "properties": {
        "diversionRules": {
          "description": "Collection of Transaction Diversion Rule and their information",
          "$ref": "#/definitions/transactionDiversionRulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionDiversionRulesType": {
      "description": "Collection of Transaction Diversion Rule List",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionDiversionRuleType"
      }
    },
    "transactionGroup": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactionGroup": {
          "description": "Detailed transaction group configuration.",
          "$ref": "#/definitions/hotelTransactionGroupType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionGroupType": {
      "description": "Transaction Group configuration information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Transaction Group Configuration Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Transaction Group.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "sequence": {
          "description": "Display sequence for the code type.",
          "type": "integer"
        },
        "type": {
          "description": "Transaction type to which the corresponding transaction group belongs.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        }
      }
    },
    "transactionGroups": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactionGroups": {
          "description": "Collection of Transaction Groups Configuration.",
          "$ref": "#/definitions/hotelTransactionGroupsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionGroupsCopy": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactionGroups": {
          "description": "List of the transaction groups to be copied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionInfoType": {
      "description": "Revenue information for a TRANSACTION segment code. Holds total and monthly revenue information.",
      "type": "object",
      "properties": {
        "monthlyRevenueInfo": {
          "description": "Value information for each month for TRANSACTION segment code.",
          "type": "array",
          "maxItems": 12,
          "items": {
            "$ref": "#/definitions/monthlyTransactionInfoType"
          }
        },
        "totalRevenue": {
          "description": "Total Value for TRANSACTION segment code.",
          "type": "number"
        }
      }
    },
    "transactionSubgroupType": {
      "description": "Transaction Subgroup configuration Information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Transaction Subroup Configuration Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Transaction Subgroup.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "group": {
          "description": "Transaction Group Configuration Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "groupDescription": {
          "description": "Description of the Transaction Group.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "newGroup": {
          "description": "Use this attribute to update the existing group during change operation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sequence": {
          "description": "Display sequence for the code type.",
          "type": "integer"
        },
        "type": {
          "description": "Transaction type to which the corresponding transaction group belongs. This is an information only attribute.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        }
      }
    },
    "transactionSubgroupsCopy": {
      "type": "object",
      "properties": {
        "copyInstructions": {
          "description": "List of transactions subgroups that needs to be copied to the properties specified.",
          "$ref": "#/definitions/copyTransactionSubgroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionVarianceInfoType": {
      "description": "Monthly Revenue Variance information.",
      "type": "array",
      "maxItems": 12,
      "items": {
        "$ref": "#/definitions/monthlyTransactionVarianceInfoType"
      }
    },
    "translationTextType2000": {
      "description": "Contains Multiple translated texts and language codes.",
      "type": "object",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 2000.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationTextType4000": {
      "description": "Contains Multiple translated texts and language codes.",
      "type": "object",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 4000.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationType": {
      "type": "object",
      "properties": {
        "articles": {
          "description": "Translation article setup of a hotel interface.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceControlArticleType"
          }
        },
        "configuation": {
          "description": "Translation configuration of a hotel interface.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceControlCfgType"
          }
        },
        "defaultCharge": {
          "description": "Default charge of a translation setup.",
          "type": "integer"
        },
        "groupNoLength": {
          "description": "Group number length of a translation setup.",
          "type": "string",
          "maxLength": 2,
          "minLength": 0
        },
        "guestMessageIdLength": {
          "description": "Guest message id length of a translation setup.",
          "type": "string",
          "maxLength": 2,
          "minLength": 0
        },
        "guestNoLength": {
          "description": "Guest number length of a translation setup.",
          "type": "string",
          "maxLength": 2,
          "minLength": 0
        },
        "languages": {
          "description": "Translation languages setup of a hotel interface.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceControlLangType"
          }
        },
        "specifications": {
          "description": "Translation specifications setup of a hotel interface.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceControlSpecType"
          }
        }
      }
    },
    "translationsTextType": {
      "description": "Language code for the translation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "description": "Language code for the translation.",
        "type": "object",
        "properties": {
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          },
          "value": {
            "description": "Used for Character Strings, length 0 to 2000.",
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          }
        }
      }
    },
    "trxCodeAccessRoleType": {
      "description": "Role having access to set of transaction codes",
      "type": "object",
      "properties": {
        "code": {
          "description": "Role code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotel": {
          "description": "Transaction Codes associated with particular Hotel",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelTrxCodesAccessType"
          }
        },
        "level": {
          "description": "Role Level type. Only Property or Chain level roles are supported by this type.",
          "$ref": "#/definitions/roleLevelType"
        },
        "levelCode": {
          "description": "Role level code, for Chain Level code Level code will be Chain Code the role belongs to and for Hotel level role it will b the Hotel Code the role belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "trxCodeAccessRolesType": {
      "description": "List of Roles having access to set of transaction codes",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxCodeAccessRoleType"
      }
    },
    "trxCodeAmountsType": {
      "description": "Transaction Code's default amount details.",
      "type": "object",
      "properties": {
        "currency": {
          "description": "Default currency code for the amounts.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "defaultPrice": {
          "description": "Default price of the Transaction Code.",
          "type": "number"
        },
        "maxAmount": {
          "description": "Maximum Amount to be posted on this Transaction Code.",
          "type": "number"
        },
        "minAmount": {
          "description": "Minimum amount to be posted on this Transaction Code.",
          "type": "number"
        }
      }
    },
    "trxCodeClassificationType": {
      "description": "Transaction Code Classification details.",
      "type": "object",
      "properties": {
        "fiscalTransactionType": {
          "description": "Transaction code type for fiscal printing purposes.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "group": {
          "description": "Group the transaction code belongs to..",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "subgroup": {
          "description": "Subgroup the transaction code belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "transactionType": {
          "description": "Transaction Code Type detail.",
          "type": "object",
          "properties": {
            "code": {
              "description": "Transaction Code Type.",
              "$ref": "#/definitions/transactionCodeTypeType"
            },
            "taxCode": {
              "description": "Tax Code if the transaction Code if it is of type Tax.",
              "type": "integer"
            }
          }
        },
        "type": {
          "description": "Transaction Type.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        }
      }
    },
    "trxCodeUsageType": {
      "description": "Details about the element on which the transaction code is being used.",
      "type": "object",
      "properties": {
        "usageDetail": {
          "description": "Specific codes of the element type on which the transaction code is being used.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "usageName": {
          "description": "Name of the element type on which the transaction code is being used.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        }
      }
    },
    "trxCodeUsagesType": {
      "description": "Element on which the transaction code is being used.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxCodeUsageType"
      }
    },
    "trxCodesInfoType": {
      "description": "List of Transaction codes info.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxInfoType"
      }
    },
    "trxInfoType": {
      "description": "Transaction codes info.",
      "type": "object",
      "properties": {
        "articles": {
          "description": "The List of Articles defined for this transaction code, when using the Articles functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/articleInfoType"
          }
        },
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionGroup": {
          "description": "Category of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionSubGroup": {
          "description": "Sub category of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "trxOwnershipType": {
      "description": "Protected by the Property level",
      "type": "string",
      "enum": [
        "Corporate",
        "Property"
      ]
    },
    "trxSetupType": {
      "description": "Transaction Code setup details.",
      "type": "object",
      "properties": {
        "accountingCode": {
          "description": "Accounting Code for the transaction code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "checkNoRequired": {
          "description": "True indicates the Transaction Code requires the Check Number for posting.",
          "type": "boolean"
        },
        "depositPostingOnly": {
          "description": "True indicates the Transaction Code is used for deposit postings only.",
          "type": "boolean"
        },
        "depositType": {
          "description": "Represents the type of deposit with possible values of \"RECEIPT\" or \"FOLIO\".",
          "$ref": "#/definitions/depositTypeType"
        },
        "earnMembershipPoints": {
          "description": "This flag indicates that the transaction is eligible to earn points (guest can earn points on the revenue posted to this transaction code)",
          "type": "boolean"
        },
        "generatesType": {
          "description": "Short Summary information of the Chain and it's Hubs and Hotels.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "inactive": {
          "description": "True indicates the Transaction Code is inactive.",
          "type": "boolean"
        },
        "includeInDepositRule": {
          "description": "True indicates the Transaction Code posting will be included in Deposit/Cencallation rule calculations.",
          "type": "boolean"
        },
        "interHotelSales": {
          "description": "True indicates the Transaction Code is used for cross posting across the hotels/.",
          "type": "boolean"
        },
        "manualPosting": {
          "description": "True indicates the Transaction Code is allowed to be posted manually.",
          "type": "boolean"
        },
        "nonTaxable": {
          "description": "True indicates the Transaction Code is non taxable.",
          "type": "boolean"
        },
        "ownershipStatus": {
          "description": "Protected by the Property or Corporate level",
          "$ref": "#/definitions/trxOwnershipType"
        },
        "postCovers": {
          "description": "True indicates the Transaction Code is used to post covers.",
          "type": "boolean"
        },
        "postingRule": {
          "description": "Deposit posting associated with the transaction code.",
          "type": "boolean"
        },
        "quantityCode": {
          "description": "Quantity Code for the transaction code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "redeemMembershipPoints": {
          "description": "This flag indicates that the transaction is eligible to redeem points (guest can use their points to pay for transactions posted with this transaction code)",
          "type": "boolean"
        },
        "revenue": {
          "description": "True indicates the Transaction Code is to be considered as revenue to the Hotel.",
          "type": "boolean"
        },
        "serviceType": {
          "description": "Service Type for the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "taxInclusive": {
          "description": "True indicates that the tax is inclusive in the generate.",
          "type": "boolean"
        },
        "useForPaidout": {
          "description": "True indicates the Transaction Code is used for Paid outs.",
          "type": "boolean"
        }
      }
    },
    "turndownStatusType": {
      "description": "Simple type for turndown status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Required, Not Required and Completed.",
      "type": "string",
      "enum": [
        "Required",
        "NotRequired",
        "Compeleted"
      ]
    },
    "uDFGenerateType": {
      "description": "Defines UDF rule for generates.",
      "type": "object",
      "properties": {
        "uDF": {
          "description": "Defines User Defined Function to calculate generates.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "uDFFunctionArguments": {
          "description": "The function argument name-value combination accepted by the User Defined Function.",
          "$ref": "#/definitions/functionArgumentsType"
        },
        "uDFFunctionName": {
          "description": "The function name of the User Defined Function used to calculate generates.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "uniqueID_Type": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "vIPType": {
      "description": "The supplier's ranking of the customer.",
      "type": "object",
      "properties": {
        "vipCode": {
          "description": "VIP Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "vipDescription": {
          "description": "VIP Description.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "waitlistResType": {
      "description": "Information regarding why reservation is being /has been waitlisted.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description why the reservation is being /has been waitlisted.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "priorityCode": {
          "description": "Waitlist Priority Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "priorityDescription": {
          "description": "Waitlist priority Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reasonCode": {
          "description": "Waitlist Reason Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonDescription": {
          "description": "Waitlist Reason Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "telephone": {
          "description": "Guest telephone number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "warningType": {
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "type": "object",
      "properties": {
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "maxLength": 8,
          "minLength": 1
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "description": "Used in conjunction with the Success element to define a business error.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "workstationSetupType": {
      "description": "List of workstations of a hotel interface.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/interfaceWorkstationType"
      }
    },
    "yearTypeType": {
      "description": "Defined Values for Fiscal Year Type.",
      "type": "string",
      "enum": [
        "Calendar",
        "Fiscal"
      ]
    }
  },
  "tags": [
    {
      "description": "The Accounts Receivables Config module offers the capability of creating, managing, and retrieving of Accounts Receivables configuration.",
      "name": "AccountsReceivablesConfig"
    },
    {
      "description": "Cashiering configurations affect the control and management of financial transactions at your property. You can configure cashiering components for articles for sale, cancellation handling, deposits, folios, settlements, exchange rates, payment methods and so on.",
      "name": "CashieringConfig"
    },
    {
      "description": "The Credit Card Internal Service contains operations used internally by OPERA Cloud.",
      "name": "CreditCard"
    },
    {
      "description": "These Commission APIs allow you to get, update, and remove commissions on an Account Receivable (AR) profile in OPERA Cloud.",
      "name": "CommissionConfig"
    },
    {
      "description": "The EndOfDay Configuration module offers the capability of creating, managing, and retrieving a properties End of Day configuration.",
      "name": "EndOfDayConfig"
    },
    {
      "description": "These APIs will allow you to configure front office related configuration related to Administration.",
      "name": "ChainConfig"
    },
    {
      "description": "These APIs will allow you to configure front office related configuration related to Administration.",
      "name": "HotelConfig"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}