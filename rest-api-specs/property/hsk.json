{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "title": "OPERA Cloud Housekeeping Service API",
    "version": "23.2",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality-integrations_ww@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "basePath": "/hsk/v1",
  "paths": {
    "/hotels/{hotelId}/attendants/houseKeepingTasks": {
      "get": {
        "description": "This API will allow you to get the housekeeping attendants schedule. <p><strong>OperationId:</strong>getHousekeepingAttendantsSchedule</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Get the housekeeping attendants schedule",
        "operationId": "getHousekeepingAttendantsSchedule",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "scheduleStartDate",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "scheduleEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetching the attendants schedule.",
            "schema": {
              "$ref": "#/definitions/attendantSchedule"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "HousekeepingAttendantsSchedule not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "This API will allow you to delete housekeeping attendant schedule. <p><strong>OperationId:</strong>deleteHousekeepingAttendantSchedule</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Delete housekeeping attendant schedule",
        "operationId": "deleteHousekeepingAttendantSchedule",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "Schedule date of attendants' assignment. Used when attendants to scheduled are of the same date.",
            "name": "scheduleDate",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "ID of the attendant.",
            "name": "attendantId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/autoTaskSheets": {
      "post": {
        "description": "This API will allow you to Auto generate the task sheets. <p><strong>OperationId:</strong>autoGenerateTaskSheets</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Auto generate the task sheets",
        "operationId": "autoGenerateTaskSheets",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for generating housekeeping Task Sheets automatically. To generate task sheets automatically the minimum required criteria is the Task Date, Task Code, Number of Attendants/Tasksheets required and the Room Statuses. Based on the criteria defined, task sheets will be created and the rooms will be assigned to the Tasksheets. Example: if the criteria defines that Dirty room status to be used to generate 5 sheets, then only those rooms which have the status = Dirty will be used and will be assigned to the 5 sheets.",
            "name": "taskSheets",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taskSheets"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/conditions": {
      "get": {
        "description": "This API will allow you to get a list of rooms that have a condition set. <p><strong>OperationId:</strong>getRoomConditions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Get rooms condition",
        "operationId": "getRoomConditions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Include rooms with conditions only.",
            "name": "roomConditionsOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Include rooms without conditions only.",
            "name": "roomWithoutConditionsOnly",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Identifier of the room.",
            "name": "room",
            "in": "query"
          },
          {
            "type": "string",
            "name": "fromRoomNumber",
            "in": "query"
          },
          {
            "type": "string",
            "name": "toRoomNumber",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomConditions",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomTypes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomClasses",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Vacant",
                "Occupied"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for front office room status instructions to be used in requests for fetching housekeeping rooms. Valid values are Vacant and Occupied.",
            "name": "frontOfficeRoomStatus",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "reservationStatuses",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Assigned",
                "Unassigned"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomAssignmentStatus",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "floors",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomFeatures",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "amSections",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "pmSections",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "buildings",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Clean",
                "Dirty",
                "Pickup",
                "Inspected",
                "OutOfOrder",
                "OutOfService"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
            "name": "housekeepingRoomStatus",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Odd",
                "Even"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for room parity instructions to be used in requests for fetching housekeeping rooms. Valid status values are Odd and Even.",
            "name": "roomParityStatus",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response element for fetching room conditions.",
            "schema": {
              "$ref": "#/definitions/rooms"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RoomConditions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "This API will allow you to set, change, or delete a condition on rooms. A condition is used to designate rooms that are available for show, set aside for special housekeeping attention, or are to be treated differently for any other reason. <p><strong>OperationId:</strong>setRoomCondition</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Set rooms condition",
        "operationId": "setRoomCondition",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request element for setting room condition.",
            "name": "roomCondition",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomCondition"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/roomConditionRequestStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/forecastTaskSchedules": {
      "get": {
        "description": "This API will allow you to get facility forecast for Housekeeping attendants and tasks for a current or future start date . <p><strong>OperationId:</strong>getFacilityForecast</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Get facility forecast",
        "operationId": "getFacilityForecast",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "Codes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": ".",
            "name": "usePriority",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response element for the fetched facility forecast.",
            "schema": {
              "$ref": "#/definitions/facilityForecast"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FacilityForecast not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/houseKeepingTasks/{taskCodesBreakOutId}": {
      "delete": {
        "description": "Use this API to delete all task sheets for an existing task sheet set for a specific property. Task Sheet Sets can be used to break out the rooms to be cleaned by the housekeeping attendants.<p><strong>OperationId:</strong>deleteHouseKeepingTaskSheets</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Delete all the hotel task sheets for an existing Task Sheet Set.",
        "operationId": "deleteHouseKeepingTaskSheets",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Indicates Unique Hotel Code for which the task sheets will be deleted.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Indicates Unique breakout ID for which the task sheets will be deleted.",
            "name": "taskCodesBreakOutId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Additional warnings about the operation.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of deleted resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/houseKeepingtasks": {
      "get": {
        "description": "This API will allow you to get the existing task sheets. <p><strong>OperationId:</strong>getHouseKeepingTasks</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Get the existing task sheets",
        "operationId": "getHouseKeepingTasks",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date for which the Task Assignment information is required.",
            "name": "taskDate",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Query only rooms with attendant working in them.",
            "name": "attendantInRoomOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Setting this to true will generate a sequence based on the current condition of the room for cleaning. This sequence would be the same sequence with which the Task Companion works.",
            "name": "generateCleaningSequence",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Setting this to true will include reservation information associated to the room.",
            "name": "includeReservationInfo",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This will include room details for the Task Sheets. If summary information is only required, then this could be set to false. If a Task Sheet Number is included in the Search and this flag is set to true, then the details for that particular Task Sheet will be returned. For all other task sheets, the IncludeTaskSheetsSummary will determine if Summary details are required or not.",
            "name": "includeTaskSheetDetails",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Setting this to true, will return Summary information for the task sheets required. If a Task Sheet Number is included in the Search and IncludeTaskSheetDetails is set to false and IncludeTaskSheetsSummary is false, then only the Summary information for that particular task sheet will be returned. IncludeTaskSheetDetails = True, IncludeTaskSheetsSummary = True : includes all task sheets details and summary IncludeTaskSheetDetails = false, IncludeTaskSheetsSummary = True : includes only summary IncludeTaskSheetDetails = false, IncludeTaskSheetsSummary = false, Task Sheet No =null : no task sheet detail or summary for any of the tasksheets. Returns the Task Assignnment header. IncludeTaskSheetDetails = True, IncludeTaskSheetsSummary = True, Task Sheet No = XX : includes task sheets detail for XX and summary for others. IncludeTaskSheetDetails = false, IncludeTaskSheetsSummary = True, Task Sheet No = XX : includes summary for all including XX. IncludeTaskSheetDetails = false, IncludeTaskSheetsSummary = false, Task Sheet No = XX : includes summary for XX. No information for others.",
            "name": "includeTaskSheetsSummary",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "The rooms in the task sheet would be sorted with the cleaning sequence. The normal sort would be done based on the Default Sequence.",
            "name": "sortByCleaningSequence",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The Code for the task.",
            "name": "taskCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Property for which the Task Assignment information is required.",
            "name": "taskHotelCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Ordering sequence for display.",
            "name": "taskSequences",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Description of the Task Code.",
            "name": "taskDescriptions",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Instructions for this Task Code.",
            "name": "taskInstructions",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Indicates if this task code is the default departure task for Facility Tasks. This requires",
            "name": "facilityDepartureTask",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Indicates if a linen change is necessary.",
            "name": "linenChange",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "taskCodesBreakOutId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "taskCodesBreakOutIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "taskCodesBreakOutIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Attendant ID for which the Task Sheets are assigned.",
            "name": "attendantId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Specific Task Sheet number for which the information is required.",
            "name": "taskSheetNumber",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Clean",
                "Dirty",
                "Pickup",
                "Inspected",
                "OutOfOrder",
                "OutOfService"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
            "name": "housekeepingRoomStatus",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "DoNotDisturb",
                "MakeUpRoom",
                "NoStatusSelected"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Possible values for the Guest Service Status.",
            "name": "guestService",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Clean",
                "Dirty",
                "Pickup",
                "Inspected",
                "OutOfOrder",
                "OutOfService"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
            "name": "roomStatusToChange",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/taskAssignment"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "links": [
                  {
                    "href": "string",
                    "method": "GET",
                    "operationId": "string",
                    "rel": "string",
                    "targetSchema": "string",
                    "templated": false,
                    "title": "string"
                  }
                ],
                "taskAssignmentInfo": [
                  {
                    "hotelId": "string",
                    "taskCodes": [
                      {
                        "code": "string",
                        "description": "string",
                        "facilityDepartureTask": true,
                        "hotelId": "string",
                        "instructions": "string",
                        "linenChange": true,
                        "sequence": 0
                      }
                    ],
                    "taskDate": "2020-08-24",
                    "taskSheets": [
                      {
                        "appUserOnBreak": {
                          "appUser": {
                            "actAs": "string",
                            "actAt": "string",
                            "appUser": "string",
                            "appUserId": {
                              "id": "string",
                              "type": "string"
                            },
                            "attendantInfo": {
                              "attendantId": "string",
                              "hotelId": "string"
                            },
                            "cashierId": 0,
                            "cashierTitle": "string",
                            "department": "string",
                            "departmentLocation": "string",
                            "disabledUntil": "2020-08-24",
                            "expiryDate": "2020-08-24",
                            "hotel": {
                              "code": "string",
                              "description": "string"
                            },
                            "lDAPUser": "string",
                            "passwordChangeDate": "2020-08-24",
                            "salesRepCode": "string",
                            "userDefaultLanguage": "string",
                            "userInfo": {
                              "addressInfo": {
                                "address": {
                                  "addressLine": [
                                    "string"
                                  ],
                                  "barCode": "string",
                                  "cityExtension": "string",
                                  "cityName": "string",
                                  "country": {
                                    "code": "string",
                                    "value": "string"
                                  },
                                  "county": "string",
                                  "createDateTime": "2020-08-24T12:55:55.600Z",
                                  "creatorId": "string",
                                  "language": "string",
                                  "lastModifierId": "string",
                                  "lastModifyDateTime": "2020-08-24T12:55:55.600Z",
                                  "postalCode": "string",
                                  "primaryInd": true,
                                  "purgeDate": "2020-08-24",
                                  "state": "string",
                                  "type": "string",
                                  "typeDescription": "string",
                                  "updateReservations": true
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "birthDate": "2020-08-24",
                              "birthDateMasked": "string",
                              "department": {
                                "code": "string",
                                "description": "string"
                              },
                              "emailInfo": {
                                "email": {
                                  "createDateTime": "2020-08-24T12:55:55.600Z",
                                  "creatorId": "string",
                                  "emailAddress": "string",
                                  "emailFormat": "Html",
                                  "lastModifierId": "string",
                                  "lastModifyDateTime": "2020-08-24T12:55:55.600Z",
                                  "orderSequence": 0,
                                  "primaryInd": true,
                                  "purgeDate": "2020-08-24",
                                  "type": "string",
                                  "typeDescription": "string"
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "gender": "Male",
                              "personName": {
                                "envelopeGreeting": "string",
                                "externalSystem": "string",
                                "givenName": "string",
                                "language": "string",
                                "middleName": "string",
                                "namePrefix": "string",
                                "nameSuffix": "string",
                                "nameTitle": "string",
                                "nameTitleSuffix": 0,
                                "nameType": "Primary",
                                "salutation": "string",
                                "surname": "string"
                              },
                              "phoneInfo": {
                                "id": "string",
                                "telephone": {
                                  "createDateTime": "2020-08-24T12:55:55.600Z",
                                  "creatorId": "string",
                                  "extension": "string",
                                  "lastModifierId": "string",
                                  "lastModifyDateTime": "2020-08-24T12:55:55.600Z",
                                  "orderSequence": 0,
                                  "phoneNumber": "string",
                                  "phoneTechType": "string",
                                  "phoneUseType": "string",
                                  "phoneUseTypeDescription": "string",
                                  "primaryInd": true,
                                  "purgeDate": "2020-08-24"
                                },
                                "type": "string"
                              },
                              "profileId": {
                                "id": "string",
                                "type": "string"
                              }
                            },
                            "userSessionInfo": {
                              "businessDate": "2020-08-24",
                              "cROCountryCode": "string",
                              "chain": "string",
                              "cro": {
                                "code": "string",
                                "description": "string"
                              },
                              "hotel": {
                                "code": "string",
                                "description": "string"
                              },
                              "parameters": [
                                {
                                  "parameterName": "string",
                                  "parameterValue": "string"
                                }
                              ],
                              "runningApp": "string",
                              "sessionDefaults": {
                                "baseLanguage": "string",
                                "currencyCode": "string",
                                "currencyFormat": "string",
                                "dbDateFormat": "string",
                                "defaultLanguage": "string",
                                "javaDateFormat": "string",
                                "javaTimeFormat": "string",
                                "oracleDateFormat": "string",
                                "oracleTimeFormat": "string"
                              },
                              "shareProfiles": true,
                              "systemDate": "2020-08-24",
                              "terminal": "string"
                            }
                          },
                          "startTime": "2020-08-24T12:55:55.600Z"
                        },
                        "attendant": {
                          "activeFlag": "string",
                          "attendantId": "string",
                          "attendantInstructions": "string",
                          "attendantName": "string",
                          "floor": "string",
                          "friday": true,
                          "hotelId": "string",
                          "monday": true,
                          "saturday": true,
                          "section": {
                            "code": "string",
                            "description": "string",
                            "hotelId": "string",
                            "inactive": true,
                            "roomCredits": 0,
                            "rooms": 0,
                            "sectionGroup": "string",
                            "sequence": 0,
                            "targetCredits": 0
                          },
                          "sunday": true,
                          "thursday": true,
                          "tuesday": true,
                          "wednesday": true
                        },
                        "attendantStatus": "Standby",
                        "autoGenerated": true,
                        "breakOutId": 0,
                        "completedDate": "2020-08-24",
                        "credits": [
                          {
                            "numberOfCredits": 0,
                            "type": "Departure"
                          }
                        ],
                        "date": "2020-08-24",
                        "departureTaskInfo": {
                          "code": "string",
                          "roomType": [
                            {
                              "facilityCode": [
                                {
                                  "code": "string",
                                  "description": "string",
                                  "quantity": 0
                                }
                              ],
                              "type": "string"
                            }
                          ]
                        },
                        "hotelId": "string",
                        "linenChangeCount": 0,
                        "lockTaskSheet": true,
                        "nextDay": true,
                        "roomCount": 0,
                        "roomCounts": [
                          {
                            "housekeepingRoomStatusType": "Clean",
                            "totalCount": 0
                          }
                        ],
                        "rooms": [
                          {
                            "attendant": [
                              {
                                "activeFlag": "string",
                                "appUser": {
                                  "actAs": "string",
                                  "actAt": "string",
                                  "appUser": "string",
                                  "appUserId": {
                                    "id": "string",
                                    "type": "string"
                                  },
                                  "attendantInfo": {
                                    "attendantId": "string",
                                    "hotelId": "string"
                                  },
                                  "cashierId": 0,
                                  "cashierTitle": "string",
                                  "department": "string",
                                  "departmentLocation": "string",
                                  "disabledUntil": "2020-08-24",
                                  "expiryDate": "2020-08-24",
                                  "hotel": {
                                    "code": "string",
                                    "description": "string"
                                  },
                                  "lDAPUser": "string",
                                  "passwordChangeDate": "2020-08-24",
                                  "salesRepCode": "string",
                                  "userDefaultLanguage": "string",
                                  "userInfo": {
                                    "addressInfo": {
                                      "address": {
                                        "addressLine": [
                                          "string"
                                        ],
                                        "barCode": "string",
                                        "cityExtension": "string",
                                        "cityName": "string",
                                        "country": {
                                          "code": "string",
                                          "value": "string"
                                        },
                                        "county": "string",
                                        "createDateTime": "2020-08-24T12:55:55.601Z",
                                        "creatorId": "string",
                                        "language": "string",
                                        "lastModifierId": "string",
                                        "lastModifyDateTime": "2020-08-24T12:55:55.601Z",
                                        "postalCode": "string",
                                        "primaryInd": true,
                                        "purgeDate": "2020-08-24",
                                        "state": "string",
                                        "type": "string",
                                        "typeDescription": "string",
                                        "updateReservations": true
                                      },
                                      "id": "string",
                                      "type": "string"
                                    },
                                    "birthDate": "2020-08-24",
                                    "birthDateMasked": "string",
                                    "department": {
                                      "code": "string",
                                      "description": "string"
                                    },
                                    "emailInfo": {
                                      "email": {
                                        "createDateTime": "2020-08-24T12:55:55.601Z",
                                        "creatorId": "string",
                                        "emailAddress": "string",
                                        "emailFormat": "Html",
                                        "lastModifierId": "string",
                                        "lastModifyDateTime": "2020-08-24T12:55:55.601Z",
                                        "orderSequence": 0,
                                        "primaryInd": true,
                                        "purgeDate": "2020-08-24",
                                        "type": "string",
                                        "typeDescription": "string"
                                      },
                                      "id": "string",
                                      "type": "string"
                                    },
                                    "gender": "Male",
                                    "personName": {
                                      "envelopeGreeting": "string",
                                      "externalSystem": "string",
                                      "givenName": "string",
                                      "language": "string",
                                      "middleName": "string",
                                      "namePrefix": "string",
                                      "nameSuffix": "string",
                                      "nameTitle": "string",
                                      "nameTitleSuffix": 0,
                                      "nameType": "Primary",
                                      "salutation": "string",
                                      "surname": "string"
                                    },
                                    "phoneInfo": {
                                      "id": "string",
                                      "telephone": {
                                        "createDateTime": "2020-08-24T12:55:55.601Z",
                                        "creatorId": "string",
                                        "extension": "string",
                                        "lastModifierId": "string",
                                        "lastModifyDateTime": "2020-08-24T12:55:55.601Z",
                                        "orderSequence": 0,
                                        "phoneNumber": "string",
                                        "phoneTechType": "string",
                                        "phoneUseType": "string",
                                        "phoneUseTypeDescription": "string",
                                        "primaryInd": true,
                                        "purgeDate": "2020-08-24"
                                      },
                                      "type": "string"
                                    },
                                    "profileId": {
                                      "id": "string",
                                      "type": "string"
                                    }
                                  },
                                  "userSessionInfo": {
                                    "businessDate": "2020-08-24",
                                    "cROCountryCode": "string",
                                    "chain": "string",
                                    "cro": {
                                      "code": "string",
                                      "description": "string"
                                    },
                                    "hotel": {
                                      "code": "string",
                                      "description": "string"
                                    },
                                    "parameters": [
                                      {
                                        "parameterName": "string",
                                        "parameterValue": "string"
                                      }
                                    ],
                                    "runningApp": "string",
                                    "sessionDefaults": {
                                      "baseLanguage": "string",
                                      "currencyCode": "string",
                                      "currencyFormat": "string",
                                      "dbDateFormat": "string",
                                      "defaultLanguage": "string",
                                      "javaDateFormat": "string",
                                      "javaTimeFormat": "string",
                                      "oracleDateFormat": "string",
                                      "oracleTimeFormat": "string"
                                    },
                                    "shareProfiles": true,
                                    "systemDate": "2020-08-24",
                                    "terminal": "string"
                                  }
                                },
                                "attendantId": "string",
                                "attendantName": "string",
                                "floor": "string",
                                "friday": true,
                                "hotelId": "string",
                                "monday": true,
                                "saturday": true,
                                "section": {
                                  "code": "string",
                                  "description": "string",
                                  "hotelId": "string",
                                  "inactive": true,
                                  "roomCredits": 0,
                                  "rooms": 0,
                                  "sectionGroup": "string",
                                  "sequence": 0,
                                  "targetCredits": 0
                                },
                                "startTime": "2020-08-24T12:55:55.601Z",
                                "status": "Standby",
                                "sunday": true,
                                "thursday": true,
                                "tuesday": true,
                                "wednesday": true
                              }
                            ],
                            "building": "string",
                            "cleaningSequence": 0,
                            "componentRoomNumber": "string",
                            "componentRoomNumbers": [
                              "string"
                            ],
                            "componentRooms": [
                              {
                                "building": "string",
                                "description": {
                                  "defaultText": "string",
                                  "translatedTexts": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                },
                                "floor": "string",
                                "floorDescription": "string",
                                "isAccessible": true,
                                "meetingRoom": true,
                                "roomAssignmentRating": "MostImportant",
                                "roomCondition": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "roomDescription": "string",
                                "roomFeatures": [
                                  {
                                    "code": "string",
                                    "description": "string",
                                    "orderSequence": 0,
                                    "quantity": 0
                                  }
                                ],
                                "roomId": "string",
                                "roomType": {
                                  "houseKeeping": true,
                                  "isAccessible": true,
                                  "isSuiteRoom": true,
                                  "maximumOccupancy": 0,
                                  "meetingRoom": true,
                                  "minimumOccupancy": 0,
                                  "pseudoRoom": true,
                                  "roomClass": "string",
                                  "roomFeatures": [
                                    {
                                      "code": "string",
                                      "description": "string",
                                      "orderSequence": 0,
                                      "quantity": 0
                                    }
                                  ],
                                  "roomType": "string",
                                  "shortDescription": "string",
                                  "smokingPreference": "string"
                                },
                                "smokingPreference": "string",
                                "smokingPreferenceDescription": "string"
                              }
                            ],
                            "connectingRooms": [
                              {
                                "building": "string",
                                "description": {
                                  "defaultText": "string",
                                  "translatedTexts": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                },
                                "floor": "string",
                                "floorDescription": "string",
                                "isAccessible": true,
                                "meetingRoom": true,
                                "roomAssignmentRating": "MostImportant",
                                "roomCondition": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "roomDescription": "string",
                                "roomFeatures": [
                                  {
                                    "code": "string",
                                    "description": "string",
                                    "orderSequence": 0,
                                    "quantity": 0
                                  }
                                ],
                                "roomId": "string",
                                "roomType": {
                                  "houseKeeping": true,
                                  "isAccessible": true,
                                  "isSuiteRoom": true,
                                  "maximumOccupancy": 0,
                                  "meetingRoom": true,
                                  "minimumOccupancy": 0,
                                  "pseudoRoom": true,
                                  "roomClass": "string",
                                  "roomFeatures": [
                                    {
                                      "code": "string",
                                      "description": "string",
                                      "orderSequence": 0,
                                      "quantity": 0
                                    }
                                  ],
                                  "roomType": "string",
                                  "shortDescription": "string",
                                  "smokingPreference": "string"
                                },
                                "smokingPreference": "string",
                                "smokingPreferenceDescription": "string"
                              }
                            ],
                            "defaultSequence": 0,
                            "description": {
                              "defaultText": "string",
                              "translatedTexts": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            },
                            "discrepancy": [
                              "Sleep"
                            ],
                            "floor": "string",
                            "floorDescription": "string",
                            "hasPriority": true,
                            "hold": {
                              "comments": "string",
                              "holdUntil": "2020-08-24T12:55:55.601Z",
                              "holdUser": "string"
                            },
                            "housekeeping": {
                              "cleaningPriority": {
                                "prioritySequence": 0
                              },
                              "facilityTaskCode": [
                                "string"
                              ],
                              "guestServiceRequest": "DoNotDisturb",
                              "housekeepingRoomStatus": {
                                "frontOfficeStatus": "Vacant",
                                "housekeepingRoomStatus": "Clean",
                                "housekeepingStatus": "Vacant",
                                "reservationStatusList": [
                                  "Arrival"
                                ]
                              },
                              "linenChange": true,
                              "roomCondition": {
                                "assignmentType": "Available",
                                "remarks": "string",
                                "roomCondition": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "roomPersons": {
                                "frontOfficePersons": 0,
                                "houseKeepingPersons": 0
                              }
                            },
                            "instructions": "string",
                            "isAccessible": true,
                            "maintenanceAllowed": true,
                            "meetingRoom": true,
                            "outOfOrder": [
                              {
                                "end": "2020-08-24",
                                "housekeepingRoomStatus": "Clean",
                                "newDateRange": {
                                  "end": "2020-08-24",
                                  "start": "2020-08-24"
                                },
                                "reasonCode": "string",
                                "reasonDescription": "string",
                                "repairRemarks": "string",
                                "returnStatus": "Clean",
                                "start": "2020-08-24"
                              }
                            ],
                            "reservationInfo": [
                              {
                                "accessRestriction": "Change",
                                "advanceCheckIn": {
                                  "advanceCheckedIn": true,
                                  "eTRComments": "string",
                                  "expectedReturnTime": "2020-08-24T12:55:55.602Z"
                                },
                                "allowMobileCheckout": true,
                                "allowMobileViewFolio": true,
                                "allowedActions": [
                                  "Cancel"
                                ],
                                "attachedProfiles": [
                                  {
                                    "name": "string",
                                    "profileIdList": [
                                      {
                                        "id": "string",
                                        "type": "string"
                                      }
                                    ],
                                    "reservationProfileType": "Company"
                                  }
                                ],
                                "cancellationInfo": {
                                  "code": "string",
                                  "date": "2020-08-24",
                                  "description": "string"
                                },
                                "cashiering": {
                                  "bedTaxReporting": {
                                    "taxRegistrationNo": 0,
                                    "taxableDays": 0,
                                    "visaExpiryDate": "2020-08-24",
                                    "visaIssueDate": "2020-08-24",
                                    "visaNumber": "string"
                                  },
                                  "billingPrivileges": {
                                    "allowAutoCheckin": true,
                                    "autoSettlement": true,
                                    "autoSettlementFreq": 0,
                                    "autoSettlementType": "string",
                                    "creditLimitAutoPay": true,
                                    "directBillAuthorized": true,
                                    "folioCloseDate": "2020-08-24",
                                    "postStayCharging": true,
                                    "postingRestriction": true,
                                    "preStayCharging": true,
                                    "scheduledCheckout": true,
                                    "scheduledCheckoutTime": "2020-08-24",
                                    "videoCheckout": true
                                  },
                                  "compAccounting": {
                                    "authorizer": "string",
                                    "compPostings": "string",
                                    "compType": "string"
                                  },
                                  "financiallyResponsible": true,
                                  "folioTexts": [
                                    {
                                      "row": 0,
                                      "text": "string"
                                    }
                                  ],
                                  "lastRoomAndTaxPostedDate": "2020-08-24",
                                  "periodicFolio": {
                                    "frequency": 0,
                                    "lastFolioDate": "2020-08-24",
                                    "lastSettlementDate": "2020-08-24"
                                  },
                                  "proratedBilling": true,
                                  "reservationPreConfiguredRoutingInstruction": {
                                    "authorizerInfo": {
                                      "authorizerId": {
                                        "id": "string",
                                        "type": "string"
                                      },
                                      "authorizerName": "string",
                                      "authorizerRateCode": "string",
                                      "authorizerUserName": "string",
                                      "inheritAuthorizerRateCode": true
                                    },
                                    "profileType": "Company",
                                    "promotionCode": "string",
                                    "ratePlanCode": "string"
                                  },
                                  "revenuesAndBalances": {
                                    "balance": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    },
                                    "foodAndBevRevenue": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    },
                                    "nonRevenue": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    },
                                    "otherRevenue": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    },
                                    "roomRevenue": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    },
                                    "totalFixedCharge": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    },
                                    "totalPayment": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    },
                                    "totalRevenue": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    }
                                  },
                                  "reverseAdvanceCheckInAllowed": true,
                                  "reverseCheckInAllowed": true,
                                  "taxType": {
                                    "code": "string",
                                    "collectingAgentTax": true,
                                    "description": "string",
                                    "hotelId": "string",
                                    "minimumLengthOfStay": 0,
                                    "printAutoAdjust": true,
                                    "reportExemptDays": 0,
                                    "reportTaxPercentage": 0,
                                    "taxExemptNo": "string"
                                  },
                                  "transactionsPosted": true
                                },
                                "commissionPayoutTo": "TravelAgent",
                                "computedReservationStatus": "Reserved",
                                "createDateTime": "2020-08-24T12:55:55.602Z",
                                "creatorId": "string",
                                "deposit": {
                                  "amountOwed": 0,
                                  "amountPaid": 0,
                                  "amountRequired": 0,
                                  "dueDate": "2020-08-24",
                                  "hasOutstanding": true,
                                  "hasPaid": true,
                                  "postingDate": "2020-08-24"
                                },
                                "displayColor": "string",
                                "expectedServiceTime": "string",
                                "guestPreferredCurrency": "string",
                                "hotelId": "string",
                                "hotelInterfaceStatusList": [
                                  {
                                    "hotelInterface": {
                                      "activeFlag": true,
                                      "hotelId": "string",
                                      "interfaceId": {
                                        "id": "string",
                                        "type": "string"
                                      },
                                      "interfaceName": "string",
                                      "interfaceType": "Bms",
                                      "logo": "string",
                                      "machineName": "string",
                                      "status": "Stopped"
                                    },
                                    "interfaceRights": [
                                      {
                                        "category": "string",
                                        "description": "string",
                                        "right": 0,
                                        "statusCode": "string"
                                      }
                                    ],
                                    "roomExtension": "string"
                                  }
                                ],
                                "hotelName": "string",
                                "housekeeping": {
                                  "expectedServiceTime": "string",
                                  "facilityTaskInfo": {
                                    "date": "2020-08-24",
                                    "supplies": [
                                      {
                                        "code": "string",
                                        "description": "string",
                                        "quantity": 0
                                      }
                                    ],
                                    "task": {
                                      "code": "string",
                                      "description": "string",
                                      "facilityDepartureTask": true,
                                      "hotelId": "string",
                                      "instructions": "string",
                                      "linenChange": true,
                                      "sequence": 0
                                    }
                                  },
                                  "housekeepingRoomStatus": "Clean",
                                  "instructions": "string",
                                  "linenChange": true,
                                  "serviceTime": "2020-08-24",
                                  "turndownRequested": true
                                },
                                "housekeepingRoomStatus": "Clean",
                                "keyCount": 0,
                                "lastModifierId": "string",
                                "lastModifyDateTime": "2020-08-24T12:55:55.602Z",
                                "lastPrivacyPromptDate": "2020-08-24",
                                "mobileNotifications": {
                                  "checkoutMessageReceived": true,
                                  "errorMessage": "string",
                                  "keyReady": "Pending",
                                  "requiresAction": true,
                                  "roomReady": "Pending"
                                },
                                "openFolio": true,
                                "optedForCommunication": true,
                                "paymentMethod": "string",
                                "preRegistered": true,
                                "purgeDate": "2020-08-24",
                                "queue": {
                                  "averageQueueTimeCurrentReservations": 0,
                                  "averageQueueTimeToCheckIn": 0,
                                  "guestTextInfo": {
                                    "sentBy": "string",
                                    "sentTime": "2020-08-24T12:55:55.601Z"
                                  },
                                  "priority": 0,
                                  "queueDate": "2020-08-24",
                                  "timeSpan": {
                                    "duration": "string",
                                    "durationInSeconds": 0,
                                    "endDate": "2020-08-24",
                                    "startDate": "2020-08-24"
                                  }
                                },
                                "reservationCommunication": {
                                  "emails": {
                                    "count": 0,
                                    "emailInfo": [
                                      {
                                        "email": {
                                          "createDateTime": "2020-08-24T12:55:55.602Z",
                                          "creatorId": "string",
                                          "emailAddress": "string",
                                          "emailFormat": "Html",
                                          "lastModifierId": "string",
                                          "lastModifyDateTime": "2020-08-24T12:55:55.602Z",
                                          "orderSequence": 0,
                                          "primaryInd": true,
                                          "purgeDate": "2020-08-24",
                                          "type": "string",
                                          "typeDescription": "string"
                                        },
                                        "id": "string",
                                        "type": "string"
                                      }
                                    ],
                                    "hasMore": true,
                                    "totalResults": 0
                                  },
                                  "telephones": {
                                    "count": 0,
                                    "hasMore": true,
                                    "telephoneInfo": [
                                      {
                                        "id": "string",
                                        "telephone": {
                                          "createDateTime": "2020-08-24T12:55:55.602Z",
                                          "creatorId": "string",
                                          "extension": "string",
                                          "lastModifierId": "string",
                                          "lastModifyDateTime": "2020-08-24T12:55:55.602Z",
                                          "orderSequence": 0,
                                          "phoneNumber": "string",
                                          "phoneTechType": "string",
                                          "phoneUseType": "string",
                                          "phoneUseTypeDescription": "string",
                                          "primaryInd": true,
                                          "purgeDate": "2020-08-24"
                                        },
                                        "type": "string"
                                      }
                                    ],
                                    "totalResults": 0
                                  }
                                },
                                "reservationFolioWindows": [
                                  {
                                    "balance": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    },
                                    "folioWindowNo": 0,
                                    "payeeInfo": {
                                      "payeeAccountInfo": {
                                        "accountId": {
                                          "id": "string",
                                          "type": "string"
                                        },
                                        "accountName": "string",
                                        "accountNo": "string",
                                        "status": {
                                          "description": "string",
                                          "restricted": true,
                                          "restriction": "string"
                                        }
                                      },
                                      "payeeAddress": {
                                        "address": {
                                          "addressLine": [
                                            "string"
                                          ],
                                          "barCode": "string",
                                          "cityExtension": "string",
                                          "cityName": "string",
                                          "country": {
                                            "code": "string",
                                            "value": "string"
                                          },
                                          "county": "string",
                                          "createDateTime": "2020-08-24T12:55:55.601Z",
                                          "creatorId": "string",
                                          "language": "string",
                                          "lastModifierId": "string",
                                          "lastModifyDateTime": "2020-08-24T12:55:55.601Z",
                                          "postalCode": "string",
                                          "primaryInd": true,
                                          "purgeDate": "2020-08-24",
                                          "state": "string",
                                          "type": "string",
                                          "typeDescription": "string",
                                          "updateReservations": true
                                        },
                                        "id": "string",
                                        "type": "string"
                                      },
                                      "payeeAddressCount": 0,
                                      "payeeId": {
                                        "id": "string",
                                        "type": "string"
                                      },
                                      "payeeName": "string",
                                      "payeeReferenceCurrency": "string",
                                      "payeeTaxNumber": "string"
                                    },
                                    "paymentMethod": "string"
                                  }
                                ],
                                "reservationGuest": {
                                  "accompanyGuests": [
                                    {
                                      "firstName": "string",
                                      "fullName": "string",
                                      "lastName": "string",
                                      "profileIdList": [
                                        {
                                          "id": "string",
                                          "type": "string"
                                        }
                                      ],
                                      "registrationCardNo": "string"
                                    }
                                  ],
                                  "address": {
                                    "cityName": "string",
                                    "country": {
                                      "code": "string",
                                      "value": "string"
                                    },
                                    "excludeNoCity": true,
                                    "postalCode": "string",
                                    "state": "string",
                                    "streetAddress": "string"
                                  },
                                  "alternateFullName": "string",
                                  "alternateGivenName": "string",
                                  "alternateSurname": "string",
                                  "anonymization": {
                                    "anonymizationDate": "2020-08-24T12:55:55.601Z",
                                    "anonymizationStatus": "Requested"
                                  },
                                  "birthDate": "2020-08-24",
                                  "email": "string",
                                  "externalInfo": {
                                    "givenName": "string",
                                    "surname": "string"
                                  },
                                  "fullName": "string",
                                  "givenName": "string",
                                  "guestLastStayInfo": {
                                    "lastStayDate": "2020-08-24",
                                    "lastStayRate": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    },
                                    "lastStayRoom": "string",
                                    "totalStay": 0
                                  },
                                  "guestRestricted": true,
                                  "guestRestrictedCode": "string",
                                  "guestRestrictedReasonDesc": "string",
                                  "id": "string",
                                  "language": "string",
                                  "membership": {
                                    "accountId": "string",
                                    "bonusCode": "string",
                                    "membershipId": 0,
                                    "membershipLevel": "string",
                                    "membershipLevelDesc": "string",
                                    "membershipTypeDesc": "string",
                                    "playerRanking": 0,
                                    "programCode": "string"
                                  },
                                  "middleName": "string",
                                  "namePrefix": "string",
                                  "nameSuffix": "string",
                                  "nameTitle": "string",
                                  "nameType": "Guest",
                                  "nationality": {
                                    "code": "string",
                                    "value": "string"
                                  },
                                  "phoneNumber": "string",
                                  "registrationCardNo": "string",
                                  "surname": "string",
                                  "surnamePrefix": "string",
                                  "type": "string",
                                  "vip": {
                                    "vipCode": "string",
                                    "vipDescription": "string"
                                  }
                                },
                                "reservationIdList": [
                                  {
                                    "id": "string",
                                    "type": "string"
                                  }
                                ],
                                "reservationIndicators": [
                                  {
                                    "count": 0,
                                    "indicatorName": "string"
                                  }
                                ],
                                "reservationPaymentMethod": {
                                  "authorizationRule": {
                                    "amount": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    },
                                    "code": 0,
                                    "percent": 0
                                  },
                                  "balance": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "description": "string",
                                  "emailFolioInfo": {
                                    "email": {
                                      "createDateTime": "2020-08-24T12:55:55.601Z",
                                      "creatorId": "string",
                                      "emailAddress": "string",
                                      "emailFormat": "Html",
                                      "lastModifierId": "string",
                                      "lastModifyDateTime": "2020-08-24T12:55:55.601Z",
                                      "orderSequence": 0,
                                      "primaryInd": true,
                                      "purgeDate": "2020-08-24",
                                      "type": "string",
                                      "typeDescription": "string"
                                    },
                                    "emailFolio": true,
                                    "id": "string",
                                    "type": "string"
                                  },
                                  "folioView": 0,
                                  "paymentCard": {
                                    "approvalAmountNeeded": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    },
                                    "attachCreditCardToProfile": true,
                                    "cardHolderName": "string",
                                    "cardId": {
                                      "id": "string",
                                      "type": "string"
                                    },
                                    "cardNumber": "string",
                                    "cardNumberLast4Digits": "string",
                                    "cardNumberMasked": "string",
                                    "cardOrToken": "CardNumber",
                                    "cardType": "Ab",
                                    "currentAuthorizedAmount": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    },
                                    "expirationDate": "2020-08-24",
                                    "expirationDateExpired": true,
                                    "expirationDateMasked": "string",
                                    "processing": "Eft",
                                    "swiped": true,
                                    "userDefinedCardType": "string"
                                  },
                                  "paymentMethod": "string"
                                },
                                "reservationStatus": "Reserved",
                                "revenuesAndBalances": {
                                  "balance": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "foodAndBevRevenue": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "nonRevenue": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "otherRevenue": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "roomRevenue": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "totalFixedCharge": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "totalPayment": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "totalRevenue": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  }
                                },
                                "roomStay": {
                                  "adultCount": 0,
                                  "arrivalDate": "2020-08-24",
                                  "balance": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "bookingChannelCode": "string",
                                  "childCount": 0,
                                  "compBalance": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "departureDate": "2020-08-24",
                                  "depositPayments": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "expectedTimes": {
                                    "reservationExpectedArrivalTime": "2020-08-24T12:55:55.601Z",
                                    "reservationExpectedDepartureTime": "2020-08-24T12:55:55.601Z"
                                  },
                                  "fixedRate": true,
                                  "guarantee": {
                                    "guaranteeCode": "string",
                                    "onHold": true,
                                    "shortDescription": "string"
                                  },
                                  "guestServiceStatus": "DoNotDisturb",
                                  "marketCode": "string",
                                  "numberOfRooms": 0,
                                  "originalTimeSpan": {
                                    "duration": "string",
                                    "endDate": "2020-08-24",
                                    "startDate": "2020-08-24"
                                  },
                                  "partyCode": "string",
                                  "points": {
                                    "awardsType": "string",
                                    "points": 0
                                  },
                                  "promotion": {
                                    "couponCode": "string",
                                    "promotionCode": "string",
                                    "promotionName": "string"
                                  },
                                  "pseudoRoom": true,
                                  "rateAmount": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "ratePlanCode": "string",
                                  "rateSuppressed": true,
                                  "reservationBlock": {
                                    "blockIdList": [
                                      {
                                        "id": "string",
                                        "type": "string"
                                      }
                                    ],
                                    "blockName": "string",
                                    "hotelId": "string"
                                  },
                                  "roomClass": "string",
                                  "roomNumber": "string",
                                  "roomNumberLocked": true,
                                  "roomType": "string",
                                  "roomTypeCharged": "string",
                                  "scheduledCheckoutTime": "2020-08-24",
                                  "sourceOfBusiness": "string",
                                  "sourceOfBusinessDescription": "string",
                                  "totalAmount": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  }
                                },
                                "roomStayReservation": true,
                                "searchMatches": [
                                  {
                                    "attribute": "string",
                                    "value": "string"
                                  }
                                ],
                                "sharedGuests": [
                                  {
                                    "firstName": "string",
                                    "fullName": "string",
                                    "lastName": "string",
                                    "profileId": {
                                      "id": "string",
                                      "idContext": "string",
                                      "idExtension": 0,
                                      "instance": "string",
                                      "type": "string",
                                      "url": "string"
                                    }
                                  }
                                ],
                                "sourceOfSale": {
                                  "sourceCode": "string",
                                  "sourceType": "string"
                                },
                                "specials": "string",
                                "taxType": {
                                  "code": "string",
                                  "collectingAgentTax": true,
                                  "description": "string",
                                  "hotelId": "string",
                                  "minimumLengthOfStay": 0,
                                  "printAutoAdjust": true,
                                  "reportExemptDays": 0,
                                  "reportTaxPercentage": 0
                                },
                                "turndownInfo": {
                                  "allowed": true,
                                  "status": "Required"
                                },
                                "waitlist": {
                                  "description": "string",
                                  "priorityCode": "string",
                                  "priorityDescription": "string",
                                  "reasonCode": "string",
                                  "reasonDescription": "string",
                                  "telephone": "string"
                                },
                                "walkInIndicator": true,
                                "welcomeOffer": true
                              }
                            ],
                            "resvInfo": [
                              {
                                "guestName": "string",
                                "profileId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "reservationId": {
                                  "id": "string",
                                  "idContext": "string",
                                  "idExtension": 0,
                                  "instance": "string",
                                  "type": "string",
                                  "url": "string"
                                },
                                "reservationStatusInfo": "Arrival",
                                "stayDateInfo": {
                                  "expectedTimes": {
                                    "reservationExpectedArrivalTime": "2020-08-24T12:55:55.601Z",
                                    "reservationExpectedDepartureTime": "2020-08-24T12:55:55.601Z"
                                  },
                                  "timeSpan": {
                                    "duration": "string",
                                    "endDate": "2020-08-24",
                                    "startDate": "2020-08-24"
                                  }
                                },
                                "vipStatus": {
                                  "code": "string",
                                  "value": "string"
                                }
                              }
                            ],
                            "roomAssignmentRating": "MostImportant",
                            "roomDescription": "string",
                            "roomFeatures": [
                              {
                                "code": "string",
                                "description": "string",
                                "orderSequence": 0,
                                "quantity": 0
                              }
                            ],
                            "roomId": "string",
                            "roomSection": {
                              "daySectionCode": "string",
                              "eveningSectionCode": "string"
                            },
                            "roomType": {
                              "houseKeeping": true,
                              "isAccessible": true,
                              "isSuiteRoom": true,
                              "maximumOccupancy": 0,
                              "meetingRoom": true,
                              "minimumOccupancy": 0,
                              "pseudoRoom": true,
                              "roomClass": "string",
                              "roomFeatures": [
                                {
                                  "code": "string",
                                  "description": "string",
                                  "orderSequence": 0,
                                  "quantity": 0
                                }
                              ],
                              "roomType": "string",
                              "shortDescription": "string",
                              "smokingPreference": "string"
                            },
                            "servicingInfo": [
                              {
                                "activeFlag": "string",
                                "appUser": {
                                  "actAs": "string",
                                  "actAt": "string",
                                  "appUser": "string",
                                  "appUserId": {
                                    "id": "string",
                                    "type": "string"
                                  },
                                  "attendantInfo": {
                                    "attendantId": "string",
                                    "hotelId": "string"
                                  },
                                  "cashierId": 0,
                                  "cashierTitle": "string",
                                  "department": "string",
                                  "departmentLocation": "string",
                                  "disabledUntil": "2020-08-24",
                                  "expiryDate": "2020-08-24",
                                  "hotel": {
                                    "code": "string",
                                    "description": "string"
                                  },
                                  "lDAPUser": "string",
                                  "passwordChangeDate": "2020-08-24",
                                  "salesRepCode": "string",
                                  "userDefaultLanguage": "string",
                                  "userInfo": {
                                    "addressInfo": {
                                      "address": {
                                        "addressLine": [
                                          "string"
                                        ],
                                        "barCode": "string",
                                        "cityExtension": "string",
                                        "cityName": "string",
                                        "country": {
                                          "code": "string",
                                          "value": "string"
                                        },
                                        "county": "string",
                                        "createDateTime": "2020-08-24T12:55:55.602Z",
                                        "creatorId": "string",
                                        "language": "string",
                                        "lastModifierId": "string",
                                        "lastModifyDateTime": "2020-08-24T12:55:55.602Z",
                                        "postalCode": "string",
                                        "primaryInd": true,
                                        "purgeDate": "2020-08-24",
                                        "state": "string",
                                        "type": "string",
                                        "typeDescription": "string",
                                        "updateReservations": true
                                      },
                                      "id": "string",
                                      "type": "string"
                                    },
                                    "birthDate": "2020-08-24",
                                    "birthDateMasked": "string",
                                    "department": {
                                      "code": "string",
                                      "description": "string"
                                    },
                                    "emailInfo": {
                                      "email": {
                                        "createDateTime": "2020-08-24T12:55:55.602Z",
                                        "creatorId": "string",
                                        "emailAddress": "string",
                                        "emailFormat": "Html",
                                        "lastModifierId": "string",
                                        "lastModifyDateTime": "2020-08-24T12:55:55.602Z",
                                        "orderSequence": 0,
                                        "primaryInd": true,
                                        "purgeDate": "2020-08-24",
                                        "type": "string",
                                        "typeDescription": "string"
                                      },
                                      "id": "string",
                                      "type": "string"
                                    },
                                    "gender": "Male",
                                    "personName": {
                                      "envelopeGreeting": "string",
                                      "externalSystem": "string",
                                      "givenName": "string",
                                      "language": "string",
                                      "middleName": "string",
                                      "namePrefix": "string",
                                      "nameSuffix": "string",
                                      "nameTitle": "string",
                                      "nameTitleSuffix": 0,
                                      "nameType": "Primary",
                                      "salutation": "string",
                                      "surname": "string"
                                    },
                                    "phoneInfo": {
                                      "id": "string",
                                      "telephone": {
                                        "createDateTime": "2020-08-24T12:55:55.602Z",
                                        "creatorId": "string",
                                        "extension": "string",
                                        "lastModifierId": "string",
                                        "lastModifyDateTime": "2020-08-24T12:55:55.602Z",
                                        "orderSequence": 0,
                                        "phoneNumber": "string",
                                        "phoneTechType": "string",
                                        "phoneUseType": "string",
                                        "phoneUseTypeDescription": "string",
                                        "primaryInd": true,
                                        "purgeDate": "2020-08-24"
                                      },
                                      "type": "string"
                                    },
                                    "profileId": {
                                      "id": "string",
                                      "type": "string"
                                    }
                                  },
                                  "userSessionInfo": {
                                    "businessDate": "2020-08-24",
                                    "cROCountryCode": "string",
                                    "chain": "string",
                                    "cro": {
                                      "code": "string",
                                      "description": "string"
                                    },
                                    "hotel": {
                                      "code": "string",
                                      "description": "string"
                                    },
                                    "parameters": [
                                      {
                                        "parameterName": "string",
                                        "parameterValue": "string"
                                      }
                                    ],
                                    "runningApp": "string",
                                    "sessionDefaults": {
                                      "baseLanguage": "string",
                                      "currencyCode": "string",
                                      "currencyFormat": "string",
                                      "dbDateFormat": "string",
                                      "defaultLanguage": "string",
                                      "javaDateFormat": "string",
                                      "javaTimeFormat": "string",
                                      "oracleDateFormat": "string",
                                      "oracleTimeFormat": "string"
                                    },
                                    "shareProfiles": true,
                                    "systemDate": "2020-08-24",
                                    "terminal": "string"
                                  }
                                },
                                "attendantId": "string",
                                "attendantName": "string",
                                "floor": "string",
                                "friday": true,
                                "hotelId": "string",
                                "monday": true,
                                "saturday": true,
                                "section": {
                                  "code": "string",
                                  "description": "string",
                                  "hotelId": "string",
                                  "inactive": true,
                                  "roomCredits": 0,
                                  "rooms": 0,
                                  "sectionGroup": "string",
                                  "sequence": 0,
                                  "targetCredits": 0
                                },
                                "startTime": "2020-08-24T12:55:55.602Z",
                                "status": "Standby",
                                "sunday": true,
                                "thursday": true,
                                "tuesday": true,
                                "wednesday": true
                              }
                            ],
                            "sitePlanSection": {
                              "coordinates": "string",
                              "description": "string",
                              "linkCode": "string",
                              "sectionCode": "string",
                              "sectionType": "string"
                            },
                            "smokingPreference": "string",
                            "smokingPreferenceDescription": "string",
                            "totalCredits": 0,
                            "turndownInfo": {
                              "turndownStatusInfo": "Required"
                            },
                            "wakeUpTime": "2020-08-24"
                          }
                        ],
                        "sheetNumber": 0,
                        "sheetType": "NoServiceRequired",
                        "taskCodes": [
                          {
                            "code": "string",
                            "description": "string",
                            "facilityDepartureTask": true,
                            "hotelId": "string",
                            "instructions": "string",
                            "linenChange": true,
                            "sequence": 0
                          }
                        ],
                        "taskInstructions": "string",
                        "taskSeqNo": 0,
                        "totalSupplies": [
                          {
                            "code": "string",
                            "description": "string",
                            "quantity": 0
                          }
                        ]
                      }
                    ],
                    "taskSheetsCount": 0
                  }
                ]
              }
            }
          },
          "204": {
            "description": "HouseKeepingTasks not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/housekeepingDiscrepancies": {
      "get": {
        "description": "Use this API to return the current housekeeping discrepant rooms for a specific property based on search parameters such as roomDiscrepancyStatus, roomClass, floor, dueOut, etc. These are rooms where the housekeeping status does not match the front office status.<p><strong>OperationId:</strong>getHousekeepingDiscrepancies</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Get hotel housekeeping discrepant rooms",
        "operationId": "getHousekeepingDiscrepancies",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Sleep",
                "Skip",
                "PersonDiscrepancy"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for discrepant room status instructions to be used in requests for fetching housekeeping and front office room discrepancy. Valid values are Sleep, Skip, Person Discrepancy, Due Out Only.",
            "name": "roomDiscrepancyStatus",
            "in": "query"
          },
          {
            "type": "string",
            "name": "fromRoomNumber",
            "in": "query"
          },
          {
            "type": "string",
            "name": "toRoomNumber",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Class of the Room.",
            "name": "roomClass",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "housekeepingEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "housekeepingStartDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The floor of room to be fetched.",
            "name": "floor",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "List the rooms based on the flag DUE OUT for departure only.",
            "name": "dueOut",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/rooms"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "HousekeepingDiscrepancies not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/housekeepingOverview": {
      "get": {
        "description": "Use this API to return the status of rooms for a specific property based on search criteria such as hotelId, limit, housekeepingRoomStatus, frontOfficeRoomStatus, roomAssignmentStatus, roomType, roomFeatures. The results will give you a list of rooms, and their current housekeeping details.  You could then go ahead and update any of these rooms by using postOutOfOrderRoom for example. <p><strong>OperationId:</strong>getHousekeepingOverview</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Get housekeeping rooms overview",
        "operationId": "getHousekeepingOverview",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Hotel Code for which Housekeeping overview needs to be fetched",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Clean",
                "Dirty",
                "Pickup",
                "Inspected",
                "OutOfOrder",
                "OutOfService"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
            "name": "housekeepingRoomStatus",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Vacant",
                "Occupied"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for front office room status instructions to be used in requests for fetching housekeeping rooms. Valid values are Vacant and Occupied.",
            "name": "frontOfficeRoomStatus",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Required",
                "NotRequired",
                "Compeleted"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for turndown status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Required, Not Required and Completed.",
            "name": "turndownStatus",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Odd",
                "Even"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for room parity instructions to be used in requests for fetching housekeeping rooms. Valid status values are Odd and Even.",
            "name": "roomParityStatus",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Open",
                "PendingFollowUp",
                "Closed",
                "DoNotDisturb",
                "MakeUpRoom"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "serviceRequestStatus",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Assigned",
                "Unassigned"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomAssignmentStatus",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Summary",
                "ResvInfo",
                "TurndownInfo"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for housekeeping instructions that can be used in requests for partial operations.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "name": "fromRoomNumber",
            "in": "query"
          },
          {
            "type": "string",
            "name": "toRoomNumber",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The floor of room to be fetched.",
            "name": "floor",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Type of the Room.",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Class of the Room.",
            "name": "roomClass",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Building of the Room.",
            "name": "building",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Features of the Room.",
            "name": "roomFeatures",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "AM Sections of the Room.",
            "name": "daySection",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "PM Sections of the Room.",
            "name": "eveningSection",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The status of the reservation to which this Room is assigned.",
            "name": "reservationStatus",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "DoNotDisturb",
              "MakeUpRoom",
              "NoStatusSelected"
            ],
            "type": "string",
            "description": "Possible values for the Guest Service Status.",
            "name": "guestServiceRequest",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wild Card entry for Room numbers to be Fetched.",
            "name": "roomIdText",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates we need to exclude the combo rooms while fetching the housekeeping details.",
            "name": "excludeCombo",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Determines whether fetching cleaning priority rooms only.",
            "name": "cleaningPriorityOnly",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/housekeepingBoard"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "housekeepingRoomInfo": {
                  "hasMore": true,
                  "housekeepingRooms": {
                    "hotelId": "HOTEL1",
                    "room": [
                      {
                        "floor": "01,LF",
                        "housekeeping": {
                          "housekeepingRoomStatus": {
                            "frontOfficeStatus": "Vacant",
                            "housekeepingRoomStatus": "Dirty",
                            "housekeepingStatus": "Vacant",
                            "reservationStatusList": [
                              "NotReserved"
                            ]
                          },
                          "roomPersons": {
                            "frontOfficePersons": "0",
                            "houseKeepingPersons": "0"
                          }
                        },
                        "roomFeatures": [
                          {
                            "code": "FTV"
                          },
                          {
                            "code": "OCVIEW"
                          }
                        ],
                        "roomId": "112",
                        "roomSection": {
                          "daySectionCode": "101",
                          "eveningSectionCode": "101"
                        },
                        "roomType": {
                          "pseudoRoom": false,
                          "roomClass": "ALL",
                          "roomType": "STDK"
                        }
                      },
                      {
                        "floor": "01,LF",
                        "housekeeping": {
                          "housekeepingRoomStatus": {
                            "frontOfficeStatus": "Vacant",
                            "housekeepingRoomStatus": "Dirty",
                            "housekeepingStatus": "Vacant",
                            "reservationStatusList": [
                              "NotReserved"
                            ]
                          },
                          "roomPersons": {
                            "frontOfficePersons": "0",
                            "houseKeepingPersons": "0"
                          }
                        },
                        "roomFeatures": [
                          {
                            "code": "FTV"
                          }
                        ],
                        "roomId": "114",
                        "roomType": {
                          "pseudoRoom": false,
                          "roomClass": "ALL",
                          "roomType": "STDQ"
                        }
                      },
                      {
                        "floor": "01,LF",
                        "housekeeping": {
                          "housekeepingRoomStatus": {
                            "frontOfficeStatus": "Vacant",
                            "housekeepingRoomStatus": "Dirty",
                            "housekeepingStatus": "Vacant",
                            "reservationStatusList": [
                              "NotReserved"
                            ]
                          },
                          "roomPersons": {
                            "frontOfficePersons": "0",
                            "houseKeepingPersons": "0"
                          }
                        },
                        "roomFeatures": [
                          {
                            "code": "FTV"
                          }
                        ],
                        "roomId": "115",
                        "roomType": {
                          "pseudoRoom": false,
                          "roomClass": "ALL",
                          "roomType": "STDQ"
                        }
                      },
                      {
                        "floor": "01,LF",
                        "housekeeping": {
                          "housekeepingRoomStatus": {
                            "frontOfficeStatus": "Vacant",
                            "housekeepingRoomStatus": "Dirty",
                            "housekeepingStatus": "Vacant",
                            "reservationStatusList": [
                              "NotReserved"
                            ]
                          },
                          "roomPersons": {
                            "frontOfficePersons": "0",
                            "houseKeepingPersons": "0"
                          }
                        },
                        "roomFeatures": [
                          {
                            "code": "FTV"
                          }
                        ],
                        "roomId": "116",
                        "roomType": {
                          "pseudoRoom": false,
                          "roomClass": "ALL",
                          "roomType": "STDQ"
                        }
                      },
                      {
                        "floor": "01,LF",
                        "housekeeping": {
                          "housekeepingRoomStatus": {
                            "frontOfficeStatus": "Vacant",
                            "housekeepingRoomStatus": "Dirty",
                            "housekeepingStatus": "Vacant",
                            "reservationStatusList": [
                              "NotReserved"
                            ]
                          },
                          "roomPersons": {
                            "frontOfficePersons": "0",
                            "houseKeepingPersons": "0"
                          }
                        },
                        "roomFeatures": [
                          {
                            "code": "FTV"
                          }
                        ],
                        "roomId": "117",
                        "roomType": {
                          "pseudoRoom": false,
                          "roomClass": "ALL",
                          "roomType": "STDQ"
                        }
                      },
                      {
                        "floor": "01,LF",
                        "housekeeping": {
                          "housekeepingRoomStatus": {
                            "frontOfficeStatus": "Vacant",
                            "housekeepingRoomStatus": "Dirty",
                            "housekeepingStatus": "Vacant",
                            "reservationStatusList": [
                              "NotReserved"
                            ]
                          },
                          "roomPersons": {
                            "frontOfficePersons": "0",
                            "houseKeepingPersons": "0"
                          }
                        },
                        "roomFeatures": [
                          {
                            "code": "FTV"
                          }
                        ],
                        "roomId": "118",
                        "roomType": {
                          "pseudoRoom": false,
                          "roomClass": "ALL",
                          "roomType": "STDQ"
                        }
                      },
                      {
                        "floor": "01,LF",
                        "housekeeping": {
                          "housekeepingRoomStatus": {
                            "frontOfficeStatus": "Vacant",
                            "housekeepingRoomStatus": "Dirty",
                            "housekeepingStatus": "Vacant",
                            "reservationStatusList": [
                              "NotReserved"
                            ]
                          },
                          "roomPersons": {
                            "frontOfficePersons": "0",
                            "houseKeepingPersons": "0"
                          }
                        },
                        "roomFeatures": [
                          {
                            "code": "FTV"
                          }
                        ],
                        "roomId": "119",
                        "roomType": {
                          "pseudoRoom": false,
                          "roomClass": "ALL",
                          "roomType": "STDQ"
                        }
                      },
                      {
                        "floor": "01,LF",
                        "housekeeping": {
                          "housekeepingRoomStatus": {
                            "frontOfficeStatus": "Vacant",
                            "housekeepingRoomStatus": "Dirty",
                            "housekeepingStatus": "Vacant",
                            "reservationStatusList": [
                              "NotReserved"
                            ]
                          },
                          "roomPersons": {
                            "frontOfficePersons": "0",
                            "houseKeepingPersons": "0"
                          }
                        },
                        "roomFeatures": [
                          {
                            "code": "FTV"
                          }
                        ],
                        "roomId": "120",
                        "roomType": {
                          "pseudoRoom": false,
                          "roomClass": "ALL",
                          "roomType": "STDQ"
                        }
                      },
                      {
                        "floor": "01,LF",
                        "housekeeping": {
                          "housekeepingRoomStatus": {
                            "frontOfficeStatus": "Vacant",
                            "housekeepingRoomStatus": "Dirty",
                            "housekeepingStatus": "Vacant",
                            "reservationStatusList": [
                              "NotReserved"
                            ]
                          },
                          "roomPersons": {
                            "frontOfficePersons": "0",
                            "houseKeepingPersons": "0"
                          }
                        },
                        "roomFeatures": [
                          {
                            "code": "FTV"
                          }
                        ],
                        "roomId": "121",
                        "roomType": {
                          "pseudoRoom": false,
                          "roomClass": "ALL",
                          "roomType": "STDQ"
                        }
                      }
                    ]
                  },
                  "limit": "20",
                  "offset": "20",
                  "totalPages": "1",
                  "totalResults": "9"
                }
              }
            }
          },
          "204": {
            "description": "HousekeepingOverview not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/maintenances/{mainteananceId}": {
      "delete": {
        "description": "Use this API to delete maintenances from rooms. <p><strong>OperationId:</strong>deleteRoomMaintenance</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Delete the maintenances for rooms",
        "operationId": "deleteRoomMaintenance",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "mainteananceId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/maintenances/{mainteananceId}/resolve": {
      "put": {
        "description": "Use this API to Resolve maintenances for rooms. <p><strong>OperationId:</strong>resolveRoomMaintenance</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Resolve maintenances for rooms",
        "operationId": "resolveRoomMaintenance",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "mainteananceId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to resolve a room maintenance request.",
            "name": "roomMaintenance",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomMaintenance"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/resolvedRoomMaintenance"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/maintenances/{mainteananceId}/unResolve": {
      "put": {
        "description": "Use this API to unResolve maintenances for rooms. <p><strong>OperationId:</strong>unResolveRoomMaintenance</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "unResolve the maintenances for rooms",
        "operationId": "unResolveRoomMaintenance",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "mainteananceId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to set unresolved status for room maintenance request.",
            "name": "roomMaintenance",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomMaintenance"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/unresolvedRoomMaintenance"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/moveTaskRooms": {
      "put": {
        "description": "This API will allow you to Move the tasksheet rooms. <p><strong>OperationId:</strong>moveTaskRooms</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Move the task rooms",
        "operationId": "moveTaskRooms",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for moving rooms between task sheets.",
            "name": "moveTaskRooms",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/moveTaskRooms"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/movedTaskRoomsRS"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/houseKeepingNotes": {
      "get": {
        "description": "This API will allow you to get the guest housekeeping instructions. <p><strong>OperationId:</strong>getGuestHousekeepingNotes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Get the guest housekeeping instructions",
        "operationId": "getGuestHousekeepingNotes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room to which housekeeping record belongs.",
            "name": "room",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Turndown",
                "CleaningPriority",
                "ServiceRequest"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for housekeeping instructions that can be used in requests for partial operations.",
            "name": "housekeepingInstruction",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Return object that contains guest housekeeping instructions for the reservation/room.",
            "schema": {
              "$ref": "#/definitions/guestHousekeepingInstructions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "GuestHousekeepingNotes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "This API will allow you to Set guest housekeeping instructions. <p><strong>OperationId:</strong>setGuestHousekeepingNotes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Set guest housekeeping instructions",
        "operationId": "setGuestHousekeepingNotes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Operation to get set guest housekeeping instructions for the room.",
            "name": "guestHousekeepingServiceRequest",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/guestHousekeepingServiceRequest"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/guestHousekeepingService"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/houseKeepingTaskSchedules": {
      "get": {
        "description": "This API will allow you to get reservation housekeeping schedule. <p><strong>OperationId:</strong>getReservationHousekeepingSchedule</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Get reservation housekeeping schedule",
        "operationId": "getReservationHousekeepingSchedule",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Begin date from which to start fetching facility tasks.",
            "name": "beginDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "End date for facility task schedule request.",
            "name": "endDate",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "HousekeepingInstructions",
                "FacilitySchedule"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for controlling the fetch operations of the housekeeping schedule request.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Return object that contains a list of facility tasks for the reservation specified in RQ.",
            "schema": {
              "$ref": "#/definitions/schedule"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReservationHousekeepingSchedule not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "This API will allow you to update reservation housekeeping tasks. <p><strong>OperationId:</strong>editReservationHousekeepingTasks</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Update reservation housekeeping tasks",
        "operationId": "editReservationHousekeepingTasks",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "A schedule with task(s) to be edited for the given reservation.",
            "name": "schedule",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/schedule"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "An updated schedule for the reservation after the edit.",
            "schema": {
              "$ref": "#/definitions/schedule"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "This API will allow you to create reservation housekeeping tasks. <p><strong>OperationId:</strong>postReservationHousekeepingTasks</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Create reservation housekeeping tasks",
        "operationId": "postReservationHousekeepingTasks",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "A schedule with task(s) to be created for the given reservation.",
            "name": "schedule",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/schedule"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "This API will allow you to delete reservation housekeeping task. <p><strong>OperationId:</strong>deleteReservationHousekeepingTasks</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Delete reservation housekeeping task",
        "operationId": "deleteReservationHousekeepingTasks",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Signifies whether task has been customized or not.",
            "name": "customized",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Signifies the shift of the housekeeping schedule.",
            "name": "cycleStartDay",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date at which facility tasks stopped being retrieved.",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date at which facility tasks started being retrieved.",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code of the housekeeping task.",
            "name": "facilityTaskCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Facility task description.",
            "name": "facilityTaskDescription",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Signifies the priority of the task.",
            "name": "facilityTaskPriority",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "A reservation date on which task must occur.",
            "name": "taskDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Date on which the task needs to start being performed.",
            "name": "taskStartDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Date on which task will stop being performed.",
            "name": "taskEndDate",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "EntireStay",
                "SpecificDates"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for controlling the fetch operations of the housekeeping schedule request.",
            "name": "stayPeriod",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Signifies frequency(i.e. every 2 days) with which task is to be performed.",
            "name": "frequency",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Signifies offset(in days) i.e. start on 3rd day from arrival.",
            "name": "taskCycleStartDay",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Signifies the room type for which task is being performed .",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room number at which task is to be performed.",
            "name": "roomId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Facility code value.",
            "name": "facilityCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Facility Code.",
            "name": "facilityCodesDescription",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Signifies the quantity.",
            "name": "facilityCodesQuantity",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/houseKeepingTaskSchedules/reset": {
      "put": {
        "description": "This API will allow you to reset reservation housekeeping schedule. <p><strong>OperationId:</strong>resetReservationHousekeepingSchedule</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Reset reservation housekeeping schedule",
        "operationId": "resetReservationHousekeepingSchedule",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request with basic information reservation needed for the reset of the schedule.",
            "name": "scheduleSearch",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/scheduleSearch"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "An updated schedule for the reservation after the reset.",
            "schema": {
              "$ref": "#/definitions/scheduledSearch"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/houseKeepingTaskSchedules/shift": {
      "put": {
        "description": "This API will allow you to shift reservation housekeeping schedule. <p><strong>OperationId:</strong>shiftReservationHousekeepingSchedule</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Shift reservation housekeeping schedule",
        "operationId": "shiftReservationHousekeepingSchedule",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request with the information needed for the shift of the schedule.",
            "name": "scheduleShiftRequest",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/scheduleShiftRequest"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "An updated schedule for the reservation after the shift.",
            "schema": {
              "$ref": "#/definitions/scheduledShiftRequest"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rooms/cleaningPriority": {
      "delete": {
        "description": "This API will allow you to delete room cleaning priority. <p><strong>OperationId:</strong>putRoomCleaningPriority</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Delete room cleaning priority",
        "operationId": "putRoomCleaningPriority",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Collection of room numbers.",
            "name": "roomId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rooms/maintenanceCodes/{maintenanceCode}": {
      "post": {
        "description": "Use this API to create maintenances for rooms. <p><strong>OperationId:</strong>postRoomMaintenance</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Create maintenances for rooms",
        "operationId": "postRoomMaintenance",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "maintenanceCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to create a room maintenance record.",
            "name": "roomMaintenanceRequest",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomMaintenanceRequest"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rooms/maintenances": {
      "get": {
        "description": "Use this API to get a list of rooms with maintenances. <p><strong>OperationId:</strong>getRoomMaintenance</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Get the maintenance rooms",
        "operationId": "getRoomMaintenance",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Wildcard Room filter.",
            "name": "roomIdText",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room Number filter.",
            "name": "roomId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomClasses",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomTypes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "maintenanceCodes",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "All",
              "UnResolved",
              "Resolved"
            ],
            "type": "string",
            "description": "Room Maintenance Status.",
            "name": "roomMaintenanceStatus",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "assignedUserId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "assignedUserIdContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "assignedUserIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "maintenanceId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "maintenanceIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "maintenanceIdType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "resolvedEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "resolvedStartDate",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicator that tells whether to include Images in search results.",
            "name": "includeImages",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the Fetch Room Maintenance request.",
            "schema": {
              "$ref": "#/definitions/roomMaintenanceDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RoomMaintenance not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rooms/outOfOrderRooms": {
      "get": {
        "description": "Use this API to get a list of rooms for a hotel that are Out of Order.  You can narrow down your results with search criteria such as Room class, Room Type, date range. <p><strong>OperationId:</strong>getOutOfOrderRooms</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Get Out of Order Rooms",
        "operationId": "getOutOfOrderRooms",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Hotel Code for which Out Of Order rooms needs to be fetched.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "The start date for which the out of order / out of service rooms are to be fetched.",
            "name": "startDate",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "From this Room number onwards to be Fetched.",
            "name": "roomId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The end date for which the out of order / out of service rooms are to be fetched.",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The room type of out of order / out of service rooms to be fetched.",
            "name": "roomTypes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The room class of out of order / out of service rooms to be fetched.",
            "name": "roomClasses",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/rooms"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "housekeepingRooms": {
                  "hotelId": "HOTEL1",
                  "room": [
                    {
                      "housekeeping": {
                        "housekeepingRoomStatus": {
                          "frontOfficeStatus": "Vacant",
                          "housekeepingRoomStatus": "OutOfOrder",
                          "housekeepingStatus": "Vacant"
                        }
                      },
                      "outOfOrder": [
                        {
                          "end": "2020-07-15",
                          "housekeepingRoomStatus": "OutOfOrder",
                          "newDateRange": {
                            "end": "2020-07-15",
                            "start": "2020-07-15"
                          },
                          "reasonCode": "WIN",
                          "reasonDescription": "Window Cleaning",
                          "returnStatus": "Inspected",
                          "start": "2020-07-15"
                        }
                      ],
                      "roomId": "1016",
                      "roomType": {
                        "pseudoRoom": false,
                        "roomClass": "ALL",
                        "roomType": "DLX"
                      }
                    },
                    {
                      "housekeeping": {
                        "housekeepingRoomStatus": {
                          "frontOfficeStatus": "Vacant",
                          "housekeepingRoomStatus": "OutOfOrder",
                          "housekeepingStatus": "Vacant"
                        }
                      },
                      "outOfOrder": [
                        {
                          "end": "2020-07-15",
                          "housekeepingRoomStatus": "OutOfOrder",
                          "newDateRange": {
                            "end": "2020-07-15",
                            "start": "2020-07-15"
                          },
                          "reasonCode": "AC",
                          "reasonDescription": "Air Conditioning Issue",
                          "returnStatus": "Inspected",
                          "start": "2020-07-15"
                        }
                      ],
                      "roomId": "1185",
                      "roomType": {
                        "pseudoRoom": false,
                        "roomClass": "ALL",
                        "roomType": "DLX"
                      }
                    },
                    {
                      "housekeeping": {
                        "housekeepingRoomStatus": {
                          "frontOfficeStatus": "Vacant",
                          "housekeepingRoomStatus": "OutOfOrder",
                          "housekeepingStatus": "Vacant"
                        }
                      },
                      "outOfOrder": [
                        {
                          "end": "2020-07-15",
                          "housekeepingRoomStatus": "OutOfOrder",
                          "newDateRange": {
                            "end": "2020-07-15",
                            "start": "2020-07-15"
                          },
                          "reasonCode": "AC",
                          "reasonDescription": "Air Conditioning Issue",
                          "returnStatus": "Inspected",
                          "start": "2020-07-15"
                        }
                      ],
                      "roomId": "2004",
                      "roomType": {
                        "pseudoRoom": false,
                        "roomClass": "ALL",
                        "roomType": "STD"
                      }
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "OutOfOrderRooms not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API when one or more rooms are no longer Out Of Order, and can now be available for a guest to stay in.  Specify in the request what status the room(s) should be returned to, such as clean, Inspected, dirty or Pickup. <p><strong>OperationId:</strong>completeOutOfOrderRooms</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Complete rooms Out Of Order",
        "operationId": "completeOutOfOrderRooms",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Hotel Code for which Out Of Order rooms needs to be returned to Clean, Inspected, Dirty or Pickup status.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "name": "completeRoomRepair",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/completeRoomRepair"
                },
                {
                  "example": {
                    "criteria": {
                      "roomRangeList": {
                        "range": {
                          "roomRange": {
                            "fromRoomNumber": "001",
                            "toRoomNumber": "001"
                          }
                        },
                        "roomIds": [
                          "001"
                        ],
                        "roomOutOfOrder": {
                          "end": "2020-12-31",
                          "newDateRange": {
                            "end": "2020-10-01",
                            "start": "2020-10-01"
                          },
                          "reasonCode": "SHOWER",
                          "reasonDescription": "Shower not working well",
                          "repairRemarks": "Fixed issue in shower",
                          "returnStatus": "OutOfOrder",
                          "start": "2020-10-01"
                        }
                      },
                      "roomRepairByRoomNumber": [
                        {
                          "roomId": "001",
                          "roomOutOfOrder": {
                            "end": "2020-12-31",
                            "newDateRange": {
                              "end": "2020-10-01",
                              "start": "2020-10-01"
                            },
                            "reasonCode": "SHOWER",
                            "reasonDescription": "Shower not working well",
                            "repairRemarks": "Fixed issue in shower",
                            "returnStatus": "Clean",
                            "start": "2020-10-01"
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/completeRoomRepairStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "This API allows you to initially set rooms to 'Out Of Order' housekeeping status and update existing outOfOrderRooms. <p><strong>OperationId:</strong>postOutOfOrderRooms</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Set multiple rooms to Out Of Order",
        "operationId": "postOutOfOrderRooms",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Hotel Code of Room(s) which is to be set as Out Of Order.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "name": "roomRepairOutOfOrder",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomRepairOutOfOrder"
                },
                {
                  "example": {
                    "criteria": {
                      "roomRangeList": {
                        "roomIds": [
                          "1011",
                          "1015"
                        ],
                        "roomOutOfOrder": {
                          "end": "2020-11-30",
                          "newDateRange": {
                            "end": "2020-11-30",
                            "start": "2020-11-30"
                          },
                          "reasonCode": "WIN",
                          "reasonDescription": "Resolved",
                          "repairRemarks": "Windows now fixed By John",
                          "returnStatus": "PickUP",
                          "start": "2020-11-30"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rooms/outOfServiceRooms": {
      "get": {
        "description": "Use this API to get a list of rooms for a hotel that are Out of Service.  You can narrow down your results with search criteria such as Room class, Room Type, date range. <p><strong>OperationId:</strong>getOutOfServiceRooms</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Get Out of Service Rooms",
        "operationId": "getOutOfServiceRooms",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Hotel Code for which Out Of Service rooms needs to be fetched.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "The start date for which the out of order / out of service rooms are to be fetched.",
            "name": "startDate",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "From this Room number onwards to be Fetched.",
            "name": "roomId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The end date for which the out of order / out of service rooms are to be fetched.",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The room type of out of order / out of service rooms to be fetched.",
            "name": "roomTypes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The room class of out of order / out of service rooms to be fetched.",
            "name": "roomClasses",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/rooms"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "housekeepingRooms": {
                  "hotelId": "HOTEL1",
                  "room": [
                    {
                      "housekeeping": {
                        "housekeepingRoomStatus": {
                          "frontOfficeStatus": "Vacant",
                          "housekeepingRoomStatus": "OutOfService",
                          "housekeepingStatus": "Vacant"
                        }
                      },
                      "outOfOrder": [
                        {
                          "end": "2020-07-17",
                          "housekeepingRoomStatus": "OutOfService",
                          "newDateRange": {
                            "end": "2020-07-15",
                            "start": "2020-07-15"
                          },
                          "reasonCode": "PLUMB",
                          "reasonDescription": "Plumbing Issue",
                          "returnStatus": "Inspected",
                          "start": "2020-07-15"
                        }
                      ],
                      "roomId": "1017",
                      "roomType": {
                        "pseudoRoom": false,
                        "roomClass": "ALL",
                        "roomType": "DLX"
                      }
                    },
                    {
                      "housekeeping": {
                        "housekeepingRoomStatus": {
                          "frontOfficeStatus": "Vacant",
                          "housekeepingRoomStatus": "OutOfService",
                          "housekeepingStatus": "Vacant"
                        }
                      },
                      "outOfOrder": [
                        {
                          "end": "2020-07-15",
                          "housekeepingRoomStatus": "OutOfService",
                          "newDateRange": {
                            "end": "2020-07-15",
                            "start": "2020-07-15"
                          },
                          "reasonCode": "WIN",
                          "reasonDescription": "Window Cleaning",
                          "returnStatus": "Inspected",
                          "start": "2020-07-15"
                        }
                      ],
                      "roomId": "1033",
                      "roomType": {
                        "pseudoRoom": false,
                        "roomClass": "ALL",
                        "roomType": "DLX"
                      }
                    },
                    {
                      "housekeeping": {
                        "housekeepingRoomStatus": {
                          "frontOfficeStatus": "Vacant",
                          "housekeepingRoomStatus": "OutOfService",
                          "housekeepingStatus": "Vacant"
                        }
                      },
                      "outOfOrder": [
                        {
                          "end": "2020-07-15",
                          "housekeepingRoomStatus": "OutOfService",
                          "newDateRange": {
                            "end": "2020-07-15",
                            "start": "2020-07-15"
                          },
                          "reasonCode": "WIN",
                          "reasonDescription": "Window Cleaning",
                          "returnStatus": "Inspected",
                          "start": "2020-07-15"
                        }
                      ],
                      "roomId": "1039",
                      "roomType": {
                        "pseudoRoom": false,
                        "roomClass": "ALL",
                        "roomType": "DLX"
                      }
                    },
                    {
                      "housekeeping": {
                        "housekeepingRoomStatus": {
                          "frontOfficeStatus": "Vacant",
                          "housekeepingRoomStatus": "OutOfService",
                          "housekeepingStatus": "Vacant"
                        }
                      },
                      "outOfOrder": [
                        {
                          "end": "2020-07-16",
                          "housekeepingRoomStatus": "OutOfService",
                          "newDateRange": {
                            "end": "2020-07-15",
                            "start": "2020-07-15"
                          },
                          "reasonCode": "WIN",
                          "reasonDescription": "Window Cleaning",
                          "returnStatus": "Inspected",
                          "start": "2020-07-15"
                        }
                      ],
                      "roomId": "2001",
                      "roomType": {
                        "pseudoRoom": false,
                        "roomClass": "ALL",
                        "roomType": "STD"
                      }
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "OutOfServiceRooms not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API when one or more rooms are no longer Out Of Service, and can now be available for a guest to stay in.  Specify in the request what status the room(s) should be returned to, such as clean, Inspected, dirty or Pickup. <p><strong>OperationId:</strong>completeOutOfServiceRooms</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Complete Rooms Out of Service",
        "operationId": "completeOutOfServiceRooms",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Hotel Code for which Out Of Service rooms needs to be returned to Clean, Inspected, Dirty or Pickup status.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "name": "completeRoomRepair",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/completeRoomRepair"
                },
                {
                  "example": {
                    "criteria": {
                      "roomRangeList": {
                        "range": {
                          "roomRange": {
                            "fromRoomNumber": "2011",
                            "toRoomNumber": "2012"
                          }
                        },
                        "roomIds": [
                          "2011",
                          "2012"
                        ],
                        "roomOutOfOrder": {
                          "end": "2020-12-10",
                          "newDateRange": {
                            "end": "2020-12-05",
                            "start": "2020-12-05"
                          },
                          "reasonCode": "PLUMB",
                          "reasonDescription": "Plumbing Issue",
                          "repairRemarks": "test",
                          "returnStatus": "OutOfOrder",
                          "start": "2020-12-05"
                        }
                      },
                      "roomRepairByRoomNumber": [
                        {
                          "roomId": "2011",
                          "roomOutOfOrder": {
                            "end": "2020-12-10",
                            "newDateRange": {
                              "end": "2020-12-05",
                              "start": "2020-12-05"
                            },
                            "reasonCode": "PLUMB",
                            "reasonDescription": "Plumbing Issue",
                            "repairRemarks": "test",
                            "returnStatus": "Clean",
                            "start": "2020-12-05"
                          }
                        },
                        {
                          "roomId": "2012",
                          "roomOutOfOrder": {
                            "end": "2020-12-10",
                            "newDateRange": {
                              "end": "2020-12-05",
                              "start": "2020-12-05"
                            },
                            "reasonCode": "PLUMB",
                            "reasonDescription": "Plumbing Issue",
                            "repairRemarks": "test",
                            "returnStatus": "Clean",
                            "start": "2020-12-05"
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/completeRoomRepairStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "This API allows you to initially set rooms to 'Out Of Service' housekeeping status and update existing outOfServiceRooms. <p><strong>OperationId:</strong>postOutOfServiceRooms</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Set multiple rooms to Out Of Service",
        "operationId": "postOutOfServiceRooms",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Hotel Code of Room(s) which is to be set as Out Of Service.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "name": "roomRepairOutOfService",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomRepairOutOfService"
                },
                {
                  "example": {
                    "criteria": {
                      "roomRangeList": {
                        "roomIds": [
                          "1008",
                          "1017"
                        ],
                        "roomOutOfOrder": {
                          "end": "2020-07-27",
                          "newDateRange": {
                            "end": "2020-07-27",
                            "start": "2020-07-27"
                          },
                          "reasonCode": "WIN",
                          "reasonDescription": "clean",
                          "repairRemarks": "HHPRT5665",
                          "returnStatus": "Clean",
                          "start": "2020-07-27"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rooms/status": {
      "put": {
        "description": "Use this API to update the housekeeping room status for multiple rooms.  Statuses typically include Inspected, Clean, Pickup or Dirty. <p><strong>OperationId:</strong>putRoomRelatedStatus</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Update Housekeeping Room Status",
        "operationId": "putRoomRelatedStatus",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Hotel Code for which housekeeping room status, housekeeping status or turndown status have to be modified",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "name": "housekeepingRoomStatusCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/housekeepingRoomStatusCriteria"
                },
                {
                  "example": {
                    "housekeepingRoomStatus": "Clean",
                    "housekeepingStatus": "Vacant",
                    "roomList": [
                      {
                        "roomId": "112"
                      },
                      {
                        "roomId": "114"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/housekeepingRoomStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rooms/{roomId}/cleaningPriority": {
      "put": {
        "description": "This API will allow you to set the room cleaning priority. <p><strong>OperationId:</strong>setRoomCleaningPriority</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Set the room cleaning priority",
        "operationId": "setRoomCleaningPriority",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "roomId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to set a list of rooms as priority for cleaning. This will set a flag as priority and a priority number at the bottom of the current priority line.",
            "name": "roomCleaningPriority",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomCleaningPriority"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/roomCleaningPriorityRequestStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rooms/{roomId}/maintenances/{maintenanceId}": {
      "put": {
        "description": "Use this API to change the maintenances for rooms. <p><strong>OperationId:</strong>putRoomMaintenance</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Change maintenances for rooms",
        "operationId": "putRoomMaintenance",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "maintenanceId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "roomId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to change room maintenance details.",
            "name": "roomMaintenance",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomMaintenance"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/changedRoomMaintenance"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rooms/{roomId}/sheets/{sheetNumber}": {
      "put": {
        "description": "This API will allow you to cancel servicing task room. <p><strong>OperationId:</strong>cancelServicingTaskRoom</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Cancel servicing task room",
        "operationId": "cancelServicingTaskRoom",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "sheetNumber",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "roomId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to cancel the servicing of a task room.",
            "name": "taskRoom",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taskRoom"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/canceledServicingTaskRoom"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rooms/{roomId}/sheets/{sheetNumber}/complete": {
      "put": {
        "description": "This API will allow you to complete servicing task room. <p><strong>OperationId:</strong>completeServicingTaskRoom</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Complete servicing task room",
        "operationId": "completeServicingTaskRoom",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "sheetNumber",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "roomId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to complete servicing of a task room. This will complete the servicing and set the end time and status to COMPLETED.",
            "name": "taskRoom",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taskRoom"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/completedServicingTaskRoom"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rooms/{roomId}/sheets/{sheetNumber}/skip": {
      "put": {
        "description": "This API will allow you to Skip servicing task room. <p><strong>OperationId:</strong>skipServicingTaskRoom</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Skip servicing task room",
        "operationId": "skipServicingTaskRoom",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "sheetNumber",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "roomId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to start servicing a task room. When the attendant starts working on a room this request can be called to set the times and the status to WORKING for the room.",
            "name": "taskRoom",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taskRoom"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/skipedServicingTaskRoom"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rooms/{roomId}/sheets/{sheetNumber}/start": {
      "put": {
        "description": "This API will allow you to start servicing task room. <p><strong>OperationId:</strong>startServicingTaskRoom</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Start servicing task room",
        "operationId": "startServicingTaskRoom",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "sheetNumber",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "roomId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to start servicing a task room. When the attendant starts working on a room this request can be called to set the times and the status to WORKING for the room.",
            "name": "taskRoom",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taskRoom"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response type for the start task room service. Can contain errors or warnings.",
            "schema": {
              "$ref": "#/definitions/serviceTime"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/schedules/houseKeepingTasks": {
      "post": {
        "description": "This API will allow you to create housekeeping attendant schedule. <p><strong>OperationId:</strong>postHousekeepingAttendantSchedule</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Create housekeeping attendant schedule",
        "operationId": "postHousekeepingAttendantSchedule",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for creating the attendant schedule.",
            "name": "attendantSchedule",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/attendantSchedule"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/serviceRequests": {
      "put": {
        "description": "This API allows you to Set the guest housekeeping service requests <p><strong>OperationId:</strong>setGuestHousekeepingServiceRequest</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Set the Guest housekeeping service requests",
        "operationId": "setGuestHousekeepingServiceRequest",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Operation to set the Guest Service status of an occupied room. The service status can be Do Not Disturb or Make Up Room.",
            "name": "guestHousekeepingServiceRequestCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/guestHousekeepingServiceRequestCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/guestHousekeepingServiceRequestStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/sheets/{sheetNumber}": {
      "get": {
        "description": "This API allows you to get task companion. <p><strong>OperationId:</strong>getTaskCompanion</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Get task companion",
        "operationId": "getTaskCompanion",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "sheetNumber",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "taskCodes",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date for which the task sheet was created. By default this would be the current business date.",
            "name": "taskDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Choice to search by a room number if a particular room is required.",
            "name": "roomId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room number that should be skipped.",
            "name": "skipRoomNumbers",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Clean",
                "Dirty",
                "Pickup",
                "Inspected",
                "OutOfOrder",
                "OutOfService"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
            "name": "roomStatusToChange",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the Fetch Task Room request. The room details for the room requested or for the room which was evaluated to be cleaned will be returned along with details of the rooms current status and reservations for the room, if any.",
            "schema": {
              "$ref": "#/definitions/taskCompanion"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "links": [
                  {
                    "href": "string",
                    "method": "GET",
                    "operationId": "string",
                    "rel": "string",
                    "targetSchema": "string",
                    "templated": false,
                    "title": "string"
                  }
                ],
                "taskRoom": {
                  "allEvaluatedRoomsSkipped": true,
                  "appUserOnBreak": {
                    "appUser": {
                      "actAs": "string",
                      "actAt": "string",
                      "appUser": "string",
                      "appUserId": {
                        "id": "string",
                        "type": "string"
                      },
                      "attendantInfo": {
                        "attendantId": "string",
                        "hotelId": "string"
                      },
                      "cashierId": 0,
                      "cashierTitle": "string",
                      "department": "string",
                      "departmentLocation": "string",
                      "disabledUntil": "2020-08-24",
                      "expiryDate": "2020-08-24",
                      "hotel": {
                        "code": "string",
                        "description": "string"
                      },
                      "lDAPUser": "string",
                      "passwordChangeDate": "2020-08-24",
                      "salesRepCode": "string",
                      "userDefaultLanguage": "string",
                      "userInfo": {
                        "addressInfo": {
                          "address": {
                            "addressLine": [
                              "string"
                            ],
                            "barCode": "string",
                            "cityExtension": "string",
                            "cityName": "string",
                            "country": {
                              "code": "string",
                              "value": "string"
                            },
                            "county": "string",
                            "createDateTime": "2020-08-24T12:59:04.823Z",
                            "creatorId": "string",
                            "language": "string",
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-08-24T12:59:04.823Z",
                            "postalCode": "string",
                            "primaryInd": true,
                            "purgeDate": "2020-08-24",
                            "state": "string",
                            "type": "string",
                            "typeDescription": "string",
                            "updateReservations": true
                          },
                          "id": "string",
                          "type": "string"
                        },
                        "birthDate": "2020-08-24",
                        "birthDateMasked": "string",
                        "department": {
                          "code": "string",
                          "description": "string"
                        },
                        "emailInfo": {
                          "email": {
                            "createDateTime": "2020-08-24T12:59:04.824Z",
                            "creatorId": "string",
                            "emailAddress": "string",
                            "emailFormat": "Html",
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-08-24T12:59:04.824Z",
                            "orderSequence": 0,
                            "primaryInd": true,
                            "purgeDate": "2020-08-24",
                            "type": "string",
                            "typeDescription": "string"
                          },
                          "id": "string",
                          "type": "string"
                        },
                        "gender": "Male",
                        "personName": {
                          "envelopeGreeting": "string",
                          "externalSystem": "string",
                          "givenName": "string",
                          "language": "string",
                          "middleName": "string",
                          "namePrefix": "string",
                          "nameSuffix": "string",
                          "nameTitle": "string",
                          "nameTitleSuffix": 0,
                          "nameType": "Primary",
                          "salutation": "string",
                          "surname": "string"
                        },
                        "phoneInfo": {
                          "id": "string",
                          "telephone": {
                            "createDateTime": "2020-08-24T12:59:04.824Z",
                            "creatorId": "string",
                            "extension": "string",
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-08-24T12:59:04.824Z",
                            "orderSequence": 0,
                            "phoneNumber": "string",
                            "phoneTechType": "string",
                            "phoneUseType": "string",
                            "phoneUseTypeDescription": "string",
                            "primaryInd": true,
                            "purgeDate": "2020-08-24"
                          },
                          "type": "string"
                        },
                        "profileId": {
                          "id": "string",
                          "type": "string"
                        }
                      },
                      "userSessionInfo": {
                        "businessDate": "2020-08-24",
                        "cROCountryCode": "string",
                        "chain": "string",
                        "cro": {
                          "code": "string",
                          "description": "string"
                        },
                        "hotel": {
                          "code": "string",
                          "description": "string"
                        },
                        "parameters": [
                          {
                            "parameterName": "string",
                            "parameterValue": "string"
                          }
                        ],
                        "runningApp": "string",
                        "sessionDefaults": {
                          "baseLanguage": "string",
                          "currencyCode": "string",
                          "currencyFormat": "string",
                          "dbDateFormat": "string",
                          "defaultLanguage": "string",
                          "javaDateFormat": "string",
                          "javaTimeFormat": "string",
                          "oracleDateFormat": "string",
                          "oracleTimeFormat": "string"
                        },
                        "shareProfiles": true,
                        "systemDate": "2020-08-24",
                        "terminal": "string"
                      }
                    },
                    "startTime": "2020-08-24T12:59:04.824Z"
                  },
                  "attendant": {
                    "activeFlag": "string",
                    "attendantId": "string",
                    "attendantInstructions": "string",
                    "attendantName": "string",
                    "floor": "string",
                    "friday": true,
                    "hotelId": "string",
                    "monday": true,
                    "saturday": true,
                    "section": {
                      "code": "string",
                      "description": "string",
                      "hotelId": "string",
                      "inactive": true,
                      "roomCredits": 0,
                      "rooms": 0,
                      "sectionGroup": "string",
                      "sequence": 0,
                      "targetCredits": 0
                    },
                    "sunday": true,
                    "thursday": true,
                    "tuesday": true,
                    "wednesday": true
                  },
                  "attendantStatus": "Standby",
                  "autoGenerated": true,
                  "breakOutId": 0,
                  "completedDate": "2020-08-24",
                  "credits": [
                    {
                      "numberOfCredits": 0,
                      "type": "Departure"
                    }
                  ],
                  "date": "2020-08-24",
                  "departureTaskInfo": {
                    "code": "string",
                    "roomType": [
                      {
                        "facilityCode": [
                          {
                            "code": "string",
                            "description": "string",
                            "quantity": 0
                          }
                        ],
                        "type": "string"
                      }
                    ]
                  },
                  "emptyTaskSheet": true,
                  "hotelId": "string",
                  "linenChangeCount": 0,
                  "lockTaskSheet": true,
                  "nextDay": true,
                  "roomCount": 0,
                  "roomCounts": [
                    {
                      "housekeepingRoomStatusType": "CLEAN",
                      "totalCount": 0
                    }
                  ],
                  "rooms": [
                    {
                      "attendant": [
                        {
                          "activeFlag": "string",
                          "appUser": {
                            "actAs": "string",
                            "actAt": "string",
                            "appUser": "string",
                            "appUserId": {
                              "id": "string",
                              "type": "string"
                            },
                            "attendantInfo": {
                              "attendantId": "string",
                              "hotelId": "string"
                            },
                            "cashierId": 0,
                            "cashierTitle": "string",
                            "department": "string",
                            "departmentLocation": "string",
                            "disabledUntil": "2020-08-24",
                            "expiryDate": "2020-08-24",
                            "hotel": {
                              "code": "string",
                              "description": "string"
                            },
                            "lDAPUser": "string",
                            "passwordChangeDate": "2020-08-24",
                            "salesRepCode": "string",
                            "userDefaultLanguage": "string",
                            "userInfo": {
                              "addressInfo": {
                                "address": {
                                  "addressLine": [
                                    "string"
                                  ],
                                  "barCode": "string",
                                  "cityExtension": "string",
                                  "cityName": "string",
                                  "country": {
                                    "code": "string",
                                    "value": "string"
                                  },
                                  "county": "string",
                                  "createDateTime": "2020-08-24T12:59:04.825Z",
                                  "creatorId": "string",
                                  "language": "string",
                                  "lastModifierId": "string",
                                  "lastModifyDateTime": "2020-08-24T12:59:04.825Z",
                                  "postalCode": "string",
                                  "primaryInd": true,
                                  "purgeDate": "2020-08-24",
                                  "state": "string",
                                  "type": "string",
                                  "typeDescription": "string",
                                  "updateReservations": true
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "birthDate": "2020-08-24",
                              "birthDateMasked": "string",
                              "department": {
                                "code": "string",
                                "description": "string"
                              },
                              "emailInfo": {
                                "email": {
                                  "createDateTime": "2020-08-24T12:59:04.825Z",
                                  "creatorId": "string",
                                  "emailAddress": "string",
                                  "emailFormat": "Html",
                                  "lastModifierId": "string",
                                  "lastModifyDateTime": "2020-08-24T12:59:04.825Z",
                                  "orderSequence": 0,
                                  "primaryInd": true,
                                  "purgeDate": "2020-08-24",
                                  "type": "string",
                                  "typeDescription": "string"
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "gender": "Male",
                              "personName": {
                                "envelopeGreeting": "string",
                                "externalSystem": "string",
                                "givenName": "string",
                                "language": "string",
                                "middleName": "string",
                                "namePrefix": "string",
                                "nameSuffix": "string",
                                "nameTitle": "string",
                                "nameTitleSuffix": 0,
                                "nameType": "Primary",
                                "salutation": "string",
                                "surname": "string"
                              },
                              "phoneInfo": {
                                "id": "string",
                                "telephone": {
                                  "createDateTime": "2020-08-24T12:59:04.825Z",
                                  "creatorId": "string",
                                  "extension": "string",
                                  "lastModifierId": "string",
                                  "lastModifyDateTime": "2020-08-24T12:59:04.825Z",
                                  "orderSequence": 0,
                                  "phoneNumber": "string",
                                  "phoneTechType": "string",
                                  "phoneUseType": "string",
                                  "phoneUseTypeDescription": "string",
                                  "primaryInd": true,
                                  "purgeDate": "2020-08-24"
                                },
                                "type": "string"
                              },
                              "profileId": {
                                "id": "string",
                                "type": "string"
                              }
                            },
                            "userSessionInfo": {
                              "businessDate": "2020-08-24",
                              "cROCountryCode": "string",
                              "chain": "string",
                              "cro": {
                                "code": "string",
                                "description": "string"
                              },
                              "hotel": {
                                "code": "string",
                                "description": "string"
                              },
                              "parameters": [
                                {
                                  "parameterName": "string",
                                  "parameterValue": "string"
                                }
                              ],
                              "runningApp": "string",
                              "sessionDefaults": {
                                "baseLanguage": "string",
                                "currencyCode": "string",
                                "currencyFormat": "string",
                                "dbDateFormat": "string",
                                "defaultLanguage": "string",
                                "javaDateFormat": "string",
                                "javaTimeFormat": "string",
                                "oracleDateFormat": "string",
                                "oracleTimeFormat": "string"
                              },
                              "shareProfiles": true,
                              "systemDate": "2020-08-24",
                              "terminal": "string"
                            }
                          },
                          "attendantId": "string",
                          "attendantName": "string",
                          "floor": "string",
                          "friday": true,
                          "hotelId": "string",
                          "monday": true,
                          "saturday": true,
                          "section": {
                            "code": "string",
                            "description": "string",
                            "hotelId": "string",
                            "inactive": true,
                            "roomCredits": 0,
                            "rooms": 0,
                            "sectionGroup": "string",
                            "sequence": 0,
                            "targetCredits": 0
                          },
                          "startTime": "2020-08-24T12:59:04.825Z",
                          "status": "Standby",
                          "sunday": true,
                          "thursday": true,
                          "tuesday": true,
                          "wednesday": true
                        }
                      ],
                      "building": "string",
                      "cleaningSequence": 0,
                      "componentRoomNumber": "string",
                      "componentRooms": [
                        {
                          "building": "string",
                          "description": {
                            "defaultText": "string",
                            "translatedTexts": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          },
                          "floor": "string",
                          "floorDescription": "string",
                          "isAccessible": true,
                          "meetingRoom": true,
                          "roomAssignmentRating": "MostImportant",
                          "roomCondition": {
                            "code": "string",
                            "description": "string"
                          },
                          "roomDescription": "string",
                          "roomFeatures": [
                            {
                              "code": "string",
                              "description": "string",
                              "orderSequence": 0,
                              "quantity": 0
                            }
                          ],
                          "roomId": "string",
                          "roomType": {
                            "houseKeeping": true,
                            "isAccessible": true,
                            "isSuiteRoom": true,
                            "maximumOccupancy": 0,
                            "meetingRoom": true,
                            "minimumOccupancy": 0,
                            "pseudoRoom": true,
                            "roomClass": "string",
                            "roomFeatures": [
                              {
                                "code": "string",
                                "description": "string",
                                "orderSequence": 0,
                                "quantity": 0
                              }
                            ],
                            "roomType": "string",
                            "shortDescription": "string",
                            "smokingPreference": "string"
                          },
                          "smokingPreference": "string",
                          "smokingPreferenceDescription": "string"
                        }
                      ],
                      "connectingRooms": [
                        {
                          "building": "string",
                          "description": {
                            "defaultText": "string",
                            "translatedTexts": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          },
                          "floor": "string",
                          "floorDescription": "string",
                          "isAccessible": true,
                          "meetingRoom": true,
                          "roomAssignmentRating": "MostImportant",
                          "roomCondition": {
                            "code": "string",
                            "description": "string"
                          },
                          "roomDescription": "string",
                          "roomFeatures": [
                            {
                              "code": "string",
                              "description": "string",
                              "orderSequence": 0,
                              "quantity": 0
                            }
                          ],
                          "roomId": "string",
                          "roomType": {
                            "houseKeeping": true,
                            "isAccessible": true,
                            "isSuiteRoom": true,
                            "maximumOccupancy": 0,
                            "meetingRoom": true,
                            "minimumOccupancy": 0,
                            "pseudoRoom": true,
                            "roomClass": "string",
                            "roomFeatures": [
                              {
                                "code": "string",
                                "description": "string",
                                "orderSequence": 0,
                                "quantity": 0
                              }
                            ],
                            "roomType": "string",
                            "shortDescription": "string",
                            "smokingPreference": "string"
                          },
                          "smokingPreference": "string",
                          "smokingPreferenceDescription": "string"
                        }
                      ],
                      "defaultSequence": 0,
                      "description": {
                        "defaultText": "string",
                        "translatedTexts": [
                          {
                            "language": "string",
                            "value": "string"
                          }
                        ]
                      },
                      "discrepancy": [
                        "Sleep"
                      ],
                      "floor": "string",
                      "floorDescription": "string",
                      "hasPriority": true,
                      "hold": {
                        "comments": "string",
                        "holdUntil": "2020-08-24T12:59:04.825Z",
                        "holdUser": "string"
                      },
                      "housekeeping": {
                        "cleaningPriority": {
                          "prioritySequence": 0
                        },
                        "facilityTaskCode": [
                          "string"
                        ],
                        "guestServiceRequest": "DoNotDisturb",
                        "housekeepingRoomStatus": {
                          "frontOfficeStatus": "Vacant",
                          "housekeepingRoomStatus": "Clean",
                          "housekeepingStatus": "Vacant",
                          "reservationStatusList": [
                            "Arrival"
                          ]
                        },
                        "linenChange": true,
                        "roomCondition": {
                          "assignmentType": "Available",
                          "remarks": "string",
                          "roomCondition": {
                            "code": "string",
                            "description": "string"
                          }
                        },
                        "roomPersons": {
                          "frontOfficePersons": 0,
                          "houseKeepingPersons": 0
                        }
                      },
                      "instructions": "string",
                      "maintenanceAllowed": true,
                      "outOfOrder": [
                        {
                          "end": "2020-08-24",
                          "housekeepingRoomStatus": "Clean",
                          "newDateRange": {
                            "end": "2020-08-24",
                            "start": "2020-08-24"
                          },
                          "reasonCode": "string",
                          "reasonDescription": "string",
                          "repairRemarks": "string",
                          "returnStatus": "Clean",
                          "start": "2020-08-24"
                        }
                      ],
                      "reservationInfo": [
                        {
                          "accessRestriction": "Change",
                          "advanceCheckIn": {
                            "advanceCheckedIn": true,
                            "eTRComments": "string",
                            "expectedReturnTime": "2020-08-24T12:59:04.829Z"
                          },
                          "allowMobileCheckout": true,
                          "allowMobileViewFolio": true,
                          "allowedActions": [
                            "Cancel"
                          ],
                          "attachedProfiles": [
                            {
                              "name": "string",
                              "profileIdList": [
                                {
                                  "id": "string",
                                  "type": "string"
                                }
                              ],
                              "reservationProfileType": "Company"
                            }
                          ],
                          "cancellationInfo": {
                            "code": "string",
                            "date": "2020-08-24",
                            "description": "string"
                          },
                          "cashiering": {
                            "bedTaxReporting": {
                              "taxRegistrationNo": 0,
                              "taxableDays": 0,
                              "visaExpiryDate": "2020-08-24",
                              "visaIssueDate": "2020-08-24",
                              "visaNumber": "string"
                            },
                            "billingPrivileges": {
                              "allowAutoCheckin": true,
                              "autoSettlement": true,
                              "autoSettlementFreq": 0,
                              "autoSettlementType": "string",
                              "creditLimitAutoPay": true,
                              "directBillAuthorized": true,
                              "folioCloseDate": "2020-08-24",
                              "postStayCharging": true,
                              "postingRestriction": true,
                              "preStayCharging": true,
                              "scheduledCheckout": true,
                              "scheduledCheckoutTime": "2020-08-24",
                              "videoCheckout": true
                            },
                            "compAccounting": {
                              "authorizer": "string",
                              "compPostings": "string",
                              "compType": "string"
                            },
                            "financiallyResponsible": true,
                            "folioTexts": [
                              {
                                "row": 0,
                                "text": "string"
                              }
                            ],
                            "lastRoomAndTaxPostedDate": "2020-08-24",
                            "periodicFolio": {
                              "frequency": 0,
                              "lastFolioDate": "2020-08-24",
                              "lastSettlementDate": "2020-08-24"
                            },
                            "proratedBilling": true,
                            "reservationPreConfiguredRoutingInstruction": {
                              "authorizerInfo": {
                                "authorizerId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "authorizerName": "string",
                                "authorizerRateCode": "string",
                                "authorizerUserName": "string",
                                "inheritAuthorizerRateCode": true
                              },
                              "profileType": "Company",
                              "promotionCode": "string",
                              "ratePlanCode": "string"
                            },
                            "revenuesAndBalances": {
                              "balance": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "foodAndBevRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "nonRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "otherRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "roomRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "totalFixedCharge": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "totalPayment": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "totalRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              }
                            },
                            "reverseAdvanceCheckInAllowed": true,
                            "reverseCheckInAllowed": true,
                            "taxType": {
                              "code": "string",
                              "collectingAgentTax": true,
                              "description": "string",
                              "hotelId": "string",
                              "minimumLengthOfStay": 0,
                              "printAutoAdjust": true,
                              "reportExemptDays": 0,
                              "reportTaxPercentage": 0,
                              "taxExemptNo": "string"
                            },
                            "transactionsPosted": true
                          },
                          "commissionPayoutTo": "TravelAgent",
                          "computedReservationStatus": "Reserved",
                          "createDateTime": "2020-08-24T12:59:04.829Z",
                          "creatorId": "string",
                          "deposit": {
                            "amountOwed": 0,
                            "amountPaid": 0,
                            "amountRequired": 0,
                            "dueDate": "2020-08-24",
                            "hasOutstanding": true,
                            "hasPaid": true,
                            "postingDate": "2020-08-24"
                          },
                          "displayColor": "string",
                          "expectedServiceTime": "string",
                          "guestPreferredCurrency": "string",
                          "hotelId": "string",
                          "hotelInterfaceStatusList": [
                            {
                              "hotelInterface": {
                                "activeFlag": true,
                                "hotelId": "string",
                                "interfaceId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "interfaceName": "string",
                                "interfaceType": "Bms",
                                "logo": "string",
                                "machineName": "string",
                                "status": "Stopped"
                              },
                              "interfaceRights": [
                                {
                                  "category": "string",
                                  "description": "string",
                                  "right": 0,
                                  "statusCode": "string"
                                }
                              ],
                              "roomExtension": "string"
                            }
                          ],
                          "hotelName": "string",
                          "housekeeping": {
                            "expectedServiceTime": "string",
                            "facilityTaskInfo": {
                              "date": "2020-08-24",
                              "supplies": [
                                {
                                  "code": "string",
                                  "description": "string",
                                  "quantity": 0
                                }
                              ],
                              "task": {
                                "code": "string",
                                "description": "string",
                                "facilityDepartureTask": true,
                                "hotelId": "string",
                                "instructions": "string",
                                "linenChange": true,
                                "sequence": 0
                              }
                            },
                            "housekeepingRoomStatus": "Clean",
                            "instructions": "string",
                            "linenChange": true,
                            "serviceTime": "2020-08-24",
                            "turndownRequested": true
                          },
                          "housekeepingRoomStatus": "Clean",
                          "keyCount": 0,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-08-24T12:59:04.829Z",
                          "lastPrivacyPromptDate": "2020-08-24",
                          "mobileNotifications": {
                            "checkoutMessageReceived": true,
                            "errorMessage": "string",
                            "keyReady": "Pending",
                            "requiresAction": true,
                            "roomReady": "Pending"
                          },
                          "openFolio": true,
                          "optedForCommunication": true,
                          "paymentMethod": "string",
                          "preRegistered": true,
                          "purgeDate": "2020-08-24",
                          "queue": {
                            "averageQueueTimeCurrentReservations": 0,
                            "averageQueueTimeToCheckIn": 0,
                            "guestTextInfo": {
                              "sentBy": "string",
                              "sentTime": "2020-08-24T12:59:04.826Z"
                            },
                            "priority": 0,
                            "queueDate": "2020-08-24",
                            "timeSpan": {
                              "duration": "string",
                              "durationInSeconds": 0,
                              "endDate": "2020-08-24",
                              "startDate": "2020-08-24"
                            }
                          },
                          "reservationCommunication": {
                            "emails": {
                              "count": 0,
                              "emailInfo": [
                                {
                                  "email": {
                                    "createDateTime": "2020-08-24T12:59:04.829Z",
                                    "creatorId": "string",
                                    "emailAddress": "string",
                                    "emailFormat": "Html",
                                    "lastModifierId": "string",
                                    "lastModifyDateTime": "2020-08-24T12:59:04.829Z",
                                    "orderSequence": 0,
                                    "primaryInd": true,
                                    "purgeDate": "2020-08-24",
                                    "type": "string",
                                    "typeDescription": "string"
                                  },
                                  "id": "string",
                                  "type": "string"
                                }
                              ],
                              "hasMore": true,
                              "totalResults": 0
                            },
                            "telephones": {
                              "count": 0,
                              "hasMore": true,
                              "telephoneInfo": [
                                {
                                  "id": "string",
                                  "telephone": {
                                    "createDateTime": "2020-08-24T12:59:04.829Z",
                                    "creatorId": "string",
                                    "extension": "string",
                                    "lastModifierId": "string",
                                    "lastModifyDateTime": "2020-08-24T12:59:04.829Z",
                                    "orderSequence": 0,
                                    "phoneNumber": "string",
                                    "phoneTechType": "string",
                                    "phoneUseType": "string",
                                    "phoneUseTypeDescription": "string",
                                    "primaryInd": true,
                                    "purgeDate": "2020-08-24"
                                  },
                                  "type": "string"
                                }
                              ],
                              "totalResults": 0
                            }
                          },
                          "reservationFolioWindows": [
                            {
                              "balance": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "folioWindowNo": 0,
                              "payeeInfo": {
                                "payeeAccountInfo": {
                                  "accountId": {
                                    "id": "string",
                                    "type": "string"
                                  },
                                  "accountName": "string",
                                  "accountNo": "string",
                                  "status": {
                                    "description": "string",
                                    "restricted": true,
                                    "restriction": "string"
                                  }
                                },
                                "payeeAddress": {
                                  "address": {
                                    "addressLine": [
                                      "string"
                                    ],
                                    "barCode": "string",
                                    "cityExtension": "string",
                                    "cityName": "string",
                                    "country": {
                                      "code": "string",
                                      "value": "string"
                                    },
                                    "county": "string",
                                    "createDateTime": "2020-08-24T12:59:04.826Z",
                                    "creatorId": "string",
                                    "language": "string",
                                    "lastModifierId": "string",
                                    "lastModifyDateTime": "2020-08-24T12:59:04.826Z",
                                    "postalCode": "string",
                                    "primaryInd": true,
                                    "purgeDate": "2020-08-24",
                                    "state": "string",
                                    "type": "string",
                                    "typeDescription": "string",
                                    "updateReservations": true
                                  },
                                  "id": "string",
                                  "type": "string"
                                },
                                "payeeAddressCount": 0,
                                "payeeId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "payeeName": "string",
                                "payeeReferenceCurrency": "string",
                                "payeeTaxNumber": "string"
                              },
                              "paymentMethod": "string"
                            }
                          ],
                          "reservationGuest": {
                            "accompanyGuests": [
                              {
                                "firstName": "string",
                                "fullName": "string",
                                "lastName": "string",
                                "profileIdList": [
                                  {
                                    "id": "string",
                                    "type": "string"
                                  }
                                ],
                                "registrationCardNo": "string"
                              }
                            ],
                            "address": {
                              "cityName": "string",
                              "country": {
                                "code": "string",
                                "value": "string"
                              },
                              "excludeNoCity": true,
                              "postalCode": "string",
                              "state": "string",
                              "streetAddress": "string"
                            },
                            "alternateFullName": "string",
                            "alternateGivenName": "string",
                            "alternateSurname": "string",
                            "anonymization": {
                              "anonymizationDate": "2020-08-24T12:59:04.826Z",
                              "anonymizationStatus": "Requested"
                            },
                            "birthDate": "2020-08-24",
                            "email": "string",
                            "externalInfo": {
                              "givenName": "string",
                              "surname": "string"
                            },
                            "fullName": "string",
                            "givenName": "string",
                            "guestLastStayInfo": {
                              "lastStayDate": "2020-08-24",
                              "lastStayRate": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "lastStayRoom": "string",
                              "totalStay": 0
                            },
                            "guestRestricted": true,
                            "guestRestrictedCode": "string",
                            "guestRestrictedReasonDesc": "string",
                            "id": "string",
                            "language": "string",
                            "membership": {
                              "accountId": "string",
                              "bonusCode": "string",
                              "membershipId": 0,
                              "membershipLevel": "string",
                              "membershipLevelDesc": "string",
                              "membershipTypeDesc": "string",
                              "playerRanking": 0,
                              "programCode": "string"
                            },
                            "middleName": "string",
                            "namePrefix": "string",
                            "nameSuffix": "string",
                            "nameTitle": "string",
                            "nameType": "Guest",
                            "nationality": {
                              "code": "string",
                              "value": "string"
                            },
                            "phoneNumber": "string",
                            "registrationCardNo": "string",
                            "surname": "string",
                            "surnamePrefix": "string",
                            "type": "string",
                            "vip": {
                              "vipCode": "string",
                              "vipDescription": "string"
                            }
                          },
                          "reservationIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ],
                          "reservationIndicators": [
                            {
                              "count": 0,
                              "indicatorName": "string"
                            }
                          ],
                          "reservationPaymentMethod": {
                            "authorizationRule": {
                              "amount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "code": 0,
                              "percent": 0
                            },
                            "balance": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "description": "string",
                            "emailFolioInfo": {
                              "email": {
                                "createDateTime": "2020-08-24T12:59:04.826Z",
                                "creatorId": "string",
                                "emailAddress": "string",
                                "emailFormat": "Html",
                                "lastModifierId": "string",
                                "lastModifyDateTime": "2020-08-24T12:59:04.826Z",
                                "orderSequence": 0,
                                "primaryInd": true,
                                "purgeDate": "2020-08-24",
                                "type": "string",
                                "typeDescription": "string"
                              },
                              "emailFolio": true,
                              "id": "string",
                              "type": "string"
                            },
                            "folioView": 0,
                            "paymentCard": {
                              "approvalAmountNeeded": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "attachCreditCardToProfile": true,
                              "cardHolderName": "string",
                              "cardId": {
                                "id": "string",
                                "type": "string"
                              },
                              "cardNumber": "string",
                              "cardNumberLast4Digits": "string",
                              "cardNumberMasked": "string",
                              "cardOrToken": "CardNumber",
                              "cardType": "Ab",
                              "currentAuthorizedAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "expirationDate": "2020-08-24",
                              "expirationDateExpired": true,
                              "expirationDateMasked": "string",
                              "processing": "Eft",
                              "swiped": true,
                              "userDefinedCardType": "string"
                            },
                            "paymentMethod": "string"
                          },
                          "reservationStatus": "Reserved",
                          "revenuesAndBalances": {
                            "balance": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "foodAndBevRevenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "nonRevenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "otherRevenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "roomRevenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "totalFixedCharge": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "totalPayment": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "totalRevenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            }
                          },
                          "roomStay": {
                            "adultCount": 0,
                            "arrivalDate": "2020-08-24",
                            "balance": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "bookingChannelCode": "string",
                            "childCount": 0,
                            "compBalance": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "departureDate": "2020-08-24",
                            "depositPayments": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "expectedTimes": {
                              "reservationExpectedArrivalTime": "2020-08-24T12:59:04.825Z",
                              "reservationExpectedDepartureTime": "2020-08-24T12:59:04.825Z"
                            },
                            "fixedRate": true,
                            "guarantee": {
                              "guaranteeCode": "string",
                              "onHold": true,
                              "shortDescription": "string"
                            },
                            "guestServiceStatus": "DoNotDisturb",
                            "marketCode": "string",
                            "numberOfRooms": 0,
                            "originalTimeSpan": {
                              "duration": "string",
                              "endDate": "2020-08-24",
                              "startDate": "2020-08-24"
                            },
                            "partyCode": "string",
                            "points": {
                              "awardsType": "string",
                              "points": 0
                            },
                            "promotion": {
                              "couponCode": "string",
                              "promotionCode": "string",
                              "promotionName": "string"
                            },
                            "pseudoRoom": true,
                            "rateAmount": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "ratePlanCode": "string",
                            "rateSuppressed": true,
                            "reservationBlock": {
                              "blockIdList": [
                                {
                                  "id": "string",
                                  "type": "string"
                                }
                              ],
                              "blockName": "string",
                              "hotelId": "string"
                            },
                            "roomClass": "string",
                            "roomNumber": "string",
                            "roomNumberLocked": true,
                            "roomType": "string",
                            "roomTypeCharged": "string",
                            "scheduledCheckoutTime": "2020-08-24",
                            "sourceOfBusiness": "string",
                            "sourceOfBusinessDescription": "string",
                            "totalAmount": {
                              "amount": 0,
                              "currencyCode": "string"
                            }
                          },
                          "roomStayReservation": true,
                          "searchMatches": [
                            {
                              "attribute": "string",
                              "value": "string"
                            }
                          ],
                          "sharedGuests": [
                            {
                              "firstName": "string",
                              "fullName": "string",
                              "lastName": "string",
                              "profileId": {
                                "id": "string",
                                "idContext": "string",
                                "idExtension": 0,
                                "instance": "string",
                                "type": "string",
                                "url": "string"
                              }
                            }
                          ],
                          "sourceOfSale": {
                            "sourceCode": "string",
                            "sourceType": "string"
                          },
                          "specials": "string",
                          "taxType": {
                            "code": "string",
                            "collectingAgentTax": true,
                            "description": "string",
                            "hotelId": "string",
                            "minimumLengthOfStay": 0,
                            "printAutoAdjust": true,
                            "reportExemptDays": 0,
                            "reportTaxPercentage": 0
                          },
                          "turndownInfo": {
                            "allowed": true,
                            "status": "Required"
                          },
                          "waitlist": {
                            "description": "string",
                            "priorityCode": "string",
                            "priorityDescription": "string",
                            "reasonCode": "string",
                            "reasonDescription": "string",
                            "telephone": "string"
                          },
                          "walkInIndicator": true,
                          "welcomeOffer": true
                        }
                      ],
                      "resvInfo": [
                        {
                          "guestName": "string",
                          "profileId": {
                            "id": "string",
                            "type": "string"
                          },
                          "reservationId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          },
                          "reservationStatusInfo": "Arrival",
                          "stayDateInfo": {
                            "expectedTimes": {
                              "reservationExpectedArrivalTime": "2020-08-24T12:59:04.825Z",
                              "reservationExpectedDepartureTime": "2020-08-24T12:59:04.825Z"
                            },
                            "timeSpan": {
                              "duration": "string",
                              "endDate": "2020-08-24",
                              "startDate": "2020-08-24"
                            }
                          },
                          "vipStatus": {
                            "code": "string",
                            "value": "string"
                          }
                        }
                      ],
                      "roomAssignmentRating": "MostImportant",
                      "roomDescription": "string",
                      "roomFeatures": [
                        {
                          "code": "string",
                          "description": "string",
                          "orderSequence": 0,
                          "quantity": 0
                        }
                      ],
                      "roomNumber": "string",
                      "roomSection": {
                        "daySectionCode": "string",
                        "eveningSectionCode": "string"
                      },
                      "roomType": {
                        "houseKeeping": true,
                        "isAccessible": true,
                        "isSuiteRoom": true,
                        "maximumOccupancy": 0,
                        "meetingRoom": true,
                        "minimumOccupancy": 0,
                        "pseudoRoom": true,
                        "roomClass": "string",
                        "roomFeatures": [
                          {
                            "code": "string",
                            "description": "string",
                            "orderSequence": 0,
                            "quantity": 0
                          }
                        ],
                        "roomType": "string",
                        "shortDescription": "string",
                        "smokingPreference": "string"
                      },
                      "servicingInfo": [
                        {
                          "activeFlag": "string",
                          "appUser": {
                            "actAs": "string",
                            "actAt": "string",
                            "appUser": "string",
                            "appUserId": {
                              "id": "string",
                              "type": "string"
                            },
                            "attendantInfo": {
                              "attendantId": "string",
                              "hotelId": "string"
                            },
                            "cashierId": 0,
                            "cashierTitle": "string",
                            "department": "string",
                            "departmentLocation": "string",
                            "disabledUntil": "2020-08-24",
                            "expiryDate": "2020-08-24",
                            "hotel": {
                              "code": "string",
                              "description": "string"
                            },
                            "lDAPUser": "string",
                            "passwordChangeDate": "2020-08-24",
                            "salesRepCode": "string",
                            "userDefaultLanguage": "string",
                            "userInfo": {
                              "addressInfo": {
                                "address": {
                                  "addressLine": [
                                    "string"
                                  ],
                                  "barCode": "string",
                                  "cityExtension": "string",
                                  "cityName": "string",
                                  "country": {
                                    "code": "string",
                                    "value": "string"
                                  },
                                  "county": "string",
                                  "createDateTime": "2020-08-24T12:59:04.829Z",
                                  "creatorId": "string",
                                  "language": "string",
                                  "lastModifierId": "string",
                                  "lastModifyDateTime": "2020-08-24T12:59:04.829Z",
                                  "postalCode": "string",
                                  "primaryInd": true,
                                  "purgeDate": "2020-08-24",
                                  "state": "string",
                                  "type": "string",
                                  "typeDescription": "string",
                                  "updateReservations": true
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "birthDate": "2020-08-24",
                              "birthDateMasked": "string",
                              "department": {
                                "code": "string",
                                "description": "string"
                              },
                              "emailInfo": {
                                "email": {
                                  "createDateTime": "2020-08-24T12:59:04.829Z",
                                  "creatorId": "string",
                                  "emailAddress": "string",
                                  "emailFormat": "Html",
                                  "lastModifierId": "string",
                                  "lastModifyDateTime": "2020-08-24T12:59:04.829Z",
                                  "orderSequence": 0,
                                  "primaryInd": true,
                                  "purgeDate": "2020-08-24",
                                  "type": "string",
                                  "typeDescription": "string"
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "gender": "Male",
                              "personName": {
                                "envelopeGreeting": "string",
                                "externalSystem": "string",
                                "givenName": "string",
                                "language": "string",
                                "middleName": "string",
                                "namePrefix": "string",
                                "nameSuffix": "string",
                                "nameTitle": "string",
                                "nameTitleSuffix": 0,
                                "nameType": "Primary",
                                "salutation": "string",
                                "surname": "string"
                              },
                              "phoneInfo": {
                                "id": "string",
                                "telephone": {
                                  "createDateTime": "2020-08-24T12:59:04.829Z",
                                  "creatorId": "string",
                                  "extension": "string",
                                  "lastModifierId": "string",
                                  "lastModifyDateTime": "2020-08-24T12:59:04.829Z",
                                  "orderSequence": 0,
                                  "phoneNumber": "string",
                                  "phoneTechType": "string",
                                  "phoneUseType": "string",
                                  "phoneUseTypeDescription": "string",
                                  "primaryInd": true,
                                  "purgeDate": "2020-08-24"
                                },
                                "type": "string"
                              },
                              "profileId": {
                                "id": "string",
                                "type": "string"
                              }
                            },
                            "userSessionInfo": {
                              "businessDate": "2020-08-24",
                              "cROCountryCode": "string",
                              "chain": "string",
                              "cro": {
                                "code": "string",
                                "description": "string"
                              },
                              "hotel": {
                                "code": "string",
                                "description": "string"
                              },
                              "parameters": [
                                {
                                  "parameterName": "string",
                                  "parameterValue": "string"
                                }
                              ],
                              "runningApp": "string",
                              "sessionDefaults": {
                                "baseLanguage": "string",
                                "currencyCode": "string",
                                "currencyFormat": "string",
                                "dbDateFormat": "string",
                                "defaultLanguage": "string",
                                "javaDateFormat": "string",
                                "javaTimeFormat": "string",
                                "oracleDateFormat": "string",
                                "oracleTimeFormat": "string"
                              },
                              "shareProfiles": true,
                              "systemDate": "2020-08-24",
                              "terminal": "string"
                            }
                          },
                          "attendantId": "string",
                          "attendantName": "string",
                          "floor": "string",
                          "friday": true,
                          "hotelId": "string",
                          "monday": true,
                          "saturday": true,
                          "section": {
                            "code": "string",
                            "description": "string",
                            "hotelId": "string",
                            "inactive": true,
                            "roomCredits": 0,
                            "rooms": 0,
                            "sectionGroup": "string",
                            "sequence": 0,
                            "targetCredits": 0
                          },
                          "startTime": "2020-08-24T12:59:04.829Z",
                          "status": "Standby",
                          "sunday": true,
                          "thursday": true,
                          "tuesday": true,
                          "wednesday": true
                        }
                      ],
                      "sitePlanSection": {
                        "coordinates": "string",
                        "description": "string",
                        "linkCode": "string",
                        "sectionCode": "string",
                        "sectionType": "string"
                      },
                      "smokingPreference": "string",
                      "smokingPreferenceDescription": "string",
                      "totalCredits": 0,
                      "turndownInfo": {
                        "turndownStatusInfo": "Required"
                      },
                      "wakeUpTime": "2020-08-24"
                    }
                  ],
                  "sheetNumber": 0,
                  "sheetType": "NoServiceRequired",
                  "taskCodes": [
                    {
                      "code": "string",
                      "description": "string",
                      "facilityDepartureTask": true,
                      "hotelId": "string",
                      "instructions": "string",
                      "linenChange": true,
                      "sequence": 0
                    }
                  ],
                  "taskInstructions": "string",
                  "taskSeqNo": 0,
                  "taskSheetCompleted": true,
                  "totalSupplies": [
                    {
                      "code": "string",
                      "description": "string",
                      "quantity": 0
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "TaskCompanion not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/taskSheetTemplates": {
      "get": {
        "description": "This API allows you to get the task sheet templates. <p><strong>OperationId:</strong>getTaskSheetTemplate</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Get the task sheet templates",
        "operationId": "getTaskSheetTemplate",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Hotel Code for which task sheet templates needs to be fetched",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Template name for the task sheet.",
            "name": "templateCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for retrieving a task sheet template. It contains all the information of the previously generated tasksheet.",
            "schema": {
              "$ref": "#/definitions/taskSheetTemplate"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TaskSheetTemplate not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/taskSheetTemplates/{taskSheetTemplateCode}": {
      "put": {
        "description": "This API allows you to change the task sheet templates. <p><strong>OperationId:</strong>putTaskSheetTemplate</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Change the task sheet templates",
        "operationId": "putTaskSheetTemplate",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "taskSheetTemplateCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for changing task sheet template.",
            "name": "taskSheetTemplate",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taskSheetTemplate"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/changedTaskSheetTemplate"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "This API allows you to delete task sheet templates. <p><strong>OperationId:</strong>deleteTaskSheetTemplate</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Delete task sheet templates",
        "operationId": "deleteTaskSheetTemplate",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "taskSheetTemplateCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/taskSheets": {
      "put": {
        "description": "This API allows you to change the task sheet. <p><strong>OperationId:</strong>putTaskSheet</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Change the task sheet",
        "operationId": "putTaskSheet",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request of Changing a Task Sheet. The task instructions, total credits, attendant information and room information can be changed on a task sheet. Task Instructions , Total Credits and Attendants will be replaced with what is sent in this request. Example: If the task instructions is null in the request, the task instructions on the task sheet will be updated to null. If rooms are sent as part of this request, this will replace the existing rooms on the task sheet. If rooms are not sent, then the original rooms will remain. The task date, hotel code, task sheet number and task code is required to search for the task sheet which has to be changed",
            "name": "taskSheet",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taskSheet"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/changedTaskSheet"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "This API allows you to create the task sheet. <p><strong>OperationId:</strong>postTaskSheet</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Create the task sheet",
        "operationId": "postTaskSheet",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to create a new task sheet. Details for the task sheet required are the Task Code, Task Date and Resort. Task Instructions and total credits if not provided will be retrieved from the task code setup. If room and attendant information is sent, this will be added to the task sheet created.",
            "name": "taskSheet",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taskSheet"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "This API allows you to delete the task sheet. <p><strong>OperationId:</strong>deleteTaskSheet</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Delete the task sheet",
        "operationId": "deleteTaskSheet",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "The Task Sheet number. This will be a sequential number for the task sheets generated for a particular Task Code.",
            "name": "sheetNumber",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The Code for the task.",
            "name": "taskCodes",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "The date for which the task sheet applies.",
            "name": "date",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/taskSheets/rooms": {
      "put": {
        "description": "This API allows you to change the task sheet rooms. <p><strong>OperationId:</strong>putTaskSheetRooms</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Change the task sheet rooms",
        "operationId": "putTaskSheetRooms",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to change a room on a task sheet. The information that can be changed are the room instructions and credits. The instructions and credits for a room will be updated based on the information sent in this request. The criteria required to search for the particular task sheet to update requires the HotelCode, Task Sheet Number, Task Code and Task Date.",
            "name": "taskSheet",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taskSheet"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/changedTaskSheetRooms"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "This API allows you to create the task sheet rooms. <p><strong>OperationId:</strong>postTaskSheetRooms</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Create the task sheet rooms",
        "operationId": "postTaskSheetRooms",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to create(add) a room in a task sheet. Details for the task sheet required are the Task Code, Task Date and Resort. The room element will contain the list of rooms that are to be added to the task sheet. These rooms will be added to the existing rooms on the task sheet. Room instructions and credits will be updated for each room.",
            "name": "taskSheet",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taskSheet"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "This API allows you to delete task sheet rooms. <p><strong>OperationId:</strong>deleteTaskSheetRooms</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Delete task sheet rooms",
        "operationId": "deleteTaskSheetRooms",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "The Task Sheet number. This will be a sequential number for the task sheets generated for a particular Task Code.",
            "name": "sheetNumber",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The Code for the task.",
            "name": "taskCodes",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "The date for which the task sheet applies.",
            "name": "date",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Code of the room.",
            "name": "roomId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/taskSheets/{sheetNumber}/lock": {
      "put": {
        "description": "This API allows you to Lock the task sheet. <p><strong>OperationId:</strong>lockTaskSheet</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Lock the task sheet",
        "operationId": "lockTaskSheet",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "sheetNumber",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for locking a task sheet.",
            "name": "taskSheetToLock",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taskSheetToLock"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/lockedTaskSheet"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/taskSheets/{sheetNumber}/unlock": {
      "put": {
        "description": "This API allows you to Unlock the task sheet. <p><strong>OperationId:</strong>unlockTaskSheet</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Unlock the task sheet",
        "operationId": "unlockTaskSheet",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "sheetNumber",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for unlocking a task sheet.",
            "name": "taskSheetToUnlock",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taskSheetToUnlock"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/unlockedTaskSheet"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/taskSheets/{taskSheetNumber}/end": {
      "put": {
        "description": "This API allows you to end the Attendant's service break. <p><strong>OperationId:</strong>endServiceBreak</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "End the service break",
        "operationId": "endServiceBreak",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "taskSheetNumber",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to end service break.",
            "name": "taskRoom",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taskRoom"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/endedServiceBreak"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/taskSheets/{taskSheetNumber}/start": {
      "put": {
        "description": "This API allows you to Start the Attendant's service break. <p><strong>OperationId:</strong>startServiceBreak</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Start the service break",
        "operationId": "startServiceBreak",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "taskSheetNumber",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to start service break.",
            "name": "taskRoom",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taskRoom"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/startedServiceBreak"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/taskSheets/{toTaskSequenceNo}/merge": {
      "post": {
        "description": "This API allows you to merge task sheet. <p><strong>OperationId:</strong>mergeTaskSheet</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Housekeeping"
        ],
        "summary": "Merge task sheet",
        "operationId": "mergeTaskSheet",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "toTaskSequenceNo",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for merging task sheets.",
            "name": "taskSheetToMerge",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taskSheetToMerge"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    }
  },
  "definitions": {
    "aRAccountShortInfoType": {
      "description": "Accounts Receivabales Account details type charged for batched posting.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        }
      }
    },
    "aRAccountStatusType": {
      "description": "Type for the Account Status. Status can be restricted and a message/description added to the Account.",
      "type": "object",
      "properties": {
        "description": {
          "description": "User defined status message on the Account.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "restricted": {
          "description": "Flag to indicate if the Account is restricted.",
          "type": "boolean"
        },
        "restriction": {
          "description": "The Restriction Code added on the Account. This is available when the functionality for adding restriction codes is ON.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "addressInfoType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "addressSearchType": {
      "description": "Address Details such as city, state, country, postal code etc.",
      "type": "object",
      "properties": {
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "excludeNoCity": {
          "description": "When true indicates that only profiles with city will be fetched.",
          "type": "boolean"
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "streetAddress": {
          "description": "First Line of Street Address. For profile search it matches the first Address line.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "addressType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "maxLength": 80,
            "minLength": 0
          }
        },
        "barCode": {
          "description": "The postal barcode for the address.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        },
        "updateReservations": {
          "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
          "type": "boolean"
        }
      }
    },
    "advanceCheckInType": {
      "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
      "type": "object",
      "properties": {
        "advanceCheckedIn": {
          "description": "Indicates if the reservation is marked as Advance Checked In",
          "type": "boolean"
        },
        "eTRComments": {
          "description": "ETR Comments",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "expectedReturnTime": {
          "description": "Expected Return Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "anonymizationStatusType": {
      "description": "Guest has been anonymized.",
      "type": "string",
      "enum": [
        "Requested",
        "Anonymized"
      ]
    },
    "anonymizationType": {
      "description": "Provides information about guest's anonymization status.",
      "type": "object",
      "properties": {
        "anonymizationDate": {
          "description": "Date and Time when the guest was anonymized.",
          "type": "string",
          "format": "date-time"
        },
        "anonymizationStatus": {
          "description": "Status of anonymization such as Requested or Anonymized.",
          "$ref": "#/definitions/anonymizationStatusType"
        }
      }
    },
    "appUserOnBreakType": {
      "description": "Information about on break start time and the application user who goes on break.",
      "type": "object",
      "properties": {
        "appUser": {
          "description": "The application user name and id of the user who goes on break.",
          "$ref": "#/definitions/applicationUserType"
        },
        "startTime": {
          "description": "Start time when the break started.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "applicationUserType": {
      "type": "object",
      "properties": {
        "actAs": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "actAt": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "appUser": {
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "appUserId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "attendantInfo": {
          "$ref": "#/definitions/attendantType"
        },
        "cashierId": {
          "type": "integer"
        },
        "cashierTitle": {
          "description": "Cashier title.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "department": {
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "departmentLocation": {
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "disabledUntil": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expiryDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotel": {
          "description": "Hotel where user belongs.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "lDAPUser": {
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "passwordChangeDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "salesRepCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "userDefaultLanguage": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "userInfo": {
          "$ref": "#/definitions/employeeInfoType"
        },
        "userSessionInfo": {
          "description": "This is only used during log-in.",
          "$ref": "#/definitions/userSessionInfoType"
        }
      }
    },
    "assignedUserType": {
      "description": "This contains assignment information for the maintenance request.",
      "type": "object",
      "properties": {
        "assignedByUser": {
          "description": "User who assigned this maintenance request",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "assignedByUserName": {
          "description": "Name of user who assigned this maintenance request.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "assignedDate": {
          "description": "Date when this task was assigned.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "assignedToUser": {
          "description": "User to whom this maintenance request has been assigned.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "assignedToUserName": {
          "description": "Name of user to whom this maintenance request has been assigned.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "expectedByDate": {
          "description": "Date when this task is due.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "attendantSchedule": {
      "description": "Request for creating the attendant schedule.",
      "type": "object",
      "properties": {
        "attendantsScheduleInfo": {
          "description": "Criteria for the attendants to be assigned to a particular day.",
          "$ref": "#/definitions/housekeepingAttendantsScheduleType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "attendantType": {
      "type": "object",
      "properties": {
        "attendantId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "authorizationRuleType": {
      "description": "Configured rule for computing the amount to authorize.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The amount applicable to the authorization rule.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "code": {
          "description": "The authorization rule code.",
          "type": "integer",
          "pattern": "[0-9]{1,9}"
        },
        "percent": {
          "description": "A percentage value if the authorization rule is percentage based.",
          "type": "number"
        }
      }
    },
    "authorizerInfoType": {
      "description": "Authorizer Information",
      "type": "object",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        }
      }
    },
    "autoGenerateTaskSheetsCriteriaType": {
      "description": "Criteria Type for generating Housekeeping Task Sheets automatically. Defines the criteria required for automatic generation.",
      "type": "object",
      "properties": {
        "attendants": {
          "description": "The Attendant who will be assigned to the Task Sheets. Each attendant will be assigned to one task sheet. The number of attendants should be equal to the number of Attendants attached, otheriwise the attendants defined will be used.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "defaultTemplate": {
          "description": "Indicates if the template code of the task sheet is set as default.",
          "type": "boolean"
        },
        "excludeRoomsExclusiveToOwner": {
          "description": "It indicates exclude all the rooms that are configured as exclusive to owners.",
          "type": "boolean"
        },
        "excludeRoomsOccupiedByOwner": {
          "description": "It exclude any rooms that are occupied by their owner and/or an unthorized user of the room.",
          "type": "boolean"
        },
        "excludeVIPCodes": {
          "description": "VIP codes to be excluded.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "hotelId": {
          "description": "Property for which the tasks are to be generated.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "instructions": {
          "description": "The Room Instructions, Task Instructions and Attendant Instructions which will be added to the Task Sheets.",
          "$ref": "#/definitions/taskSheetInstructionsType"
        },
        "maximumCreditsPerSheet": {
          "description": "The maximum credits that can assigned to a task sheet based on the credits defined on the room.",
          "type": "integer"
        },
        "numberOfAttendants": {
          "description": "The number of attendants for whom the task sheets are to be generated. Number of Attendants or Maximum Credits Per Task Sheet should be defined in order to generate task sheets.",
          "type": "integer"
        },
        "overrideTaskTemplate": {
          "description": "Overrides the existing task template.",
          "type": "boolean"
        },
        "rateCode": {
          "description": "Rate codes needed for task sheet break out.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "returnTaskSheets": {
          "description": "Return the details of the task sheets which were generated. Setting this to true will return the TaskAssignment element with details of task sheets which were generated.",
          "type": "boolean"
        },
        "room": {
          "description": "Rooms needed for task sheet break out.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "roomClassList": {
          "description": "Room Class of the Room.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "ruleCodes": {
          "description": "The credits configured for the different rules that apply for the current generation of task sheets process, it is available only when Housekeeping Credits is set to Room Task Rule.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "sectionTypeToUse": {
          "description": "If the task sheets have to sorted by Section, then the type of section to use should be indicated here. The types are 'Day' or 'Evening'.",
          "type": "string",
          "enum": [
            "Day",
            "Evening"
          ]
        },
        "separateDNDRooms": {
          "description": "Separate Do not Disturb rooms if there are any.",
          "type": "boolean"
        },
        "separateNSRRooms": {
          "description": "Separate No Service rooms if there are any.",
          "type": "boolean"
        },
        "sheetOrderBy": {
          "description": "The order of the rooms when assigning to the task sheets. Default order is by Room Number. If task sheets are to be ordered by Section or Floor, a new task sheet will be generated for Section/Floor.",
          "type": "string",
          "enum": [
            "Room",
            "Floor",
            "Section",
            "SectionGroups",
            "Building",
            "BuildingGroups"
          ]
        },
        "showAllScheduledTasks": {
          "description": "If ShowAllScheduledTasks is true then all housekeeping tasks scheduled for the day for the reservation will be shown, otherwise only the task with the highest priority will be shown.",
          "type": "boolean"
        },
        "status": {
          "description": "The Room Status, FO Status and Housekeeping Room Reservation status which are to be used to generate the task sheet.",
          "$ref": "#/definitions/taskSheetGenerationStatusTypesType"
        },
        "stayOverFirst": {
          "description": "Stay over first for the task sheet.",
          "type": "boolean"
        },
        "taskCodes": {
          "description": "Task Code for which the task sheets should be generated.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "taskDate": {
          "description": "Task Date for which the tasks are to be generated. Date cannot be earlier than business date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "templateCode": {
          "description": "Template code of the task sheet.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "templateDescription": {
          "description": "Short description of the task sheet.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "turndown": {
          "description": "Return whether the sheet to be generated is of type turndown or not.",
          "type": "boolean"
        },
        "vIPOnly": {
          "description": "Return whether the sheet to be generated is VIP only or not.",
          "type": "boolean"
        }
      }
    },
    "basicEmailType": {
      "description": "Email address",
      "type": "string",
      "maxLength": 2000,
      "minLength": 0
    },
    "bedTaxReportingType": {
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "type": "object",
      "properties": {
        "taxRegistrationNo": {
          "description": "Tax Registration Number for Maldives Bed Tax Reporting.",
          "type": "number"
        },
        "taxableDays": {
          "description": "Number of days for which the Maldives tax is applicable.",
          "type": "integer"
        },
        "visaExpiryDate": {
          "description": "Visa Expiration Date used for Maldives Bed Tax Reporting",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaIssueDate": {
          "description": "Visa Issue Date used for Maldives Bed Tax Reporting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaNumber": {
          "description": "Visa number used for Maldives Bed Tax Reporting",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "billingPrivilegesType": {
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "type": "object",
      "properties": {
        "allowAutoCheckin": {
          "description": "Indicated if a new reservation should be created and automatically checked in whenever the room is checked out. Available for pseudoRoom room types only.",
          "type": "boolean"
        },
        "autoSettlement": {
          "description": "Indicates if the is a candidate for auto folio settlement.",
          "type": "boolean"
        },
        "autoSettlementFreq": {
          "description": "The interval of days between each auto folio settlement.",
          "type": "integer"
        },
        "autoSettlementType": {
          "description": "The folio settlement type for auto folio settlement.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "creditLimitAutoPay": {
          "description": "Indicates if the reservation will be included in the Automatic Credit Limit Overages process and also be listed in the Credit Limit Overages screen results.",
          "type": "boolean"
        },
        "directBillAuthorized": {
          "description": "If Direct bill is authorized this will hold User ID who authorized it.",
          "type": "boolean"
        },
        "folioCloseDate": {
          "description": "Date when folio was closed. This works with PostStayCharging flag.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postStayCharging": {
          "description": "Indicates if the reservation has charging privileges after checkout.",
          "type": "boolean"
        },
        "postingRestriction": {
          "description": "Flag used by interface program during check in.",
          "type": "boolean"
        },
        "preStayCharging": {
          "description": "Indicates if the reservation has charging privileges before arrival.",
          "type": "boolean"
        },
        "scheduledCheckout": {
          "description": "Indicates if the guest is scheduled for automatic check out.",
          "type": "boolean"
        },
        "scheduledCheckoutTime": {
          "description": "Time of automatic check out if guest is schedule for automatic check out.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "videoCheckout": {
          "description": "Indicates if the guest can do video checkout",
          "type": "boolean"
        }
      }
    },
    "blockIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "canceledServicingTaskRoom": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cardNumberTypeType": {
      "description": "Simple type for indicating if credit card number is tokenized.",
      "type": "string",
      "enum": [
        "CardNumber",
        "Token"
      ]
    },
    "cardProcessingType": {
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardTypeType": {
      "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
      "type": "string",
      "enum": [
        "Ab",
        "Am",
        "Ax",
        "Cb",
        "Dc",
        "Ds",
        "Dt",
        "Ec",
        "Er",
        "Jc",
        "Jl",
        "Mc",
        "Nb",
        "So",
        "St",
        "Sw",
        "Va",
        "Xy",
        "Zz",
        "Cp",
        "Cu"
      ]
    },
    "changedRoomMaintenance": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changedTaskSheet": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changedTaskSheetRooms": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changedTaskSheetTemplate": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "codeDescriptionType": {
      "description": "This contains a generic code and description information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "maxLength": 20,
        "minLength": 0
      }
    },
    "codeType": {
      "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
      "type": "string",
      "maxLength": 20,
      "minLength": 0
    },
    "commissionPayoutToType": {
      "type": "string",
      "enum": [
        "TravelAgent",
        "Source",
        "TravelAgentSource",
        "None"
      ]
    },
    "communicationStatusType": {
      "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
      "type": "string",
      "enum": [
        "Pending",
        "Completed",
        "Failed",
        "Sent",
        "Received",
        "Cancelled",
        "PendingAvailability"
      ]
    },
    "completeRoomRepair": {
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to complete the out of order status of a room and bring the room back into rotation. A list or range of rooms can be provided.",
          "type": "object",
          "properties": {
            "roomRangeList": {
              "type": "object",
              "properties": {
                "range": {
                  "type": "object",
                  "properties": {
                    "roomRange": {
                      "$ref": "#/definitions/roomRangeType"
                    }
                  }
                },
                "roomIds": {
                  "$ref": "#/definitions/roomIds"
                },
                "roomOutOfOrder": {
                  "description": "Out Of Order and Out Of Service Room information.",
                  "type": "object",
                  "properties": {
                    "end": {
                      "description": "The ending value of the date range.",
                      "type": "string",
                      "format": "date"
                    },
                    "newDateRange": {
                      "description": "The new start date and end date, if the dates were changed as part of an update. This would be blank for new OO/OS rooms.",
                      "$ref": "#/definitions/dateRangeType"
                    },
                    "reasonCode": {
                      "description": "Reason Code why the room is OO/OS.",
                      "type": "string",
                      "maxLength": 20,
                      "minLength": 0
                    },
                    "reasonDescription": {
                      "description": "Reason Description why the room is OO/OS.",
                      "type": "string",
                      "maxLength": 80,
                      "minLength": 0
                    },
                    "repairRemarks": {
                      "description": "Notes or Remarks on the OO/OS room",
                      "type": "string",
                      "maxLength": 2000,
                      "minLength": 0
                    },
                    "returnStatus": {
                      "description": "Room Status which will be used on completion of OO/OS.",
                      "$ref": "#/definitions/housekeepingRoomStatusType"
                    },
                    "start": {
                      "description": "The starting value of the date range.",
                      "type": "string",
                      "format": "date"
                    }
                  }
                }
              }
            },
            "roomRepairByRoomNumber": {
              "description": "Completing an existing OO/OS room by room number.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "type": "object",
                "properties": {
                  "roomId": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 0
                  },
                  "roomOutOfOrder": {
                    "description": "Out Of Order and Out Of Service Room information.",
                    "type": "object",
                    "properties": {
                      "end": {
                        "description": "The ending value of the date range.",
                        "type": "string",
                        "format": "date"
                      },
                      "newDateRange": {
                        "description": "The new start date and end date, if the dates were changed as part of an update. This would be blank for new OO/OS rooms.",
                        "$ref": "#/definitions/dateRangeType"
                      },
                      "reasonCode": {
                        "description": "Reason Code why the room is OO/OS.",
                        "type": "string",
                        "maxLength": 20,
                        "minLength": 0
                      },
                      "reasonDescription": {
                        "description": "Reason Description why the room is OO/OS.",
                        "type": "string",
                        "maxLength": 80,
                        "minLength": 0
                      },
                      "repairRemarks": {
                        "description": "Notes or Remarks on the OO/OS room",
                        "type": "string",
                        "maxLength": 2000,
                        "minLength": 0
                      },
                      "returnStatus": {
                        "description": "Room Status which will be used on completion of OO/OS.",
                        "$ref": "#/definitions/housekeepingRoomStatusType"
                      },
                      "start": {
                        "description": "The starting value of the date range.",
                        "type": "string",
                        "format": "date"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "completeRoomRepairStatus": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "completedServicingTaskRoom": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "countryNameType": {
      "description": "Code for a country or a nationality.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Used for Character Strings, length 0 to 200.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "currencyAmountType": {
      "description": "A monetary value expressed with a currency code.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        }
      }
    },
    "currentServicingAttendantType": {
      "description": "The Attendant Name and ID of the attendant servicing the room.",
      "type": "object",
      "properties": {
        "activeFlag": {
          "description": "Indicates if the Attendant is active.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "appUser": {
          "description": "The App User Name and ID of the user who started the service.",
          "$ref": "#/definitions/applicationUserType"
        },
        "attendantId": {
          "description": "Attendant's unique identifier.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "attendantName": {
          "description": "Attendant's name.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "floor": {
          "description": "The Floor which is assigned to the attendant.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "friday": {
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property where the attendant belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "monday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        },
        "section": {
          "description": "Section Code the attendant has been assigned.",
          "$ref": "#/definitions/housekeepingSectionType"
        },
        "startTime": {
          "description": "The start time of the service.",
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "description": "Status of the respective Housekeeping Attendant.",
          "$ref": "#/definitions/servicingAttendantStatusType"
        },
        "sunday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        }
      }
    },
    "dateRangeType": {
      "description": "Date Range with Start and End dates.",
      "type": "object",
      "properties": {
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "daysOfWeekType": {
      "description": "Allowed values for the days of week type.",
      "type": "string",
      "enum": [
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
        "Sunday"
      ]
    },
    "departureTaskInfoType": {
      "description": "Facility task info related to the departure task.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Facility task code of the departure task.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "Supplies based on the room type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomTypeSuppliesType"
          }
        }
      }
    },
    "emailInfoType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "emailType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "employeeInfoType": {
      "type": "object",
      "properties": {
        "addressInfo": {
          "$ref": "#/definitions/addressInfoType"
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        },
        "department": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "emailInfo": {
          "$ref": "#/definitions/emailInfoType"
        },
        "gender": {
          "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "personName": {
          "$ref": "#/definitions/personNameType"
        },
        "phoneInfo": {
          "$ref": "#/definitions/telephoneInfoType"
        },
        "profileId": {
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "endedServiceBreak": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "errorInstance": {
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "title": "Error Instance Details",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "exceptionDetailType": {
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "title": "Error Detail",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "externalReferenceType": {
      "description": "This type contains unique information of external reference.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique ID of external reference.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "ID context for external reference.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "ID extension for external reference.",
          "type": "integer"
        }
      }
    },
    "externalReferencesType": {
      "description": "This type contains unique information of external reference.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/externalReferenceType"
      }
    },
    "facilityCodeForecastType": {
      "description": "A facility code and its forecast.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Facility Task code.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "forecast": {
          "description": "The forecast of quantities for this facility code.",
          "$ref": "#/definitions/forecastQuantitiesType"
        }
      }
    },
    "facilityCodeType": {
      "description": "Facility Housekeeping Code, its description and quantity.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Facility code value.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Facility Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "quantity": {
          "description": "Signifies the quantity.",
          "type": "integer"
        }
      }
    },
    "facilityCodesForecastType": {
      "description": "Collection of facility codes with their forecasts.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/facilityCodeForecastType"
      }
    },
    "facilityCodesType": {
      "description": "List of the facility codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/facilityCodeType"
      }
    },
    "facilityForecast": {
      "description": "Response element for the fetched facility forecast.",
      "type": "object",
      "properties": {
        "facilityForecastDetails": {
          "description": "Facility Forecase type",
          "type": "object",
          "properties": {
            "tasks": {
              "description": "The facility forecast information.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/facilityTaskForecastType"
              }
            },
            "totals": {
              "description": "Totals",
              "$ref": "#/definitions/facilityTotalForecastType"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "facilityHousekeepingTaskType": {
      "description": "A single facility task type.",
      "type": "object",
      "properties": {
        "cycleStartDay": {
          "description": "Signifies offset(in days) i.e. start on 3rd day from arrival.",
          "type": "integer"
        },
        "facilityCodes": {
          "description": "The hotel code of the room.",
          "$ref": "#/definitions/facilityCodesType"
        },
        "facilityTask": {
          "description": "Facility task for the day.",
          "$ref": "#/definitions/facilityTaskBaseType"
        },
        "frequency": {
          "description": "Signifies frequency(i.e. every 2 days) with which task is to be performed.",
          "type": "integer"
        },
        "roomId": {
          "description": "Room number at which task is to be performed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "Signifies the room type for which task is being performed .",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "stayPeriod": {
          "description": "Specifies whether task is performed entire stay or specific dates.",
          "$ref": "#/definitions/housekeepingTaskStayPeriodType"
        },
        "taskDate": {
          "description": "A reservation date on which task must occur.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "taskEndDate": {
          "description": "Date on which task will stop being performed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "taskStartDate": {
          "description": "Date on which the task needs to start being performed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "facilityHousekeepingTasksType": {
      "description": "List of the facility tasks.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/facilityHousekeepingTaskType"
      }
    },
    "facilityTaskBaseType": {
      "description": "Facility Housekeeping task code and description.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the housekeeping task.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Facility task description.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "priority": {
          "description": "Signifies the priority of the task.",
          "type": "integer"
        }
      }
    },
    "facilityTaskForecastType": {
      "description": "A facility task and its forecast.",
      "type": "object",
      "properties": {
        "facilityCodes": {
          "description": "Forecast of Facility codes belonging to this facility task.",
          "$ref": "#/definitions/facilityCodesForecastType"
        },
        "task": {
          "description": "Facility Task.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "taskForecast": {
          "description": "Forecast of quantities for this facility task.",
          "$ref": "#/definitions/forecastQuantitiesType"
        }
      }
    },
    "facilityTaskType": {
      "description": "Information regarding facility task on a reservation.",
      "type": "object",
      "properties": {
        "date": {
          "description": "The Date on which the task is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "supplies": {
          "description": "Supplies associated with the task.",
          "$ref": "#/definitions/facilityCodesType"
        },
        "task": {
          "description": "The Task Code.",
          "$ref": "#/definitions/housekeepingTaskCodeType"
        }
      }
    },
    "facilityTotalForecastType": {
      "description": "The Total of the forecasts.",
      "type": "object",
      "properties": {
        "totalFacilityCodes": {
          "description": "Total forecast of each Facility code.",
          "$ref": "#/definitions/facilityCodesForecastType"
        },
        "totals": {
          "description": "Total forecast of all facility codes.",
          "$ref": "#/definitions/forecastTotalsQuantitiesType"
        }
      }
    },
    "folioTextsType": {
      "description": "This stores the description for the type of tax calculation especially with tax exemption, etc.",
      "type": "array",
      "maxItems": 2,
      "items": {
        "type": "object",
        "properties": {
          "row": {
            "description": "Row number of the additional text.",
            "type": "integer"
          },
          "text": {
            "description": "Additional text field to display on the folio.",
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          }
        }
      }
    },
    "forecastQuantitiesType": {
      "description": "Collection of dates and their quantities.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/forecastQuantityType"
      }
    },
    "forecastQuantityType": {
      "description": "Quatity data for a single day.",
      "type": "object",
      "properties": {
        "date": {
          "description": "Date of the statistic.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "isWeekend": {
          "description": "Indicates whether the day is a weekend day or not.",
          "type": "boolean"
        },
        "quantity": {
          "description": "The actual quantity",
          "type": "integer"
        },
        "roomTypeBreakDown": {
          "description": "Collection of room types that have the task on this date.",
          "$ref": "#/definitions/roomTypeTasksType"
        }
      }
    },
    "forecastTotalsQuantitiesType": {
      "description": "Collection of dates and their total quantities.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/forecastTotalsQuantityType"
      }
    },
    "forecastTotalsQuantityType": {
      "description": "Quatity data for a single day.",
      "type": "object",
      "properties": {
        "date": {
          "description": "Date of the statistic.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "isWeekend": {
          "description": "Indicates whether the day is a weekend day or not.",
          "type": "boolean"
        },
        "quantity": {
          "description": "The actual quantity",
          "type": "integer"
        },
        "roomTypeBreakDown": {
          "description": "Collection of room types that have the task on this date.",
          "$ref": "#/definitions/roomTypeTasksType"
        },
        "totalCredits": {
          "description": "Total Credits on the specified date.",
          "type": "integer"
        }
      }
    },
    "frontOfficeRoomStatusType": {
      "description": "Simple type for front office room status instructions to be used in requests for fetching housekeeping rooms. Valid values are Vacant and Occupied.",
      "type": "string",
      "enum": [
        "Vacant",
        "Occupied"
      ]
    },
    "givenNameType": {
      "description": "Given name, first name or names",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "guestHousekeepingInstructions": {
      "description": "Return object that contains guest housekeeping instructions for the reservation/room.",
      "type": "object",
      "properties": {
        "guestHouseKeepingInstructions": {
          "description": "Collection of information about reservation attachments returned/fetched as per the criteria in the fetch request.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "guestHousekeepingService": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "guestHousekeepingServiceRequest": {
      "description": "Operation to get set guest housekeeping instructions for the room.",
      "type": "object",
      "properties": {
        "guestHousekeepingInstructions": {
          "description": "Criteria for setting guest housekeeping instructions.",
          "$ref": "#/definitions/resHousekeepingSetType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "guestHousekeepingServiceRequestCriteria": {
      "description": "Operation to set the Guest Service status of an occupied room. The service status can be Do Not Disturb or Make Up Room.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for setting the status.",
          "$ref": "#/definitions/setGuestHousekeepingServiceRequestCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "guestHousekeepingServiceRequestStatus": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "guestHousekeepingServiceRequestType": {
      "description": "Possible values for the Guest Service Status.",
      "type": "string",
      "enum": [
        "DoNotDisturb",
        "MakeUpRoom",
        "NoStatusSelected"
      ]
    },
    "guestLastStayInfoType": {
      "description": "Contains last stay related details of the guest.",
      "type": "object",
      "properties": {
        "lastStayDate": {
          "description": "Guest's last stay date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastStayRate": {
          "description": "The Rate amount of the guest's last stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "lastStayRoom": {
          "description": "Room Number where the guest stayed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "totalStay": {
          "description": "The total number of previous stay of the guest.",
          "type": "integer"
        }
      }
    },
    "hotelInterfaceStatusType": {
      "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
      "type": "string",
      "enum": [
        "Stopped",
        "Running",
        "Waiting",
        "StopInitiated",
        "StartInitiated",
        "RebootInitiated",
        "Other"
      ]
    },
    "hotelInterfaceType": {
      "type": "object",
      "properties": {
        "activeFlag": {
          "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "interfaceName": {
          "description": "Name of the Hotel Interface",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "interfaceType": {
          "description": "Three letter code for each interface that identifies the interface.",
          "$ref": "#/definitions/hotelInterfaceTypeType"
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "machineName": {
          "description": "Unique machine name of the running IFC.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "status": {
          "description": "The current status of the IFC.",
          "$ref": "#/definitions/hotelInterfaceStatusType"
        }
      }
    },
    "hotelInterfaceTypeType": {
      "description": "XML Posting Interface",
      "type": "string",
      "enum": [
        "Bms",
        "Cas",
        "Ccw",
        "Dls",
        "Eft",
        "Exp",
        "Mak",
        "Mbs",
        "Msc",
        "Pbx",
        "Pos",
        "Svs",
        "Tik",
        "Vid",
        "Vms",
        "Www",
        "Xml"
      ]
    },
    "hotelRoomMaintenanceType": {
      "description": "Hotel Rooms maintenance information type.",
      "type": "object",
      "properties": {
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomMaintenance": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomMaintenanceType"
          }
        }
      }
    },
    "hotelRoomsType": {
      "description": "Collection of Room record that contain Housekeeping and Out Of Order information.",
      "type": "object",
      "properties": {
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "room": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomType"
          }
        }
      }
    },
    "housekeepingAttendantScheduleType": {
      "description": "Criteria to manage the attendant schedule.",
      "type": "object",
      "properties": {
        "attendantId": {
          "description": "ID of the attendant.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "date": {
          "description": "Date the attendant will be assigned.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "name": {
          "description": "Partial name of an attendant.",
          "type": "string"
        }
      }
    },
    "housekeepingAttendantsScheduleType": {
      "description": "Collection of Attendants.",
      "type": "object",
      "properties": {
        "attendantsSchedule": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/housekeepingAttendantScheduleType"
          }
        },
        "hotelId": {
          "description": "Property code the Housekeeping Attendant belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "scheduleDate": {
          "description": "Schedule date of attendants' assignment. Used when attendants to scheduled are of the same date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "housekeepingBoard": {
      "type": "object",
      "properties": {
        "housekeepingRoomInfo": {
          "description": "Collection of Housekeeping Rooms and their information as well as paging attributes.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "housekeepingRooms": {
              "description": "List of rooms and the room status.",
              "$ref": "#/definitions/hotelRoomsType"
            },
            "limit": {
              "description": "Indicates maximum number of records a Web Service should return.",
              "type": "integer"
            },
            "offset": {
              "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
              "type": "integer"
            },
            "totalPages": {
              "description": "Evaluated total page count based on the requested max fetch count.",
              "type": "integer"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "housekeepingRoomStatusInfoList": {
          "description": "Collection of Housekeeping Room Status Information.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/housekeepingRoomStatusInfo"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingCreditsDefinitionType": {
      "description": "Type for the different kinds of Credits which will be used in Rooms Management.",
      "type": "string",
      "enum": [
        "Departure",
        "Pickup",
        "Turndown",
        "StayOver",
        "FacilityTask",
        "Travelling",
        "Miscellaneous",
        "Special",
        "Total"
      ]
    },
    "housekeepingCreditsType": {
      "description": "Information regarding the credits for housekeeping tasks/rooms.",
      "type": "object",
      "properties": {
        "numberOfCredits": {
          "description": "Total number of Credits for the Type.",
          "type": "number"
        },
        "type": {
          "description": "The Type of Credit. Example: TOTAL credits for the task sheet, total TRAVELLING credits for the task sheet.",
          "$ref": "#/definitions/housekeepingCreditsDefinitionType"
        }
      }
    },
    "housekeepingInstructionsType": {
      "description": "Simple type for housekeeping instructions that can be used in requests for partial operations.",
      "type": "string",
      "enum": [
        "Turndown",
        "CleaningPriority",
        "ServiceRequest"
      ]
    },
    "housekeepingRoomReservationStatusType": {
      "description": "Room Reservation status types used in housekeeping. These may be different from the actual reservation statuses as these relate to the current reservation for the room.",
      "type": "string",
      "enum": [
        "Arrival",
        "Arrived",
        "DayUse",
        "DueOut",
        "Departed",
        "NotReserved",
        "StayOver"
      ]
    },
    "housekeepingRoomStatus": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "description": "Refer to Generic common types document.",
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingRoomStatusCriteria": {
      "type": "object",
      "properties": {
        "housekeepingRoomStatus": {
          "description": "The new Room status that will be assigned.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "housekeepingStatus": {
          "description": "The new Housekeeping status that will be assigned.",
          "$ref": "#/definitions/frontOfficeRoomStatusType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "roomList": {
          "description": "Collection of room numbers for which the status is to be updated.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomInformationType"
          }
        },
        "turndownStatus": {
          "$ref": "#/definitions/turndownStatusType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingRoomStatusInfo": {
      "description": "Housekeeping Room Status Info Type",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "housekeepingRoomStatus": {
          "type": "string"
        },
        "numberOfRooms": {
          "type": "integer"
        }
      }
    },
    "housekeepingRoomStatusType": {
      "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
      "type": "string",
      "enum": [
        "Clean",
        "Dirty",
        "Pickup",
        "Inspected",
        "OutOfOrder",
        "OutOfService"
      ]
    },
    "housekeepingRoomsType": {
      "description": "Type for a list of Housekeeping rooms for a resort. Used as a criteria type for requests.",
      "type": "object",
      "properties": {
        "roomList": {
          "description": "Collection of room numbers.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        }
      }
    },
    "housekeepingScheduleShiftDayType": {
      "description": "Day of the week to which schedule of the week is to be shifted to.",
      "type": "object",
      "properties": {
        "dayOfWeek": {
          "$ref": "#/definitions/daysOfWeekType"
        }
      }
    },
    "housekeepingScheduleShiftRequestType": {
      "description": "Criteria type for fetching reservation housekeeping schedule.",
      "type": "object",
      "properties": {
        "beginDate": {
          "description": "Begin date from which to start fetching facility tasks.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "End date for facility task schedule request.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotelId": {
          "description": "The hotel code where reservation is made.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "shiftDay": {
          "description": "Days of the week to which the schedule is to be shifted to.",
          "$ref": "#/definitions/housekeepingScheduleShiftDayType"
        }
      }
    },
    "housekeepingSectionType": {
      "description": "Information regarding Housekeeping Sections.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The Housekeeping Section Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Section.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property where this section is defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates if the Section Code is active.",
          "type": "boolean"
        },
        "roomCredits": {
          "description": "Number of housekeeping credits. This is auto populated while creating/fetching record.",
          "type": "integer"
        },
        "rooms": {
          "description": "Rooms count for this section code. This is auto populated while creating/fetching record.",
          "type": "integer"
        },
        "sectionGroup": {
          "description": "Housekeeping Section Group.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sequence": {
          "description": "Display sequence when task assignment is automatically broken out by Section Group.",
          "type": "integer"
        },
        "targetCredits": {
          "description": "Target Credit for each task sheet created for this section when auto task assignment is broken out by section.",
          "type": "integer"
        }
      }
    },
    "housekeepingTaskAssignmentType": {
      "description": "Contains information for all the Task Sheets generated for a particular combination of Date and Task Code.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property where the Task Assignment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "taskCodes": {
          "description": "The Task Code(s) for which the Task Sheets were generated.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/housekeepingTaskCodeType"
          }
        },
        "taskDate": {
          "description": "The date for which the Task Assignment is done. Date should be the current business date in most cases. Date cannot be in the past.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "taskSheets": {
          "description": "List of Task Sheets generated for this assignment.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/housekeepingTaskType"
          }
        },
        "taskSheetsCount": {
          "type": "integer"
        }
      }
    },
    "housekeepingTaskAssignmentsType": {
      "description": "Collection of Assignments",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/housekeepingTaskAssignmentType"
      }
    },
    "housekeepingTaskCodeType": {
      "description": "Information related to a Task Code. Task Codes are used to generate task sheets in Rooms Management.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The Code for the task.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Task Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "facilityDepartureTask": {
          "description": "Indicates if this task code is the default departure task for Facility Tasks. This requires",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property where this task code is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "instructions": {
          "description": "Instructions for this Task Code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "sequence": {
          "description": "Ordering sequence for display.",
          "type": "integer"
        }
      }
    },
    "housekeepingTaskStayPeriodType": {
      "description": "Simple type for controlling the fetch operations of the housekeeping schedule request.",
      "type": "string",
      "enum": [
        "EntireStay",
        "SpecificDates"
      ]
    },
    "housekeepingTaskType": {
      "type": "object",
      "properties": {
        "appUserOnBreak": {
          "description": "Information about on break application user and start time.",
          "$ref": "#/definitions/appUserOnBreakType"
        },
        "attendant": {
          "description": "Information regarding Housekeeping Attendants.",
          "type": "object",
          "properties": {
            "activeFlag": {
              "description": "Indicates if the Attendant is active.",
              "type": "string",
              "maxLength": 1,
              "minLength": 0
            },
            "attendantId": {
              "description": "Attendant's unique identifier.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "attendantInstructions": {
              "type": "string",
              "maxLength": 2000
            },
            "attendantName": {
              "description": "Attendant's name.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "floor": {
              "description": "The Floor which is assigned to the attendant.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "friday": {
              "type": "boolean"
            },
            "hotelId": {
              "description": "Property where the attendant belongs.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "monday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            },
            "section": {
              "description": "Section Code the attendant has been assigned.",
              "$ref": "#/definitions/housekeepingSectionType"
            },
            "sunday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            }
          }
        },
        "attendantStatus": {
          "description": "Status of Housekeeping Attendant assigned to this TaskSheet. This value holds the most recent status posted by the attendant.",
          "$ref": "#/definitions/servicingAttendantStatusType"
        },
        "autoGenerated": {
          "description": "Indicates if the task sheet was automatically generated.",
          "type": "boolean"
        },
        "breakOutId": {
          "description": "Break out id of the task sheet.",
          "type": "integer"
        },
        "completedDate": {
          "description": "Date the task was completed.",
          "type": "string",
          "format": "date"
        },
        "credits": {
          "description": "Credits information for this Task Sheet. This could have the Total Credit information and the Travelling credits if required.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/housekeepingCreditsType"
          }
        },
        "date": {
          "description": "The date for which the task sheet applies.",
          "type": "string",
          "format": "date"
        },
        "departureTaskInfo": {
          "description": "Facility task info related to the departure task.",
          "$ref": "#/definitions/departureTaskInfoType"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "linenChangeCount": {
          "description": "The total number of linen changes included in this task sheet.",
          "type": "integer"
        },
        "lockTaskSheet": {
          "description": "Indicates if the task sheet was locked or not.",
          "type": "boolean"
        },
        "nextDay": {
          "description": "Indicates the task sheet applies to Next Business Day.",
          "type": "boolean"
        },
        "roomCount": {
          "description": "The total number of rooms included in this task sheet.",
          "type": "integer"
        },
        "roomCounts": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "totalCount": {
                "type": "integer"
              },
              "value": {
                "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
                "type": "string",
                "enum": [
                  "Clean",
                  "Dirty",
                  "Pickup",
                  "Inspected",
                  "OutOfOrder",
                  "OutOfService"
                ]
              }
            }
          }
        },
        "rooms": {
          "description": "Details of the room which is part of the Task Sheet. The room details will be returned when the request for IncludeTaskSheetDetails(flag in the search type) is true.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "description": "This type represents the primary room attributes.",
            "type": "object",
            "properties": {
              "attendant": {
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "$ref": "#/definitions/currentServicingAttendantType"
                }
              },
              "building": {
                "description": "Building associated with the room.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "cleaningSequence": {
                "description": "The sequence for cleaning this room in the task sheet. This would apply only for Pickup and Dirty rooms.",
                "type": "integer"
              },
              "componentRoomNumber": {
                "description": "This flag indicates component room.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "componentRoomNumbers": {
                "description": "List of component room numbers.",
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                }
              },
              "componentRooms": {
                "description": "This flag indicates component rooms.",
                "$ref": "#/definitions/roomRoomsType"
              },
              "connectingRooms": {
                "description": "This flag indicates connecting rooms.",
                "$ref": "#/definitions/roomRoomsType"
              },
              "defaultSequence": {
                "description": "The sequence for this room from configuration.",
                "type": "integer"
              },
              "description": {
                "description": "Description of the room.",
                "$ref": "#/definitions/translationTextType2000"
              },
              "discrepancy": {
                "description": "Identifies the room discrepancy information.",
                "$ref": "#/definitions/roomDiscrepanciesType"
              },
              "floor": {
                "description": "Floor of the Room.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "floorDescription": {
                "description": "Description for the Floor of the Room.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "hasPriority": {
                "description": "The sequence for this room from configuration.",
                "type": "boolean"
              },
              "hold": {
                "description": "Hold attributes if any.",
                "$ref": "#/definitions/roomHoldType"
              },
              "housekeeping": {
                "description": "Identifies the Housekeeping information..",
                "$ref": "#/definitions/housekeepingType"
              },
              "instructions": {
                "description": "Task Sheet instructions at the room level.",
                "type": "string",
                "maxLength": 2000,
                "minLength": 0
              },
              "isAccessible": {
                "description": "Indicates whether the room is accessibility compliant.",
                "type": "boolean"
              },
              "maintenanceAllowed": {
                "description": "Flag if the Room, and the OperaV5 version, allows Room Maintenance or not.",
                "type": "boolean"
              },
              "meetingRoom": {
                "description": "Indicates whether the room is a Meeting Room",
                "type": "boolean"
              },
              "outOfOrder": {
                "description": "Identifies the room Out of Order/Out of Service information.",
                "$ref": "#/definitions/roomsOutOfOrderType"
              },
              "reservationInfo": {
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "$ref": "#/definitions/reservationInfoType"
                }
              },
              "resvInfo": {
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "$ref": "#/definitions/reservationShortInfoType"
                }
              },
              "roomAssignmentRating": {
                "description": "Assignment Rating associated with the room.",
                "$ref": "#/definitions/ratePlanRatingType"
              },
              "roomDescription": {
                "description": "Detail Long Description Of The Room.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "roomFeatures": {
                "description": "Room Features for the room.",
                "$ref": "#/definitions/roomFeaturesType"
              },
              "roomId": {
                "description": "Code of the room.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "roomSection": {
                "description": "Room sections of the room.",
                "$ref": "#/definitions/roomSectionType"
              },
              "roomType": {
                "description": "Room type basic information of the room.",
                "$ref": "#/definitions/roomTypeShortInfoType"
              },
              "servicingInfo": {
                "description": "Information regarding the current servicing of the room.",
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "$ref": "#/definitions/currentServicingAttendantType"
                }
              },
              "sitePlanSection": {
                "description": "Identifies the site plan location of the room.",
                "$ref": "#/definitions/sitePlanSectionType"
              },
              "smokingPreference": {
                "description": "This indicates room smoking preference.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "smokingPreferenceDescription": {
                "description": "This indicates the description of the room smoking preference.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "totalCredits": {
                "description": "Total credits for this room.",
                "type": "integer"
              },
              "turndownInfo": {
                "$ref": "#/definitions/turndownInfoType"
              },
              "wakeUpTime": {
                "description": "The wake up time of the current date",
                "type": "string",
                "format": "date"
              }
            }
          }
        },
        "sheetNumber": {
          "description": "The Task Sheet number. This will be a sequential number for the task sheets generated for a particular Task Code.",
          "type": "integer"
        },
        "sheetType": {
          "description": "The Task Sheet type. Indicates how the task sheet was created and what type of rooms are part of it.",
          "$ref": "#/definitions/taskSheetType"
        },
        "taskCodes": {
          "description": "The Task Code(s) used for this Task Sheet.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/housekeepingTaskCodeType"
          }
        },
        "taskInstructions": {
          "description": "Task Sheet level instructions. These instructions are applicable to this task sheet only.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "taskSeqNo": {
          "description": "The sequence no of the task sheet.",
          "type": "integer"
        },
        "totalSupplies": {
          "description": "All Supplies, and their totals, associated with the Task Sheet.",
          "$ref": "#/definitions/facilityCodesType"
        }
      }
    },
    "housekeepingType": {
      "description": "Identifies the Housekeeping information.",
      "type": "object",
      "properties": {
        "cleaningPriority": {
          "description": "Cleaning priority for the room, if a priority was set.",
          "$ref": "#/definitions/roomCleaningPriorityType"
        },
        "facilityTaskCode": {
          "description": "Facility task Code/ Task Code assigned to the room for the day.",
          "$ref": "#/definitions/codeListType"
        },
        "guestServiceRequest": {
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "housekeepingRoomStatus": {
          "description": "The Room status information per the reservation and housekeeping.",
          "$ref": "#/definitions/roomStatusType"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "roomCondition": {
          "description": "Condition of the room, if a condition was set.",
          "$ref": "#/definitions/roomConditionType"
        },
        "roomPersons": {
          "description": "The Room person information per the reservation and housekeeping.",
          "$ref": "#/definitions/roomPersonsType"
        }
      }
    },
    "imageResultType": {
      "type": "object",
      "properties": {
        "base64Image": {
          "description": "Base64Image image content of the file.",
          "type": "string"
        },
        "image": {
          "description": "Image file to upload.",
          "type": "string",
          "format": "byte"
        },
        "imageId": {
          "description": "ImageId file.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "imageLinkId": {
          "description": "Image link id file.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "imageSet": {
          "description": "Image set describing path of image.",
          "type": "string",
          "maxLength": 800,
          "minLength": 0
        },
        "linkId": {
          "description": "LinkID of the file.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "mimeType": {
          "description": "Mime type of the Image.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "imageResultsType": {
      "description": "Collection of image results.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/imageResultType"
      }
    },
    "indicatorType": {
      "description": "Lamp indicator Type.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        },
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "indicatorsType": {
      "description": "Collection of lamp indicators.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "instanceLink": {
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "type": "object",
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ],
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "interfaceRightsStatusType": {
      "type": "object",
      "properties": {
        "category": {
          "description": "Category code of this interface right.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "description": {
          "description": "User defined description for an Interface Right.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "right": {
          "description": "Internal code for each allowed right of a Hotel Interface record.",
          "type": "integer"
        },
        "statusCode": {
          "description": "User defined code for an Interface Right.",
          "type": "string",
          "maxLength": 5,
          "minLength": 0
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "lockedTaskSheet": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "membershipInfoType": {
      "description": "The Membership object identifies the frequent customer reward program.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The account identification number for this particular member in this particular program.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "bonusCode": {
          "description": "The code or name of the bonus program. BonusCode can be used to indicate the level of membership (Gold Club, Platinum member, etc.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Membership ID (Unique ID from the memberships table).",
          "type": "number"
        },
        "membershipLevel": {
          "description": "The code or name of the membership level and indicates the level of membership (Gold Club, Platinum member, etc.). This is same as the BonusCode.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipLevelDesc": {
          "description": "The description of the Bonus Code.(Platinum for code P)",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "membershipTypeDesc": {
          "description": "The description of the ProgramCode.(Delta Previlige for code DP)",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "programCode": {
          "description": "The code or name of the membership program ('Hertz', 'AAdvantage', etc.).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "mergeTaskSheetCriteriaType": {
      "description": "Criteria to merge task sheets.",
      "type": "object",
      "properties": {
        "fromTaskSeqNo": {
          "description": "Source task sequence number of the task sheet.",
          "type": "integer"
        },
        "hkBreakOutId": {
          "description": "Break out id of the task sheet.",
          "type": "integer"
        },
        "hotelId": {
          "description": "Property code which the task sheets belong.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "toTaskSeqNo": {
          "description": "Destination task sequence number of the task sheet.",
          "type": "integer"
        }
      }
    },
    "moveTaskRooms": {
      "description": "Request for moving rooms between task sheets.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for moving task sheet rooms. Contains the task sheets information regarding task code, date, sheet number and the rooms which have to be moved.",
          "$ref": "#/definitions/moveTaskRoomsCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "moveTaskRoomsCriteriaType": {
      "description": "Type for moving rooms between two task sheets.",
      "type": "object",
      "properties": {
        "fromTaskSheetNumber": {
          "description": "The task sheet number from which the rooms are being moved.",
          "type": "integer"
        },
        "hotelId": {
          "description": "The property where the task sheets exist for which the rooms are being moved.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rooms": {
          "description": "List of rooms which have to be moved from one task sheet to another.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomType"
          }
        },
        "taskCode": {
          "description": "The task code for the task sheets, for which the rooms are being moved.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/housekeepingTaskCodeType"
          }
        },
        "taskDate": {
          "description": "The date of the task sheet.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "toTaskSheetNumber": {
          "description": "The task sheet number to which the rooms should be moved.",
          "type": "integer"
        }
      }
    },
    "movedTaskRoomsRS": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "namePrefixType": {
      "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "nameTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Agent",
        "Contact",
        "Source",
        "Group",
        "Employee",
        "Hotel",
        "Purge"
      ]
    },
    "operaVersionNumberType": {
      "description": "Current Opera Version Number",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "pMS_ResStatusType": {
      "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "type": "string",
      "enum": [
        "Reserved",
        "Requested",
        "NoShow",
        "Cancelled",
        "InHouse",
        "CheckedOut",
        "Waitlisted",
        "DueIn",
        "DueOut",
        "Walkin",
        "PendingCheckout"
      ]
    },
    "parameterType": {
      "description": "Name value pair type that will hold generic parameter information. Only use this type when the parameters being passed are too dynamic to be defined.",
      "type": "object",
      "properties": {
        "parameterName": {
          "description": "Name of the parameter.",
          "type": "string"
        },
        "parameterValue": {
          "description": "Value of the parameter.",
          "type": "string"
        }
      }
    },
    "parametersType": {
      "description": "Collection of generic Name-Value-Pair parameters.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/parameterType"
      }
    },
    "payeeInfoType": {
      "description": "Payee information.",
      "type": "object",
      "properties": {
        "payeeAccountInfo": {
          "description": "AR account short info of the payee.",
          "$ref": "#/definitions/aRAccountShortInfoType"
        },
        "payeeAddress": {
          "description": "Address of the payee.",
          "$ref": "#/definitions/addressInfoType"
        },
        "payeeAddressCount": {
          "description": "Payee multiple address count.",
          "type": "integer"
        },
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeName": {
          "description": "Name of the payee.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "payeeReferenceCurrency": {
          "description": "Reference currency of the payee.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "payeeTaxNumber": {
          "description": "The tax number of the payee.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "personNameType": {
      "description": "This provides name information for a person.",
      "type": "object",
      "properties": {
        "envelopeGreeting": {
          "description": "Envelope Greeting of the profile",
          "type": "string"
        },
        "externalSystem": {
          "description": "When name type is external, indicates the external system the name belongs to.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "nameTitleSuffix": {
          "description": "Title Suffix. Must be populated if ADVANCED_TITLE is on.",
          "type": "integer"
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        },
        "salutation": {
          "description": "Salutation of the profile",
          "type": "string"
        },
        "surname": {
          "description": "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "personNameTypeType": {
      "description": "Person's name in an external system.",
      "type": "string",
      "enum": [
        "Primary",
        "Alternate",
        "Incognito",
        "External",
        "Phonetic"
      ]
    },
    "phoneNumberType": {
      "description": "Phone number",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "pointsType": {
      "description": "The Redeem Points contains the number of points required to book a room type.",
      "type": "object",
      "properties": {
        "awardsType": {
          "description": "Awards type for the award type rate code.",
          "type": "string"
        },
        "points": {
          "description": "No of points required to book this Room Stay.",
          "type": "integer"
        }
      }
    },
    "profileId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "profileIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "promotionType": {
      "description": "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "type": "object",
      "properties": {
        "couponCode": {
          "description": "Promotion Coupon Code when promotion is setup to have a valid coupon code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "promotionCode": {
          "description": "Promotion code associated with the rate plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "promotionName": {
          "description": "Promotion code Name associated with the rate plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "queueTextInfoType": {
      "description": "Information regarding the message sent to guest.",
      "type": "object",
      "properties": {
        "sentBy": {
          "description": "User name of the user who sent message.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "sentTime": {
          "description": "Time the text was last sent to the user.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ratePlanRatingType": {
      "description": "Possible Rate plan rating values.",
      "type": "string",
      "enum": [
        "MostImportant",
        "Important",
        "SomewhatImportant",
        "LessImportant",
        "LeastImportant",
        "NoValueSet"
      ]
    },
    "resAccessRestrictionType": {
      "description": "Indicates any Updates/Changes on the reservation as well as Reservation Cancellation are not allowed.",
      "type": "string",
      "enum": [
        "Change",
        "Cancel",
        "ChangeOrCancel"
      ]
    },
    "resAccompanyGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "resAccompanyGuestListType": {
      "description": "Collection of accompany guests",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAccompanyGuestInfoType"
      }
    },
    "resAttachedProfileListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAttachedProfileType"
      }
    },
    "resAttachedProfileType": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Attached profile name",
          "type": "string"
        },
        "profileIdList": {
          "description": "Collection of unique profile identifiers",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "resCashieringType": {
      "description": "Cashiering Information for the reservation.",
      "type": "object",
      "properties": {
        "bedTaxReporting": {
          "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
          "$ref": "#/definitions/bedTaxReportingType"
        },
        "billingPrivileges": {
          "description": "Billing privileges set on the reservation.",
          "$ref": "#/definitions/billingPrivilegesType"
        },
        "compAccounting": {
          "description": "Information regarding comp accounting on the reservation.",
          "$ref": "#/definitions/resCompAccountingType"
        },
        "financiallyResponsible": {
          "description": "The guest from whom payment has to be recovered (direct guest).",
          "type": "boolean"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "lastRoomAndTaxPostedDate": {
          "description": "Date of the last Room And Tax posting. Used primarily to know the date in case of Advance Billing.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "periodicFolio": {
          "description": "Information regarding periodic folios set on the reservation.",
          "$ref": "#/definitions/resPeriodicFolioType"
        },
        "proratedBilling": {
          "description": "In case of Appartment style billing indicates whether a prorated amount should be used for an Apartment Style Billing rate.",
          "type": "boolean"
        },
        "reservationPreConfiguredRoutingInstruction": {
          "description": "Information regarding the selected preconfigured routing instruction on the reservation.",
          "$ref": "#/definitions/resPreConfiguredRoutingInstrType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "reverseAdvanceCheckInAllowed": {
          "description": "This attribute is to verify if reverse advance check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/reservationTaxTypeInfo"
        },
        "transactionsPosted": {
          "description": "Specifies whether reservation has a financial transaction associated with it.",
          "type": "boolean"
        }
      }
    },
    "resCommunicationType": {
      "description": "Communication details for a reservation.",
      "type": "object",
      "properties": {
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        }
      }
    },
    "resCompAccountingType": {
      "description": "Information regarding comp accounting on the reservation.",
      "type": "object",
      "properties": {
        "authorizer": {
          "description": "ID of the employee who will act as the host for this guest.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "compPostings": {
          "description": "Indicates if the Comp Billing/posting Exist",
          "type": "string",
          "maxLength": 5,
          "minLength": 0
        },
        "compType": {
          "description": "Code used to identify the casino comp type and ranking of a guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resExpectedTimesType": {
      "description": "Holds the Arrival and Departure Time Information",
      "type": "object",
      "properties": {
        "reservationExpectedArrivalTime": {
          "description": "Arrival Time",
          "type": "string",
          "format": "date-time"
        },
        "reservationExpectedDepartureTime": {
          "description": "Departure Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "resGuaranteeType": {
      "description": "Validations type record returned after Validations are done.",
      "type": "object",
      "properties": {
        "guaranteeCode": {
          "description": "Guarantee Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "onHold": {
          "description": "Guarantee Code.",
          "type": "boolean"
        },
        "shortDescription": {
          "description": "Guarantee Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "resGuestExternalInfoType": {
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "type": "object",
      "properties": {
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        }
      }
    },
    "resGuestInfoType": {
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "type": "object",
      "properties": {
        "accompanyGuests": {
          "description": "List of guest names that are accompanying the reservation guest",
          "$ref": "#/definitions/resAccompanyGuestListType"
        },
        "address": {
          "description": "Address information that is attached to the reservation guest",
          "$ref": "#/definitions/addressSearchType"
        },
        "alternateFullName": {
          "description": "Altername full display name",
          "type": "string"
        },
        "alternateGivenName": {
          "description": "Alternate given name, first name or names",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "alternateSurname": {
          "description": "Alternate family name, last name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "birthDate": {
          "description": "Date of birth",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "email": {
          "description": "Email address",
          "$ref": "#/definitions/basicEmailType"
        },
        "externalInfo": {
          "description": "External information about the guest associated with the reservation.",
          "$ref": "#/definitions/resGuestExternalInfoType"
        },
        "fullName": {
          "description": "Full display name",
          "type": "string"
        },
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "guestLastStayInfo": {
          "description": "Contains information regarding the last stay of this guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "guestRestricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        },
        "guestRestrictedCode": {
          "description": "Guest profile restricted reason code",
          "type": "string"
        },
        "guestRestrictedReasonDesc": {
          "description": "Guest profile restricted reason description",
          "type": "string"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "membership": {
          "description": "The Membership object identifying the frequent customer reward program.",
          "$ref": "#/definitions/membershipInfoType"
        },
        "middleName": {
          "description": "The middle name of the person name",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
          "$ref": "#/definitions/namePrefixType"
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nameType": {
          "$ref": "#/definitions/nameTypeType"
        },
        "nationality": {
          "description": "Affiliation or ethnicity to a particular country.",
          "$ref": "#/definitions/countryNameType"
        },
        "phoneNumber": {
          "description": "Phone number",
          "$ref": "#/definitions/phoneNumberType"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        },
        "surnamePrefix": {
          "description": "e.g \"van der\", \"von\", \"de\"",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "vip": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "$ref": "#/definitions/vIPType"
        }
      }
    },
    "resHousekeepingSetType": {
      "description": "Search Criteria for retrieving guest housekeeping instructions.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "housekeepingInstruction": {
          "description": "housekeeping instructions that should be used.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/housekeepingInstructionsType"
          }
        },
        "housekeepingInstructions": {
          "description": "Instructions and associated variables.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "reservationId": {
          "description": "Unique ID of the reservation that housekeeping instruction is linked to.",
          "$ref": "#/definitions/reservationId"
        },
        "room": {
          "description": "Room to which housekeeping record belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resHousekeepingType": {
      "description": "Holds housekeeping turndown service information for the room.",
      "type": "object",
      "properties": {
        "cleaningPriority": {
          "description": "This will set/fetch cleaning priority for room.",
          "type": "boolean"
        },
        "expectedServiceTime": {
          "description": "Expected Start Time for housekeeping task(s).",
          "type": "string"
        },
        "facilityTaskInfo": {
          "description": "The facility task applicable for the current day. This will be information only and not used for any updates.",
          "$ref": "#/definitions/facilityTaskType"
        },
        "housekeepingRoomStatus": {
          "description": "Current room status. Current room status is populated only if room is assigned to the reservation and reservation is due in or in house.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "instructions": {
          "description": "Turndown instructions for the room.",
          "type": "string"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "serviceTime": {
          "description": "This is the Turndown room service time.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "status": {
          "description": "This will set/fetch housekeeping service request for room.",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "turndownRequested": {
          "description": "Indicates whether guest wants turndown facility or not.",
          "type": "boolean"
        }
      }
    },
    "resMobileNotificationsType": {
      "description": "Contains the status of Room Ready and Key Ready messages.",
      "type": "object",
      "properties": {
        "checkoutMessageReceived": {
          "description": "Indicates if the Mobile checkout message is received.",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Error message when Mobile Notification has failed.",
          "type": "string"
        },
        "keyReady": {
          "description": "Denotes the status of Key Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "requiresAction": {
          "description": "Indicates if user action is required. The action could be for sending Room Ready or Key Ready Notification. It could also be for initiating Checkout",
          "type": "boolean"
        },
        "roomReady": {
          "description": "Denotes the status of Room Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        }
      }
    },
    "resPaymentCardType": {
      "description": "Information on a credit card for the customer.",
      "type": "object",
      "properties": {
        "approvalAmountNeeded": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "attachCreditCardToProfile": {
          "description": "Attach the credit card to profile.",
          "type": "boolean"
        },
        "cardHolderName": {
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cardNumber": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberMasked": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardOrToken": {
          "description": "This contains information on whether credit card is tokenized (token enabled). A value of 'Token' indicates credit card is token enabled and 'CardNumber' indicates non token environment for this payment card type.",
          "$ref": "#/definitions/cardNumberTypeType"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
          "type": "boolean"
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "currentAuthorizedAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "expirationDate": {
          "description": "Expiration date of the credit card",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expirationDateExpired": {
          "type": "boolean"
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "swiped": {
          "type": "boolean"
        },
        "userDefinedCardType": {
          "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
          "type": "string",
          "maxLength": 2,
          "minLength": 0
        }
      }
    },
    "resPeriodicFolioType": {
      "description": "Information regarding periodic folios set on the reservation.",
      "type": "object",
      "properties": {
        "frequency": {
          "description": "Frequency in number of days when folios should be printed for this reservation.",
          "type": "integer"
        },
        "lastFolioDate": {
          "description": "Latest date when a folio was printed using the \"Periodic Batch Folios\" option",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastSettlementDate": {
          "description": "Latest date when a direct bill settlement was automatically done using the \"Direct Bill Batch Folios\" option.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "resPreConfiguredRoutingInstrType": {
      "description": "Instruction to attach Pre-Configured Routing Instructions to a Reservation.",
      "type": "object",
      "properties": {
        "authorizerInfo": {
          "description": "The authorizer information for Promotion Code with attached Complimentary Routing",
          "$ref": "#/definitions/authorizerInfoType"
        },
        "profileType": {
          "description": "Profile Type with attached Routing Instruction.",
          "$ref": "#/definitions/resProfileTypeType"
        },
        "promotionCode": {
          "description": "Promotion Code with attached Complimentary Routing.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "Rate Code with attached Routing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resProfileTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Group",
        "TravelAgent",
        "Source",
        "ReservationContact",
        "BillingContact",
        "Addressee"
      ]
    },
    "resRevenueBalanceType": {
      "description": "Revenue and Balance Amount summary for the reservation.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "Balance amount on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "foodAndBevRevenue": {
          "description": "Food and Beverage Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "nonRevenue": {
          "description": "Total Non Revenue posted on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "otherRevenue": {
          "description": "Other Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomRevenue": {
          "description": "Room Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalFixedCharge": {
          "description": "Total Fixed Charges on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPayment": {
          "description": "Total payment received for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalRevenue": {
          "description": "Total Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "resSharedGuestInfoType": {
      "description": "Contains information regarding the share reservation.",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "profileId": {
          "$ref": "#/definitions/profileId"
        }
      }
    },
    "resSharedGuestListType": {
      "description": "Collection of shared guest reservations.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resSharedGuestInfoType"
      }
    },
    "reservationAllowedActionType": {
      "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
      "type": "string",
      "enum": [
        "Cancel",
        "Move",
        "PreCharge",
        "PostCharge",
        "FacilitySchedule",
        "Upsell",
        "PreCheckIn",
        "PostToNoShowCancel",
        "NoShow",
        "NameChange",
        "Discount",
        "EnrollToPrimaryMembership",
        "EnrollInProgress"
      ]
    },
    "reservationAllowedActionsType": {
      "description": "Allowed action.",
      "type": "array",
      "maxItems": 11,
      "items": {
        "$ref": "#/definitions/reservationAllowedActionType"
      }
    },
    "reservationBlockType": {
      "description": "Key information about the block for a reservation.",
      "type": "object",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers for the reservation.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "The Name of the block that is attached to the reservation.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "This is the HotelCode of the Block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationDepositType": {
      "description": "Reservation Deposit Type.",
      "type": "object",
      "properties": {
        "amountOwed": {
          "description": "Deposit Amount Owed.",
          "type": "number"
        },
        "amountPaid": {
          "description": "Deposit Amount Paid.",
          "type": "number"
        },
        "amountRequired": {
          "description": "Deposit Amount Required.",
          "type": "number"
        },
        "dueDate": {
          "description": "Deposit Due Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hasOutstanding": {
          "description": "Resolves whether reservation has outstanding deposit.",
          "type": "boolean"
        },
        "hasPaid": {
          "description": "Resolves whether reservation has paid deposit.",
          "type": "boolean"
        },
        "postingDate": {
          "description": "Deposit Posting Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "reservationFolioWindowType": {
      "description": "Folio window view which holds the set of folios for a reservation.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "Running balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "payeeInfo": {
          "description": "The window's configured payee information.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "paymentMethod": {
          "description": "Payment Method Type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationFolioWindowsType": {
      "description": "Collection of reservation folio windows.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationFolioWindowType"
      }
    },
    "reservationHousekeepingScheduleSearchType": {
      "description": "Criteria type for fetching reservation housekeeping schedule.",
      "type": "object",
      "properties": {
        "beginDate": {
          "description": "Begin date from which to start fetching facility tasks.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "End date for facility task schedule request.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotelId": {
          "description": "The hotel code where reservation is made.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "reservationHousekeepingScheduleType": {
      "description": "Criteria type for fetching reservation housekeeping schedule.",
      "type": "object",
      "properties": {
        "customized": {
          "description": "Signifies whether task has been customized or not.",
          "type": "boolean"
        },
        "cycleStartDay": {
          "description": "Signifies the shift of the housekeeping schedule.",
          "type": "integer"
        },
        "end": {
          "description": "Date at which facility tasks stopped being retrieved.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "facilityHousekeepingTasks": {
          "description": "List of facility tasks to be performed for the reservation.",
          "$ref": "#/definitions/facilityHousekeepingTasksType"
        },
        "start": {
          "description": "Date at which facility tasks started being retrieved.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "reservationId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "reservationIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "reservationInfoType": {
      "description": "The Reservation class contains the current reservation being created or altered.",
      "type": "object",
      "properties": {
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "allowedActions": {
          "description": "Collection of reservation allowed actions.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "cancellationInfo": {
          "description": "Information regarding why reservation has been/was cancelled.",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "description": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          }
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "commissionPayoutTo": {
          "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
          "$ref": "#/definitions/commissionPayoutToType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "deposit": {
          "description": "Holds reservation deposit information.",
          "$ref": "#/definitions/reservationDepositType"
        },
        "displayColor": {
          "description": "Color setting of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "expectedServiceTime": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "guestPreferredCurrency": {
          "description": "Currency code preferred by guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelInterfaceStatusList": {
          "description": "Collection of Hotel Interfaces and rights, this is populated only when fetching interface status for rooms.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInterfaceStatusType"
          }
        },
        "hotelName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "housekeeping": {
          "description": "Information regarding housekeeping for this reservation.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "housekeepingRoomStatus": {
          "description": "Current room status",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "keyCount": {
          "description": "Number of keys created for the reservation.",
          "type": "integer"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastPrivacyPromptDate": {
          "description": "Last Privacy Prompt Date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready, Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "openFolio": {
          "description": "Returns true when reservation has an open folio.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.",
          "type": "boolean"
        },
        "paymentMethod": {
          "description": "Payment Method.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preRegistered": {
          "description": "Defines if the reservation is pre-registered or not.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "reservationFolioWindows": {
          "description": "Collection of reservation folio windows.",
          "$ref": "#/definitions/reservationFolioWindowsType"
        },
        "reservationGuest": {
          "description": "Collection of guests associated with the reservation.",
          "$ref": "#/definitions/resGuestInfoType"
        },
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "reservationPaymentMethod": {
          "description": "Payment method used for this reservation",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "specials": {
          "description": "Set of reservation preferences which belongs to the Specials group.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/taxTypeType"
        },
        "turndownInfo": {
          "description": "Currency code preferred by guest.",
          "$ref": "#/definitions/reservationTurndownInfoType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is not in Waitlist status anymore.",
          "$ref": "#/definitions/waitlistResType"
        },
        "walkInIndicator": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "welcomeOffer": {
          "description": "This flag will determine wheather the reservation is eligible for Welcome Offer or not.",
          "type": "boolean"
        }
      }
    },
    "reservationInterfaceStatusType": {
      "description": "Hotel Interface Type for a reservation and status of the various services",
      "type": "object",
      "properties": {
        "hotelInterface": {
          "description": "Hotel interface information for the reservation",
          "$ref": "#/definitions/hotelInterfaceType"
        },
        "interfaceRights": {
          "description": "Contains a list of status/rights for the various services under this interface",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceRightsStatusType"
          }
        },
        "roomExtension": {
          "description": "Identifier for the room extension",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationPaymentMethodType": {
      "type": "object",
      "properties": {
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            }
          }
        },
        "folioView": {
          "type": "integer"
        },
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "paymentMethod": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationQueueInformationType": {
      "description": "Information regarding the Date, Duration and Priority of the reservation on Queue for Check in.",
      "type": "object",
      "properties": {
        "averageQueueTimeCurrentReservations": {
          "description": "The average time, in seconds, of the reservations currently in queue.",
          "type": "integer"
        },
        "averageQueueTimeToCheckIn": {
          "description": "The average time, in seconds, a reservation was on queue prior to Check-In.",
          "type": "integer"
        },
        "guestTextInfo": {
          "description": "Information for the message sent to the user",
          "$ref": "#/definitions/queueTextInfoType"
        },
        "priority": {
          "description": "The Queue Priority given to this reservation.",
          "type": "integer"
        },
        "queueDate": {
          "description": "The Business date on which the reservation was due to arrive and is currently placed on Queue for Check In.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "timeSpan": {
          "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
          "type": "object",
          "properties": {
            "duration": {
              "type": "string"
            },
            "durationInSeconds": {
              "description": "The total duration, in seconds, the reservation is on Queue.",
              "type": "integer"
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        }
      }
    },
    "reservationShortInfoType": {
      "type": "object",
      "properties": {
        "guestName": {
          "description": "Guest name that is registered for the reservation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "profileId": {
          "description": "ProfileId of the guest.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "reservationStatusInfo": {
          "$ref": "#/definitions/housekeepingRoomReservationStatusType"
        },
        "roomId": {
          "description": "Indicates room number of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "stayDateInfo": {
          "$ref": "#/definitions/stayDateInfoType"
        },
        "vipStatus": {
          "description": "VIP status of the guest.",
          "$ref": "#/definitions/vIPStatusType"
        }
      }
    },
    "reservationTaxTypeInfo": {
      "description": "Provides information about the Tax Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "taxExemptNo": {
          "description": "Tax exempt number on the profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationTurndownInfoType": {
      "description": "Turndown information for a reservation",
      "type": "object",
      "properties": {
        "allowed": {
          "description": "Indicates if turndown is allowed or not",
          "type": "boolean"
        },
        "status": {
          "description": "Indicates turndown status, values could be required, not required, completed",
          "$ref": "#/definitions/turndownStatusType"
        }
      }
    },
    "resolveRoomMaintenanceType": {
      "description": "Resolve Room Maintenance Type.",
      "type": "object",
      "properties": {
        "resolveDate": {
          "description": "Resolve date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "resolveUser": {
          "description": "Resolved by user.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        }
      }
    },
    "resolvedRoomMaintenance": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomAssignmentStatusType": {
      "type": "string",
      "enum": [
        "Assigned",
        "Unassigned"
      ]
    },
    "roomCleaningPriority": {
      "description": "Request to set a list of rooms as priority for cleaning. This will set a flag as priority and a priority number at the bottom of the current priority line.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for setting the list of rooms as priority for cleaning.",
          "$ref": "#/definitions/housekeepingRoomsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomCleaningPriorityRequestStatus": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomCleaningPriorityType": {
      "description": "Type to indicate the cleaning priority for a room.",
      "type": "object",
      "properties": {
        "prioritySequence": {
          "description": "Priority sequence of the room for cleaning.",
          "type": "integer"
        }
      }
    },
    "roomCondition": {
      "description": "Request element for setting room condition.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to set the condition of a room.",
          "$ref": "#/definitions/setRoomConditionType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomConditionAssigmentType": {
      "description": "Simple type for Room Condition assignment type. Valid values are Available and NotAvailable Only.",
      "type": "string",
      "enum": [
        "Available",
        "NotAvailable"
      ]
    },
    "roomConditionRequestStatus": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomConditionType": {
      "description": "Condition to be assigned on the room.",
      "type": "object",
      "properties": {
        "assignmentType": {
          "description": "Determine if room, after applying condition, is available or not in Room Assignment listing.",
          "$ref": "#/definitions/roomConditionAssigmentType"
        },
        "remarks": {
          "description": "Remarks on room condition assignment.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "roomCondition": {
          "description": "Code and Decription of Condition to be assigned on the room.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "roomDiscrepanciesType": {
      "description": "Room Discrepancies between front office and housekeeping room status and number of persons in the room.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomDiscrepancyType"
      }
    },
    "roomDiscrepancyType": {
      "description": "Simple type for discrepant room status instructions to be used in requests for fetching housekeeping and front office room discrepancy. Valid values are Sleep, Skip, Person Discrepancy, Due Out Only.",
      "type": "string",
      "enum": [
        "Sleep",
        "Skip",
        "PersonDiscrepancy"
      ]
    },
    "roomFeatureType": {
      "description": "Room Feature Information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "A code representing a room feature.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "A code representing a room feature.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "quantity": {
          "description": "Indicates quantity.",
          "type": "integer"
        }
      }
    },
    "roomFeaturesType": {
      "description": "A recurring element that identifies the room features.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomFeatureType"
      }
    },
    "roomHoldType": {
      "type": "object",
      "properties": {
        "comments": {
          "description": "Comments of the room hold.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "holdUntil": {
          "description": "The date and time when hold will expire.",
          "type": "string",
          "format": "date-time"
        },
        "holdUser": {
          "description": "User who placed room on hold.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "roomIds": {
      "description": "Collection of room numbers to be process.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "maxLength": 20,
        "minLength": 0
      }
    },
    "roomInformationType": {
      "description": "Room Information needed in updating the status.",
      "type": "object",
      "properties": {
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "roomId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "roomMaintenance": {
      "description": "Request to change room maintenance details.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to change a room maintenance request.",
          "$ref": "#/definitions/roomMaintenanceChangeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomMaintenanceChangeType": {
      "description": "Base maintenance type",
      "type": "object",
      "properties": {
        "assignedUserInfo": {
          "description": "Maintenance request assignment information",
          "$ref": "#/definitions/assignedUserType"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "maintenanceCode": {
          "description": "Maintenance Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "maintenanceId": {
          "description": "Unique maintenance identifier.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "remarks": {
          "description": "Maintenance remarks",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "roomId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "roomMaintenanceDetails": {
      "description": "Response for the Fetch Room Maintenance request.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "roomMaintenance": {
          "description": "Collection of room maintenance information records.",
          "$ref": "#/definitions/hotelRoomMaintenanceType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomMaintenanceRequest": {
      "description": "Request to create a room maintenance record.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Information to create new room maintenance request.",
          "$ref": "#/definitions/roomMaintenanceRequestType"
        },
        "includeDetails": {
          "description": "Attribute to decide whether response should include additional details.",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomMaintenanceRequestType": {
      "description": "Base maintenance type",
      "type": "object",
      "properties": {
        "assignedUserInfo": {
          "description": "Maintenance request assignment information",
          "$ref": "#/definitions/assignedUserType"
        },
        "hotelId": {
          "description": "Hotel code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "maintenanceCode": {
          "description": "Maintenance Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "remarks": {
          "description": "Maintenance remarks",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "roomIds": {
          "$ref": "#/definitions/roomIds"
        }
      }
    },
    "roomMaintenanceType": {
      "description": "Base maintenance type",
      "type": "object",
      "properties": {
        "assignedUserInfo": {
          "description": "Maintenance request assignment information",
          "$ref": "#/definitions/assignedUserType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "images": {
          "description": "Collection of Maintenance images",
          "$ref": "#/definitions/imageResultsType"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "maintenanceCode": {
          "description": "Maintenance Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "maintenanceId": {
          "description": "Unique maintenance identifier.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "remarks": {
          "description": "Maintenance remarks",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "resolveInfo": {
          "description": "Resolve User and Date for resolved room",
          "$ref": "#/definitions/resolveRoomMaintenanceType"
        },
        "roomInfo": {
          "description": "Room Details",
          "$ref": "#/definitions/roomType"
        }
      }
    },
    "roomOutOfOrderType": {
      "description": "Out Of Order and Out Of Service Room information.",
      "type": "object",
      "properties": {
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "housekeepingRoomStatus": {
          "description": "The out of order or out of service room status OO/OS.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "newDateRange": {
          "description": "The new start date and end date, if the dates were changed as part of an update. This would be blank for new OO/OS rooms.",
          "$ref": "#/definitions/dateRangeType"
        },
        "reasonCode": {
          "description": "Reason Code why the room is OO/OS.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonDescription": {
          "description": "Reason Description why the room is OO/OS.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "repairRemarks": {
          "description": "Notes or Remarks on the OO/OS room",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "returnStatus": {
          "description": "Room Status which will be used on completion of OO/OS.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "roomPersonsType": {
      "type": "object",
      "properties": {
        "frontOfficePersons": {
          "type": "integer"
        },
        "houseKeepingPersons": {
          "type": "integer"
        }
      }
    },
    "roomRangeType": {
      "type": "object",
      "properties": {
        "fromRoomNumber": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "toRoomNumber": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "roomRepairOutOfOrder": {
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to set the room or a collection of rooms out of order. The criteria can include a collection of rooms or a range of rooms along with the date range.",
          "type": "object",
          "properties": {
            "roomRangeList": {
              "type": "object",
              "properties": {
                "range": {
                  "description": "Range information.",
                  "type": "object",
                  "properties": {
                    "roomRange": {
                      "description": "Set the roomRange.",
                      "$ref": "#/definitions/roomRangeType"
                    }
                  }
                },
                "roomIds": {
                  "description": "Collection of room numbers to be process.",
                  "type": "array",
                  "maxItems": 4000,
                  "items": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 0
                  }
                },
                "roomOutOfOrder": {
                  "description": "Out Of Order and Out Of Service Room information.",
                  "type": "object",
                  "properties": {
                    "end": {
                      "description": "The ending value of the date range.",
                      "type": "string",
                      "format": "date"
                    },
                    "newDateRange": {
                      "description": "The new start date and end date, if the dates were changed as part of an update. This would be blank for new OO/OS rooms.",
                      "$ref": "#/definitions/dateRangeType"
                    },
                    "reasonCode": {
                      "description": "Reason Code why the room is OO/OS.",
                      "type": "string",
                      "maxLength": 20,
                      "minLength": 0
                    },
                    "reasonDescription": {
                      "description": "Reason Description why the room is OO/OS.",
                      "type": "string",
                      "maxLength": 80,
                      "minLength": 0
                    },
                    "repairRemarks": {
                      "description": "Notes or Remarks on the OO/OS room",
                      "type": "string",
                      "maxLength": 2000,
                      "minLength": 0
                    },
                    "returnStatus": {
                      "description": "Room Status which will be used on completion of OO/OS.",
                      "$ref": "#/definitions/housekeepingRoomStatusType"
                    },
                    "start": {
                      "description": "The starting value of the date range.",
                      "type": "string",
                      "format": "date"
                    }
                  }
                }
              }
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomRepairOutOfService": {
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to set the room or a collection of rooms out of service. The criteria can include a collection of rooms or a range of rooms along with the date range.",
          "type": "object",
          "properties": {
            "roomRangeList": {
              "type": "object",
              "properties": {
                "range": {
                  "description": "Range information.",
                  "type": "object",
                  "properties": {
                    "roomRange": {
                      "description": "Set the roomRange.",
                      "$ref": "#/definitions/roomRangeType"
                    }
                  }
                },
                "roomIds": {
                  "description": "Collection of room numbers to be process.",
                  "type": "array",
                  "maxItems": 4000,
                  "items": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 0
                  }
                },
                "roomOutOfOrder": {
                  "description": "Out Of Order and Out Of Service Room information.",
                  "type": "object",
                  "properties": {
                    "end": {
                      "description": "The ending value of the date range.",
                      "type": "string",
                      "format": "date"
                    },
                    "newDateRange": {
                      "description": "The new start date and end date, if the dates were changed as part of an update. This would be blank for new OO/OS rooms.",
                      "$ref": "#/definitions/dateRangeType"
                    },
                    "reasonCode": {
                      "description": "Reason Code why the room is OO/OS.",
                      "type": "string",
                      "maxLength": 20,
                      "minLength": 0
                    },
                    "reasonDescription": {
                      "description": "Reason Description why the room is OO/OS.",
                      "type": "string",
                      "maxLength": 80,
                      "minLength": 0
                    },
                    "repairRemarks": {
                      "description": "Notes or Remarks on the OO/OS room",
                      "type": "string",
                      "maxLength": 2000,
                      "minLength": 0
                    },
                    "returnStatus": {
                      "description": "Room Status which will be used on completion of OO/OS.",
                      "$ref": "#/definitions/housekeepingRoomStatusType"
                    },
                    "start": {
                      "description": "The starting value of the date range.",
                      "type": "string",
                      "format": "date"
                    }
                  }
                }
              }
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomRoomType": {
      "description": "This type represents the primary room attributes.",
      "type": "object",
      "properties": {
        "building": {
          "description": "Building associated with the room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the room.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "floor": {
          "description": "Floor of the Room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "floorDescription": {
          "description": "Description for the Floor of the Room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "isAccessible": {
          "description": "Indicates whether the room is accessibility compliant.",
          "type": "boolean"
        },
        "meetingRoom": {
          "description": "Indicates whether the room is a Meeting Room",
          "type": "boolean"
        },
        "roomAssignmentRating": {
          "description": "Assignment Rating associated with the room.",
          "$ref": "#/definitions/ratePlanRatingType"
        },
        "roomCondition": {
          "description": "Code and description of condition assigned on the room.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "roomDescription": {
          "description": "Detail Long Description Of The Room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomFeatures": {
          "description": "Room Features for the room.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "roomId": {
          "description": "Code of the room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "Room type basic information of the room.",
          "$ref": "#/definitions/roomTypeShortInfoType"
        },
        "smokingPreference": {
          "description": "This indicates room smoking preference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "smokingPreferenceDescription": {
          "description": "This indicates the description of the room smoking preference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "roomRoomsType": {
      "description": "Collection of rooms.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomRoomType"
      }
    },
    "roomSectionType": {
      "type": "object",
      "properties": {
        "daySectionCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "eveningSectionCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "roomStatusType": {
      "type": "object",
      "properties": {
        "frontOfficeStatus": {
          "description": "Front office status ( Occupied/Vacant ).",
          "$ref": "#/definitions/frontOfficeRoomStatusType"
        },
        "housekeepingRoomStatus": {
          "description": "Status of the room (Dirty/Clean/Inspected/Pickup).",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "housekeepingStatus": {
          "description": "Housekeeping status ( Occupied/Vacant ).",
          "$ref": "#/definitions/frontOfficeRoomStatusType"
        },
        "reservationStatusList": {
          "description": "List of status of the reservation to which this Room is assigned..",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/housekeepingRoomReservationStatusType"
          }
        }
      }
    },
    "roomType": {
      "description": "This type represents the primary room attributes.",
      "type": "object",
      "properties": {
        "attendant": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/currentServicingAttendantType"
          }
        },
        "building": {
          "description": "Building associated with the room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "componentRoomNumber": {
          "description": "This flag indicates component room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "componentRoomNumbers": {
          "description": "List of component room numbers.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "componentRooms": {
          "description": "This flag indicates component rooms.",
          "$ref": "#/definitions/roomRoomsType"
        },
        "connectingRooms": {
          "description": "This flag indicates connecting rooms.",
          "$ref": "#/definitions/roomRoomsType"
        },
        "description": {
          "description": "Description of the room.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "discrepancy": {
          "description": "Identifies the room discrepancy information.",
          "$ref": "#/definitions/roomDiscrepanciesType"
        },
        "floor": {
          "description": "Floor of the Room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "floorDescription": {
          "description": "Description for the Floor of the Room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hold": {
          "description": "Hold attributes if any.",
          "$ref": "#/definitions/roomHoldType"
        },
        "housekeeping": {
          "description": "Identifies the Housekeeping information..",
          "$ref": "#/definitions/housekeepingType"
        },
        "isAccessible": {
          "description": "Indicates whether the room is accessibility compliant.",
          "type": "boolean"
        },
        "meetingRoom": {
          "description": "Indicates whether the room is a Meeting Room",
          "type": "boolean"
        },
        "outOfOrder": {
          "description": "Identifies the room Out of Order/Out of Service information.",
          "$ref": "#/definitions/roomsOutOfOrderType"
        },
        "resvInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationShortInfoType"
          }
        },
        "roomAssignmentRating": {
          "description": "Assignment Rating associated with the room.",
          "$ref": "#/definitions/ratePlanRatingType"
        },
        "roomDescription": {
          "description": "Detail Long Description Of The Room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomFeatures": {
          "description": "Room Features for the room.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "roomId": {
          "description": "Code of the room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomSection": {
          "description": "Room sections of the room.",
          "$ref": "#/definitions/roomSectionType"
        },
        "roomType": {
          "description": "Room type basic information of the room.",
          "$ref": "#/definitions/roomTypeShortInfoType"
        },
        "smokingPreference": {
          "description": "This indicates room smoking preference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "smokingPreferenceDescription": {
          "description": "This indicates the description of the room smoking preference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "turndownInfo": {
          "$ref": "#/definitions/turndownInfoType"
        }
      }
    },
    "roomTypeShortInfoType": {
      "description": "Basic information of room type.",
      "type": "object",
      "properties": {
        "houseKeeping": {
          "description": "Indicates if room type of the room is flagged as housekeeping. This is read-only.",
          "type": "boolean"
        },
        "isAccessible": {
          "description": "Indicates if room type is isAccessible.",
          "type": "boolean"
        },
        "isSuiteRoom": {
          "description": "Indicates if room is a isSuiteRoom. This is read-only.",
          "type": "boolean"
        },
        "maximumOccupancy": {
          "description": "Maximum occupancy for the room type.",
          "type": "integer"
        },
        "meetingRoom": {
          "description": "Indicates whether function space can be meeting room.",
          "type": "boolean"
        },
        "minimumOccupancy": {
          "description": "Minimum occupancy for the room type.",
          "type": "integer"
        },
        "pseudoRoom": {
          "description": "Indicates if room is a pseudoRoom. This is read-only.",
          "type": "boolean"
        },
        "roomClass": {
          "description": "Room Class of the room. This is read-only.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomFeatures": {
          "description": "Room Features for the room.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "roomType": {
          "description": "Room type of the room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "shortDescription": {
          "description": "Short Description of room type.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "smokingPreference": {
          "description": "Specifies the smoking preference for room type of the room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "roomTypeSuppliesType": {
      "description": "List of the facility codes.",
      "type": "object",
      "properties": {
        "facilityCode": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/facilityCodeType"
          }
        },
        "type": {
          "description": "Room type code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "roomTypeTaskType": {
      "description": "This is a room type and its tasks count.",
      "type": "object",
      "properties": {
        "roomType": {
          "description": "This is a room type and its tasks count.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "tasksQuantity": {
          "description": "This is a room type and its tasks count.",
          "type": "integer"
        }
      }
    },
    "roomTypeTasksType": {
      "description": "This is a break-down of the different room types and their tasks count on a date.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomTypeTaskType"
      }
    },
    "rooms": {
      "type": "object",
      "properties": {
        "housekeepingRooms": {
          "description": "List of rooms and the room status.",
          "$ref": "#/definitions/hotelRoomsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomsOutOfOrderType": {
      "description": "Date Range and reasons for a room being Out of Order/Out Of Service (If the room is OO/OS).",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomOutOfOrderType"
      }
    },
    "schedule": {
      "description": "Return object that contains a list of facility tasks for the reservation specified in RQ.",
      "type": "object",
      "properties": {
        "guestHouseKeepingInstructions": {
          "description": "Guest housekeeping instructions associated with the reservation requested.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "hotelId": {
          "description": "The hotel where task is being scheduled.",
          "$ref": "#/definitions/codeType"
        },
        "housekeepingSchedule": {
          "description": "Facility housekeeping schedule for the reservation requested.",
          "$ref": "#/definitions/reservationHousekeepingScheduleType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "scheduleSearch": {
      "description": "Request with basic information reservation needed for the reset of the schedule.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for allocating and reseting housekeeping schedule of the reservation.",
          "$ref": "#/definitions/reservationHousekeepingScheduleSearchType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "scheduleShiftRequest": {
      "description": "Request with the information needed for the shift of the schedule.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria on which shift is to be based.",
          "$ref": "#/definitions/housekeepingScheduleShiftRequestType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "scheduledSearch": {
      "description": "An updated schedule for the reservation after the reset.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "The hotel where task is being scheduled.",
          "$ref": "#/definitions/codeType"
        },
        "housekeepingSchedule": {
          "description": "Updated Facility Schedule.",
          "$ref": "#/definitions/reservationHousekeepingScheduleType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "scheduledShiftRequest": {
      "description": "An updated schedule for the reservation after the shift.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "The hotel where task is being scheduled.",
          "$ref": "#/definitions/codeType"
        },
        "housekeepingSchedule": {
          "description": "Updated Facility Schedule.",
          "$ref": "#/definitions/reservationHousekeepingScheduleType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "searchMatchType": {
      "description": "Search match indicating attribute and the matching value.",
      "type": "object",
      "properties": {
        "attribute": {
          "description": "Search match attribute.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "value": {
          "description": "Search match value.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "searchMatchesType": {
      "description": "List of Generic Name-Value-Pair Parameters used for super search matches.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/searchMatchType"
      }
    },
    "serviceTaskRoomType": {
      "description": "Criteria for servicing a task room.",
      "type": "object",
      "properties": {
        "allottedMinutes": {
          "description": "The allotted minutes for completing the task.",
          "type": "number"
        },
        "attendant": {
          "description": "The Attendant ID who is currently servicing the room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "frontOfficeStatus": {
          "description": "The FO status code i.e Vacant, Occupied.",
          "$ref": "#/definitions/frontOfficeRoomStatusType"
        },
        "hotelId": {
          "description": "Property where the task sheet exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "housekeepingRoomStatus": {
          "description": "The room status code example Clean, Dirty etc.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "roomId": {
          "description": "The room number to service.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomTaskCode": {
          "description": "The task code for the current room which is to be done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sheetNumber": {
          "description": "The Task Sheet number where the room exists.",
          "type": "integer"
        },
        "taskCodes": {
          "description": "List of Task Codes of the task sheet.",
          "$ref": "#/definitions/codeListType"
        },
        "taskDate": {
          "description": "Date for which the task sheet was created. By default this would be the current business date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "serviceTime": {
      "description": "Response type for the start task room service. Can contain errors or warnings.",
      "type": "object",
      "properties": {
        "elapsedTime": {
          "description": "Total time in seconds spent in servicing the room.",
          "type": "number"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "servicingAttendantStatusType": {
      "description": "Possible values for the Status of a Servicing Attendant.",
      "type": "string",
      "enum": [
        "Standby",
        "Break",
        "Working",
        "Completed"
      ]
    },
    "setGuestHousekeepingServiceRequestCriteriaType": {
      "description": "Criteria for changing the guest service status on an occupied room.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "The hotel code of the rooms for which the guest service status needs to be changed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomList": {
          "description": "Collection of room numbers for which the status is to be updated.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "status": {
          "description": "Service Status to be used. If this element is not used or is null, then the service status will be removed from the room.",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        }
      }
    },
    "setRoomConditionType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "The hotel code of the room on where the condition is applied.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "includeOccupiedRooms": {
          "description": "If set to true, condition is applied even if the room is occupied.",
          "type": "boolean"
        },
        "overrideHoldRooms": {
          "description": "If set to true and the room is help by another user, then this lets the user override the room status.",
          "type": "boolean"
        },
        "roomCondition": {
          "description": "Condition to be assigned on the room.",
          "$ref": "#/definitions/roomConditionType"
        },
        "roomNumberList": {
          "description": "List of room number at which condition is to be applied.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "sitePlanSectionType": {
      "description": "Represents the site plan section record.",
      "type": "object",
      "properties": {
        "coordinates": {
          "description": "The coordinates for this section.",
          "type": "string"
        },
        "description": {
          "description": "The description of this section.",
          "type": "string"
        },
        "linkCode": {
          "description": "The link code for the section.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sectionCode": {
          "description": "The site plan section code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sectionType": {
          "description": "The section type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "skipedServicingTaskRoom": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "sourceOfSaleType": {
      "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
      "type": "object",
      "properties": {
        "sourceCode": {
          "description": "The entity/channel who made the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceType": {
          "description": "Type of entity/channel who made the reservation..",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "startedServiceBreak": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "status": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stayDateInfoType": {
      "description": "Room attached with stay detail information",
      "type": "object",
      "properties": {
        "expectedTimes": {
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "stayInfoType": {
      "description": "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.",
      "type": "object",
      "properties": {
        "adultCount": {
          "description": "A collection of Guest Counts associated with Room Stay.",
          "type": "integer"
        },
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "balance": {
          "description": "Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "bookingChannelCode": {
          "description": "Booking channel code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "childCount": {
          "description": "A collection of Child Counts associated with Room Stay.",
          "type": "integer"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "componentRoomType": {
          "description": "True indicates room type is a component type.",
          "type": "boolean"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "depositPayments": {
          "description": "A collection of deposit and/or payments for the Room Stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "expectedTimes": {
          "description": "The expected arrival, return and departure times of the guest.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "fixedRate": {
          "description": "True if the rate is a fixed rate, otherwise false",
          "type": "boolean"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "guestServiceStatus": {
          "description": "Service Status of In House guest like DND or MUP",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "linkCode": {
          "description": "Party code",
          "type": "string",
          "maxLength": 2000
        },
        "marketCode": {
          "description": "Market code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketDescription": {
          "description": "Description of Market code",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "numberOfRooms": {
          "description": "Room Id",
          "type": "integer"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "points": {
          "description": "The Points contains the number of points used to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "promotion": {
          "description": "Promotion Codes",
          "$ref": "#/definitions/promotionType"
        },
        "pseudoRoom": {
          "description": "True indicates as pseudoRoom room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "ratePlanCode": {
          "description": "Rate plan code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateSuppressed": {
          "description": "Whether this rate should be suppressed from view",
          "type": "boolean"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "roomClass": {
          "description": "Room class code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomId": {
          "description": "Room Id",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "roomType": {
          "description": "Room type code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomTypeCharged": {
          "description": "Room type code that was charged",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "scheduledCheckoutTime": {
          "description": "Indicates that this reservation is scheduled for automated check out.",
          "type": "string",
          "format": "date"
        },
        "sourceCode": {
          "description": "Source of business",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "totalAmount": {
          "description": "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "upgradedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "surnameType": {
      "description": "Family name, last name.",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "taskAssignment": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "taskAssignmentInfo": {
          "description": "Information regarding the Task Sheets for the Task Assignment.",
          "$ref": "#/definitions/housekeepingTaskAssignmentsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taskCompanion": {
      "description": "Response for the Fetch Task Room request. The room details for the room requested or for the room which was evaluated to be cleaned will be returned along with details of the rooms current status and reservations for the room, if any.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "taskRoom": {
          "description": "Details of the room and the task sheet.",
          "type": "object",
          "properties": {
            "allEvaluatedRoomsSkipped": {
              "description": "Indicates if all the possible rooms to be evaluated have been skipped.",
              "type": "boolean"
            },
            "appUserOnBreak": {
              "description": "Information about on break application user and start time.",
              "$ref": "#/definitions/appUserOnBreakType"
            },
            "attendant": {
              "description": "Information regarding Housekeeping Attendants.",
              "type": "object",
              "properties": {
                "activeFlag": {
                  "description": "Indicates if the Attendant is active.",
                  "type": "string",
                  "maxLength": 1,
                  "minLength": 0
                },
                "attendantId": {
                  "description": "Attendant's unique identifier.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "attendantInstructions": {
                  "type": "string",
                  "maxLength": 2000
                },
                "attendantName": {
                  "description": "Attendant's name.",
                  "type": "string",
                  "maxLength": 80,
                  "minLength": 0
                },
                "floor": {
                  "description": "The Floor which is assigned to the attendant.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "friday": {
                  "type": "boolean"
                },
                "hotelId": {
                  "description": "Property where the attendant belongs.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "monday": {
                  "type": "boolean"
                },
                "saturday": {
                  "type": "boolean"
                },
                "section": {
                  "description": "Section Code the attendant has been assigned.",
                  "$ref": "#/definitions/housekeepingSectionType"
                },
                "sunday": {
                  "type": "boolean"
                },
                "thursday": {
                  "type": "boolean"
                },
                "tuesday": {
                  "type": "boolean"
                },
                "wednesday": {
                  "type": "boolean"
                }
              }
            },
            "attendantStatus": {
              "description": "Status of Housekeeping Attendant assigned to this TaskSheet. This value holds the most recent status posted by the attendant.",
              "$ref": "#/definitions/servicingAttendantStatusType"
            },
            "autoGenerated": {
              "description": "Indicates if the task sheet was automatically generated.",
              "type": "boolean"
            },
            "breakOutId": {
              "description": "Break out id of the task sheet.",
              "type": "integer"
            },
            "completedDate": {
              "description": "Date the task was completed.",
              "type": "string",
              "format": "date"
            },
            "credits": {
              "description": "Credits information for this Task Sheet. This could have the Total Credit information and the Travelling credits if required.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/housekeepingCreditsType"
              }
            },
            "date": {
              "description": "The date for which the task sheet applies.",
              "type": "string",
              "format": "date"
            },
            "departureTaskInfo": {
              "description": "Facility task info related to the departure task.",
              "$ref": "#/definitions/departureTaskInfoType"
            },
            "emptyTaskSheet": {
              "description": "Indicates if the task sheet has no rooms.",
              "type": "boolean"
            },
            "hotelId": {
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "linenChangeCount": {
              "description": "The total number of linen changes included in this task sheet.",
              "type": "integer"
            },
            "lockTaskSheet": {
              "description": "Indicates if the task sheet was locked or not.",
              "type": "boolean"
            },
            "nextDay": {
              "description": "Indicates the task sheet applies to Next Business Day.",
              "type": "boolean"
            },
            "roomCount": {
              "description": "The total number of rooms included in this task sheet.",
              "type": "integer"
            },
            "roomCounts": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "totalCount": {
                    "type": "integer"
                  },
                  "value": {
                    "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
                    "type": "string",
                    "enum": [
                      "Clean",
                      "Dirty",
                      "Pickup",
                      "Inspected",
                      "OutOfOrder",
                      "OutOfService"
                    ]
                  }
                }
              }
            },
            "rooms": {
              "description": "This type represents the primary room attributes.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "description": "This type represents the primary room attributes.",
                "type": "object",
                "properties": {
                  "attendant": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/currentServicingAttendantType"
                    }
                  },
                  "building": {
                    "description": "Building associated with the room.",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 0
                  },
                  "cleaningSequence": {
                    "description": "The sequence for cleaning this room in the task sheet. This would apply only for Pickup and Dirty rooms.",
                    "type": "integer"
                  },
                  "componentRoomNumber": {
                    "description": "This flag indicates component room.",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 0
                  },
                  "componentRooms": {
                    "description": "This flag indicates component rooms.",
                    "$ref": "#/definitions/roomRoomsType"
                  },
                  "connectingRooms": {
                    "description": "This flag indicates connecting rooms.",
                    "$ref": "#/definitions/roomRoomsType"
                  },
                  "defaultSequence": {
                    "description": "The sequence for this room from configuration.",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description of the room.",
                    "$ref": "#/definitions/translationTextType2000"
                  },
                  "discrepancy": {
                    "description": "Identifies the room discrepancy information.",
                    "$ref": "#/definitions/roomDiscrepanciesType"
                  },
                  "floor": {
                    "description": "Floor of the Room.",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 0
                  },
                  "floorDescription": {
                    "description": "Description for the Floor of the Room.",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 0
                  },
                  "hasPriority": {
                    "description": "The sequence for this room from configuration.",
                    "type": "boolean"
                  },
                  "hold": {
                    "description": "Hold attributes if any.",
                    "$ref": "#/definitions/roomHoldType"
                  },
                  "housekeeping": {
                    "description": "Identifies the Housekeeping information..",
                    "$ref": "#/definitions/housekeepingType"
                  },
                  "instructions": {
                    "description": "Task Sheet instructions at the room level.",
                    "type": "string",
                    "maxLength": 2000,
                    "minLength": 0
                  },
                  "maintenanceAllowed": {
                    "description": "Flag if the Room, and the OperaV5 version, allows Room Maintenance or not.",
                    "type": "boolean"
                  },
                  "outOfOrder": {
                    "description": "Identifies the room Out of Order/Out of Service information.",
                    "$ref": "#/definitions/roomsOutOfOrderType"
                  },
                  "reservationInfo": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/reservationInfoType"
                    }
                  },
                  "resvInfo": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/reservationShortInfoType"
                    }
                  },
                  "roomAssignmentRating": {
                    "description": "Assignment Rating associated with the room.",
                    "$ref": "#/definitions/ratePlanRatingType"
                  },
                  "roomDescription": {
                    "description": "Detail Long Description Of The Room.",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 0
                  },
                  "roomFeatures": {
                    "description": "Room Features for the room.",
                    "$ref": "#/definitions/roomFeaturesType"
                  },
                  "roomNumber": {
                    "description": "Code of the room.",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 0
                  },
                  "roomSection": {
                    "description": "Room sections of the room.",
                    "$ref": "#/definitions/roomSectionType"
                  },
                  "roomType": {
                    "description": "Room type basic information of the room.",
                    "$ref": "#/definitions/roomTypeShortInfoType"
                  },
                  "servicingInfo": {
                    "description": "Information regarding the current servicing of the room.",
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/currentServicingAttendantType"
                    }
                  },
                  "sitePlanSection": {
                    "description": "Identifies the site plan location of the room.",
                    "$ref": "#/definitions/sitePlanSectionType"
                  },
                  "smokingPreference": {
                    "description": "This indicates room smoking preference.",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 0
                  },
                  "smokingPreferenceDescription": {
                    "description": "This indicates the description of the room smoking preference.",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 0
                  },
                  "totalCredits": {
                    "description": "Total credits for this room.",
                    "type": "integer"
                  },
                  "turndownInfo": {
                    "$ref": "#/definitions/turndownInfoType"
                  },
                  "wakeUpTime": {
                    "description": "The wake up time of the current date",
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            },
            "sheetNumber": {
              "description": "The Task Sheet number. This will be a sequential number for the task sheets generated for a particular Task Code.",
              "type": "integer"
            },
            "sheetType": {
              "description": "The Task Sheet type. Indicates how the task sheet was created and what type of rooms are part of it.",
              "$ref": "#/definitions/taskSheetType"
            },
            "taskCodes": {
              "description": "The Task Code(s) used for this Task Sheet.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/housekeepingTaskCodeType"
              }
            },
            "taskInstructions": {
              "description": "Task Sheet level instructions. These instructions are applicable to this task sheet only.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "taskSeqNo": {
              "description": "The sequence no of the task sheet.",
              "type": "integer"
            },
            "taskSheetCompleted": {
              "description": "Indicates if all the rooms in the task sheet are Clean/Inspected i.e they do not have the Dirty or the Pickup status.",
              "type": "boolean"
            },
            "totalSupplies": {
              "description": "All Supplies, and their totals, associated with the Task Sheet.",
              "$ref": "#/definitions/facilityCodesType"
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taskRoom": {
      "description": "Request to start servicing a task room. When the attendant starts working on a room this request can be called to set the times and the status to WORKING for the room.",
      "type": "object",
      "properties": {
        "criteria": {
          "$ref": "#/definitions/serviceTaskRoomType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taskSheet": {
      "description": "Request of Changing a Task Sheet. The task instructions, total credits, attendant information and room information can be changed on a task sheet. Task Instructions , Total Credits and Attendants will be replaced with what is sent in this request. Example: If the task instructions is null in the request, the task instructions on the task sheet will be updated to null. If rooms are sent as part of this request, this will replace the existing rooms on the task sheet. If rooms are not sent, then the original rooms will remain. The task date, hotel code, task sheet number and task code is required to search for the task sheet which has to be changed",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "taskSheetDetails": {
          "description": "The update information on a task sheet. The information that will be updated are the task instructions, total credits, attendant information and rooms. All other information in this type will not used to update. The task date, hotel code, task sheet number and task code is required to search for the task sheet which has to be changed",
          "$ref": "#/definitions/housekeepingTaskType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taskSheetGenerationStatusTypesType": {
      "description": "Different status lists which are going to be used in the Task Sheet Generation.",
      "type": "object",
      "properties": {
        "frontOfficeRoomStatusList": {
          "description": "Front office statuses to be used in requests for generating task sheets. Example: Vacant or Occupied.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/frontOfficeRoomStatusType"
          }
        },
        "housekeepingRoomStatusList": {
          "description": "Housekeeping room status(example Dirty, Clean etc.) which will be used in for the generation of task sheets. This is required element for the generation of task sheets. Rooms of these statuses will be used and assigned to the task sheets.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/housekeepingRoomStatusType"
          }
        },
        "reservationStatusList": {
          "description": "List of Reservation Statuses. Rooms which have these reservation statuses will be included in the task sheets. Example: If Arrival rooms are required, then Arrival will be one of the statuses defined in this element.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/housekeepingRoomReservationStatusType"
          }
        },
        "roomAssignmentStatusList": {
          "description": "Room assignment status to be used in requests for fetching housekeeping rooms.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomAssignmentStatusType"
          }
        },
        "turndownStatusList": {
          "description": "List of Turndown Statuses. Rooms which have these statuses will be included in the task sheets.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/turndownStatusType"
          }
        }
      }
    },
    "taskSheetInstructionsType": {
      "description": "Instructions which will added to the Task Sheets which are generated.",
      "type": "object",
      "properties": {
        "attendantInstructions": {
          "description": "Instructions for the attendant i.e for each attendant.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "roomInstructions": {
          "description": "Instructions at the room level i.e for each room.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "taskInstructions": {
          "description": "Instructions for the task sheets.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "taskSheetLockCriteriaType": {
      "description": "Criteria to lock or unlock a task sheet.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property code which the task sheet belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "lockTaskSheet": {
          "description": "If set to true, the task sheet will be locked.",
          "type": "boolean"
        },
        "taskSeqNo": {
          "description": "Task sequence number of the task sheet.",
          "type": "integer"
        }
      }
    },
    "taskSheetTemplate": {
      "description": "Response for retrieving a task sheet template. It contains all the information of the previously generated tasksheet.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "taskSheetTemplateDetails": {
          "description": "Information regarding the Task Sheets template for the Task Assignment.",
          "$ref": "#/definitions/autoGenerateTaskSheetsCriteriaType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taskSheetToLock": {
      "description": "Request for locking a task sheet.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to lock or unlock a task sheet.",
          "$ref": "#/definitions/taskSheetLockCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taskSheetToMerge": {
      "description": "Request for merging task sheets.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to merge task sheets.",
          "$ref": "#/definitions/mergeTaskSheetCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taskSheetToUnlock": {
      "description": "Request for unlocking a task sheet.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to unlock a task sheet.",
          "$ref": "#/definitions/taskSheetLockCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taskSheetType": {
      "description": "Task Sheet classification.",
      "type": "string",
      "enum": [
        "NoServiceRequired",
        "DoNotDisturb",
        "ManuallyCreated",
        "AutomaticGeneration",
        "Isolated",
        "ExtraRooms"
      ]
    },
    "taskSheets": {
      "description": "Request for generating housekeeping Task Sheets automatically. To generate task sheets automatically the minimum required criteria is the Task Date, Task Code, Number of Attendants/Tasksheets required and the Room Statuses. Based on the criteria defined, task sheets will be created and the rooms will be assigned to the Tasksheets. Example: if the criteria defines that Dirty room status to be used to generate 5 sheets, then only those rooms which have the status = Dirty will be used and will be assigned to the 5 sheets.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "The criteria for automatically generating the task sheets",
          "$ref": "#/definitions/autoGenerateTaskSheetsCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxTypeType": {
      "description": "Provides information about the Tax Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        }
      }
    },
    "telephoneInfoType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "telephoneType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "extension": {
          "description": "Extension to reach a specific party at the phone number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "timeSpanType": {
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "type": "object",
      "properties": {
        "duration": {
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "translationTextType2000": {
      "description": "Contains Multiple translated texts and language codes.",
      "type": "object",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 2000.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType": {
      "description": "Language code for the translation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "description": "Language code for the translation.",
        "type": "object",
        "properties": {
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          },
          "value": {
            "description": "Used for Character Strings, length 0 to 2000.",
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          }
        }
      }
    },
    "turndownInfoType": {
      "type": "object",
      "properties": {
        "turndownStatusInfo": {
          "$ref": "#/definitions/turndownStatusType"
        }
      }
    },
    "turndownStatusType": {
      "description": "Simple type for turndown status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Required, Not Required and Completed.",
      "type": "string",
      "enum": [
        "Required",
        "NotRequired",
        "Compeleted"
      ]
    },
    "uniqueID_Type": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "unlockedTaskSheet": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "unresolvedRoomMaintenance": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "userSessionDefaultsType": {
      "type": "object",
      "properties": {
        "baseLanguage": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyFormat": {
          "type": "string"
        },
        "dbDateFormat": {
          "type": "string"
        },
        "defaultLanguage": {
          "type": "string"
        },
        "javaDateFormat": {
          "type": "string"
        },
        "javaTimeFormat": {
          "type": "string"
        },
        "oracleDateFormat": {
          "type": "string"
        },
        "oracleTimeFormat": {
          "type": "string"
        }
      }
    },
    "userSessionInfoType": {
      "type": "object",
      "properties": {
        "businessDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "cROCountryCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "chain": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cro": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "hotel": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "parameters": {
          "$ref": "#/definitions/parametersType"
        },
        "runningApp": {
          "type": "string"
        },
        "sessionDefaults": {
          "$ref": "#/definitions/userSessionDefaultsType"
        },
        "shareProfiles": {
          "type": "boolean"
        },
        "systemDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "terminal": {
          "type": "string"
        }
      }
    },
    "vIPStatusType": {
      "description": "VIP status of the customer.",
      "type": "object",
      "properties": {
        "code": {
          "description": "VIP status of the customer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Used for Character Strings, length 0 to 2000.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "vIPType": {
      "description": "The supplier's ranking of the customer.",
      "type": "object",
      "properties": {
        "vipCode": {
          "description": "VIP Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "vipDescription": {
          "description": "VIP Description.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "waitlistResType": {
      "description": "Information regarding why reservation is being /has been waitlisted.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description why the reservation is being /has been waitlisted.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "priorityCode": {
          "description": "Waitlist Priority Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "priorityDescription": {
          "description": "Waitlist priority Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reasonCode": {
          "description": "Waitlist Reason Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonDescription": {
          "description": "Waitlist Reason Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "telephone": {
          "description": "Guest telephone number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "warningType": {
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "type": "object",
      "properties": {
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "maxLength": 8,
          "minLength": 1
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "description": "Used in conjunction with the Success element to define a business error.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    }
  },
  "tags": [
    {
      "description": "These APIs allows for retrieving and managing a room's housekeeping data and front office status, for example update room 101 to be Out Of Order.  Additionally, you can view room discrepancies between housekeeping and front office statuses, view and update task sheets and create a room service request.",
      "name": "Housekeeping"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}