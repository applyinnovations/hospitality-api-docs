{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "title": "OPERA Cloud Accounts Receivables API",
    "version": "23.2",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality-integrations_ww@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "basePath": "/ars/v1",
  "paths": {
    "/accountReminders": {
      "get": {
        "description": "Use this API to get AR account holders' reminder letter that includes detail of payment due, their current account balance, or for other purposes. <p><strong>OperationId:</strong>getReminders</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Get account receivable's reminder statements",
        "operationId": "getReminders",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "accounts",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Property where the AR Account exists. This is required.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profiles",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Account Number for the AR Account.",
            "name": "accountNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Account Name for the AR Account.",
            "name": "accountName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the request to fetch pending Reminders for Accounts.",
            "schema": {
              "$ref": "#/definitions/reminders"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Reminders not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to generate a reminder statement which includes payment due,  current account balance, and etc. of account receivable account holder. <p><strong>OperationId:</strong>postReminders</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Generate reminders",
        "operationId": "postReminders",
        "parameters": [
          {
            "description": "Request to update the reminder information on an Account. After the letter has been generated and sent, the account and the invoices will be updated with the Reminder Cycle information. This is done so that the next cycle of Reminder Letters c can be generated correctly.",
            "name": "reminders",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reminders"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "description": "Use this API to search for AR Accounts for a given OPERA Profile id. API returns contain a list of AR Accounts and their AR information. <p><strong>OperationId:</strong>getAccounts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Get given profile's account receivable detail",
        "operationId": "getAccounts",
        "parameters": [
          {
            "uniqueItems": true,
            "enum": [
              "All",
              "Open",
              "Zero"
            ],
            "type": "string",
            "description": "Search By Balance. Search will be done for 'All', 'Open Balance' or 'Zero Balance' Accounts.",
            "name": "balance",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Search criteria for batch processing",
            "name": "batchStatement",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Property where the Accounts exist.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "profileType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search by Account Type.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Account Number .",
            "name": "accountNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wild Card Search by Account Name. Search will be done for any Accounts whose name starts with this value.",
            "name": "accountName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "accountId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "accountIdContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "accountType",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Return statement history indicator in result. This flag included for performance reason to populate history flag only for Statements Mode.",
            "name": "includeStatementHistoryIndicator",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Return reminder history indicator in result. This flag included for performance reason to populate history flag only for Statements Mode.",
            "name": "includeReminderHistoryIndicator",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Free form text field for searching all reservation fields",
            "name": "superSearch",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "searchHotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "attributeName",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Asc",
                "Desc"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "orderType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the request to search for AR Accounts. Based on the criteria, the response can contain a list of AR Accounts and their AR information.",
            "schema": {
              "$ref": "#/definitions/accountsInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Accounts not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/accounts/{accountId}/remindersHistory": {
      "get": {
        "description": "Use this API to get history of reminder letters prepared for AR account. <p><strong>OperationId:</strong>getRemindersHistory</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Get history of reminder letters for a given account receivable",
        "operationId": "getRemindersHistory",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Property where the AR Account exists. This is required.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "accountIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "accountType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Account Number for the AR Account.",
            "name": "accountNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Account Name for the AR Account.",
            "name": "accountName",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "History Date filter.",
            "name": "dateSent",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Report Name wild card.",
            "name": "reportFileNameWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Reminders History.",
            "schema": {
              "$ref": "#/definitions/remindersHistory"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RemindersHistory not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/accounts/{accountId}/statements": {
      "get": {
        "description": "Use this API to prepare statement for an AR account holders. It is typically prepared for billing purposes.<br><p><strong><mark>This API is deprecated. Please use getARStatements instead</mark></strong></p> <p><strong>OperationId:</strong>getStatements</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Get given profile's account receivable statements",
        "operationId": "getStatements",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Property where the AR Account exists. This is required.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "profileType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Account Number for the AR Account.",
            "name": "accountNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Account Name for the AR Account.",
            "name": "accountName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Flag to indicate if postings or adjustments can be made to the invoice.",
            "name": "canBeModified",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Close date of the invoice.",
            "name": "closeDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The Fiscal Bill number of this posting",
            "name": "fiscalBillNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Date of Folio Generation.",
            "name": "folioDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Folio Number.",
            "name": "folioNo",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Deposit",
                "Void",
                "Ok",
                "Zero",
                "Compress",
                "Converted",
                "Internal"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
            "name": "folioStatus",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The name of the Folio Type used for the Folio Number sequence.",
            "name": "folioTypeName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
            "name": "internalFolioWindowID",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "name": "invoiceNo",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Normal",
                "Credit",
                "OldBalance",
                "PasserBy"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "invoiceType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Posting date of the invoice.",
            "name": "postingDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Revenue date ID of the invoice.",
            "name": "revenueDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Statementno of the invoice.",
            "name": "statementNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Status of the invoice.",
            "name": "status",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Transfer date of the invoice.",
            "name": "transferDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Transaction code of the invoice.",
            "name": "invoiceTransactionCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Transaction Date of the invoice.",
            "name": "transactionDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Unique Transaction Identifier of the Invoice.",
            "name": "transactionNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Property where the AR Account exists. This is required.",
            "name": "invoiceHotelIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "guestProfileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "guestProfileIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "guestProfileType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "The Aging age of the invoice",
            "name": "age",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Name of the Guest who consumed these transactions.",
            "name": "guestName",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "originalAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "originalAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "paymentsAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "paymentsCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "balanceAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "balanceCurrencyCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "User-defined posting reference.",
            "name": "reference",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "User-defined posting remark.",
            "name": "remark",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "name": "adjusted",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "name": "parentInvoiceNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "name": "compressed",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "name": "compressedDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "name": "transferredOut",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "name": "transferredIn",
            "in": "query"
          },
          {
            "type": "string",
            "name": "marketDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Property where the AR Account exists. This is required.",
            "name": "marketHotelId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "marketCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "marketGroup",
            "in": "query"
          },
          {
            "type": "string",
            "name": "roomClassDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Property where the AR Account exists. This is required.",
            "name": "roomClassHotelId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "roomClassCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sourceDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Property where the AR Account exists. This is required.",
            "name": "sourceHotelId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sourceCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sourceGroup",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Cashier Id of the Cashier.",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cashier Name.",
            "name": "cashierName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Property where the AR Account exists. This is required.",
            "name": "transactionHotelId",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
            "name": "printTrxReceipt",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Unique identifier for the Transaction code.",
            "name": "accountInvoiceTransactionCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Transaction codes info.",
            "name": "transactionDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Category of the transaction code.",
            "name": "transactionGroup",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sub category of the transaction code.",
            "name": "transactionSubGroup",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Unique Universal product code of the transaction code.",
            "name": "universalProductCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
            "name": "routingInstructionsId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique code of the article.",
            "name": "articleCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Property where the AR Account exists. This is required.",
            "name": "articleHotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Indicates whether the article is inactive or not.",
            "name": "inactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Display Order sequence.",
            "name": "orderSequence",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Description of the article.",
            "name": "articleDescription",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Transaction code to which the article belongs.",
            "name": "transactionCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "articleAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "articleCurrencyCode",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether the article is available for post it.",
            "name": "availableForPostIt",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Red",
              "DarkRed",
              "Green",
              "DarkGreen",
              "LightGreen",
              "Orange",
              "White",
              "Yellow",
              "DarkYellow",
              "Purple",
              "Brown",
              "Gray",
              "Aqua",
              "Chocolate",
              "Blue",
              "LightBlue",
              "DarkBlue",
              "Cyan",
              "DarkCyan",
              "Magenta",
              "DarkMagenta",
              "Black"
            ],
            "type": "string",
            "description": "Color configuration type. This color configuration provides a visual category of entities.",
            "name": "color",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique Universal product code of the article.",
            "name": "articleUniversalProductCode",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Attach the credit card to profile.",
            "name": "attachCreditCardToProfile",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardHolderName",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumber",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberLast4Digits",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ],
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "name": "cardOrToken",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ],
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "name": "cardType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Expiration date of the credit card",
            "name": "expirationDate",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "expirationDateExpired",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Masked Expiration date of the credit card",
            "name": "expirationDateMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ],
            "type": "string",
            "name": "processing",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "swiped",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "name": "userDefinedCardType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "invoicePaymentCardId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "invoicePaymentCardIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "invoicePaymentCardIdType",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "currentAuthorizedAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currentAuthorizedAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "approvalAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "approvalAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the type of Linked profiles for a block.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "addresseeProfileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "addresseeProfileIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "addresseeProfileType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Name for the profile attached to the block.",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "City for the profile attached to the block.",
            "name": "city",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Phone for the profile attached to the block.",
            "name": "phone",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Flag to check Partail Transfer Allowed.",
            "name": "allowPartialTransferYn",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Flag to check Invoice Statement is Printed.",
            "name": "printed",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Invoice Statement Printed Date.",
            "name": "printedDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "storedFolioId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "storedFolioIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "storedFolioType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Name of the Stored Folio.",
            "name": "storedFolioName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "storedDebitFolioId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "storedDebitFolioIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "storedDebitFolioType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Name of the Stored Debit Folio.",
            "name": "storedDebitFolioName",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The date specified in this field determines the balance forward date and balance forward total that is printed on the statement. (A balance forward shows the net amount for all invoices and payments (debits and credits) prior to the balance forward date as a single total, rather than itemizing them individually on the statement.)",
            "name": "balanceForwardDate",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "false",
            "description": "Flag to indicate if the associated Folios for the Invoices are to be included along with the the Statement.",
            "name": "inclFolios",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "false",
            "description": "Flag to indicate if Previousely Printed Invoices are to be included in the Statement. This is based on the Functionality for AR PRINTED INVOICES.",
            "name": "inclPrinted",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "false",
            "description": "Flag to indicate if Zero Balances Invoices are to be included in the Statement.",
            "name": "inclZero",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "filterEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "filterStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Text which will be printed on the Invoice.",
            "name": "statementText",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the Statement to generate.",
            "schema": {
              "$ref": "#/definitions/statements"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Statements not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/arTransactions": {
      "get": {
        "description": "Use this API to get list of transaction data for a given account receivable account number and list of hotels <p><strong>OperationId:</strong>getARTransactions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Get AR transactions.",
        "operationId": "getARTransactions",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Property where the Accounts exist.",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Account number of this transaction.",
            "name": "accounts",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "fromAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "fromCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "toAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "toCurrencyCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Display Name for the guest.",
            "name": "guestName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "invoice Number .",
            "name": "invoices",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "folio Number .",
            "name": "folios",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Fiscal bill number of this transaction.",
            "name": "fiscalBillNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Account number of this transaction.",
            "name": "accountName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Addressee Name filter. Works with the Addressee Functionality.",
            "name": "addresseName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response after fetching AR transaction details.",
            "schema": {
              "$ref": "#/definitions/arTransactions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ARTransactions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/accounts": {
      "post": {
        "description": "Use this API to create a new account receivable type account for given OPERA profile id. Prior creating account, need to use getProfile to find OPERA profile's id.  <p><strong>OperationId:</strong>postAccount</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Create an account receivable account",
        "operationId": "postAccount",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to create a new AR Account",
            "name": "accountCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/accountCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/accounts/invoicesOnHold": {
      "get": {
        "description": "Use this API to get list of account receivable invoices which are put on hold. <p><strong>OperationId:</strong>getInvoicesOnHold</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Get list of hold invoices for account receivable",
        "operationId": "getInvoicesOnHold",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "profileType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "accountIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "accountType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Account Number for the AR Account.",
            "name": "accountNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Account Name for the AR Account.",
            "name": "accountName",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Folio Number for the invoice.",
            "name": "folios",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Invoice number for the invoice.",
            "name": "invoices",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Fiscal Bill number for the invoice.",
            "name": "fiscalBillNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Guest Name set for the invoice.",
            "name": "guestName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response after fetching on-hold invoices.",
            "schema": {
              "$ref": "#/definitions/invoicesOnHold"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "InvoicesOnHold not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}": {
      "get": {
        "description": "Use this API to search for account receivable type account's  detail for given account id. <p><strong>OperationId:</strong>getAccount</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Get account",
        "operationId": "getAccount",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Account Number for the Account.",
            "name": "accountNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "profileType",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Account",
                "Aging",
                "FixedCharges",
                "Invoices",
                "Payments",
                "Summary",
                "Comments",
                "Traces",
                "Reminder",
                "Statement",
                "Indicators",
                "YearView"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Instructions to fetch AR Account details.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the request to fetch details for an AR Account.",
            "schema": {
              "$ref": "#/definitions/account"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Account not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update existing account using account id and further detail. Use get account to get account detail prior updating. <p><strong>OperationId:</strong>putAccount</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Update a account receivable account",
        "operationId": "putAccount",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to change and existing AR Account. The Account No, Credit Limit, Address, Email, Telephone information, Permanent Flag, Primary Account Flag, Contact Name are the details that can be changed on an existing account.",
            "name": "account",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/account"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete account detail for given unique account id. Use get accounts to find account id. <p><strong>OperationId:</strong>deleteAccount</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Delete Account ",
        "operationId": "deleteAccount",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/applyCreditToInvoices": {
      "post": {
        "description": "Use this API to add credits to account receivable invoices. <p><strong>OperationId:</strong>postCreditToInvoices</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Add credits to AR invoices",
        "operationId": "postCreditToInvoices",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "name": "creditToInvoices",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/creditToInvoices"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/arCreditCard/transfer": {
      "post": {
        "description": "Use this API to transfer credit card payment transactions to Accounts Receivable. <p><strong>OperationId:</strong>transferARCreditCardPayments</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Move credit card payment to account receivable",
        "operationId": "transferARCreditCardPayments",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to transfer AR Credit Card payments.",
            "name": "arCreditCardPaymentsToTransfer",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arCreditCardPaymentsToTransfer"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/charges": {
      "post": {
        "description": "Use this API to post charges to account receivable account. <p><strong>OperationId:</strong>postChargesToAR</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Add charges to account receivable",
        "operationId": "postChargesToAR",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to post charges to an existing invoice, when the functionality is available. If the invoice should not be modified or if the folio should not be modified,based on other functionalities, then the charges cannot be posted to the invoice.",
            "name": "arChargesPostingCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arChargesPostingCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/comments": {
      "put": {
        "description": "Use this API to update existing account note. Use get account to find noteid <p><strong>OperationId:</strong>putAccountComment</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Change Account Comment",
        "operationId": "putAccountComment",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to Change the Comment on an Account.",
            "name": "accountComment",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/accountComment"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add a note for a given account id. Use get accounts to find account id. <p><strong>OperationId:</strong>postAccountComment</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Create Account Comment",
        "operationId": "postAccountComment",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to create a Comment for an Account.",
            "name": "accountComment",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/accountComment"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete notes from a given account id. Use get account with an instruction to get note id. <p><strong>OperationId:</strong>deleteAccountComment</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Delete Account Comment",
        "operationId": "deleteAccountComment",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Property Value",
            "name": "value",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If specified comment belongs to the Hotel, otherwise it is a global comment.",
            "name": "hotel",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/compressInvoices": {
      "put": {
        "description": "Use this API to combine two or more invoices into one invoice <p><strong>OperationId:</strong>compressARInvoices</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Combines Account receivable invoices",
        "operationId": "compressARInvoices",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to compress two or more invoices for an Account",
            "name": "arCompressInvoices",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arCompressInvoices"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the request to compress two or more invoices.",
            "schema": {
              "$ref": "#/definitions/compressedARInvoices"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/copyAccount": {
      "post": {
        "description": "Use this API to create account receivable to multiple hotels by copying from source hotel. <p><strong>OperationId:</strong>copyARAccount</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Copy account receivable account ",
        "operationId": "copyARAccount",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to copy AR Account",
            "name": "arAccountCopy",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arAccountCopy"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/fixedCharges": {
      "post": {
        "description": "Use this API to create fixed charges for a given account id of account receivable. Use get accounts to find an account id. <p><strong>OperationId:</strong>postAccountFixedCharge</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Create fixed charges ",
        "operationId": "postAccountFixedCharge",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to create a Fixed Charge for an Account.",
            "name": "accountFixedCharge",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/accountFixedCharge"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/fixedCharges/{fixedChargeId}": {
      "put": {
        "description": "Use this API to update existing fixed charges for a given account receivable. <p><strong>OperationId:</strong>putAccountFixedCharge</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Update fixed charge detail ",
        "operationId": "putAccountFixedCharge",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "ID of the fixed charge",
            "name": "fixedChargeId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to Change the Fixed Charge on an Account.",
            "name": "accountFixedCharge",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/accountFixedCharge"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete fixed charges for a given account receivable id. Use getaccounts to find an account id. <p><strong>OperationId:</strong>deleteAccountFixedCharge</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Delete fixed charges ",
        "operationId": "deleteAccountFixedCharge",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "ID of the fixed charge",
            "name": "fixedChargeId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/folioPrinters": {
      "get": {
        "description": "Use this API to find account receivable folio printers <p><strong>OperationId:</strong>getARFolioPrinters</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Get list of account receivable folio printers",
        "operationId": "getARFolioPrinters",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "name": "balance",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "overrideCreditHoldCheck",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Account Number for the AR Account.",
            "name": "accountNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Account Name for the AR Account.",
            "name": "accountName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "guestProfileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "guestProfileIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "guestProfileType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "name": "folioWindowNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "name": "chargeCashierId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Transaction Code to post.",
            "name": "chargeTransactionCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Article ID.",
            "name": "articleCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Quantity to post to the folio.",
            "name": "postingQuantity",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "User-defined posting reference.",
            "name": "postingReference",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "User-defined posting remark.",
            "name": "postingRemark",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Indicates the Cheque number.",
            "name": "checkNumber",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Corrected arrangement code from the package associated to this transaction.",
            "name": "arrangementCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Apply room routing when making this posting.",
            "name": "applyRoutingInstructions",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Use the applicable package allowance when making this posting.",
            "name": "usePackageAllowance",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "True indicates the Transaction Code is allowed to be posted automatically.",
            "name": "autoPosting",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "financialTransactionId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "financialTransactionIdContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "financialTransactionType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "User-defined invoice reference.",
            "name": "reference",
            "in": "query"
          },
          {
            "type": "string",
            "description": "User-defined invoice remark.",
            "name": "remark",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Folio Type to be assigned to generated folio. This is a country requirement.",
            "name": "folioType",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Fiscal folio flag to call fiscal folio web service after folio generation.",
            "name": "generateFiscalFolio",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Folio Queue name.",
            "name": "queueName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the request to fetch the Folio Printers applicable for a Folio, based on the",
            "schema": {
              "$ref": "#/definitions/arFolioPrinters"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ARFolioPrinters not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/invoices": {
      "post": {
        "description": "Use this API to create a new invoice for an AR account. <p><strong>OperationId:</strong>postInvoice</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Create account receivable invoices",
        "operationId": "postInvoice",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to create a new Invoice for an Account.",
            "name": "arInvoice",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arInvoice"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response to the request to create an invoice for an Account.",
            "schema": {
              "$ref": "#/definitions/arInvoiceDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/statements": {
      "post": {
        "description": "Use this API to generate statement for a given account receivable id. It includes the account balance as of the current business date, an aging summary that shows how long outstanding balances have been \"on the books\" for each aging level set up for given property. <p><strong>OperationId:</strong>postStatements</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Generate a statement for a given account receivable",
        "operationId": "postStatements",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Operation to generate AR Statements. This will validate and check if there exists any invoices to be included in the Statement based on the criteria used. If Statement Numbering is used, this will return a statement number to use in report as well as report sequence id to identify statement's invoices.",
            "name": "statementsToBeGenerated",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/statementsToBeGenerated"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/traces": {
      "put": {
        "description": " <p><strong>OperationId:</strong>putAccountTrace</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "This API facilitates modification of account traces.",
        "operationId": "putAccountTrace",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to Change the Trace on an Account.",
            "name": "accountTrace",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/accountTrace"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to add a trace for a given account id. Use getaccounts to find account id. <p><strong>OperationId:</strong>postAccountTrace</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Add a trace to an account receivable account",
        "operationId": "postAccountTrace",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to create a Trace for an Account.",
            "name": "accountTrace",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/accountTrace"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": " <p><strong>OperationId:</strong>deleteAccountTrace</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "This API facilitates deletion of account traces.",
        "operationId": "deleteAccountTrace",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "traceID",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Date of the trace.",
            "name": "traceOn",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The information this trace contains.",
            "name": "traceText",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/transactions/{transactionId}/invoicePaymentDetails": {
      "get": {
        "description": "Use this API to get AR account's invoice and payment details including credit, debit, amount due date, etc. <p><strong>OperationId:</strong>getInvoicePaymentDetail</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Get account receivable invoice and payment details",
        "operationId": "getInvoicePaymentDetail",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the transaction",
            "name": "transactionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "profileType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Account Number for the AR Account.",
            "name": "accountNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Account Name for the AR Account.",
            "name": "accountName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the fetch invoice and payments details request.",
            "schema": {
              "$ref": "#/definitions/invoicePayment"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "InvoicePaymentDetail not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/uncompressInvoices": {
      "post": {
        "description": "Use this API to reverse compressing account receivable invoices and break single combined invoice into individual invoices. <p><strong>OperationId:</strong>uncompressARInvoices</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Reverse the compressing invoice process",
        "operationId": "uncompressARInvoices",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to uncompress a compressed(Parent) Invoice",
            "name": "invoice",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/invoice"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/agingCycles": {
      "get": {
        "description": "Use this API to get account receivable profile's aging summary including account name, summary, credit limit, total outstanding balance, etc. per aging bucket. <p><strong>OperationId:</strong>getARAgingCycles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Get given AR account's aging detail",
        "operationId": "getARAgingCycles",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for Fetch AR Aging Cycles.",
            "schema": {
              "$ref": "#/definitions/arAgingCycles"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ARAgingCycles not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/batchCharges": {
      "post": {
        "description": "Use this API to create a batch process for simultaneously post a one-time charge to multiple account receivable accounts. <p><strong>OperationId:</strong>postBatchCharges</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Create process to charge on multiple account receivables",
        "operationId": "postBatchCharges",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for posting a charge in a batch to list of accounts.",
            "name": "batchChargesToPost",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/batchChargesToPost"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/directBillsToAR": {
      "put": {
        "description": "Use this API to transfer direct bills to account receivable account <p><strong>OperationId:</strong>transferDirectBillsToAr</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Move direct bills to account receivable",
        "operationId": "transferDirectBillsToAr",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for Transfer Directs bill to AR.",
            "name": "transferDirectBillsToAr",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transferDirectBillsToAr"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/invoices": {
      "put": {
        "description": "Use this API to update or transfer invoice detail such as amount, transaction code, etc. <p><strong>OperationId:</strong>putInvoiceDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Update invoice detail.",
        "operationId": "putInvoiceDetails",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Response to the request to change invoice",
            "name": "invoice",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/invoice"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/invoices/{invoiceId}": {
      "put": {
        "description": "Use this API to update or transfer invoice detail such as amount, transaction code, etc.<br><p><strong><mark>This API is deprecated. Please use putInvoiceDetails instead</mark></strong></p> <p><strong>OperationId:</strong>putInvoice</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Update invoice detail.",
        "operationId": "putInvoice",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the invoice",
            "name": "invoiceId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Response to the request to change invoice",
            "name": "invoice",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/invoice"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/invoices/{invoiceId}/transactions/{transactionId}/accounts/{accountId}/invoiceAppliedPayments": {
      "get": {
        "description": "Use this API to get applied payment details for AR invoices.<br><p><strong><mark>This API is deprecated. Please use getAppliedInvoicePayments instead</mark></strong></p> <p><strong>OperationId:</strong>getInvoiceAppliedPayments</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Get account receivable invoice's payment history",
        "operationId": "getInvoiceAppliedPayments",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the transaction",
            "name": "transactionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the invoice",
            "name": "invoiceId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "name": "invoiceNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the applied payment details,Contains errors or warnings if any.",
            "schema": {
              "$ref": "#/definitions/invoiceAppliedPayments"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "InvoiceAppliedPayments not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/invoices/{invoiceId}/transactions/{transactionId}/paymentsFromInvoice": {
      "delete": {
        "description": "Delete payments from invoice.<br><p><strong><mark>This API is deprecated. Please use removePaymentsFromInvoice instead</mark></strong></p> <p><strong>OperationId:</strong>deletePaymentsFromInvoice</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Delete payments from invoice",
        "operationId": "deletePaymentsFromInvoice",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the transaction",
            "name": "transactionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the invoice",
            "name": "invoiceId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Unique Transaction Identifier of the Payment.",
            "name": "trxNo",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "accountId",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "name": "cashierID",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "name": "invoiceNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/profiles/{profileId}/accounts/{accountId}/charges": {
      "post": {
        "description": "Use this API to post charges to account receivable account.<br><p><strong><mark>This API is deprecated. Please use postChargesToAR instead</mark></strong></p> <p><strong>OperationId:</strong>postARCharges</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Add charges to account receivable",
        "operationId": "postARCharges",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the profile",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to post charges to an existing invoice, when the functionality is available. If the invoice should not be modified or if the folio should not be modified,based on other functionalities, then the charges cannot be posted to the invoice.",
            "name": "arChargesPostingCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arChargesPostingCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/profiles/{profileId}/accounts/{accountId}/payments": {
      "post": {
        "description": "Use this API to make payment to AR accounts for a list of reservations. <p><strong>OperationId:</strong>postARPayments</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Add payment to an account receivable account for a list of reservations",
        "operationId": "postARPayments",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the profile",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to post a payment to an AR Account and apply the payment to Invoices..",
            "name": "arPaymentsToBeCreated",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arPaymentsToBeCreated"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response notifying if the posting of a payment to an AR Account.",
            "schema": {
              "$ref": "#/definitions/arPayments"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/profiles/{profileId}/accounts/{accountId}/statementsHistory": {
      "get": {
        "description": "Use this API to find the history of statements prepared for AR accounts. <p><strong>OperationId:</strong>getStatementsHistory</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Get given profile's account receivable statements history",
        "operationId": "getStatementsHistory",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the profile",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Account Number for the AR Account.",
            "name": "accountNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Account Name for the AR Account.",
            "name": "accountName",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "History Date filter.",
            "name": "dateSent",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Report Name wild card.",
            "name": "reportFileNameWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Statement History.",
            "schema": {
              "$ref": "#/definitions/statementHistory"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "StatementsHistory not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/profiles/{profileId}/accounts/{accountId}/transactions/{transactionId}/reversePayment": {
      "post": {
        "description": "Use this API to reverse payment that occurred accidently or via user error. <p><strong>OperationId:</strong>postReversePayment</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Reverse Payment",
        "operationId": "postReversePayment",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the transaction",
            "name": "transactionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the profile",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for reverse AR payment",
            "name": "reversePayment",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reversePayment"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactions/{transactionId}/accounts/{accountId}/invoiceAppliedPayments": {
      "get": {
        "description": "Use this API to get applied payment details for AR invoices. <p><strong>OperationId:</strong>getAppliedInvoicePayments</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Get account receivable invoice's payment history",
        "operationId": "getAppliedInvoicePayments",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the transaction",
            "name": "transactionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "name": "invoiceNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the applied payment details,Contains errors or warnings if any.",
            "schema": {
              "$ref": "#/definitions/invoiceAppliedPayments"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AppliedInvoicePayments not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactions/{transactionId}/creditcard/payments": {
      "get": {
        "description": "Use this API to get lists of folios for guests who checked out using a credit card payment transaction code that has an account receivable associated with it. It also lists payments made prior to check out if the payment was made using a credit card transaction code that has a an account receivable associated with it. <p><strong>OperationId:</strong>getARCreditCardPayments</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Get account receivable folios which are paid using credit cards",
        "operationId": "getARCreditCardPayments",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the transaction",
            "name": "transactionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response after fetching AR credit card payments.",
            "schema": {
              "$ref": "#/definitions/arCreditCardPayments"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ARCreditCardPayments not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactions/{transactionId}/paymentsFromInvoice": {
      "delete": {
        "description": "Delete payments from invoice. <p><strong>OperationId:</strong>removePaymentsFromInvoice</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Delete payments from invoice",
        "operationId": "removePaymentsFromInvoice",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the transaction",
            "name": "transactionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Unique Transaction Identifier of the Payment.",
            "name": "trxNo",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "accountId",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "name": "cashierID",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "name": "invoiceNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/unlink/invoiceFromStatement": {
      "put": {
        "description": "Use this API to remove the invoice from the statement before that invoice can be included in a different statement. <p><strong>OperationId:</strong>unlinkInvoiceFromStatement</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Unlink invoices from a statement",
        "operationId": "unlinkInvoiceFromStatement",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to unlink invoice from statement",
            "name": "unlinkInvoiceFromStatement",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/unlinkInvoiceFromStatement"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/invoicePayments/accounts/{accountId}": {
      "get": {
        "description": "Use this API to get payment data for account receivable invoices. <p><strong>OperationId:</strong>getInvoicesPayments</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Get payment detail for account's invoices",
        "operationId": "getInvoicesPayments",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the account",
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": "true",
            "description": "Flag to indicate if Invoice Details are required.",
            "name": "inclDetails",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "true",
            "description": "Flag to indicate if Zero Balance Invoices are to be included.",
            "name": "inclZeroBalance",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Property where the Accounts exist.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "end",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "start",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Display Name for the guest.",
            "name": "guestDisplayName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter for User-defined Invoice Supplement. The search is case-insensitive and supports % as wildcard character with right-side wildcard search by default. Examples: ABC or ABC% finds records that start with ABC, such as ABC, ABCDEF, and ABC123. %ABC or %ABC% finds records that contain ABC, such as ABC, ABC123, MYABC, and MYABC123.",
            "name": "remark",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter for User-defined Invoice Reference. The search is case-insensitive and supports % as wildcard character with right-side wildcard search by default. Examples: ABC or ABC% finds records that start with ABC, such as ABC, ABCDEF, and ABC123. %ABC or %ABC% finds records that contain ABC, such as ABC, ABC123, MYABC, and MYABC123.",
            "name": "reference",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "invoice Number .",
            "name": "invoiceNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Addressee Name filter. Works with the Addressee Functionality.",
            "name": "addresseeName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationType",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "true",
            "description": "Flag to check Invoice Statement is Printed.",
            "name": "printed",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "false",
            "description": "Flag to check Invoice is billed",
            "name": "unBilled",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "folio Number .",
            "name": "folioNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Fiscal bill number of this transaction.",
            "name": "fiscalBillNo",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The Statement number of this invoice.",
            "name": "statementNo",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Invoices",
                "Payments"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Type of AR Invoice information to fetch the invoices or payments data.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the fetch invoice and payments details request.",
            "schema": {
              "$ref": "#/definitions/invoicesPayments"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "InvoicesPayments not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/invoicePostings": {
      "get": {
        "description": "Use this API to get account receivable postings. <p><strong>OperationId:</strong>getInvoicePostings</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Get account receivable invoice postings",
        "operationId": "getInvoicePostings",
        "parameters": [
          {
            "type": "boolean",
            "description": "Flag to indicate if postings or adjustments can be made to the invoice.",
            "name": "canBeModified",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Close date of the invoice.",
            "name": "closeDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Fiscal Bill number of this posting",
            "name": "fiscalBillNo",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date of Folio Generation.",
            "name": "folioDate",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Folio Number.",
            "name": "folioNo",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Deposit",
              "Void",
              "Ok",
              "Zero",
              "Compress",
              "Converted",
              "Internal"
            ],
            "type": "string",
            "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
            "name": "folioStatus",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The name of the Folio Type used for the Folio Number sequence.",
            "name": "folioTypeName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
            "name": "internalFolioWindowID",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "name": "invoiceNo",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Normal",
              "Credit",
              "OldBalance",
              "PasserBy"
            ],
            "type": "string",
            "name": "invoiceType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Posting date of the invoice.",
            "name": "postingDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Revenue date ID of the invoice.",
            "name": "revenueDate",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Statementno of the invoice.",
            "name": "statementNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Status of the invoice.",
            "name": "status",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Transfer date of the invoice.",
            "name": "transferDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Transaction code of the invoice.",
            "name": "postingTransactionCode",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Transaction Date of the invoice.",
            "name": "transactionDate",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Unique Transaction Identifier of the Invoice.",
            "name": "transactionNo",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Property where the invoice exists.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "guestProfileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "guestProfileIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "guestProfileType",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The Aging age of the invoice",
            "name": "age",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Name of the Guest who consumed these transactions.",
            "name": "guestName",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "originalAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "originalAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "paymentsAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "paymentsCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "balanceAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "balanceCurrencyCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "User-defined posting reference.",
            "name": "reference",
            "in": "query"
          },
          {
            "type": "string",
            "description": "User-defined posting remark.",
            "name": "remark",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "adjusted",
            "in": "query"
          },
          {
            "type": "number",
            "name": "parentInvoiceNo",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "compressed",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "compressedDate",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "transferredOut",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "transferredIn",
            "in": "query"
          },
          {
            "type": "string",
            "name": "marketDescription",
            "in": "query"
          },
          {
            "type": "string",
            "name": "marketHotelId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "marketCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "marketGroup",
            "in": "query"
          },
          {
            "type": "string",
            "name": "roomClassDescription",
            "in": "query"
          },
          {
            "type": "string",
            "name": "roomClassHotelId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "roomClassCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sourceDescription",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sourceHotelId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sourceCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sourceGroup",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Cashier Id of the Cashier.",
            "name": "cashierInfoCashierId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cashier Name.",
            "name": "cashierName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hotel context of the Transaction code.",
            "name": "transactionHotelId",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
            "name": "printTrxReceipt",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Unique identifier for the Transaction code.",
            "name": "invoicePostingsTransactionCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Transaction codes info.",
            "name": "transactionDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Category of the transaction code.",
            "name": "transactionGroup",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sub category of the transaction code.",
            "name": "transactionSubGroup",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Unique Universal product code of the transaction code.",
            "name": "universalProductCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
            "name": "routingInstructionsId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique code of the article.",
            "name": "articleCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code to which the article belongs.",
            "name": "articleHotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Indicates whether the article is inactive or not.",
            "name": "inactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Display Order sequence.",
            "name": "orderSequence",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Description of the article.",
            "name": "articleDescription",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Transaction code to which the article belongs.",
            "name": "transactionCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "articleAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "articleCurrencyCode",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether the article is available for post it.",
            "name": "availableForPostIt",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Red",
              "DarkRed",
              "Green",
              "DarkGreen",
              "LightGreen",
              "Orange",
              "White",
              "Yellow",
              "DarkYellow",
              "Purple",
              "Brown",
              "Gray",
              "Aqua",
              "Chocolate",
              "Blue",
              "LightBlue",
              "DarkBlue",
              "Cyan",
              "DarkCyan",
              "Magenta",
              "DarkMagenta",
              "Black"
            ],
            "type": "string",
            "description": "Color configuration type. This color configuration provides a visual category of entities.",
            "name": "color",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique Universal product code of the article.",
            "name": "articleUniversalProductCode",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Attach the credit card to profile.",
            "name": "attachCreditCardToProfile",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardHolderName",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumber",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberLast4Digits",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ],
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "name": "cardOrToken",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ],
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "name": "cardType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Expiration date of the credit card",
            "name": "expirationDate",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "expirationDateExpired",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Masked Expiration date of the credit card",
            "name": "expirationDateMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ],
            "type": "string",
            "name": "processing",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "swiped",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "name": "userDefinedCardType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "cardId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "PaymentCardIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "paymentCardIdType",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "currentAuthorizedAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currentAuthorizedAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "approvalAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "approvalAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the type of Linked profiles for a block.",
            "name": "addresseeType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "addressProfileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "addressProfileIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "addressProfileIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Name for the profile attached to the block.",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "City for the profile attached to the block.",
            "name": "city",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Phone for the profile attached to the block.",
            "name": "phone",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to check Partail Transfer Allowed.",
            "name": "allowPartialTransferYn",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to check Invoice Statement is Printed.",
            "name": "printed",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Invoice Statement Printed Date.",
            "name": "printedDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "storedFolioId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "storedFolioIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "storedFolioType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Name of the Stored Folio.",
            "name": "storedFolioName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "storedDebitFolioId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "storedDebitFolioIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "storedDebitFolioType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Name of the Stored Debit Folio.",
            "name": "storedDebitFolioName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "accountId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "accountIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "accountType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Account Number for the Account.",
            "name": "accountNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "profileIdType",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Cashier Id of the Cashier.",
            "name": "additionalFilterCashierId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "additionalFilterTransactionCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "additionalFilterTransactionSubGroupCode",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "end",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "start",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filters the results for reference.",
            "name": "referenceWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter the results for supplement.",
            "name": "supplementWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup string which will try to match an existing Cheque number's.",
            "name": "checkNumberWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the request to fetch postings for an invoice",
            "schema": {
              "$ref": "#/definitions/invoicePostings"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "InvoicePostings not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/invoices/close": {
      "put": {
        "description": "Use this API to close (\"freeze\") one or more selected invoices at any point after they have been created. When an invoice has been closed, no new postings to the invoice can be made, transaction reference or supplemental information can be edited, or adjustments to transaction codes can be made. However, payments can be posted to an invoice after it has been closed. <p><strong>OperationId:</strong>putInvoices</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Close account receivable invoices",
        "operationId": "putInvoices",
        "parameters": [
          {
            "description": "Request to close invoice(s)",
            "name": "invoices",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/invoices"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/invoicesAccount": {
      "put": {
        "description": "Use this API to update existing AR invoice for a given profile and/or a reservation. <p><strong>OperationId:</strong>putARInvoicesAccount</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Change Account receivable invoice for an AR account",
        "operationId": "putARInvoicesAccount",
        "parameters": [
          {
            "description": "Request to change AR invoice(s) account in AR.",
            "name": "arInvoicesAccount",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arInvoicesAccount"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/oldBalances": {
      "post": {
        "description": "Use this API to add old balances from external accounting systems into OPERA Accounts Receivable. <p><strong>OperationId:</strong>postAROldBalances</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Add old balances from external accounting systems",
        "operationId": "postAROldBalances",
        "parameters": [
          {
            "description": "Request to Post AR Old Balances",
            "name": "arOldBalances",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arOldBalances"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/aging": {
      "get": {
        "description": "Use this API to get profile's account receivable summary including fixed charges, account balance, statements, reminder history, etc. <p><strong>OperationId:</strong>getProfileAging</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Get given profile's aging detail",
        "operationId": "getProfileAging",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the profile",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Currency of the aging amounts.",
            "name": "currency",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the request to fetch the total Aging information for a Profile.",
            "schema": {
              "$ref": "#/definitions/profileAging"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ProfileAging not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/yearViews": {
      "get": {
        "description": "Use this API to get a month-by-month total of accrued debits, accrued credits, and a net total for the selected account data. <p><strong>OperationId:</strong>getProfileYearView</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Get given profile's yearly account receivable detail",
        "operationId": "getProfileYearView",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the profile",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Currency of the Year View amounts.",
            "name": "currency",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the request to fetch the total Year View information for a Profile.",
            "schema": {
              "$ref": "#/definitions/profileYearView"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ProfileYearView not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/reopenInvoices": {
      "put": {
        "description": "Use this API to unfreeze or reopen invoice for account receivable. <p><strong>OperationId:</strong>reopenInvoices</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Reopen account receivable closed invoice",
        "operationId": "reopenInvoices",
        "parameters": [
          {
            "description": "Request to re-open closed invoice(s)",
            "name": "invoices",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/invoices"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/statements": {
      "get": {
        "description": "Use this API to prepare statement for an AR account holders. It is typically prepared for billing purposes. <p><strong>OperationId:</strong>getARStatements</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Get given profile's account receivable statements",
        "operationId": "getARStatements",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Property where the AR Account exists. This is required.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "profileType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "accountID",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Account Number for the AR Account.",
            "name": "accountNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Account Name for the AR Account.",
            "name": "accountName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Flag to indicate if postings or adjustments can be made to the invoice.",
            "name": "canBeModified",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Close date of the invoice.",
            "name": "closeDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The Fiscal Bill number of this posting",
            "name": "fiscalBillNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Date of Folio Generation.",
            "name": "folioDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Folio Number.",
            "name": "folioNo",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Deposit",
                "Void",
                "Ok",
                "Zero",
                "Compress",
                "Converted",
                "Internal"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
            "name": "folioStatus",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The name of the Folio Type used for the Folio Number sequence.",
            "name": "folioTypeName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
            "name": "internalFolioWindowID",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "name": "invoiceNo",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Normal",
                "Credit",
                "OldBalance",
                "PasserBy"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "invoiceType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Posting date of the invoice.",
            "name": "postingDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Revenue date ID of the invoice.",
            "name": "revenueDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Statementno of the invoice.",
            "name": "statementNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Status of the invoice.",
            "name": "status",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Transfer date of the invoice.",
            "name": "transferDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Transaction code of the invoice.",
            "name": "invoiceTransactionCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Transaction Date of the invoice.",
            "name": "transactionDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Unique Transaction Identifier of the Invoice.",
            "name": "transactionNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Property where the AR Account exists. This is required.",
            "name": "invoiceHotelIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "reservationType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "guestProfileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "guestProfileIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "guestProfileType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "The Aging age of the invoice",
            "name": "age",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Name of the Guest who consumed these transactions.",
            "name": "guestName",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "originalAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "originalAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "paymentsAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "paymentsCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "balanceAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "balanceCurrencyCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "User-defined posting reference.",
            "name": "reference",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "User-defined posting remark.",
            "name": "remark",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "name": "adjusted",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "name": "parentInvoiceNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "name": "compressed",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "name": "compressedDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "name": "transferredOut",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "name": "transferredIn",
            "in": "query"
          },
          {
            "type": "string",
            "name": "marketDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Property where the AR Account exists. This is required.",
            "name": "marketHotelId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "marketCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "marketGroup",
            "in": "query"
          },
          {
            "type": "string",
            "name": "roomClassDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Property where the AR Account exists. This is required.",
            "name": "roomClassHotelId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "roomClassCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sourceDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Property where the AR Account exists. This is required.",
            "name": "sourceHotelId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sourceCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sourceGroup",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Cashier Id of the Cashier.",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cashier Name.",
            "name": "cashierName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Property where the AR Account exists. This is required.",
            "name": "transactionHotelId",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
            "name": "printTrxReceipt",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Unique identifier for the Transaction code.",
            "name": "accountInvoiceTransactionCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Transaction codes info.",
            "name": "transactionDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Category of the transaction code.",
            "name": "transactionGroup",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sub category of the transaction code.",
            "name": "transactionSubGroup",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Unique Universal product code of the transaction code.",
            "name": "universalProductCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
            "name": "routingInstructionsId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique code of the article.",
            "name": "articleCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Property where the AR Account exists. This is required.",
            "name": "articleHotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Indicates whether the article is inactive or not.",
            "name": "inactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Display Order sequence.",
            "name": "orderSequence",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Description of the article.",
            "name": "articleDescription",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Transaction code to which the article belongs.",
            "name": "transactionCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "articleAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "articleCurrencyCode",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether the article is available for post it.",
            "name": "availableForPostIt",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Red",
              "DarkRed",
              "Green",
              "DarkGreen",
              "LightGreen",
              "Orange",
              "White",
              "Yellow",
              "DarkYellow",
              "Purple",
              "Brown",
              "Gray",
              "Aqua",
              "Chocolate",
              "Blue",
              "LightBlue",
              "DarkBlue",
              "Cyan",
              "DarkCyan",
              "Magenta",
              "DarkMagenta",
              "Black"
            ],
            "type": "string",
            "description": "Color configuration type. This color configuration provides a visual category of entities.",
            "name": "color",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique Universal product code of the article.",
            "name": "articleUniversalProductCode",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Attach the credit card to profile.",
            "name": "attachCreditCardToProfile",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardHolderName",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumber",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberLast4Digits",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ],
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "name": "cardOrToken",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ],
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "name": "cardType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Expiration date of the credit card",
            "name": "expirationDate",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "expirationDateExpired",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Masked Expiration date of the credit card",
            "name": "expirationDateMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ],
            "type": "string",
            "name": "processing",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "swiped",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "name": "userDefinedCardType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "invoicePaymentCardId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "invoicePaymentCardIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "invoicePaymentCardIdType",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "currentAuthorizedAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currentAuthorizedAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "approvalAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "approvalAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the type of Linked profiles for a block.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "addresseeProfileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "addresseeProfileIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "addresseeProfileType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Name for the profile attached to the block.",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "City for the profile attached to the block.",
            "name": "city",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Phone for the profile attached to the block.",
            "name": "phone",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Flag to check Partail Transfer Allowed.",
            "name": "allowPartialTransferYn",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Flag to check Invoice Statement is Printed.",
            "name": "printed",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Invoice Statement Printed Date.",
            "name": "printedDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "storedFolioId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "storedFolioIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "storedFolioType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Name of the Stored Folio.",
            "name": "storedFolioName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "storedDebitFolioId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "storedDebitFolioIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "name": "storedDebitFolioType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Name of the Stored Debit Folio.",
            "name": "storedDebitFolioName",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The date specified in this field determines the balance forward date and balance forward total that is printed on the statement. (A balance forward shows the net amount for all invoices and payments (debits and credits) prior to the balance forward date as a single total, rather than itemizing them individually on the statement.)",
            "name": "balanceForwardDate",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "false",
            "description": "Flag to indicate if the associated Folios for the Invoices are to be included along with the the Statement.",
            "name": "inclFolios",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "false",
            "description": "Flag to indicate if Previousely Printed Invoices are to be included in the Statement. This is based on the Functionality for AR PRINTED INVOICES.",
            "name": "inclPrinted",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": "false",
            "description": "Flag to indicate if Zero Balances Invoices are to be included in the Statement.",
            "name": "inclZero",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "filterEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "filterStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Text which will be printed on the Invoice.",
            "name": "statementText",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the Statement to generate.",
            "schema": {
              "$ref": "#/definitions/statements"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ARStatements not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/transferInvoicesAndPayments": {
      "put": {
        "description": "Use this API to move all or a portion of an invoice or a payment from one AR account to another AR account <p><strong>OperationId:</strong>transferInvoicesAndPayments</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Move an invoice or a payment to another AR account",
        "operationId": "transferInvoicesAndPayments",
        "parameters": [
          {
            "description": "Request for transferring invoice(s) in AR.",
            "name": "invoicesAndPaymentsToTransfer",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/invoicesAndPaymentsToTransfer"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/transferPostings": {
      "put": {
        "description": "Use this API to transfer postings from one account receivable invoice to another account receivable invoice. <p><strong>OperationId:</strong>transferPostings</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ],
        "summary": "Transfer postings",
        "operationId": "transferPostings",
        "parameters": [
          {
            "description": "Request for transferring invoice posting(s)in AR.",
            "name": "transferPostings",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transferPostings"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    }
  },
  "definitions": {
    "aRAccountCommentCriteriaType": {
      "description": "The comments on the AR Account.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The internal unique ID for the AR Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountNo": {
          "description": "Account Number for the AR Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "The resort where the AR Account exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "profileId": {
          "description": "Internal Profile ID for the AR Account.",
          "$ref": "#/definitions/profileId"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "aRAccountCriteriaType": {
      "description": "Criteria type for an AR Account.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The internal unique ID for the AR Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountName": {
          "description": "Account Name for the AR Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "accountNo": {
          "description": "Account Number for the AR Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property where the AR Account exists. This is required.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "profileId": {
          "description": "Profile ID of the account",
          "$ref": "#/definitions/profileId"
        }
      }
    },
    "aRAccountFixedChargeCriteriaType": {
      "description": "The traces on the AR Account.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The internal unique ID for the AR Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "charge": {
          "description": "Holds specific details of fixed charge.",
          "$ref": "#/definitions/fixedChargeDetailType"
        },
        "hotelId": {
          "description": "The resort where the AR Account exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "schedule": {
          "description": "Holds schedule of fixed charge.",
          "$ref": "#/definitions/fixedChargeScheduleType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "aRAccountInvoicesPaymentsType": {
      "description": "AR Account Invoices Information.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The internal unique ID for the AR Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property where the Account exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoices": {
          "description": "List of all Invoices.",
          "$ref": "#/definitions/aRInvoicesType"
        },
        "monthEndCalcYN": {
          "description": "Month End Calculation.",
          "type": "boolean"
        },
        "paymentDueDays": {
          "description": "Number of days on which person can make payment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "payments": {
          "description": "List of all Payments made.",
          "$ref": "#/definitions/aRPaymentsType"
        },
        "profileId": {
          "description": "Profile ID of the Account.",
          "$ref": "#/definitions/profileId"
        },
        "summary": {
          "description": "The Summary Information of the Invoices for the Account.",
          "$ref": "#/definitions/aRBalanceType"
        }
      }
    },
    "aRAccountShortInfoType": {
      "description": "Accounts Receivabales Account details type charged for batched posting.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        }
      }
    },
    "aRAccountStatusType": {
      "description": "Type for the Account Status. Status can be restricted and a message/description added to the Account.",
      "type": "object",
      "properties": {
        "description": {
          "description": "User defined status message on the Account.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "restricted": {
          "description": "Flag to indicate if the Account is restricted.",
          "type": "boolean"
        },
        "restriction": {
          "description": "The Restriction Code added on the Account. This is available when the functionality for adding restriction codes is ON.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "aRAccountTraceCriteriaType": {
      "description": "The traces on the AR Account.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The internal unique ID for the AR Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "departmentId": {
          "description": "Indicates the Department code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "The resort where the AR Account exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationId": {
          "description": "Reservation ID of the reservation for which the traces are to be retrieved.",
          "$ref": "#/definitions/reservationId"
        },
        "resolveInfo": {
          "description": "Information regarding the status of the trace",
          "$ref": "#/definitions/traceResolveType"
        },
        "timeInfo": {
          "description": "Date of the trace.",
          "$ref": "#/definitions/traceTimeInfoType"
        },
        "traceText": {
          "description": "The information this trace contains.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "aRAccountType": {
      "description": "Accounts Receivabales Account details type.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountIndicators": {
          "description": "Indicators of additional information attached to the Account.",
          "$ref": "#/definitions/indicatorsType"
        },
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "accountTypeDescription": {
          "description": "The description of the Account Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "address": {
          "description": "Address information for the address which is attached to this AR Account.",
          "$ref": "#/definitions/addressInfoType"
        },
        "agingInfo": {
          "description": "The Aging balance information for this account, by Aging Buckets.",
          "$ref": "#/definitions/aRAgingInfoType"
        },
        "balance": {
          "description": "Open Balance of the Account for this property.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "batchStatement": {
          "description": "Include In Batch Statement",
          "type": "boolean"
        },
        "contactName": {
          "description": "The person to contact for this Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "creditLimit": {
          "description": "The maximum credit allowed for the Account.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "email": {
          "description": "Email information for the Account. This is the Email that is attached to this AR Account.",
          "$ref": "#/definitions/emailInfoType"
        },
        "emailStatementsReminders": {
          "description": "Indicates if the Account has opted to send the statements and reminders to the Account email address by default.",
          "type": "boolean"
        },
        "fixedCharges": {
          "description": "Fixed charges attached to this AR Account.",
          "$ref": "#/definitions/fixedChargesType"
        },
        "hotelId": {
          "description": "Property where the AR Account exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoices": {
          "description": "List of all Invoices.",
          "$ref": "#/definitions/aRInvoicesType"
        },
        "lastReminderInfo": {
          "description": "Report History Type used as based type for Remiders and Statements History types.",
          "type": "object",
          "properties": {
            "age": {
              "description": "The minimum age(days) of the invoices to be included in the Reminder",
              "type": "integer"
            },
            "dateSent": {
              "description": "The Reminder Letter name which is to be used for this Reminder based on the setup on the Account Type.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "historyExists": {
              "description": "Indicates that reminders history exists.",
              "type": "boolean"
            },
            "reportFileName": {
              "description": "Report file name when exists to allow report re-printing.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "reportName": {
              "description": "Report Name.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          }
        },
        "lastStatementInfo": {
          "description": "Report History Type used as based type for Remiders and Statements History types.",
          "type": "object",
          "properties": {
            "dateSent": {
              "description": "The Reminder Letter name which is to be used for this Reminder based on the setup on the Account Type.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "historyExists": {
              "description": "Indicates that statement history exists.",
              "type": "boolean"
            },
            "reportFileName": {
              "description": "Report file name when exists to allow report re-printing.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "reportName": {
              "description": "Report Name.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "statementNo": {
              "description": "When using Statement Numbering, a unique number is associated to the Statement.",
              "type": "integer"
            }
          }
        },
        "monthEndCalcYN": {
          "description": "Month End Calculation.",
          "type": "boolean"
        },
        "notes": {
          "description": "The Note details attached to the Account.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "paymentDueDays": {
          "description": "Number of days on which person can make payment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "payments": {
          "description": "List of all Payments made.",
          "$ref": "#/definitions/aRPaymentsType"
        },
        "permanent": {
          "description": "Indicates if this is a Permanent Account. Permanent Accounts cannot be deleted.",
          "type": "boolean"
        },
        "primary": {
          "description": "Indicates if this Account is the Primary Account for this Guest/Company.",
          "type": "boolean"
        },
        "printFoliosWithStatement": {
          "description": "Indicates if associated folios should be printed by default with the statement.",
          "type": "boolean"
        },
        "profileId": {
          "description": "Internal Profile ID for the AR Account.",
          "$ref": "#/definitions/profileId"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        },
        "summary": {
          "description": "The Summary Information of the Invoices for the Account.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "telephones": {
          "description": "The Telephone and Fax details attached to the Account.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/telephoneInfoType"
          }
        },
        "traces": {
          "description": "The Trace details attached to the Account.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/traceType"
          }
        },
        "type": {
          "description": "The type of Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "yearViewInfo": {
          "description": "The Year View balance information for this account.",
          "$ref": "#/definitions/aRYearViewInfoType"
        }
      }
    },
    "aRAccountsInvoicesPaymentsType": {
      "description": "Account Invoice information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRAccountInvoicesPaymentsType"
      }
    },
    "aRAccountsType": {
      "description": "Information regarding the AR Account.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRAccountType"
      }
    },
    "aRAgingCyclesType": {
      "description": "Collections of AR Aging Cycles.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRAgingType"
      }
    },
    "aRAgingInfoType": {
      "description": "Information regarding the aging balances for an account.",
      "type": "object",
      "properties": {
        "aging": {
          "description": "The debit and credit balance per Aging bucket.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/aRAgingType"
          }
        },
        "totalOutstanding": {
          "description": "The total debit and credit balance of the account.",
          "$ref": "#/definitions/aRBalanceType"
        }
      }
    },
    "aRAgingType": {
      "description": "Aging information for an Aging Bucket.",
      "type": "object",
      "properties": {
        "agingBucketRange": {
          "description": "The bucket description in terms of days. Example : 0-31 days",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "agingDate": {
          "description": "The start date and end date for this Aging bucket.",
          "$ref": "#/definitions/dateRangeType"
        },
        "agingEndDay": {
          "description": "The end number of days for this Aging bucket. Example: For the range 31-60 days, this would be 60.",
          "type": "integer"
        },
        "agingStartDay": {
          "description": "The start number of days for this Aging bucket. Example: For the range 31-60 days, this would be 31.",
          "type": "integer"
        },
        "balanceInfo": {
          "description": "The balance amounts for this bucket. Contains the Debit Balance, Credit Balance and the Total Balance.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "sequence": {
          "description": "The sequence for display.",
          "type": "integer"
        }
      }
    },
    "aRAppliedPaymentType": {
      "description": "Details of an AR Invoice.",
      "type": "object",
      "properties": {
        "addresseeInfo": {
          "description": "Addressee Information for the folio. This is available when the Addressee functionality is used and and Addressee is attached to the folio of the Invoice.",
          "$ref": "#/definitions/profileInfoType"
        },
        "adjusted": {
          "type": "boolean"
        },
        "age": {
          "description": "The Aging age of the invoice",
          "type": "integer"
        },
        "allowPartialTransferYn": {
          "description": "Flag to check Partail Transfer Allowed.",
          "type": "boolean"
        },
        "amount": {
          "description": "Current Amount of the Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "appliedAmount": {
          "description": "Applied Amount of the Invoice",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Amount still open which has not been paid",
          "$ref": "#/definitions/currencyAmountType"
        },
        "canBeModified": {
          "description": "Flag to indicate if postings or adjustments can be made to the invoice.",
          "type": "boolean"
        },
        "cashierInfo": {
          "description": "Cashier information. Contains Id and Name details of the cashier.",
          "$ref": "#/definitions/cashierInfoType"
        },
        "closeDate": {
          "description": "Close date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "compressed": {
          "type": "boolean"
        },
        "compressedDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "customNumbers": {
          "description": "Unique Custom Numbers associated with this record.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/customNumberType"
          }
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fiscalResponseType": {
          "description": "Provides information which is used for fiscal response processing.",
          "$ref": "#/definitions/fiscalResponseType"
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "guestName": {
          "description": "Name of the Guest who consumed these transactions.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "guestProfileId": {
          "description": "Guest Profile ID of the invoice.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Property where the invoice exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "invoiceType": {
          "description": "Invoice code of the invoice.",
          "$ref": "#/definitions/aRInvoiceCategory"
        },
        "market": {
          "description": "Invoice market code.",
          "$ref": "#/definitions/marketCodeInfoType"
        },
        "originalAmount": {
          "description": "Original Amount of the Invoice",
          "$ref": "#/definitions/currencyAmountType"
        },
        "parentInvoiceNo": {
          "type": "number"
        },
        "paymentCard": {
          "description": "Payment card details.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "paymentTrxNo": {
          "description": "Transaction no of the Payment.",
          "type": "number"
        },
        "payments": {
          "description": "Total Payments made to this Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingDate": {
          "description": "Posting date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "printed": {
          "description": "Flag to check Invoice Statement is Printed.",
          "type": "boolean"
        },
        "printedDate": {
          "description": "Invoice Statement Printed Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "remark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reservationId": {
          "description": "Reservation ID of the invoice.",
          "$ref": "#/definitions/reservationId"
        },
        "reservationInfo": {
          "description": "Reservation guest details.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "revenueDate": {
          "description": "Revenue date ID of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "roomClass": {
          "description": "Invoice room class code.",
          "$ref": "#/definitions/roomClassCodeInfoType"
        },
        "source": {
          "description": "Invoice source code.",
          "$ref": "#/definitions/sourceCodeInfoType"
        },
        "statementNo": {
          "description": "Statementno of the invoice.",
          "type": "integer"
        },
        "status": {
          "description": "Status of the invoice.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "storedDebitFolioId": {
          "description": "ID of the Stored Debit Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedDebitFolioName": {
          "description": "Name of the Stored Debit Folio.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "storedFolioId": {
          "description": "ID of the Stored Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedFolioName": {
          "description": "Name of the Stored Folio.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionCode": {
          "description": "Transaction code of the invoice.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionInfo": {
          "description": "Transaction information .",
          "$ref": "#/definitions/trxInfoType"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier of the Invoice.",
          "type": "number"
        },
        "transferDate": {
          "description": "Transfer date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferredIn": {
          "type": "boolean"
        },
        "transferredOut": {
          "type": "boolean"
        }
      }
    },
    "aRAppliedPaymentsType": {
      "description": "Applied Payment record.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRAppliedPaymentType"
      }
    },
    "aRApplyPaymentCriteriaType": {
      "description": "Criteria type for apply credits to Invoices. Requires a list of invoices to apply the credit.",
      "type": "object",
      "properties": {
        "account": {
          "description": "Account for which the credit will be applied.",
          "$ref": "#/definitions/aRAccountCriteriaType"
        },
        "applyType": {
          "description": "Defines how the payment has to be applied.",
          "$ref": "#/definitions/aRApplyType"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "invoices": {
          "description": "List of Invoices to which the payment may be applied.",
          "$ref": "#/definitions/aRPaymentInvoicesType"
        },
        "payments": {
          "description": "List of Payments which will be applied to the invoices.",
          "$ref": "#/definitions/aRPaymentsType"
        }
      }
    },
    "aRApplyType": {
      "description": "Apply payment Selectively to the Invoices included.",
      "type": "string",
      "enum": [
        "Default",
        "OldestInvoice",
        "ApplyToInvoices",
        "ApplySelectivelyToInvoices"
      ]
    },
    "aRBalanceType": {
      "description": "Balance information for AR.",
      "type": "object",
      "properties": {
        "credit": {
          "description": "The credit Balance amount. Any payment that is Unallocated i.e not applied against an invoice, is included in this.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debit": {
          "description": "Debit Balance amount. The amount owed by the Account.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "total": {
          "description": "The total balance i.e Debit minus Credit amounts.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "aRChargesPostingCriteriaType": {
      "description": "The charges which have to be posted.",
      "type": "object",
      "properties": {
        "account": {
          "description": "The account to which the charges have to be posted.",
          "$ref": "#/definitions/aRAccountCriteriaType"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "charges": {
          "description": "Information regarding the charges which have to be posted.",
          "$ref": "#/definitions/chargesCriteriaType"
        },
        "hotelId": {
          "description": "Property where the charges are to be posted.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoice": {
          "description": "The invoice to which the charges have to be posted.",
          "$ref": "#/definitions/aRInvoiceType"
        },
        "overrideCreditHoldCheck": {
          "type": "boolean"
        }
      }
    },
    "aRCompressInvoicesType": {
      "description": "Criteria type compressing invoices i.e grouping multiple invoices into one,for an Account.",
      "type": "object",
      "properties": {
        "account": {
          "description": "Account for which the invoices are compressed.",
          "$ref": "#/definitions/aRAccountCriteriaType"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "folioTypeName": {
          "description": "Folio Type for the Master Invoice which will be created.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "invoices": {
          "description": "List of Invoices which have to be compressed.",
          "$ref": "#/definitions/aRInvoicesType"
        },
        "reference": {
          "description": "Reference Text for the Master Invoice which will be created.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "remark": {
          "description": "Remarks for the Master Invoice which will be created.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "aRCreditCardPaymentInfoType": {
      "description": "AR Credit Card payment information.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Posted Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "fiscalFolioNo": {
          "description": "Bill Number returned by the Fiscal Printer.",
          "type": "number"
        },
        "folioNo": {
          "description": "The Folio number of this posting, if there was a Folio already generated.",
          "type": "number"
        },
        "guestName": {
          "description": "Guest Name .",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "postingDate": {
          "description": "Date of posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "profileId": {
          "description": "Guest profile ID.",
          "$ref": "#/definitions/profileId"
        },
        "reference": {
          "description": "Reference Text for the payment.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "remark": {
          "description": "Remarks for payment.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date of the payment.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Transaction number of the payment.",
          "type": "number"
        }
      }
    },
    "aRCreditCardPaymentsInfoType": {
      "description": "Collection of AR Credit Card payments Details.",
      "type": "object",
      "properties": {
        "aRCreditCardPayments": {
          "description": "AR Credit Card Payments info .",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/aRCreditCardPaymentInfoType"
          }
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "aRGenerateStatementCriteriaType": {
      "description": "Criteria to process AR Printed Statements - create history and update invoices.",
      "type": "object",
      "properties": {
        "statementCriteria": {
          "description": "Statement criteria for invoices which are to be included in the Statement.",
          "$ref": "#/definitions/aRStatementCriteriaType"
        },
        "statements": {
          "description": "Details of printed Statements received by Fetch Operation and sent to be printed. Statements type includes report sequence number and report file name.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/aRStatementType"
          }
        }
      }
    },
    "aRInvoiceCategory": {
      "type": "string",
      "enum": [
        "Normal",
        "Credit",
        "OldBalance",
        "PasserBy"
      ]
    },
    "aRInvoiceCriteriaType": {
      "description": "Details of an AR Invoice.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The internal unique ID for the AR Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "additionalFilter": {
          "description": "To apply additional filter on the posting of an invoice",
          "type": "object",
          "properties": {
            "cashierId": {
              "description": "Cashier Id of the Cashier.",
              "type": "number"
            },
            "checkNumberWildCard": {
              "description": "Lookup string which will try to match an existing Cheque number's.",
              "type": "string",
              "maxLength": 200,
              "minLength": 0
            },
            "dateRange": {
              "description": "The period start and end date.",
              "$ref": "#/definitions/dateRangeType"
            },
            "referenceWildCard": {
              "description": "Filters the results for reference.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "supplementWildCard": {
              "description": "Filter the results for supplement.",
              "type": "string",
              "maxLength": 200,
              "minLength": 0
            },
            "transactionCode": {
              "description": "Transaction number of the transactions.",
              "$ref": "#/definitions/codeListType"
            },
            "transactionSubGroup": {
              "description": "Transaction sub group of the transactions.",
              "$ref": "#/definitions/codeListType"
            }
          }
        },
        "addresseeInfo": {
          "description": "Addressee Information for the folio. This is available when the Addressee functionality is used and and Addressee is attached to the folio of the Invoice.",
          "$ref": "#/definitions/profileInfoType"
        },
        "adjusted": {
          "type": "boolean"
        },
        "age": {
          "description": "The Aging age of the invoice",
          "type": "integer"
        },
        "allowPartialTransferYn": {
          "description": "Flag to check Partail Transfer Allowed.",
          "type": "boolean"
        },
        "amount": {
          "description": "Current Amount of the Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Amount still open which has not been paid",
          "$ref": "#/definitions/currencyAmountType"
        },
        "canBeModified": {
          "description": "Flag to indicate if postings or adjustments can be made to the invoice.",
          "type": "boolean"
        },
        "cashierId": {
          "description": "The Cashier who is posting.",
          "$ref": "#/definitions/cashierId"
        },
        "cashierInfo": {
          "description": "Cashier information. Contains Id and Name details of the cashier.",
          "$ref": "#/definitions/cashierInfoType"
        },
        "closeDate": {
          "description": "Close date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "compressed": {
          "type": "boolean"
        },
        "compressedDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "customNumbers": {
          "description": "Unique Custom Numbers associated with this record.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/customNumberType"
          }
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fiscalResponseType": {
          "description": "Provides information which is used for fiscal response processing.",
          "$ref": "#/definitions/fiscalResponseType"
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "guestName": {
          "description": "Name of the Guest who consumed these transactions.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "guestProfileId": {
          "description": "Guest Profile ID of the invoice.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Property where the invoice exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "invoiceType": {
          "description": "Invoice code of the invoice.",
          "$ref": "#/definitions/aRInvoiceCategory"
        },
        "market": {
          "description": "Invoice market code.",
          "$ref": "#/definitions/marketCodeInfoType"
        },
        "originalAmount": {
          "description": "Original Amount of the Invoice",
          "$ref": "#/definitions/currencyAmountType"
        },
        "parentInvoiceNo": {
          "type": "number"
        },
        "paymentCard": {
          "description": "Payment card details.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "payments": {
          "description": "Total Payments made to this Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingDate": {
          "description": "Posting date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "printed": {
          "description": "Flag to check Invoice Statement is Printed.",
          "type": "boolean"
        },
        "printedDate": {
          "description": "Invoice Statement Printed Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "profileId": {
          "description": "Profile ID of the invoice.",
          "$ref": "#/definitions/profileId"
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "remark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reservationId": {
          "description": "Reservation ID of the invoice.",
          "$ref": "#/definitions/reservationId"
        },
        "reservationInfo": {
          "description": "Reservation guest details.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "revenueDate": {
          "description": "Revenue date ID of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "roomClass": {
          "description": "Invoice room class code.",
          "$ref": "#/definitions/roomClassCodeInfoType"
        },
        "source": {
          "description": "Invoice source code.",
          "$ref": "#/definitions/sourceCodeInfoType"
        },
        "statementNo": {
          "description": "Statementno of the invoice.",
          "type": "integer"
        },
        "status": {
          "description": "Status of the invoice.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "storedDebitFolioId": {
          "description": "ID of the Stored Debit Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedDebitFolioName": {
          "description": "Name of the Stored Debit Folio.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "storedFolioId": {
          "description": "ID of the Stored Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedFolioName": {
          "description": "Name of the Stored Folio.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionCode": {
          "description": "Transaction code of the invoice.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionInfo": {
          "description": "Transaction information .",
          "$ref": "#/definitions/trxInfoType"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier of the Invoice.",
          "type": "number"
        },
        "transferDate": {
          "description": "Transfer date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferredIn": {
          "type": "boolean"
        },
        "transferredOut": {
          "type": "boolean"
        }
      }
    },
    "aRInvoicePostingType": {
      "description": "Posting details.",
      "type": "object",
      "properties": {
        "approvalCode": {
          "description": "Approval code of the posting.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "approvalStatus": {
          "description": "Approval status of the posting.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "articleCode": {
          "description": "Information regarding the Article(Using Articles Functionality) of this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "canAdjustInvoice": {
          "description": "Indicator to determine if the transaction can be adjusted.",
          "type": "boolean"
        },
        "cashierInfo": {
          "$ref": "#/definitions/cashierInfoType"
        },
        "checkCount": {
          "description": "Check number count for the posting.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "checkNo": {
          "description": "Check number for the posting.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "commissionable": {
          "description": "Indicator to determine if the transaction is commissionable.",
          "type": "boolean"
        },
        "compPostingsInfo": {
          "description": "Comp Postings information for the folio.",
          "$ref": "#/definitions/compPostingsType"
        },
        "compRedemptionCode": {
          "description": "Comp redemption code assiciated to the transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "creditAmount": {
          "description": "The amount posted as credit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "creditInvoiceGuestName": {
          "description": "Guest Name of the Credit Invoice. For other invoices, this element will be empty.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "debitAmount": {
          "description": "The amount posted as debit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "depositTransactionId": {
          "description": "Tax Service Accounting Codes used.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "exchange": {
          "description": "Available when the Fetch Folio Search Type requests the amounts to be converted to a currency different from the Resort currency.",
          "$ref": "#/definitions/exchangeAmounts"
        },
        "fbaCertificate": {
          "description": "Flag indicates that the posting is Flexible Benefits Awards Certificate",
          "type": "boolean"
        },
        "financialTransactionIdList": {
          "description": "Collection of unique identifiers of the financial transactions.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "groupByCount": {
          "description": "When some SummaryPostingsGroupBy element is send as request ,then this element will represent how many transactions rolled up into this Summary Posting Type.",
          "type": "number"
        },
        "groupTypeInfo": {
          "description": "Information related to transaction grouping.",
          "$ref": "#/definitions/postingGroupType"
        },
        "paidOut": {
          "description": "Indicates if this transaction is a paid out transaction.",
          "type": "boolean"
        },
        "postedAmount": {
          "description": "Actual currency amount posted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingDate": {
          "description": "Date and time of posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "price": {
          "description": "Indicates the unit price of the consumption.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Indicates Quantity.",
          "type": "number"
        },
        "rateCode": {
          "description": "Rate code associated to this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "receiptNo": {
          "description": "The receipt number of the transaction, if there is a receipt generated.",
          "type": "number"
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "referenceTransactionNo": {
          "description": "Generate transaction number for the Posting.",
          "type": "number"
        },
        "remark": {
          "description": "Posting remarks.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "revenueDate": {
          "description": "The date on which the transaction has its revenue effect.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reversePaymentTransactionNo": {
          "description": "Reverse payment transaction unique identifier.",
          "type": "number"
        },
        "roundingDifferenceTrx": {
          "description": "Indicator to determine if the posting was a posting for the Rounding Difference.",
          "type": "boolean"
        },
        "serviceRecovery": {
          "description": "Flag to indicates service recovery",
          "type": "boolean"
        },
        "stampDuty": {
          "description": "Flag to identify a Stamp Duty Transaction.",
          "type": "boolean"
        },
        "taxInvoiceNo": {
          "description": "Tax invoice number generated by payment tax.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionAmount": {
          "description": "The amount of the transaction.",
          "type": "number"
        },
        "transactionCode": {
          "description": "Billing Transaction Code.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionDescription": {
          "description": "Billing Transaction Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        },
        "transactionType": {
          "description": "This is the transaction type which says whether it is a Consumption(C), Payment (FC) or Package (PK) and it is inherited from transaction code.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "updateInfo": {
          "description": "Update info associated to this transaction.",
          "type": "object",
          "properties": {
            "updateBy": {
              "type": "string"
            },
            "updateDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        }
      }
    },
    "aRInvoicePostingsType": {
      "description": "Invoice posting detail.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRInvoicePostingType"
      }
    },
    "aRInvoiceType": {
      "description": "Details of an AR Invoice.",
      "type": "object",
      "properties": {
        "addresseeInfo": {
          "description": "Addressee Information for the folio. This is available when the Addressee functionality is used and and Addressee is attached to the folio of the Invoice.",
          "$ref": "#/definitions/profileInfoType"
        },
        "adjusted": {
          "type": "boolean"
        },
        "age": {
          "description": "The Aging age of the invoice",
          "type": "integer"
        },
        "allowPartialTransferYn": {
          "description": "Flag to check Partail Transfer Allowed.",
          "type": "boolean"
        },
        "amount": {
          "description": "Current Amount of the Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Amount still open which has not been paid",
          "$ref": "#/definitions/currencyAmountType"
        },
        "canBeModified": {
          "description": "Flag to indicate if postings or adjustments can be made to the invoice.",
          "type": "boolean"
        },
        "cashierInfo": {
          "description": "Cashier information. Contains Id and Name details of the cashier.",
          "$ref": "#/definitions/cashierInfoType"
        },
        "closeDate": {
          "description": "Close date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "compressed": {
          "type": "boolean"
        },
        "compressedDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "customNumbers": {
          "description": "Unique Custom Numbers associated with this record.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/customNumberType"
          }
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fiscalResponseType": {
          "description": "Provides information which is used for fiscal response processing.",
          "$ref": "#/definitions/fiscalResponseType"
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "guestName": {
          "description": "Name of the Guest who consumed these transactions.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "guestProfileId": {
          "description": "Guest Profile ID of the invoice.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Property where the invoice exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "invoiceType": {
          "description": "Invoice code of the invoice.",
          "$ref": "#/definitions/aRInvoiceCategory"
        },
        "market": {
          "description": "Invoice market code.",
          "$ref": "#/definitions/marketCodeInfoType"
        },
        "originalAmount": {
          "description": "Original Amount of the Invoice",
          "$ref": "#/definitions/currencyAmountType"
        },
        "parentInvoiceNo": {
          "type": "number"
        },
        "paymentCard": {
          "description": "Payment card details.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "payments": {
          "description": "Total Payments made to this Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingDate": {
          "description": "Posting date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "printed": {
          "description": "Flag to check Invoice Statement is Printed.",
          "type": "boolean"
        },
        "printedDate": {
          "description": "Invoice Statement Printed Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "remark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reservationId": {
          "description": "Reservation ID of the invoice.",
          "$ref": "#/definitions/reservationId"
        },
        "reservationInfo": {
          "description": "Reservation guest details.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "revenueDate": {
          "description": "Revenue date ID of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "roomClass": {
          "description": "Invoice room class code.",
          "$ref": "#/definitions/roomClassCodeInfoType"
        },
        "source": {
          "description": "Invoice source code.",
          "$ref": "#/definitions/sourceCodeInfoType"
        },
        "statementNo": {
          "description": "Statementno of the invoice.",
          "type": "integer"
        },
        "status": {
          "description": "Status of the invoice.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "storedDebitFolioId": {
          "description": "ID of the Stored Debit Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedDebitFolioName": {
          "description": "Name of the Stored Debit Folio.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "storedFolioId": {
          "description": "ID of the Stored Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedFolioName": {
          "description": "Name of the Stored Folio.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionCode": {
          "description": "Transaction code of the invoice.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionInfo": {
          "description": "Transaction information .",
          "$ref": "#/definitions/trxInfoType"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier of the Invoice.",
          "type": "number"
        },
        "transferDate": {
          "description": "Transfer date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferredIn": {
          "type": "boolean"
        },
        "transferredOut": {
          "type": "boolean"
        }
      }
    },
    "aRInvoicesCriteriaType": {
      "description": "Criteria for searching Invoices.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRInvoiceCriteriaType"
      }
    },
    "aRInvoicesType": {
      "description": "A collection of AR Invoices.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRInvoiceType"
      }
    },
    "aROldBalanceChargeType": {
      "description": "AR Old Balances Single Posting Type.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Posted Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "date": {
          "description": "Date of the Posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "folioNo": {
          "description": "The Folio number of this posting, if there was a Folio entered.",
          "type": "number"
        },
        "paid": {
          "description": "Amount paid in resort currency.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingReference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "postingRemark": {
          "description": "User-defined Supplement.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "taxCodes": {
          "description": "Tax Codes details.",
          "$ref": "#/definitions/aRTaxCodesType"
        }
      }
    },
    "aROldBalancePostingType": {
      "description": "AR Old Balances Base Posting Type.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The Criteria for finding the Account.",
          "$ref": "#/definitions/aRAccountCriteriaType"
        },
        "aging": {
          "description": "The values for posting charges to an Aging Cycle",
          "$ref": "#/definitions/aRAgingInfoType"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "posting": {
          "description": "The values for posting a single charge to the account.",
          "$ref": "#/definitions/aROldBalanceChargeType"
        }
      }
    },
    "aROldBalancePostingsType": {
      "description": "Collections of Old Balance Postings",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aROldBalancePostingType"
      }
    },
    "aRPaymentCriteria": {
      "description": "Criteria for applying payments to invoices or posting an unallocated payment to an AR Account.",
      "type": "object",
      "properties": {
        "account": {
          "description": "Account to which the payment will be posted .",
          "$ref": "#/definitions/aRAccountCriteriaType"
        },
        "action": {
          "description": "Payment action to know from where the payment has been made.",
          "$ref": "#/definitions/postPaymentActionType"
        },
        "applyCCSurcharge": {
          "description": "Flag to indicate if Credit Card Surcharge has to be applied to this payment, when the functionality for Credit Card Surcharge is available.",
          "type": "boolean"
        },
        "applyCurrencyTaxes": {
          "description": "Flag to indidcate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.",
          "type": "boolean"
        },
        "applyType": {
          "description": "Defines how the payment has to be applied.",
          "$ref": "#/definitions/aRApplyType"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "changeDueAmount": {
          "description": "Amount of change given to guest.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "comments": {
          "description": "User Defined Comments. Used for Deposit Payment postings.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "compRedemptions": {
          "description": "Comp redemption information used to post as payment.",
          "$ref": "#/definitions/compRedemptionsType"
        },
        "creditablePaymentTaxes": {
          "description": "Used for Thailand Tax Functionality.The payment tax records that can be used for a Credit Note for this reservation.",
          "$ref": "#/definitions/paymentTaxesType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoices": {
          "description": "List of Invoices to which the payment may be applied.",
          "$ref": "#/definitions/aRPaymentInvoicesType"
        },
        "manualPaymentTaxInfo": {
          "description": "The Payment Tax information for Thailand Tax functionality. The invoice number and the date will be used.",
          "$ref": "#/definitions/paymentTaxType"
        },
        "overrideARCreditLimit": {
          "description": "Flag to override account receivable credit limit",
          "type": "boolean"
        },
        "overrideInsufficientCC": {
          "description": "Flag to allow a rebate by Credit Card",
          "type": "boolean"
        },
        "paymentMethod": {
          "description": "Payment method used by the payee.",
          "$ref": "#/definitions/cashieringPaymentMethodType"
        },
        "postingAmount": {
          "description": "Amount to post to the folio.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingReference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "postingRemark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "prepaidCardRedemptions": {
          "description": "Prepaid Card redemption information used to post as payment.",
          "$ref": "#/definitions/prepaidCardRedemptionsType"
        },
        "sequenceNo": {
          "description": "Sequence of the payment in a batch request.",
          "type": "integer"
        },
        "terminalId": {
          "description": "Applicable for chip and pin. The ID of the terminal where the chip and pin device is connected and where the payment is made.",
          "type": "string"
        },
        "vATOffset": {
          "description": "Flag to indidcate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.",
          "type": "boolean"
        }
      }
    },
    "aRPaymentInvoicesType": {
      "description": "AR Invoice to which the payment will be applied.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "description": "Details of an AR Invoice.",
        "type": "object",
        "properties": {
          "addresseeInfo": {
            "description": "Addressee Information for the folio. This is available when the Addressee functionality is used and and Addressee is attached to the folio of the Invoice.",
            "$ref": "#/definitions/profileInfoType"
          },
          "adjusted": {
            "type": "boolean"
          },
          "age": {
            "description": "The Aging age of the invoice",
            "type": "integer"
          },
          "allowPartialTransferYn": {
            "description": "Flag to check Partail Transfer Allowed.",
            "type": "boolean"
          },
          "amount": {
            "description": "Current Amount of the Invoice.",
            "$ref": "#/definitions/currencyAmountType"
          },
          "amountToApply": {
            "description": "Amount to apply to this Invoice.",
            "$ref": "#/definitions/currencyAmountType"
          },
          "balance": {
            "description": "Amount still open which has not been paid",
            "$ref": "#/definitions/currencyAmountType"
          },
          "canBeModified": {
            "description": "Flag to indicate if postings or adjustments can be made to the invoice.",
            "type": "boolean"
          },
          "cashierInfo": {
            "description": "Cashier information. Contains Id and Name details of the cashier.",
            "$ref": "#/definitions/cashierInfoType"
          },
          "closeDate": {
            "description": "Close date of the invoice.",
            "type": "string",
            "format": "date",
            "maxLength": 8
          },
          "compressed": {
            "type": "boolean"
          },
          "compressedDate": {
            "type": "string",
            "format": "date",
            "maxLength": 8
          },
          "customNumbers": {
            "description": "Unique Custom Numbers associated with this record.",
            "type": "array",
            "maxItems": 5,
            "items": {
              "$ref": "#/definitions/customNumberType"
            }
          },
          "fiscalBillNo": {
            "description": "The Fiscal Bill number of this posting",
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          },
          "fiscalResponseType": {
            "description": "Provides information which is used for fiscal response processing.",
            "$ref": "#/definitions/fiscalResponseType"
          },
          "folioDate": {
            "description": "Date of Folio Generation.",
            "type": "string",
            "format": "date",
            "maxLength": 8
          },
          "folioNo": {
            "description": "Folio Number.",
            "type": "number"
          },
          "folioNoWithPrefix": {
            "description": "The folio number with prefix value.",
            "type": "string",
            "maxLength": 200,
            "minLength": 0
          },
          "folioStatus": {
            "$ref": "#/definitions/folioStatusType"
          },
          "folioTexts": {
            "description": "Additional text fields to display on the folio.",
            "$ref": "#/definitions/folioTextsType"
          },
          "folioTypeName": {
            "description": "The name of the Folio Type used for the Folio Number sequence.",
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "guestName": {
            "description": "Name of the Guest who consumed these transactions.",
            "type": "string",
            "maxLength": 200,
            "minLength": 0
          },
          "guestProfileId": {
            "description": "Guest Profile ID of the invoice.",
            "$ref": "#/definitions/uniqueID_Type"
          },
          "hotelId": {
            "description": "Property where the invoice exists.",
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          },
          "internalFolioWindowID": {
            "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          },
          "invoiceNo": {
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "type": "number"
          },
          "invoiceType": {
            "description": "Invoice code of the invoice.",
            "$ref": "#/definitions/aRInvoiceCategory"
          },
          "market": {
            "description": "Invoice market code.",
            "$ref": "#/definitions/marketCodeInfoType"
          },
          "originalAmount": {
            "description": "Original Amount of the Invoice",
            "$ref": "#/definitions/currencyAmountType"
          },
          "parentInvoiceNo": {
            "type": "number"
          },
          "paymentCard": {
            "description": "Payment card details.",
            "$ref": "#/definitions/resPaymentCardType"
          },
          "payments": {
            "description": "Total Payments made to this Invoice.",
            "$ref": "#/definitions/currencyAmountType"
          },
          "postingDate": {
            "description": "Posting date of the invoice.",
            "type": "string",
            "format": "date",
            "maxLength": 8
          },
          "printed": {
            "description": "Flag to check Invoice Statement is Printed.",
            "type": "boolean"
          },
          "printedDate": {
            "description": "Invoice Statement Printed Date.",
            "type": "string",
            "format": "date",
            "maxLength": 8
          },
          "reference": {
            "description": "User-defined posting reference.",
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          },
          "remark": {
            "description": "User-defined posting remark.",
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          },
          "reservationId": {
            "description": "Reservation ID of the invoice.",
            "$ref": "#/definitions/reservationId"
          },
          "reservationInfo": {
            "description": "Reservation guest details.",
            "$ref": "#/definitions/reservationInfoType"
          },
          "revenueDate": {
            "description": "Revenue date ID of the invoice.",
            "type": "string",
            "format": "date",
            "maxLength": 8
          },
          "roomClass": {
            "description": "Invoice room class code.",
            "$ref": "#/definitions/roomClassCodeInfoType"
          },
          "source": {
            "description": "Invoice source code.",
            "$ref": "#/definitions/sourceCodeInfoType"
          },
          "statementNo": {
            "description": "Statementno of the invoice.",
            "type": "integer"
          },
          "status": {
            "description": "Status of the invoice.",
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          },
          "storedDebitFolioId": {
            "description": "ID of the Stored Debit Folio.",
            "$ref": "#/definitions/uniqueID_Type"
          },
          "storedDebitFolioName": {
            "description": "Name of the Stored Debit Folio.",
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          },
          "storedFolioId": {
            "description": "ID of the Stored Folio.",
            "$ref": "#/definitions/uniqueID_Type"
          },
          "storedFolioName": {
            "description": "Name of the Stored Folio.",
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          },
          "transactionCode": {
            "description": "Transaction code of the invoice.",
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          },
          "transactionDate": {
            "description": "Transaction Date of the invoice.",
            "type": "string",
            "format": "date",
            "maxLength": 8
          },
          "transactionInfo": {
            "description": "Transaction information .",
            "$ref": "#/definitions/trxInfoType"
          },
          "transactionNo": {
            "description": "Unique Transaction Identifier of the Invoice.",
            "type": "number"
          },
          "transferDate": {
            "description": "Transfer date of the invoice.",
            "type": "string",
            "format": "date",
            "maxLength": 8
          },
          "transferredIn": {
            "type": "boolean"
          },
          "transferredOut": {
            "type": "boolean"
          }
        }
      }
    },
    "aRPaymentType": {
      "description": "Details of an AR Payment.",
      "type": "object",
      "properties": {
        "age": {
          "description": "The Aging age of the payment.",
          "type": "integer"
        },
        "amount": {
          "description": "Amount of the Payment.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amountUsed": {
          "description": "Total amount applied against an invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Amount still open which has not been applied against any invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cashierInfo": {
          "description": "Cashier information. Contains Id and Name details of the cashier.",
          "$ref": "#/definitions/cashierInfoType"
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "paymentCard": {
          "description": "Payment card details.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "postingDate": {
          "description": "Posting date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "remark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "revenueDate": {
          "description": "Revenue date ID of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "sequenceNo": {
          "description": "When this PostingType is used to return the postings generated by a batch request, the sequence number is used to relate to the Request's sequence number.",
          "type": "integer"
        },
        "transactionCode": {
          "description": "Transaction code of the Payment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Date of the Payment.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier of the Payment.",
          "type": "number"
        },
        "transferDate": {
          "description": "Transfer of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferredIn": {
          "type": "boolean"
        },
        "transferredOut": {
          "type": "boolean"
        }
      }
    },
    "aRPaymentsCriteriaType": {
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "payment": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/aRPaymentCriteria"
          }
        }
      }
    },
    "aRPaymentsType": {
      "description": "A collection of AR Payments.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRPaymentType"
      }
    },
    "aRPostChargesInBatchCriteriaType": {
      "description": "Criteria for posting a charge to list of accounts.",
      "type": "object",
      "properties": {
        "accountIdList": {
          "description": "The list of internal unique ID for AR Accounts.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "cashierId": {
          "description": "The Cashier who is posting.",
          "$ref": "#/definitions/cashierId"
        },
        "chargeInfo": {
          "description": "The charge information to be applied to ar accounts.",
          "$ref": "#/definitions/chargeCriteriaType"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "aRProfileAgingInfoType": {
      "description": "Aging information for a profile. Includes information for the profile for all accounts across properties.",
      "type": "object",
      "properties": {
        "hotel": {
          "description": "Aging bucket information for the Property, based on the criteria selected.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "accountAging": {
                "description": "Account Aging details for Accounts which belong to this Property.",
                "$ref": "#/definitions/aRAccountsType"
              },
              "hotelId": {
                "description": "Property Code for the Aging information.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "totalHotelAging": {
                "description": "Aging bucket information for the Property, based on the criteria selected.",
                "$ref": "#/definitions/aRAgingInfoType"
              }
            }
          }
        },
        "totalProfileAging": {
          "description": "Aging bucket information for the Property, based on the criteria selected.",
          "$ref": "#/definitions/aRAgingInfoType"
        }
      }
    },
    "aRProfileYearViewInfoType": {
      "description": "Year View information for a profile. Includes information for the profile for all accounts across properties.",
      "type": "object",
      "properties": {
        "hotel": {
          "description": "Year View information for the Property, based on the criteria selected.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "account": {
                "description": "Account Year View details for Accounts which belong to this Property.",
                "$ref": "#/definitions/aRAccountsType"
              },
              "hotelId": {
                "description": "Property Code for the Year Veiw information.",
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              },
              "totalHotelYearView": {
                "description": "Year View information for the Property, based on the criteria selected.",
                "$ref": "#/definitions/aRYearViewInfoType"
              }
            }
          }
        },
        "totalProfileYearView": {
          "description": "Year View information for the Property, based on the criteria selected.",
          "$ref": "#/definitions/aRYearViewInfoType"
        }
      }
    },
    "aRReminderHistoryType": {
      "description": "Report History Type used as based type for Remiders and Statements History types.",
      "type": "object",
      "properties": {
        "age": {
          "description": "The minimum age(days) of the invoices to be included in the Reminder",
          "type": "integer"
        },
        "dateSent": {
          "description": "The Reminder Letter name which is to be used for this Reminder based on the setup on the Account Type.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reportFileName": {
          "description": "Report file name when exists to allow report re-printing.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reportName": {
          "description": "Report Name.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "aRReminderType": {
      "description": "AR Reminder Information Type.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The unique ID of the AR Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "age": {
          "description": "The minimum age(days) of the invoices to be included in the Reminder",
          "type": "integer"
        },
        "currencyCode": {
          "description": "Reminder summary currency code.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "cycle": {
          "description": "The current Reminder Cycle number for this reminder. This would be available when Simple Reminder functionality is ON.",
          "type": "integer"
        },
        "cycleUsed": {
          "description": "The Reminder Cycle calculation type(defined for the Account Type) for this Account. This is how the Reminder Cycle is being calculated. Values are Days or End Of Month.",
          "$ref": "#/definitions/reminderCycleType"
        },
        "hotelId": {
          "description": "Property where the Account belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoices": {
          "description": "Invoice details of the Reminder.",
          "$ref": "#/definitions/aRInvoicesType"
        },
        "isHistoryExists": {
          "description": "Indicates that reminders history exists.",
          "type": "boolean"
        },
        "lastCycle": {
          "description": "The Last Reminder Cycle used for this Account. This would be available when Simple Reminder functionality is ON.",
          "type": "integer"
        },
        "lastReminderSent": {
          "description": "The date of the Last Reminder Sent.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "letterName": {
          "description": "The Reminder Letter name which is to be used for this Reminder based on the setup on the Account Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "maxAge": {
          "description": "The maximum Age(days) of the invoices in the Reminder. This would be available when Simple Reminder functionality is OFF.",
          "type": "integer"
        },
        "reportFileName": {
          "description": "The Reminder report file name Letter name which is to be used for reprint.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "aRRemindersType": {
      "description": "Information about a Reminder.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRReminderType"
      }
    },
    "aRStatementCriteriaType": {
      "description": "Statements criteria for AR Accounts.",
      "type": "object",
      "properties": {
        "balanceForwardDate": {
          "description": "The date specified in this field determines the balance forward date and balance forward total that is printed on the statement. (A balance forward shows the net amount for all invoices and payments (debits and credits) prior to the balance forward date as a single total, rather than itemizing them individually on the statement.)",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "filterDate": {
          "description": "Date Range Filter for the Invoices which are to be included in the Statement.",
          "$ref": "#/definitions/dateRangeType"
        },
        "inclFolios": {
          "description": "Flag to indicate if the associated Folios for the Invoices are to be included along with the the Statement.",
          "type": "boolean"
        },
        "inclPrinted": {
          "description": "Flag to indicate if Previousely Printed Invoices are to be included in the Statement. This is based on the Functionality for AR PRINTED INVOICES.",
          "type": "boolean"
        },
        "inclZero": {
          "description": "Flag to indicate if Zero Balances Invoices are to be included in the Statement.",
          "type": "boolean"
        },
        "statementText": {
          "description": "Text which will be printed on the Invoice.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "aRStatementHistoryType": {
      "description": "Report History Type used as based type for Remiders and Statements History types.",
      "type": "object",
      "properties": {
        "dateSent": {
          "description": "The Reminder Letter name which is to be used for this Reminder based on the setup on the Account Type.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reportFileName": {
          "description": "Report file name when exists to allow report re-printing.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reportName": {
          "description": "Report Name.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "statementNo": {
          "description": "When using Statement Numbering, a unique number is associated to the Statement.",
          "type": "integer"
        }
      }
    },
    "aRStatementType": {
      "description": "Details about an AR Statement.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The unique ID of the AR Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "balance": {
          "description": "The Statement Balance.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "hotelId": {
          "description": "Property where the Account belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inclFolios": {
          "description": "Flag to indicate if Folios are to be printed along with the Statement.",
          "type": "boolean"
        },
        "invoices": {
          "description": "Invoice details of the Statement.",
          "$ref": "#/definitions/aRInvoicesType"
        },
        "reportFileName": {
          "description": "The Statement Report name which should be used for printing.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reportSeqNo": {
          "description": "Internal Report Sequence Number for the which is used to mark statement invoices",
          "type": "integer"
        },
        "statementName": {
          "description": "The Statement Report name which should be used for printing.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "statementNo": {
          "description": "Statement Number for the Statement, when the functionality for Numbering is ON.",
          "type": "integer"
        },
        "type": {
          "description": "The Type of Statement used.",
          "$ref": "#/definitions/statementType"
        }
      }
    },
    "aRTaxCodeType": {
      "description": "AR Old Balances Single Posting Type - Tax and Transaction Code details.",
      "type": "object",
      "properties": {
        "taxAmount": {
          "description": "Value of the Tax entered.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "taxCode": {
          "description": "Tax Code number",
          "type": "integer",
          "maximum": 20,
          "minimum": 1
        },
        "transactionCode": {
          "description": "Transaction Code Value",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "aRTaxCodesType": {
      "description": "Values of atmost 20 Taxes entered.",
      "type": "array",
      "maxItems": 20,
      "items": {
        "$ref": "#/definitions/aRTaxCodeType"
      }
    },
    "aRTransactionType": {
      "description": "Transaction Information.",
      "type": "object",
      "properties": {
        "invoices": {
          "description": "List of Invoices.",
          "$ref": "#/definitions/accountInvoicesInfoType"
        },
        "payments": {
          "description": "List of Payments.",
          "$ref": "#/definitions/accountPaymentsInfoType"
        }
      }
    },
    "aRTransferPostingsCriteriaType": {
      "type": "object",
      "properties": {
        "fromInvoice": {
          "description": "From Invoice and Invoice posting detail.",
          "type": "object",
          "properties": {
            "invoice": {
              "description": "Invoice detail.",
              "$ref": "#/definitions/aRInvoiceCriteriaType"
            },
            "invoicePostings": {
              "description": "Invoice postings detail.",
              "$ref": "#/definitions/aRInvoicePostingsType"
            }
          }
        },
        "toInvoice": {
          "description": "To Invoice detail.",
          "type": "object",
          "properties": {
            "invoice": {
              "description": "Invoice detail.",
              "$ref": "#/definitions/aRInvoiceCriteriaType"
            }
          }
        }
      }
    },
    "aRYearViewInfoType": {
      "description": "Information regarding Year View balances for an account.",
      "type": "object",
      "properties": {
        "totalOutstanding": {
          "description": "The total debit and credit balance of the account.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "yearView": {
          "description": "The debit and credit balance per account.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/aRYearViewType"
          }
        }
      }
    },
    "aRYearViewType": {
      "description": "Year information for an Year View.",
      "type": "object",
      "properties": {
        "balanceInfo": {
          "description": "The balance amounts for this date range. Contains the Debit Balance, Credit Balance and the Total Balance.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "dateRange": {
          "description": "The period start and end date.",
          "$ref": "#/definitions/dateRangeType"
        },
        "runningTotal": {
          "description": "The running total balance for the date range.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "account": {
      "description": "Response for the request to fetch details for an AR Account.",
      "type": "object",
      "properties": {
        "accountDetails": {
          "description": "Account Details. Details can include information regarding Aging, Reminders, Statements, invoices, payments, notes and traces.",
          "$ref": "#/definitions/aRAccountType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "accountComment": {
      "description": "Request to create a Comment for an Account.",
      "type": "object",
      "properties": {
        "commentInfo": {
          "description": "Comment information to be added to the Account.",
          "$ref": "#/definitions/aRAccountCommentCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "accountCriteria": {
      "description": "Request to create a new AR Account",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to create an AR Account.",
          "$ref": "#/definitions/aRAccountType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "accountFixedCharge": {
      "description": "Request to create a Fixed Charge for an Account.",
      "type": "object",
      "properties": {
        "fixedChargeInfo": {
          "description": "Fixed charge information to be added to the Account.",
          "$ref": "#/definitions/aRAccountFixedChargeCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "accountInvoiceInfoType": {
      "description": "Details of an AR Invoice.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "addresseeInfo": {
          "description": "Addressee Information for the folio. This is available when the Addressee functionality is used and and Addressee is attached to the folio of the Invoice.",
          "$ref": "#/definitions/profileInfoType"
        },
        "adjusted": {
          "type": "boolean"
        },
        "age": {
          "description": "The Aging age of the invoice",
          "type": "integer"
        },
        "allowPartialTransferYn": {
          "description": "Flag to check Partail Transfer Allowed.",
          "type": "boolean"
        },
        "amount": {
          "description": "Current Amount of the Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Amount still open which has not been paid",
          "$ref": "#/definitions/currencyAmountType"
        },
        "canBeModified": {
          "description": "Flag to indicate if postings or adjustments can be made to the invoice.",
          "type": "boolean"
        },
        "cashierInfo": {
          "description": "Cashier information. Contains Id and Name details of the cashier.",
          "$ref": "#/definitions/cashierInfoType"
        },
        "closeDate": {
          "description": "Close date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "compressed": {
          "type": "boolean"
        },
        "compressedDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "customNumbers": {
          "description": "Unique Custom Numbers associated with this record.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/customNumberType"
          }
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fiscalResponseType": {
          "description": "Provides information which is used for fiscal response processing.",
          "$ref": "#/definitions/fiscalResponseType"
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "guestName": {
          "description": "Name of the Guest who consumed these transactions.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "guestProfileId": {
          "description": "Guest Profile ID of the invoice.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Property where the invoice exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "invoiceType": {
          "description": "Invoice code of the invoice.",
          "$ref": "#/definitions/aRInvoiceCategory"
        },
        "market": {
          "description": "Invoice market code.",
          "$ref": "#/definitions/marketCodeInfoType"
        },
        "originalAmount": {
          "description": "Original Amount of the Invoice",
          "$ref": "#/definitions/currencyAmountType"
        },
        "parentInvoiceNo": {
          "type": "number"
        },
        "paymentCard": {
          "description": "Payment card details.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "payments": {
          "description": "Total Payments made to this Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingDate": {
          "description": "Posting date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "printed": {
          "description": "Flag to check Invoice Statement is Printed.",
          "type": "boolean"
        },
        "printedDate": {
          "description": "Invoice Statement Printed Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "remark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reservationId": {
          "description": "Reservation ID of the invoice.",
          "$ref": "#/definitions/reservationId"
        },
        "reservationInfo": {
          "description": "Reservation guest details.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "revenueDate": {
          "description": "Revenue date ID of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "roomClass": {
          "description": "Invoice room class code.",
          "$ref": "#/definitions/roomClassCodeInfoType"
        },
        "source": {
          "description": "Invoice source code.",
          "$ref": "#/definitions/sourceCodeInfoType"
        },
        "statementNo": {
          "description": "Statementno of the invoice.",
          "type": "integer"
        },
        "status": {
          "description": "Status of the invoice.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "storedDebitFolioId": {
          "description": "ID of the Stored Debit Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedDebitFolioName": {
          "description": "Name of the Stored Debit Folio.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "storedFolioId": {
          "description": "ID of the Stored Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedFolioName": {
          "description": "Name of the Stored Folio.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionCode": {
          "description": "Transaction code of the invoice.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionInfo": {
          "description": "Transaction information .",
          "$ref": "#/definitions/trxInfoType"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier of the Invoice.",
          "type": "number"
        },
        "transferDate": {
          "description": "Transfer date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferredIn": {
          "type": "boolean"
        },
        "transferredOut": {
          "type": "boolean"
        }
      }
    },
    "accountInvoicesInfoType": {
      "description": "Account Invoice Info.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/accountInvoiceInfoType"
      }
    },
    "accountPaymentInfoType": {
      "description": "Details of an AR Payment.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "age": {
          "description": "The Aging age of the payment.",
          "type": "integer"
        },
        "amount": {
          "description": "Amount of the Payment.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amountUsed": {
          "description": "Total amount applied against an invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Amount still open which has not been applied against any invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cashierInfo": {
          "description": "Cashier information. Contains Id and Name details of the cashier.",
          "$ref": "#/definitions/cashierInfoType"
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "paymentCard": {
          "description": "Payment card details.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "postingDate": {
          "description": "Posting date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "remark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "revenueDate": {
          "description": "Revenue date ID of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "sequenceNo": {
          "description": "When this PostingType is used to return the postings generated by a batch request, the sequence number is used to relate to the Request's sequence number.",
          "type": "integer"
        },
        "transactionCode": {
          "description": "Transaction code of the Payment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Date of the Payment.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier of the Payment.",
          "type": "number"
        },
        "transferDate": {
          "description": "Transfer of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferredIn": {
          "type": "boolean"
        },
        "transferredOut": {
          "type": "boolean"
        }
      }
    },
    "accountPaymentsInfoType": {
      "description": "Account Payments info .",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/accountPaymentInfoType"
      }
    },
    "accountTrace": {
      "description": "Request to create a Trace for an Account.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "traceInfo": {
          "description": "Trace information to be added to the Account.",
          "$ref": "#/definitions/aRAccountTraceCriteriaType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "accountsInfo": {
      "description": "Response for the request to search for AR Accounts. Based on the criteria, the response can contain a list of AR Accounts and their AR information.",
      "type": "object",
      "properties": {
        "accountsDetails": {
          "description": "List of AR Accounts.",
          "$ref": "#/definitions/aRAccountsType"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "addressInfoType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "addressSearchType": {
      "description": "Address Details such as city, state, country, postal code etc.",
      "type": "object",
      "properties": {
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "excludeNoCity": {
          "description": "When true indicates that only profiles with city will be fetched.",
          "type": "boolean"
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "streetAddress": {
          "description": "First Line of Street Address. For profile search it matches the first Address line.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "addressType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "maxLength": 80,
            "minLength": 0
          }
        },
        "barCode": {
          "description": "The postal barcode for the address.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        },
        "updateReservations": {
          "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
          "type": "boolean"
        }
      }
    },
    "advanceCheckInType": {
      "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
      "type": "object",
      "properties": {
        "advanceCheckedIn": {
          "description": "Indicates if the reservation is marked as Advance Checked In",
          "type": "boolean"
        },
        "eTRComments": {
          "description": "ETR Comments",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "expectedReturnTime": {
          "description": "Expected Return Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "anonymizationStatusType": {
      "description": "Guest has been anonymized.",
      "type": "string",
      "enum": [
        "Requested",
        "Anonymized"
      ]
    },
    "anonymizationType": {
      "description": "Provides information about guest's anonymization status.",
      "type": "object",
      "properties": {
        "anonymizationDate": {
          "description": "Date and Time when the guest was anonymized.",
          "type": "string",
          "format": "date-time"
        },
        "anonymizationStatus": {
          "description": "Status of anonymization such as Requested or Anonymized.",
          "$ref": "#/definitions/anonymizationStatusType"
        }
      }
    },
    "arAccountCopy": {
      "description": "Request to copy AR Account",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for copying AR Account",
          "$ref": "#/definitions/copyARAccountCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "arAgingCycles": {
      "description": "Response for Fetch AR Aging Cycles.",
      "type": "object",
      "properties": {
        "agingCycles": {
          "description": "Aging Cycles for the selected Hotel",
          "$ref": "#/definitions/aRAgingCyclesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "arChargesPostingCriteria": {
      "description": "Request to post charges to an existing invoice, when the functionality is available. If the invoice should not be modified or if the folio should not be modified,based on other functionalities, then the charges cannot be posted to the invoice.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Information regarding the Account, Invoice and the charges which have to be posted to the invoice.",
          "$ref": "#/definitions/aRChargesPostingCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "arCompressInvoices": {
      "description": "Request to compress two or more invoices for an Account",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Details for the invoices which have to be compressed and the new Parent Invoice which will be created.",
          "$ref": "#/definitions/aRCompressInvoicesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "arCreditCardPayments": {
      "description": "Response after fetching AR credit card payments.",
      "type": "object",
      "properties": {
        "aRCreditCardPaymentsDetails": {
          "description": "AR Credit Card Payment Details for the Account.",
          "$ref": "#/definitions/aRCreditCardPaymentsInfoType"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "arCreditCardPaymentsToTransfer": {
      "description": "Request to transfer AR Credit Card payments.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for the request to transfer AR Credit Card payments.",
          "$ref": "#/definitions/transferARCreditCardPaymentsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "arFolioPrinters": {
      "description": "Response to the request to fetch the Folio Printers applicable for a Folio, based on the",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "printers": {
          "description": "List of Printers which are applicable for this Folio.",
          "$ref": "#/definitions/folioPrintersType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "arInvoice": {
      "description": "Request to create a new Invoice for an Account.",
      "type": "object",
      "properties": {
        "invoice": {
          "description": "Invoice criteria for the creation of the invoice. Includes the transactions which are part of the Invoice.",
          "$ref": "#/definitions/createARInvoiceCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "arInvoiceDetails": {
      "description": "Response to the request to create an invoice for an Account.",
      "type": "object",
      "properties": {
        "invoice": {
          "description": "Details of the invoices which was created.",
          "$ref": "#/definitions/aRInvoicesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "arInvoicesAccount": {
      "description": "Request to change AR invoice(s) account in AR.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for changing invoice(s) account.",
          "$ref": "#/definitions/changeARInvoicesAccountCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "arOldBalances": {
      "description": "Request to Post AR Old Balances",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "oldBalances": {
          "description": "Details for Posting AR Old Balance Single Postings",
          "$ref": "#/definitions/aROldBalancePostingsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "arPayments": {
      "description": "Response notifying if the posting of a payment to an AR Account.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "payments": {
          "description": "List of Postings produced by Post AR Payment Request.",
          "$ref": "#/definitions/aRPaymentsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "arPaymentsToBeCreated": {
      "description": "Request to post a payment to an AR Account and apply the payment to Invoices..",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for the payment information to be posted.",
          "$ref": "#/definitions/aRPaymentsCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "arTransactions": {
      "description": "Response after fetching AR transaction details.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactions": {
          "description": "Invoice and Payment Details for the Account.",
          "$ref": "#/definitions/aRTransactionType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in the response invoices/payments.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "articleInfoType": {
      "description": "Information regarding an article.",
      "type": "object",
      "properties": {
        "articleCode": {
          "description": "Unique code of the article.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the article.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel code to which the article belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates whether the article is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "postIt": {
          "description": "Post it information of the article.",
          "$ref": "#/definitions/articlePostItType"
        },
        "price": {
          "description": "Default price of the article.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionCode": {
          "description": "Transaction code to which the article belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "articlePostItType": {
      "description": "Post it information of an article.",
      "type": "object",
      "properties": {
        "availableForPostIt": {
          "description": "Indicates whether the article is available for post it.",
          "type": "boolean"
        },
        "color": {
          "description": "Color indicator which is only configurable if article is available for post it.",
          "$ref": "#/definitions/colorType"
        }
      }
    },
    "authorizationInfoType": {
      "type": "object",
      "properties": {
        "approvalAmount": {
          "description": "Approved amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "The approval code authenticates the authorization.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "originalAuthSequence": {
          "description": "Unique Authorization Sequence for the authorization and settlement.",
          "type": "integer"
        },
        "vendorTranId": {
          "description": "Vendor transaction id for the authorization.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "authorizationRuleType": {
      "description": "Configured rule for computing the amount to authorize.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The amount applicable to the authorization rule.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "code": {
          "description": "The authorization rule code.",
          "type": "integer",
          "pattern": "[0-9]{1,9}"
        },
        "percent": {
          "description": "A percentage value if the authorization rule is percentage based.",
          "type": "number"
        }
      }
    },
    "authorizerInfoType": {
      "description": "Authorizer Information",
      "type": "object",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        }
      }
    },
    "basicEmailType": {
      "description": "Email address",
      "type": "string",
      "maxLength": 2000,
      "minLength": 0
    },
    "batchChargesToPost": {
      "description": "Request for posting a charge in a batch to list of accounts.",
      "type": "object",
      "properties": {
        "criteria": {
          "$ref": "#/definitions/aRPostChargesInBatchCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bedTaxReportingType": {
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "type": "object",
      "properties": {
        "taxRegistrationNo": {
          "description": "Tax Registration Number for Maldives Bed Tax Reporting.",
          "type": "number"
        },
        "taxableDays": {
          "description": "Number of days for which the Maldives tax is applicable.",
          "type": "integer"
        },
        "visaExpiryDate": {
          "description": "Visa Expiration Date used for Maldives Bed Tax Reporting",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaIssueDate": {
          "description": "Visa Issue Date used for Maldives Bed Tax Reporting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaNumber": {
          "description": "Visa number used for Maldives Bed Tax Reporting",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "billingPrivilegesType": {
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "type": "object",
      "properties": {
        "allowAutoCheckin": {
          "description": "Indicated if a new reservation should be created and automatically checked in whenever the room is checked out. Available for pseudo room types only.",
          "type": "boolean"
        },
        "autoSettlement": {
          "description": "Indicates if the is a candidate for auto folio settlement.",
          "type": "boolean"
        },
        "autoSettlementFreq": {
          "description": "The interval of days between each auto folio settlement.",
          "type": "integer"
        },
        "autoSettlementType": {
          "description": "The folio settlement type for auto folio settlement.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "creditLimitAutoPay": {
          "description": "Indicates if the reservation will be included in the Automatic Credit Limit Overages process and also be listed in the Credit Limit Overages screen results.",
          "type": "boolean"
        },
        "directBillAuthorized": {
          "description": "If Direct bill is authorized this will hold User ID who authorized it.",
          "type": "boolean"
        },
        "folioCloseDate": {
          "description": "Date when folio was closed. This works with PostStayCharging flag.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postStayCharging": {
          "description": "Indicates if the reservation has charging privileges after checkout.",
          "type": "boolean"
        },
        "postingRestriction": {
          "description": "Flag used by interface program during check in.",
          "type": "boolean"
        },
        "preStayCharging": {
          "description": "Indicates if the reservation has charging privileges before arrival.",
          "type": "boolean"
        },
        "scheduledCheckout": {
          "description": "Indicates if the guest is scheduled for automatic check out.",
          "type": "boolean"
        },
        "scheduledCheckoutTime": {
          "description": "Time of automatic check out if guest is schedule for automatic check out.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "videoCheckout": {
          "description": "Indicates if the guest can do video checkout",
          "type": "boolean"
        }
      }
    },
    "blockIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "cardNumberTypeType": {
      "description": "Simple type for indicating if credit card number is tokenized.",
      "type": "string",
      "enum": [
        "CardNumber",
        "Token"
      ]
    },
    "cardProcessingType": {
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardTypeType": {
      "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
      "type": "string",
      "enum": [
        "Ab",
        "Am",
        "Ax",
        "Cb",
        "Dc",
        "Ds",
        "Dt",
        "Ec",
        "Er",
        "Jc",
        "Jl",
        "Mc",
        "Nb",
        "So",
        "St",
        "Sw",
        "Va",
        "Xy",
        "Zz",
        "Cp",
        "Cu"
      ]
    },
    "cashierId": {
      "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
      "type": "number"
    },
    "cashierInfoType": {
      "description": "Cashier information. Contains Id and Name details of the cashier.",
      "type": "object",
      "properties": {
        "cashierId": {
          "description": "Cashier Id of the Cashier.",
          "type": "number"
        },
        "cashierName": {
          "description": "Cashier Name.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "cashieringPaymentMethodType": {
      "type": "object",
      "properties": {
        "authorizationApproval": {
          "description": "Authorization approval record.",
          "$ref": "#/definitions/authorizationInfoType"
        },
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            }
          }
        },
        "folioView": {
          "type": "integer"
        },
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "paymentMethod": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "track2Data": {
          "description": "Track2 data for the card which would be sent to the CC vendor as part of the authorization.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "cashieringTransactionTypeType": {
      "description": "Wrapper Transaction Type.",
      "type": "string",
      "enum": [
        "Revenue",
        "Payment",
        "Wrapper"
      ]
    },
    "changeARInvoicesAccountCriteriaType": {
      "description": "Criteria for changing AR invoice(s) account.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "invoices": {
          "description": "AR Invoice(s) to be changed.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/aRInvoiceType"
          }
        },
        "toAccount": {
          "description": "The Account which will be assigned to selected invoices.",
          "$ref": "#/definitions/aRAccountCriteriaType"
        }
      }
    },
    "chargeCriteriaType": {
      "description": "Criteria information for posting a charge.",
      "type": "object",
      "properties": {
        "applyRoutingInstructions": {
          "description": "Apply room routing when making this posting.",
          "type": "boolean"
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "articleCode": {
          "description": "Article ID.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "autoPosting": {
          "description": "True indicates the Transaction Code is allowed to be posted automatically.",
          "type": "boolean"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "checkNumber": {
          "description": "Indicates the Cheque number.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "financialTransactionIdList": {
          "description": "Collection of unique identifiers of the financial transactions.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "postingQuantity": {
          "description": "Quantity to post to the folio.",
          "type": "integer"
        },
        "postingReference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "postingRemark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "price": {
          "description": "Amount to post to the folio.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionCode": {
          "description": "Transaction Code to post.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "usePackageAllowance": {
          "description": "Use the applicable package allowance when making this posting.",
          "type": "boolean"
        }
      }
    },
    "chargesCriteriaType": {
      "description": "Collection of Charges to be posted.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/chargeCriteriaType"
      }
    },
    "codeDescriptionType": {
      "description": "This contains a generic code and description information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "maxLength": 20,
        "minLength": 0
      }
    },
    "colorType": {
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "type": "string",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "commentInfoType": {
      "description": "Comment related to the profile/reservation.",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "commentType": {
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "type": "object",
      "properties": {
        "actionDate": {
          "description": "Indicates at which date an action described in the comment must be taken.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "actionType": {
          "description": "Specifies type of action described in the comments.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "commentTitle": {
          "description": "Specifies Comment's Title.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "confidential": {
          "description": "When true, the comment may be confidential.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "If specified comment belongs to the Hotel, otherwise it is a global comment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "internal": {
          "description": "When true, the comment may not be shown to the consumer. When false, the comment may be shown to the consumer.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "notificationLocation": {
          "description": "Notification Location associated with the Note.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "overrideInternal": {
          "description": "When true, the note internal could be modified.",
          "type": "boolean"
        },
        "protectDescription": {
          "description": "When true, the note title will be populated from the note type description and couldn't be modified.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "type": {
          "description": "Specifies type of the comment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Comment type Description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        }
      }
    },
    "commissionPayoutToType": {
      "type": "string",
      "enum": [
        "TravelAgent",
        "Source",
        "TravelAgentSource",
        "None"
      ]
    },
    "communicationStatusType": {
      "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
      "type": "string",
      "enum": [
        "Pending",
        "Completed",
        "Failed",
        "Sent",
        "Received",
        "Cancelled",
        "PendingAvailability"
      ]
    },
    "compPostingsType": {
      "description": "Collection of comp postings.",
      "type": "object",
      "properties": {
        "approvalStatus": {
          "description": "Approval status of the comp account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "authorizer": {
          "description": "Authorizer name of the Comp Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "compRedemptionsType": {
      "description": "Information regarding Complimentary Bucket Redemption object.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/redemptionType"
      }
    },
    "compressedARInvoices": {
      "description": "Response for the request to compress two or more invoices.",
      "type": "object",
      "properties": {
        "invoice": {
          "description": "Details of the Parent invoice which was created, when the invoices were compressed.",
          "$ref": "#/definitions/aRInvoiceType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyARAccountCriteriaType": {
      "description": "Criteria for copying AR account.",
      "type": "object",
      "properties": {
        "sourceAccount": {
          "description": "Account to be copied",
          "$ref": "#/definitions/aRAccountCriteriaType"
        },
        "targetHotels": {
          "description": "Hotel code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        }
      }
    },
    "countryNameType": {
      "description": "Code for a country or a nationality.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Used for Character Strings, length 0 to 200.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "createARInvoiceCriteriaType": {
      "description": "Criteria to Create a new AR Invoice.",
      "type": "object",
      "properties": {
        "account": {
          "description": "Account details for whom the invoice is being created.",
          "$ref": "#/definitions/aRAccountCriteriaType"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "charges": {
          "description": "Information regarding the charges which have to be posted.",
          "$ref": "#/definitions/chargesCriteriaType"
        },
        "fiscalFolioInfo": {
          "description": "Generate Fiscal Folio Criteria type to be used for fiscal folio generation.",
          "$ref": "#/definitions/fiscalServiceType"
        },
        "folioNameValue": {
          "description": "Custom Folio Name Value Information to be saved",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/nameValueHeaderDetailType"
          }
        },
        "guestProfileId": {
          "description": "Guest Profile ID of the invoice.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "market": {
          "description": "Invoice market code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "overrideCreditHoldCheck": {
          "type": "boolean"
        },
        "reason": {
          "description": "The Reason Code and Reason Text which is required when a folio is generated. This input is mandatory when the parameter Credit Bill Reason is active for Credit Bills",
          "$ref": "#/definitions/folioReasonType"
        },
        "reference": {
          "description": "User-defined invoice reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "remark": {
          "description": "User-defined invoice remark.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "roomClass": {
          "description": "Invoice room class code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "source": {
          "description": "Invoice source code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "creditToInvoices": {
      "type": "object",
      "properties": {
        "criteria": {
          "$ref": "#/definitions/aRApplyPaymentCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "currencyAmountType": {
      "description": "A monetary value expressed with a currency code.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        }
      }
    },
    "customNameValueConfigType": {
      "description": "Italian Lottery Number.",
      "type": "string",
      "enum": [
        "ItalianFattura",
        "Folio",
        "FinancialTransaction",
        "TaiwanInvoice",
        "SaudiCustomerType",
        "ItalianLotteryNumber"
      ]
    },
    "customNumberType": {
      "description": "Custom number",
      "type": "string",
      "maxLength": 200,
      "minLength": 0
    },
    "dateRangeType": {
      "description": "Date Range with Start and End dates.",
      "type": "object",
      "properties": {
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "dateTimeSpanType": {
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "type": "object",
      "properties": {
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "emailInfoType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "emailType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "errorInstance": {
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "title": "Error Instance Details",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "exceptionDetailType": {
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "title": "Error Detail",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "exchangeAmounts": {
      "description": "Converted values for the Exchange Currency requested.",
      "type": "object",
      "properties": {
        "creditAmount": {
          "description": "The converted Guest Ledger Credit Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitAmount": {
          "description": "The converted Guest Ledger Debit Amount.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "facilityCodeType": {
      "description": "Facility Housekeeping Code, its description and quantity.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Facility code value.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Facility Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "quantity": {
          "description": "Signifies the quantity.",
          "type": "integer"
        }
      }
    },
    "facilityCodesType": {
      "description": "List of the facility codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/facilityCodeType"
      }
    },
    "facilityTaskType": {
      "description": "Information regarding facility task on a reservation.",
      "type": "object",
      "properties": {
        "date": {
          "description": "The Date on which the task is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "supplies": {
          "description": "Supplies associated with the task.",
          "$ref": "#/definitions/facilityCodesType"
        },
        "task": {
          "description": "The Task Code.",
          "$ref": "#/definitions/housekeepingTaskCodeType"
        }
      }
    },
    "fiscalFolioInstruction": {
      "description": "Action to generate Offline folio when no reponse is received from fiscal service.",
      "type": "string",
      "enum": [
        "Retry",
        "New",
        "Void",
        "Offline"
      ]
    },
    "fiscalResponseType": {
      "description": "Provides information which is used for fiscal response processing.",
      "type": "object",
      "properties": {
        "folioSeqId": {
          "description": "Fiscal Folio sequence ID stored in queue table.",
          "type": "integer"
        },
        "retryFiscalPrinting": {
          "description": "Flag to do the retrieval process of fiscal printing or not.",
          "type": "boolean"
        }
      }
    },
    "fiscalServiceType": {
      "description": "Generate Fiscal Folio Criteria type to be used for fiscal folio generation",
      "type": "object",
      "properties": {
        "fiscalTerminal": {
          "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "folioQueueName": {
          "description": "Folio Type , Queue name , Fiscal Flag to be used in folio generation This is a country requirement.",
          "$ref": "#/definitions/folioQueueType"
        },
        "folioSeqId": {
          "description": "Fiscal Folio sequence ID stored in queue table.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "instructions": {
          "description": "Defines the action of the generate folio process.",
          "$ref": "#/definitions/fiscalFolioInstruction"
        },
        "invoiceCurrencyCode": {
          "description": "Fiscal Invoicing Currency code to be used by the Fiscal Service.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "fixedChargeDetailType": {
      "description": "Fixed charge amount could be specified by flat fee or be a percentage of the rate amount.",
      "type": "object",
      "properties": {
        "article": {
          "description": "Holds related article code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "chargeAmount": {
          "description": "Price of the product.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "Percentage of the rate amount.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "quantity": {
          "description": "Quantity of the product.",
          "type": "integer"
        },
        "roomNights": {
          "description": "Holds number of comp or cash room night to allocate.",
          "type": "integer"
        },
        "supplement": {
          "description": "Additional information regarding the fixed charge.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transaction": {
          "description": "Transaction code and description of a fixed charge.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "fixedChargeFrequencyType": {
      "description": "Yearly.",
      "type": "string",
      "enum": [
        "O",
        "D",
        "W",
        "M",
        "Q",
        "Y"
      ]
    },
    "fixedChargeScheduleType": {
      "description": "Holds schedule of fixed charge.",
      "type": "object",
      "properties": {
        "dateToExecute": {
          "description": "Date of when to execute yearly fixed charge. Applicable when frequency is Yearly.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "dayToExecute": {
          "description": "Day of when to execute fixed charge. Applicable when frequency is Daily or Weekly.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency of a fixed charge.",
          "$ref": "#/definitions/fixedChargeFrequencyType"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "fixedChargeType": {
      "description": "Holds fixed charge information.",
      "type": "object",
      "properties": {
        "charge": {
          "description": "Holds specific details of fixed charge.",
          "$ref": "#/definitions/fixedChargeDetailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "schedule": {
          "description": "Holds schedule of fixed charge.",
          "$ref": "#/definitions/fixedChargeScheduleType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "fixedChargesType": {
      "description": "Holds fixed charge detail.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fixedChargeType"
      }
    },
    "folioPrinterType": {
      "description": "Information about a Printer which can be used to print a Folio.",
      "type": "object",
      "properties": {
        "device": {
          "description": "The Printer Device name.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "folioQueueName": {
          "description": "Folio Queue name for which this printer is being used.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "folioType": {
          "description": "The Folio Type for which this printer is being used.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "printerName": {
          "description": "Description of the Printer",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "folioPrintersType": {
      "description": "List of Folio Printers.",
      "type": "object",
      "properties": {
        "folioTypeName": {
          "description": "Name of the Folio Type.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "printer": {
          "description": "Folio Printer Information.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioPrinterType"
          }
        }
      }
    },
    "folioQueueType": {
      "description": "List of charges that will be posted against the transaction code based from the test criteria.",
      "type": "object",
      "properties": {
        "folioType": {
          "description": "Folio Type to be assigned to generated folio. This is a country requirement.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "generateFiscalFolio": {
          "description": "Fiscal folio flag to call fiscal folio web service after folio generation.",
          "type": "boolean"
        },
        "queueName": {
          "description": "Folio Queue name.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "folioReasonType": {
      "description": "Type for Folio Reason and Text.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The Folio Reason Code.Currently Applicable only for Credit Bills.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "text": {
          "description": "The Folio Reason Text.Currently Applicable only for Credit Bills.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "folioStatusType": {
      "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
      "type": "string",
      "enum": [
        "Deposit",
        "Void",
        "Ok",
        "Zero",
        "Compress",
        "Converted",
        "Internal"
      ]
    },
    "folioTextsType": {
      "description": "This stores the description for the type of tax calculation especially with tax exemption, etc.",
      "type": "array",
      "maxItems": 2,
      "items": {
        "type": "object",
        "properties": {
          "row": {
            "description": "Row number of the additional text.",
            "type": "integer"
          },
          "text": {
            "description": "Additional text field to display on the folio.",
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          }
        }
      }
    },
    "formattedTextTextType": {
      "description": "Provides text and indicates whether it is formatted or not.",
      "type": "object",
      "properties": {
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "givenNameType": {
      "description": "Given name, first name or names",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "guestHousekeepingServiceRequestType": {
      "description": "Possible values for the Guest Service Status.",
      "type": "string",
      "enum": [
        "DoNotDisturb",
        "MakeUpRoom",
        "NoStatusSelected"
      ]
    },
    "guestLastStayInfoType": {
      "description": "Contains last stay related details of the guest.",
      "type": "object",
      "properties": {
        "lastStayDate": {
          "description": "Guest's last stay date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastStayRate": {
          "description": "The Rate amount of the guest's last stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "lastStayRoom": {
          "description": "Room Number where the guest stayed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "totalStay": {
          "description": "The total number of previous stay of the guest.",
          "type": "integer"
        }
      }
    },
    "hotelInterfaceStatusType": {
      "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
      "type": "string",
      "enum": [
        "Stopped",
        "Running",
        "Waiting",
        "StopInitiated",
        "StartInitiated",
        "RebootInitiated",
        "Other"
      ]
    },
    "hotelInterfaceType": {
      "type": "object",
      "properties": {
        "activeFlag": {
          "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "interfaceName": {
          "description": "Name of the Hotel Interface",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "interfaceType": {
          "description": "Three letter code for each interface that identifies the interface.",
          "$ref": "#/definitions/hotelInterfaceTypeType"
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "machineName": {
          "description": "Unique machine name of the running IFC.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "status": {
          "description": "The current status of the IFC.",
          "$ref": "#/definitions/hotelInterfaceStatusType"
        }
      }
    },
    "hotelInterfaceTypeType": {
      "description": "XML Posting Interface",
      "type": "string",
      "enum": [
        "Bms",
        "Cas",
        "Ccw",
        "Dls",
        "Eft",
        "Exp",
        "Mak",
        "Mbs",
        "Msc",
        "Pbx",
        "Pos",
        "Svs",
        "Tik",
        "Vid",
        "Vms",
        "Www",
        "Xml"
      ]
    },
    "housekeepingRoomStatusType": {
      "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
      "type": "string",
      "enum": [
        "Clean",
        "Dirty",
        "Pickup",
        "Inspected",
        "OutOfOrder",
        "OutOfService"
      ]
    },
    "housekeepingTaskCodeType": {
      "description": "Information related to a Task Code. Task Codes are used to generate task sheets in Rooms Management.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The Code for the task.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Task Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "facilityDepartureTask": {
          "description": "Indicates if this task code is the default departure task for Facility Tasks. This requires",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property where this task code is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "instructions": {
          "description": "Instructions for this Task Code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "sequence": {
          "description": "Ordering sequence for display.",
          "type": "integer"
        }
      }
    },
    "indicatorType": {
      "description": "Lamp indicator Type.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        },
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "indicatorsType": {
      "description": "Collection of lamp indicators.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "instanceLink": {
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "type": "object",
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ],
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "interfaceRightsStatusType": {
      "type": "object",
      "properties": {
        "category": {
          "description": "Category code of this interface right.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "description": {
          "description": "User defined description for an Interface Right.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "right": {
          "description": "Internal code for each allowed right of a Hotel Interface record.",
          "type": "integer"
        },
        "statusCode": {
          "description": "User defined code for an Interface Right.",
          "type": "string",
          "maxLength": 5,
          "minLength": 0
        }
      }
    },
    "invoice": {
      "description": "Response to the request to change invoice",
      "type": "object",
      "properties": {
        "invoiceDetails": {
          "description": "Invoice and Payment Details for the Account(s).",
          "$ref": "#/definitions/aRInvoiceCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "invoiceAppliedPayments": {
      "description": "Response to the applied payment details,Contains errors or warnings if any.",
      "type": "object",
      "properties": {
        "details": {
          "description": "Details for the applied payments.",
          "$ref": "#/definitions/aRAppliedPaymentsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in the response invoices/payments.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "invoicePayment": {
      "type": "object",
      "properties": {
        "details": {
          "description": "Invoice and Payment Details for the Account.",
          "$ref": "#/definitions/aRAccountsInvoicesPaymentsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in the response invoices/payments.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "invoicePostings": {
      "description": "Response to the request to fetch postings for an invoice",
      "type": "object",
      "properties": {
        "invoicePostingsDetails": {
          "description": "A collection of the invoice posting records.",
          "$ref": "#/definitions/aRInvoicePostingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in the response invoices/payments.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "invoiceTrxNoList": {
      "description": "Transaction Number .",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "number"
      }
    },
    "invoices": {
      "description": "Request to close invoice(s)",
      "type": "object",
      "properties": {
        "invoices": {
          "description": "Invoices Detail for the Account.",
          "$ref": "#/definitions/aRInvoicesCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "invoicesAndPaymentsToTransfer": {
      "description": "Request for transferring invoice(s) in AR.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria in transferring invoice(s) to another account.",
          "$ref": "#/definitions/transferARInvoicesCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "invoicesOnHold": {
      "description": "Response after fetching on-hold invoices.",
      "type": "object",
      "properties": {
        "details": {
          "description": "Invoice and Payment Details for the Account.",
          "$ref": "#/definitions/aRAccountsInvoicesPaymentsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "invoicesPayments": {
      "description": "Response for the fetch invoice and payments details request.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "details": {
          "description": "Invoice and Payment Details for the Account(s).",
          "$ref": "#/definitions/aRAccountsInvoicesPaymentsType"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in the response invoices/payments.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "marketCodeInfoType": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketGroup": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "membershipInfoType": {
      "description": "The Membership object identifies the frequent customer reward program.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The account identification number for this particular member in this particular program.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "bonusCode": {
          "description": "The code or name of the bonus program. BonusCode can be used to indicate the level of membership (Gold Club, Platinum member, etc.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Membership ID (Unique ID from the memberships table).",
          "type": "number"
        },
        "membershipLevel": {
          "description": "The code or name of the membership level and indicates the level of membership (Gold Club, Platinum member, etc.). This is same as the BonusCode.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipLevelDesc": {
          "description": "The description of the Bonus Code.(Platinum for code P)",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "membershipTypeDesc": {
          "description": "The description of the ProgramCode.(Delta Previlige for code DP)",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "programCode": {
          "description": "The code or name of the membership program ('Hertz', 'AAdvantage', etc.).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "namePrefixType": {
      "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "nameTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Agent",
        "Contact",
        "Source",
        "Group",
        "Employee",
        "Hotel",
        "Purge"
      ]
    },
    "nameValueBaseSearchType": {
      "description": "Contains name value information search criteria.",
      "type": "object",
      "properties": {
        "configName": {
          "description": "Custom Name value Config Name.",
          "$ref": "#/definitions/customNameValueConfigType"
        },
        "hotelId": {
          "description": "Specifies the hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "moduleName": {
          "description": "Contains model name i.e. Reservation, Profile, Folio or FinTrx.",
          "$ref": "#/definitions/nameValueModuleType"
        },
        "nameValueType": {
          "description": "Contains name value type value i.e. AFTER_SETTLEMENT, BEFORE_SETTLEMENT, RESERVATION, etc.",
          "$ref": "#/definitions/nameValueTypeType"
        },
        "sequence": {
          "description": "Indicates configuration sequence number.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "nameValueDataTypeType": {
      "type": "string",
      "enum": [
        "String",
        "Number",
        "Date",
        "Datetime",
        "Time",
        "Integer"
      ]
    },
    "nameValueDetailType": {
      "description": "Detailed information returned during name value search.",
      "type": "object",
      "properties": {
        "nameValues": {
          "description": "Name Value List.",
          "$ref": "#/definitions/nameValuesType"
        }
      }
    },
    "nameValueHeaderDetailType": {
      "description": "Name value details collected before Folio Settlement",
      "type": "object",
      "properties": {
        "nameValueDetails": {
          "description": "Name Value Detail Information",
          "$ref": "#/definitions/nameValueDetailType"
        },
        "nameValueHeader": {
          "description": "Name Value Header Information",
          "$ref": "#/definitions/nameValueBaseSearchType"
        }
      }
    },
    "nameValueModuleType": {
      "type": "string",
      "enum": [
        "Reservation",
        "Folio",
        "Profile",
        "Fintrix"
      ]
    },
    "nameValueOriginType": {
      "description": "Contains origin details.",
      "type": "object",
      "properties": {
        "destination": {
          "description": "Contains destination column for Origin.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "originName": {
          "description": "Contains origin i.e. Reseravtion, Profile, Folio or FinTrx.",
          "$ref": "#/definitions/nameValueModuleType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "nameValueType": {
      "description": "Contains name value pair.",
      "type": "object",
      "properties": {
        "dataType": {
          "description": "Contains data type for values.",
          "$ref": "#/definitions/nameValueDataTypeType"
        },
        "formatString": {
          "description": "Contains format string for values.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "name": {
          "description": "Contains unique key which represents for record field.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "origin": {
          "description": "Contains Origin information.",
          "$ref": "#/definitions/nameValueOriginType"
        },
        "usageInstruction": {
          "description": "Contains value(s) to identify the reports to include the collected information in e.g. PFH=Print Folio Header, PFD=Print Folio Detail.",
          "$ref": "#/definitions/codeListType"
        },
        "value": {
          "description": "Contains value for the record/column.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        }
      }
    },
    "nameValueTypeType": {
      "type": "string",
      "enum": [
        "ReservationOptions",
        "AfterSettlement",
        "BeforeSettlement",
        "AfterPayment",
        "ProfileOptions"
      ]
    },
    "nameValuesType": {
      "description": "List of name value pairs.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/nameValueType"
      }
    },
    "operaVersionNumberType": {
      "description": "Current Opera Version Number",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "pMS_ResStatusType": {
      "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "type": "string",
      "enum": [
        "Reserved",
        "Requested",
        "NoShow",
        "Cancelled",
        "InHouse",
        "CheckedOut",
        "Waitlisted",
        "DueIn",
        "DueOut",
        "Walkin",
        "PendingCheckout"
      ]
    },
    "payeeInfoType": {
      "description": "Payee information.",
      "type": "object",
      "properties": {
        "payeeAccountInfo": {
          "description": "AR account short info of the payee.",
          "$ref": "#/definitions/aRAccountShortInfoType"
        },
        "payeeAddress": {
          "description": "Address of the payee.",
          "$ref": "#/definitions/addressInfoType"
        },
        "payeeAddressCount": {
          "description": "Payee multiple address count.",
          "type": "integer"
        },
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeName": {
          "description": "Name of the payee.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "payeeReferenceCurrency": {
          "description": "Reference currency of the payee.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "payeeTaxNumber": {
          "description": "The tax number of the payee.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "paymentTax": {
      "description": "The types of Payment Tax transactions.",
      "type": "string",
      "enum": [
        "Deposit",
        "FrontOffice",
        "CreditNote",
        "CityLedger",
        "AccountsReceivables",
        "NonVat"
      ]
    },
    "paymentTaxType": {
      "description": "Information regarding payments made which have Payment Tax.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The payment amount/",
          "$ref": "#/definitions/currencyAmountType"
        },
        "availableCredit": {
          "description": "The amount that is not taxable.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "nonTaxableAmount": {
          "description": "Documentation goes here",
          "$ref": "#/definitions/currencyAmountType"
        },
        "paymentDate": {
          "description": "The Payment Invoice date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "paymentType": {
          "description": "The Type of Payment transaction.",
          "$ref": "#/definitions/paymentTax"
        },
        "taxInvoiceNo": {
          "description": "The Tax Invoice for this payment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "taxableAmount": {
          "description": "The amount that is taxable.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionCode": {
          "description": "Billing Transaction Code of the Payment.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date of the Payment.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionDescription": {
          "description": "Billing Transaction Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        }
      }
    },
    "paymentTaxesType": {
      "description": "Payment Tax record.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/paymentTaxType"
      }
    },
    "phoneNumberType": {
      "description": "Phone number",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "pointsType": {
      "description": "The Redeem Points contains the number of points required to book a room type.",
      "type": "object",
      "properties": {
        "awardsType": {
          "description": "Awards type for the award type rate code.",
          "type": "string"
        },
        "points": {
          "description": "No of points required to book this Room Stay.",
          "type": "integer"
        }
      }
    },
    "postPaymentActionType": {
      "description": "Prepaid Card Redemption Action.",
      "type": "string",
      "enum": [
        "Billing",
        "Settlefolio",
        "Deposit",
        "Compredemption",
        "Prepaidcardredemption"
      ]
    },
    "postingGroupType": {
      "description": "Transaction group information. Ever posting could represent a. Regular transaction b. Group header - has Group Id, Count, Descripton and Includes Group Memebers elements c. Group transaction - has SubGroupId element pointing to Group Header Id",
      "type": "object",
      "properties": {
        "groupCount": {
          "description": "Number of transactions in group.",
          "type": "integer"
        },
        "groupDescription": {
          "description": "Group Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "groupId": {
          "description": "Group Id.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "subGroupId": {
          "description": "Indicates to which group transaction belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "prepaidCardRedemptionType": {
      "description": "Redemption information.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The amount to redeem when posting a payment.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cardNo": {
          "description": "Prepaid card number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "interfaceId": {
          "description": "The unique ID of the Interface.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "pin": {
          "description": "Prepaid card number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "reference": {
          "description": "Additional information regarding the redemption.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionCode": {
          "description": "The associated redemption transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "prepaidCardRedemptionsType": {
      "description": "A prepaid redemption info object to be used for posting a payment.",
      "type": "array",
      "maxItems": 1000,
      "items": {
        "$ref": "#/definitions/prepaidCardRedemptionType"
      }
    },
    "profileAging": {
      "description": "Response to the request to fetch the total Aging information for a Profile.",
      "type": "object",
      "properties": {
        "aging": {
          "description": "The Aging Totals information for the Profile and the resorts requested.",
          "$ref": "#/definitions/aRProfileAgingInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "profileIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "profileInfoType": {
      "description": "Provides information about attached profiles to the block.",
      "type": "object",
      "properties": {
        "city": {
          "description": "City for the profile attached to the block.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "name": {
          "description": "Name for the profile attached to the block.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "phone": {
          "description": "Phone for the profile attached to the block.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "profileId": {
          "description": "Opera ID for the profile attached to the block.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "type": {
          "description": "Defines the type of Linked profiles for a block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "profileYearView": {
      "description": "Response to the request to fetch the total Year View information for a Profile.",
      "type": "object",
      "properties": {
        "aRProfileYearView": {
          "description": "The Year View Totals information for the Profile and the resorts requested.",
          "$ref": "#/definitions/aRProfileYearViewInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "promotionType": {
      "description": "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "type": "object",
      "properties": {
        "couponCode": {
          "description": "Promotion Coupon Code when promotion is setup to have a valid coupon code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "promotionCode": {
          "description": "Promotion code associated with the rate plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "promotionName": {
          "description": "Promotion code Name associated with the rate plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "queueTextInfoType": {
      "description": "Information regarding the message sent to guest.",
      "type": "object",
      "properties": {
        "sentBy": {
          "description": "User name of the user who sent message.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "sentTime": {
          "description": "Time the text was last sent to the user.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "redemptionType": {
      "description": "Redemption information.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The amount to redeem when posting a payment.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "Approval Code of the Complimentary Bucket Redemption.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "availableAmount": {
          "description": "Available Amount of the Complimentary Bucket Redemption.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "code": {
          "description": "The associated redemption code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Complimentary Bucket Redemption.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "supplement": {
          "description": "Additional information regarding the redemption.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionCode": {
          "description": "Transaction code of the Complimentary Bucket Redemption.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionNo": {
          "description": "Transaction Number of the Complimentary Bucket Redemption.",
          "type": "number"
        }
      }
    },
    "reminderCycleType": {
      "description": "The different types of Reminder Cycle calculation rules.",
      "type": "string",
      "enum": [
        "Days",
        "EndOfMonth"
      ]
    },
    "reminders": {
      "description": "Response to the request to fetch pending Reminders for Accounts.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "remindersDetails": {
          "description": "Statement History.",
          "$ref": "#/definitions/aRRemindersType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "remindersHistory": {
      "description": "Reminders History.",
      "type": "object",
      "properties": {
        "aRReminderHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/aRReminderHistoryType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "resAccessRestrictionType": {
      "description": "Indicates any Updates/Changes on the reservation as well as Reservation Cancellation are not allowed.",
      "type": "string",
      "enum": [
        "Change",
        "Cancel",
        "ChangeOrCancel"
      ]
    },
    "resAccompanyGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "resAccompanyGuestListType": {
      "description": "Collection of accompany guests",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAccompanyGuestInfoType"
      }
    },
    "resAttachedProfileListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAttachedProfileType"
      }
    },
    "resAttachedProfileType": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Attached profile name",
          "type": "string"
        },
        "profileIdList": {
          "description": "Collection of unique profile identifiers",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "resCashieringType": {
      "description": "Cashiering Information for the reservation.",
      "type": "object",
      "properties": {
        "bedTaxReporting": {
          "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
          "$ref": "#/definitions/bedTaxReportingType"
        },
        "billingPrivileges": {
          "description": "Billing privileges set on the reservation.",
          "$ref": "#/definitions/billingPrivilegesType"
        },
        "compAccounting": {
          "description": "Information regarding comp accounting on the reservation.",
          "$ref": "#/definitions/resCompAccountingType"
        },
        "financiallyResponsible": {
          "description": "The guest from whom payment has to be recovered (direct guest).",
          "type": "boolean"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "lastRoomAndTaxPostedDate": {
          "description": "Date of the last Room And Tax posting. Used primarily to know the date in case of Advance Billing.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "periodicFolio": {
          "description": "Information regarding periodic folios set on the reservation.",
          "$ref": "#/definitions/resPeriodicFolioType"
        },
        "proratedBilling": {
          "description": "In case of Appartment style billing indicates whether a prorated amount should be used for an Apartment Style Billing rate.",
          "type": "boolean"
        },
        "reservationPreConfiguredRoutingInstruction": {
          "description": "Information regarding the selected preconfigured routing instruction on the reservation.",
          "$ref": "#/definitions/resPreConfiguredRoutingInstrType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "reverseAdvanceCheckInAllowed": {
          "description": "This attribute is to verify if reverse advance check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/reservationTaxTypeInfo"
        },
        "transactionsPosted": {
          "description": "Specifies whether reservation has a financial transaction associated with it.",
          "type": "boolean"
        }
      }
    },
    "resCommunicationType": {
      "description": "Communication details for a reservation.",
      "type": "object",
      "properties": {
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        }
      }
    },
    "resCompAccountingType": {
      "description": "Information regarding comp accounting on the reservation.",
      "type": "object",
      "properties": {
        "authorizer": {
          "description": "ID of the employee who will act as the host for this guest.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "compPostings": {
          "description": "Indicates if the Comp Billing/posting Exist",
          "type": "string",
          "maxLength": 5,
          "minLength": 0
        },
        "compType": {
          "description": "Code used to identify the casino comp type and ranking of a guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resExpectedTimesType": {
      "description": "Holds the Arrival and Departure Time Information",
      "type": "object",
      "properties": {
        "reservationExpectedArrivalTime": {
          "description": "Arrival Time",
          "type": "string",
          "format": "date-time"
        },
        "reservationExpectedDepartureTime": {
          "description": "Departure Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "resGuaranteeType": {
      "description": "Validations type record returned after Validations are done.",
      "type": "object",
      "properties": {
        "guaranteeCode": {
          "description": "Guarantee Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "onHold": {
          "description": "Guarantee Code.",
          "type": "boolean"
        },
        "shortDescription": {
          "description": "Guarantee Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "resGuestExternalInfoType": {
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "type": "object",
      "properties": {
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        }
      }
    },
    "resGuestInfoType": {
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "type": "object",
      "properties": {
        "accompanyGuests": {
          "description": "List of guest names that are accompanying the reservation guest",
          "$ref": "#/definitions/resAccompanyGuestListType"
        },
        "address": {
          "description": "Address information that is attached to the reservation guest",
          "$ref": "#/definitions/addressSearchType"
        },
        "alternateFullName": {
          "description": "Altername full display name",
          "type": "string"
        },
        "alternateGivenName": {
          "description": "Alternate given name, first name or names",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "alternateSurname": {
          "description": "Alternate family name, last name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "birthDate": {
          "description": "Date of birth",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "email": {
          "description": "Email address",
          "$ref": "#/definitions/basicEmailType"
        },
        "externalInfo": {
          "description": "External information about the guest associated with the reservation.",
          "$ref": "#/definitions/resGuestExternalInfoType"
        },
        "fullName": {
          "description": "Full display name",
          "type": "string"
        },
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "guestLastStayInfo": {
          "description": "Contains information regarding the last stay of this guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "guestRestricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        },
        "guestRestrictedCode": {
          "description": "Guest profile restricted reason code",
          "type": "string"
        },
        "guestRestrictedReasonDesc": {
          "description": "Guest profile restricted reason description",
          "type": "string"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "membership": {
          "description": "The Membership object identifying the frequent customer reward program.",
          "$ref": "#/definitions/membershipInfoType"
        },
        "middleName": {
          "description": "The middle name of the person name",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
          "$ref": "#/definitions/namePrefixType"
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nameType": {
          "$ref": "#/definitions/nameTypeType"
        },
        "nationality": {
          "description": "Affiliation or ethnicity to a particular country.",
          "$ref": "#/definitions/countryNameType"
        },
        "phoneNumber": {
          "description": "Phone number",
          "$ref": "#/definitions/phoneNumberType"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        },
        "surnamePrefix": {
          "description": "e.g \"van der\", \"von\", \"de\"",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "vip": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "$ref": "#/definitions/vIPType"
        }
      }
    },
    "resHousekeepingType": {
      "description": "Holds housekeeping turndown service information for the room.",
      "type": "object",
      "properties": {
        "expectedServiceTime": {
          "description": "Expected Start Time for housekeeping task(s).",
          "type": "string"
        },
        "facilityTaskInfo": {
          "description": "The facility task applicable for the current day. This will be information only and not used for any updates.",
          "$ref": "#/definitions/facilityTaskType"
        },
        "instructions": {
          "description": "Turndown instructions for the room.",
          "type": "string"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "roomStatus": {
          "description": "Current room status. Current room status is populated only if room is assigned to the reservation and reservation is due in or in house.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "serviceTime": {
          "description": "This is the Turndown room service time.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "turndownRequested": {
          "description": "Indicates whether guest wants turndown facility or not.",
          "type": "boolean"
        }
      }
    },
    "resMobileNotificationsType": {
      "description": "Contains the status of Room Ready and Key Ready messages.",
      "type": "object",
      "properties": {
        "checkoutMessageReceived": {
          "description": "Indicates if the Mobile checkout message is received.",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Error message when Mobile Notification has failed.",
          "type": "string"
        },
        "keyReady": {
          "description": "Denotes the status of Key Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "requiresAction": {
          "description": "Indicates if user action is required. The action could be for sending Room Ready or Key Ready Notification. It could also be for initiating Checkout",
          "type": "boolean"
        },
        "roomReady": {
          "description": "Denotes the status of Room Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        }
      }
    },
    "resPaymentCardType": {
      "description": "Information on a credit card for the customer.",
      "type": "object",
      "properties": {
        "approvalAmountNeeded": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "attachCreditCardToProfile": {
          "description": "Attach the credit card to profile.",
          "type": "boolean"
        },
        "cardHolderName": {
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cardNumber": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberMasked": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardOrToken": {
          "description": "This contains information on whether credit card is tokenized (token enabled). A value of 'Token' indicates credit card is token enabled and 'CardNumber' indicates non token environment for this payment card type.",
          "$ref": "#/definitions/cardNumberTypeType"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
          "type": "boolean"
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "currentAuthorizedAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "expirationDate": {
          "description": "Expiration date of the credit card",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expirationDateExpired": {
          "type": "boolean"
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "swiped": {
          "type": "boolean"
        },
        "userDefinedCardType": {
          "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
          "type": "string",
          "maxLength": 2,
          "minLength": 0
        }
      }
    },
    "resPeriodicFolioType": {
      "description": "Information regarding periodic folios set on the reservation.",
      "type": "object",
      "properties": {
        "frequency": {
          "description": "Frequency in number of days when folios should be printed for this reservation.",
          "type": "integer"
        },
        "lastFolioDate": {
          "description": "Latest date when a folio was printed using the \"Periodic Batch Folios\" option",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastSettlementDate": {
          "description": "Latest date when a direct bill settlement was automatically done using the \"Direct Bill Batch Folios\" option.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "resPreConfiguredRoutingInstrType": {
      "description": "Instruction to attach Pre-Configured Routing Instructions to a Reservation.",
      "type": "object",
      "properties": {
        "authorizerInfo": {
          "description": "The authorizer information for Promotion Code with attached Complimentary Routing",
          "$ref": "#/definitions/authorizerInfoType"
        },
        "profileType": {
          "description": "Profile Type with attached Routing Instruction.",
          "$ref": "#/definitions/resProfileTypeType"
        },
        "promotionCode": {
          "description": "Promotion Code with attached Complimentary Routing.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "Rate Code with attached Routing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resProfileTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Group",
        "TravelAgent",
        "Source",
        "ReservationContact",
        "BillingContact",
        "Addressee"
      ]
    },
    "resRevenueBalanceType": {
      "description": "Revenue and Balance Amount summary for the reservation.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "Balance amount on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "foodAndBevRevenue": {
          "description": "Food and Beverage Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "nonRevenue": {
          "description": "Total Non Revenue posted on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "otherRevenue": {
          "description": "Other Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomRevenue": {
          "description": "Room Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalFixedCharge": {
          "description": "Total Fixed Charges on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPayment": {
          "description": "Total payment received for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalRevenue": {
          "description": "Total Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "resSharedGuestInfoType": {
      "description": "Contains information regarding the share reservation.",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "profileId": {
          "$ref": "#/definitions/profileId"
        }
      }
    },
    "resSharedGuestListType": {
      "description": "Collection of shared guest reservations.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resSharedGuestInfoType"
      }
    },
    "reservationAllowedActionType": {
      "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
      "type": "string",
      "enum": [
        "Cancel",
        "Move",
        "PreCharge",
        "PostCharge",
        "FacilitySchedule",
        "Upsell",
        "PreCheckIn",
        "PostToNoShowCancel",
        "NoShow",
        "NameChange",
        "Discount",
        "EnrollToPrimaryMembership",
        "EnrollInProgress"
      ]
    },
    "reservationAllowedActionsType": {
      "description": "Allowed action.",
      "type": "array",
      "maxItems": 11,
      "items": {
        "$ref": "#/definitions/reservationAllowedActionType"
      }
    },
    "reservationBlockType": {
      "description": "Key information about the block for a reservation.",
      "type": "object",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers for the reservation.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "The Name of the block that is attached to the reservation.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "This is the HotelCode of the Block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationDepositType": {
      "description": "Reservation Deposit Type.",
      "type": "object",
      "properties": {
        "amountOwed": {
          "description": "Deposit Amount Owed.",
          "type": "number"
        },
        "amountPaid": {
          "description": "Deposit Amount Paid.",
          "type": "number"
        },
        "amountRequired": {
          "description": "Deposit Amount Required.",
          "type": "number"
        },
        "dueDate": {
          "description": "Deposit Due Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hasOutstanding": {
          "description": "Resolves whether reservation has outstanding deposit.",
          "type": "boolean"
        },
        "hasPaid": {
          "description": "Resolves whether reservation has paid deposit.",
          "type": "boolean"
        },
        "postingDate": {
          "description": "Deposit Posting Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "reservationFolioWindowType": {
      "description": "Folio window view which holds the set of folios for a reservation.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "Running balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "payeeInfo": {
          "description": "The window's configured payee information.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "paymentMethod": {
          "description": "Payment Method Type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationFolioWindowsType": {
      "description": "Collection of reservation folio windows.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationFolioWindowType"
      }
    },
    "reservationId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "reservationIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "reservationInfoType": {
      "description": "The Reservation class contains the current reservation being created or altered.",
      "type": "object",
      "properties": {
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "allowedActions": {
          "description": "Collection of reservation allowed actions.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "cancellationInfo": {
          "description": "Information regarding why reservation has been/was cancelled.",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "description": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          }
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "commissionPayoutTo": {
          "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
          "$ref": "#/definitions/commissionPayoutToType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "deposit": {
          "description": "Holds reservation deposit information.",
          "$ref": "#/definitions/reservationDepositType"
        },
        "displayColor": {
          "description": "Color setting of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "expectedServiceTime": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "guestPreferredCurrency": {
          "description": "Currency code preferred by guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelInterfaceStatusList": {
          "description": "Collection of Hotel Interfaces and rights, this is populated only when fetching interface status for rooms.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInterfaceStatusType"
          }
        },
        "hotelName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "housekeeping": {
          "description": "Information regarding housekeeping for this reservation.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "keyCount": {
          "description": "Number of keys created for the reservation.",
          "type": "integer"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastPrivacyPromptDate": {
          "description": "Last Privacy Prompt Date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready, Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "openFolio": {
          "description": "Returns true when reservation has an open folio.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.",
          "type": "boolean"
        },
        "paymentMethod": {
          "description": "Payment Method.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preRegistered": {
          "description": "Defines if the reservation is pre-registered or not.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "reservationFolioWindows": {
          "description": "Collection of reservation folio windows.",
          "$ref": "#/definitions/reservationFolioWindowsType"
        },
        "reservationGuest": {
          "description": "Collection of guests associated with the reservation.",
          "$ref": "#/definitions/resGuestInfoType"
        },
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "reservationPaymentMethod": {
          "description": "Payment method used for this reservation",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "roomStatus": {
          "description": "Current room status",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "specials": {
          "description": "Set of reservation preferences which belongs to the Specials group.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/taxTypeType"
        },
        "turndownInfo": {
          "description": "Currency code preferred by guest.",
          "$ref": "#/definitions/reservationTurndownInfoType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is not in Waitlist status anymore.",
          "$ref": "#/definitions/waitlistResType"
        },
        "walkInIndicator": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "welcomeOffer": {
          "description": "This flag will determine wheather the reservation is eligible for Welcome Offer or not.",
          "type": "boolean"
        }
      }
    },
    "reservationInterfaceStatusType": {
      "description": "Hotel Interface Type for a reservation and status of the various services",
      "type": "object",
      "properties": {
        "hotelInterface": {
          "description": "Hotel interface information for the reservation",
          "$ref": "#/definitions/hotelInterfaceType"
        },
        "interfaceRights": {
          "description": "Contains a list of status/rights for the various services under this interface",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceRightsStatusType"
          }
        },
        "roomExtension": {
          "description": "Identifier for the room extension",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationPaymentMethodType": {
      "type": "object",
      "properties": {
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            }
          }
        },
        "folioView": {
          "type": "integer"
        },
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "paymentMethod": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationQueueInformationType": {
      "description": "Information regarding the Date, Duration and Priority of the reservation on Queue for Check in.",
      "type": "object",
      "properties": {
        "averageQueueTimeCurrentReservations": {
          "description": "The average time, in seconds, of the reservations currently in queue.",
          "type": "integer"
        },
        "averageQueueTimeToCheckIn": {
          "description": "The average time, in seconds, a reservation was on queue prior to Check-In.",
          "type": "integer"
        },
        "guestTextInfo": {
          "description": "Information for the message sent to the user",
          "$ref": "#/definitions/queueTextInfoType"
        },
        "priority": {
          "description": "The Queue Priority given to this reservation.",
          "type": "integer"
        },
        "queueDate": {
          "description": "The Business date on which the reservation was due to arrive and is currently placed on Queue for Check In.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "timeSpan": {
          "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
          "type": "object",
          "properties": {
            "duration": {
              "type": "string"
            },
            "durationInSeconds": {
              "description": "The total duration, in seconds, the reservation is on Queue.",
              "type": "integer"
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        }
      }
    },
    "reservationTaxTypeInfo": {
      "description": "Provides information about the Tax Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "taxExemptNo": {
          "description": "Tax exempt number on the profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationTurndownInfoType": {
      "description": "Turndown information for a reservation",
      "type": "object",
      "properties": {
        "allowed": {
          "description": "Indicates if turndown is allowed or not",
          "type": "boolean"
        },
        "status": {
          "description": "Indicates turndown status, values could be required, not required, completed",
          "$ref": "#/definitions/turndownStatusType"
        }
      }
    },
    "reversePayment": {
      "description": "Request for reverse AR payment",
      "type": "object",
      "properties": {
        "arPayment": {
          "$ref": "#/definitions/reversePaymentCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reversePaymentCriteriaType": {
      "description": "Criteria type for an AR Account.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The internal unique ID for the AR Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountName": {
          "description": "Account Name for the AR Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "accountNo": {
          "description": "Account Number for the AR Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property where the AR Account exists. This is required.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "profileId": {
          "description": "Profile ID of the account",
          "$ref": "#/definitions/profileId"
        },
        "transactionNo": {
          "type": "number"
        }
      }
    },
    "roomClassCodeInfoType": {
      "description": "Code of the room class type.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomClassCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "searchMatchType": {
      "description": "Search match indicating attribute and the matching value.",
      "type": "object",
      "properties": {
        "attribute": {
          "description": "Search match attribute.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "value": {
          "description": "Search match value.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "searchMatchesType": {
      "description": "List of Generic Name-Value-Pair Parameters used for super search matches.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/searchMatchType"
      }
    },
    "sourceCodeInfoType": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceGroup": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "sourceOfSaleType": {
      "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
      "type": "object",
      "properties": {
        "sourceCode": {
          "description": "The entity/channel who made the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceType": {
          "description": "Type of entity/channel who made the reservation..",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "statementHistory": {
      "description": "Statement History.",
      "type": "object",
      "properties": {
        "aRStatementHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/aRStatementHistoryType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "statementType": {
      "description": "The Types of Statements that can be used on an Account Type.",
      "type": "string",
      "enum": [
        "BalanceForward",
        "IndividualOpenItems"
      ]
    },
    "statements": {
      "description": "Details of the Statement to generate.",
      "type": "object",
      "properties": {
        "aRStatements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/aRStatementType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "statementsToBeGenerated": {
      "description": "Operation to generate AR Statements. This will validate and check if there exists any invoices to be included in the Statement based on the criteria used. If Statement Numbering is used, this will return a statement number to use in report as well as report sequence id to identify statement's invoices.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for generating AR Statements",
          "$ref": "#/definitions/aRGenerateStatementCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "status": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stayInfoType": {
      "description": "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.",
      "type": "object",
      "properties": {
        "adultCount": {
          "description": "A collection of Guest Counts associated with Room Stay.",
          "type": "integer"
        },
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "balance": {
          "description": "Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "bookingChannelCode": {
          "description": "Booking channel code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "childCount": {
          "description": "A collection of Child Counts associated with Room Stay.",
          "type": "integer"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "componentRoomType": {
          "description": "True indicates room type is a component type.",
          "type": "boolean"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "depositPayments": {
          "description": "A collection of deposit and/or payments for the Room Stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "expectedTimes": {
          "description": "The expected arrival, return and departure times of the guest.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "fixedRate": {
          "description": "True if the rate is a fixed rate, otherwise false",
          "type": "boolean"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "guestServiceStatus": {
          "description": "Service Status of In House guest like DND or MUP",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "linkCode": {
          "description": "Party code",
          "type": "string",
          "maxLength": 2000
        },
        "marketCode": {
          "description": "Market code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketDescription": {
          "description": "Description of Market code",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "numberOfRooms": {
          "description": "Room Id",
          "type": "integer"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "points": {
          "description": "The Points contains the number of points used to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "promotion": {
          "description": "Promotion Codes",
          "$ref": "#/definitions/promotionType"
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "ratePlanCode": {
          "description": "Rate plan code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateSuppressed": {
          "description": "Whether this rate should be suppressed from view",
          "type": "boolean"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "roomClass": {
          "description": "Room class code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomId": {
          "description": "Room Id",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "roomType": {
          "description": "Room type code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomTypeCharged": {
          "description": "Room type code that was charged",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "scheduledCheckoutTime": {
          "description": "Indicates that this reservation is scheduled for automated check out.",
          "type": "string",
          "format": "date"
        },
        "sourceCode": {
          "description": "Source of business",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "totalAmount": {
          "description": "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "upgradedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "surnameType": {
      "description": "Family name, last name.",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "taxTypeType": {
      "description": "Provides information about the Tax Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        }
      }
    },
    "telephoneInfoType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "telephoneType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "extension": {
          "description": "Extension to reach a specific party at the phone number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "timeSpanType": {
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "type": "object",
      "properties": {
        "duration": {
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "traceResolveType": {
      "type": "object",
      "properties": {
        "resolvedBy": {
          "description": "User that resolved the trace",
          "type": "string"
        },
        "resolvedOn": {
          "description": "Date the trace was resolved",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "traceTimeInfoType": {
      "type": "object",
      "properties": {
        "dateTimeSpan": {
          "description": "Time span for the trace.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "enteredBy": {
          "description": "User that entered this trace.",
          "type": "string"
        },
        "traceOn": {
          "description": "Date of the trace.",
          "type": "string",
          "format": "date-time"
        },
        "traceTime": {
          "description": "Time of the trace",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "traceType": {
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "departmentId": {
          "description": "Indicates the Department code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationId": {
          "description": "Reservation ID of the reservation for which the traces are to be retrieved.",
          "$ref": "#/definitions/reservationId"
        },
        "resolveInfo": {
          "description": "Information regarding the status of the trace",
          "$ref": "#/definitions/traceResolveType"
        },
        "timeInfo": {
          "description": "Date of the trace.",
          "$ref": "#/definitions/traceTimeInfoType"
        },
        "traceText": {
          "description": "The information this trace contains.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "transferARCreditCardPaymentsType": {
      "description": "Transfer AR Credit Card payment information.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reference": {
          "description": "Reference Text for the payment.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "totalAmount": {
          "description": "Total Amount of postings to be transfered.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionNo": {
          "description": "Transaction number of the payments to be transfered.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        }
      }
    },
    "transferARInvoicesCriteriaType": {
      "description": "Criteria for transferring invoice(s) to another account.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "fromAccount": {
          "description": "The Account for whom the Invoice(s) are currently associated with.",
          "$ref": "#/definitions/aRAccountCriteriaType"
        },
        "invoicesTransferType": {
          "description": "AR Invoice(s) to be transferred.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/aRInvoiceType"
          }
        },
        "overrideCreditHoldCheck": {
          "type": "boolean"
        },
        "remarks": {
          "description": "User defined Remarks for this transfer",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "toAccount": {
          "description": "The Account for whom the Invoice(s) are to be transferred upon.",
          "$ref": "#/definitions/aRAccountCriteriaType"
        },
        "transferAmount": {
          "description": "Partial amount to be transferred. Partial amounts will not be allowed when multiple invoices are to be transferred.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "transferDirectBillsToAr": {
      "description": "Request for Transfer Directs bill to AR.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria in transferring direct bills to account receivable.",
          "$ref": "#/definitions/transferDirectBillsToArCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transferDirectBillsToArCriteriaType": {
      "description": "Provides information about Transfer Direct Bills To Ar Criteria Type.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoiceNo": {
          "description": "List of Invoice Numbers.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        }
      }
    },
    "transferPostings": {
      "description": "Request for transferring invoice posting(s)in AR.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to transfer invoice posting(s) to another invoice.",
          "$ref": "#/definitions/aRTransferPostingsCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trxCodesInfoType": {
      "description": "List of Transaction codes info.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxInfoType"
      }
    },
    "trxInfoType": {
      "description": "Transaction codes info.",
      "type": "object",
      "properties": {
        "articles": {
          "description": "The List of Articles defined for this transaction code, when using the Articles functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/articleInfoType"
          }
        },
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionGroup": {
          "description": "Category of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionSubGroup": {
          "description": "Sub category of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "turndownStatusType": {
      "description": "Simple type for turndown status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Required, Not Required and Completed.",
      "type": "string",
      "enum": [
        "Required",
        "NotRequired",
        "Compeleted"
      ]
    },
    "uniqueIDListType": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "uniqueID_Type": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "unlinkInvoiceFromStatement": {
      "description": "Request to unlink invoice from statement",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for unlinking invoice from statement",
          "$ref": "#/definitions/unlinkStatementCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "unlinkStatementCriteriaType": {
      "description": "Criteria for unlinking invoice from statement.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "description": "Hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoiceTrxNoList": {
          "description": "Transaction number list of invoices.",
          "$ref": "#/definitions/invoiceTrxNoList"
        }
      }
    },
    "vIPType": {
      "description": "The supplier's ranking of the customer.",
      "type": "object",
      "properties": {
        "vipCode": {
          "description": "VIP Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "vipDescription": {
          "description": "VIP Description.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "waitlistResType": {
      "description": "Information regarding why reservation is being /has been waitlisted.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description why the reservation is being /has been waitlisted.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "priorityCode": {
          "description": "Waitlist Priority Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "priorityDescription": {
          "description": "Waitlist priority Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reasonCode": {
          "description": "Waitlist Reason Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonDescription": {
          "description": "Waitlist Reason Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "telephone": {
          "description": "Guest telephone number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "warningType": {
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "type": "object",
      "properties": {
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "maxLength": 8,
          "minLength": 1
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "description": "Used in conjunction with the Success element to define a business error.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    }
  },
  "tags": [
    {
      "description": "The REST API's will allow you to create, manage, or delete accounts, add comments, traces, reminders, create or close invoices for example.",
      "name": "AccountsReceivables"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}