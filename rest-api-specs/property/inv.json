{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "APIs to cater for Inventory functionality in OPERA Cloud. This includes sell limits for date ranges, viewing and updating the property&apos;s inventory, as well as item inventory (such as rollaways, microwaves etc.).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "title": "OPERA Cloud Inventory API",
    "version": "23.2",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality-integrations_ww@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "basePath": "/inv/v1",
  "paths": {
    "/blockInventoryStatistics": {
      "get": {
        "description": "You can use this API to retrieve Block inventory for multiple hotel codes. Narrow down your results using the query parameters available. <p><strong>OperationId:</strong>getBlockInventoryStatisticsMultipleHotelIds</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "INVStats"
        ],
        "summary": "Get block inventory statistics for multiple hotel Ids",
        "operationId": "getBlockInventoryStatisticsMultipleHotelIds",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "minItems": 1,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "If set to true, includes business blocks without rooms.",
            "name": "includeBlocksWithNoRoom",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If set to true, the house overbooking limit for each day is added to the total number of physical rooms.",
            "name": "includeOverbooking",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If set to true, the results will include opportunities. If this flag is not provided it will be considered false and exclude opportunities.",
            "name": "includeOpportunities",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If set to true, includes non-deduct business blocks and group reservations in the Sales Allowance Available Rooms and House Availability statistics.",
            "name": "includeTentativeInventory",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "endDateRange",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "startDateRange",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Collection of configured Block Status Codes.",
            "name": "blockStatusCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Collection of Origin Codes.",
            "name": "originCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Collection of Room Owners.",
            "name": "roomOwnerCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Collection of block owners.",
            "name": "blockOwners",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Status",
              "StatusDescending"
            ],
            "type": "string",
            "description": "Supported block inventory statistical sorting for summary information",
            "name": "summarySortByCode",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Status",
              "StatusDescending",
              "ArrivalDate",
              "BlockAccount",
              "Revenue",
              "RoomsOwner"
            ],
            "type": "string",
            "description": "Supported block inventory statistical sorting for detailed block information",
            "name": "detailSortByCode",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If selected, Sundays are included in search result.",
            "name": "sunday",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If selected, Mondays are included in search result.",
            "name": "monday",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If selected, Tuesdays are included in search result.",
            "name": "tuesday",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If selected, Wednesdays are included in search result.",
            "name": "wednesday",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If selected, Thursdays are included in search result.",
            "name": "thursday",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If selected, Fridays are included in search result.",
            "name": "friday",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If selected, Saturdays are included in search result.",
            "name": "saturday",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "StatusSummary",
                "BookingSummary",
                "ForecastSummary",
                "DetailSummary",
                "RoomSummary"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Type for block inventory statistics instructions that can be used in requests for partial operations.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the endDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for information regarding Block Inventory Statistics.",
            "schema": {
              "$ref": "#/definitions/blockInventoryStatistic"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "BlockInventoryStatistics not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/blockInventoryStatistics": {
      "get": {
        "description": "Use this API to get block statistics on a per-day basis across a specified date range. The result includes a summary section of rooms booked by status by date, details on deduct and non-deduct rooms booked per day, and Sales Allowance and House Availability figures per day. The details section of the results include block details such as name, block, code, start and end date, owner, and more. It also shows a breakdown of blocked picked-up and available rooms per day per block. The result set is used to feed the GRC (Group Rooms Control) page in the OPERA UI. <p><strong>OperationId:</strong>getBlockInventoryStatistics</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "INVStats"
        ],
        "summary": "Get block inventory statistics",
        "operationId": "getBlockInventoryStatistics",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where block inventory statistics are searched.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "If set to true, includes business blocks without rooms.",
            "name": "includeBlocksWithNoRoom",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If set to true, the house overbooking limit for each day is added to the total number of physical rooms.",
            "name": "includeOverbooking",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If set to true, the results will include opportunities. If this flag is not provided it will be considered false and exclude opportunities.",
            "name": "includeOpportunities",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If set to true, includes non-deduct business blocks and group reservations in the Sales Allowance Available Rooms and House Availability statistics.",
            "name": "includeTentativeInventory",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "endDateRange",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "startDateRange",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "blockStatusCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "originCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomOwnerCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "blockOwners",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Status",
              "StatusDescending",
              "ArrivalDate",
              "BlockAccount",
              "Revenue",
              "RoomsOwner"
            ],
            "type": "string",
            "description": "Supported block inventory statistical sorting.",
            "name": "summarySortByCode",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Status",
              "StatusDescending",
              "ArrivalDate",
              "BlockAccount",
              "Revenue",
              "RoomsOwner"
            ],
            "type": "string",
            "description": "Supported block inventory statistical sorting.",
            "name": "detailSortByCode",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "friday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "monday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "saturday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "sunday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "thursday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "tuesday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "wednesday",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "StatusSummary",
                "BookingSummary",
                "ForecastSummary",
                "DetailSummary",
                "RoomSummary"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Type for block inventory statistics instructions that can be used in requests for partial operations.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the endDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for information regarding Block Inventory Statistics.",
            "schema": {
              "$ref": "#/definitions/blockInventoryStatistic"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "BlockInventoryStatistics not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/hotelInventory": {
      "get": {
        "description": "You can use this API to retrieve the inventory for a specified hotel. Narrow down your results using the query parameters such as a date range, room type, room class, and/or tentative inventory included. <p><strong>OperationId:</strong>getHotelInventory</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Inventory"
        ],
        "summary": "Get hotel inventory",
        "operationId": "getHotelInventory",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where hotel inventory is searched.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "name": "dateRangeStart",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "name": "dateRangeEnd",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Number of rooms requested.",
            "name": "roomCountRequested",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "If set to true, includes non-deduct/Tentative rooms for a date range.",
            "name": "includeTentativeInventory",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If false minimum inventory for the date range is requested, otherwise inventory is requested for every day.",
            "name": "dailyInventory",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates that House level inventory is requested.",
            "name": "houseLevel",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Type Code.",
            "name": "roomTypes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Class Code.",
            "name": "roomClasses",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the endDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "A response for Hotel Inventories meeting the search criteria. Returns inventory classified on room type, class and house level for a given property.",
            "schema": {
              "$ref": "#/definitions/hotelInventory"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "HotelInventory not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/inventoryStatistics": {
      "get": {
        "description": "Use this API to retrieve the inventory data for a specified hotel. Narrow down your results using the query parameters such as a date range, room type, room class, and/or tentative inventory included. Maximum days limit with a single request is 30 days.<p><strong>OperationId:</strong>getInventoryStatistics</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "INVStats"
        ],
        "summary": "Get hotel inventory",
        "operationId": "getInventoryStatistics",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where inventory statistics are searched.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "dateRangeEnd",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "DetailedAvailabiltySummary",
              "RoomCalendarStatistics",
              "SellLimitSummary",
              "RoomsAvailabilitySummary"
            ],
            "type": "string",
            "description": "Identifies the type of statistics collected. Each ReportCode corresponds to a set of category summaries based upon a predetermined agreement.",
            "name": "reportCode",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "dateRangeStart",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "CancelledYN",
                "Channel",
                "DeductRoomsYN",
                "GroupBy",
                "HouseArrPersonsYN",
                "HouseArrRoomsYN",
                "HouseAvailPercYN",
                "HouseAvailRoomsExcludingOverbookingYN",
                "HouseAvailRoomsYN",
                "HouseAvailTenPercYN",
                "HouseBlkDeductNpuYN",
                "HouseBlkDeductPuYN",
                "HouseBlkTentNpuYN",
                "HouseBlkTentPuYN",
                "HouseDayUsePersonYN",
                "HouseDayUseRoomYN",
                "HouseDepPersonsYN",
                "HouseDepRoomsYN",
                "HouseInventoryRoomsYN",
                "HouseMaxAvailabilityExcludingOverbookingYN",
                "HouseMaxAvailabilityYN",
                "HouseMaxOccupancyYN",
                "HouseMinAvailabilityExcludingOverbookingYN",
                "HouseMinAvailabilityYN",
                "HouseOccPercYN",
                "HouseOccTenPercYN",
                "HouseOccupancyYN",
                "HouseOOOYN",
                "HouseOOSRoomsYN",
                "HouseOverBookingYN",
                "HousePeopleInHouseYN",
                "HousePhysicalRoomsYN",
                "HouseRoomsSoldYN",
                "HouseSellLimitYN",
                "HouseTentRoomsExcludingOverbookingYN",
                "HouseTentRoomsSoldYN",
                "HouseTentRoomsYN",
                "NonOwnerExclusiveYN",
                "OutOfOrderRoomsYN",
                "OwnerExclusiveYN",
                "RestrictionsYN",
                "RoomArrPersonsYN",
                "RoomArrRoomsYN",
                "RoomAvailRoomsExcludingOverbookingYN",
                "RoomAvailRoomsYN",
                "RoomBlkDeductNpuYN",
                "RoomBlkDeductPuYN",
                "RoomBlkTentNpuYN",
                "RoomBlkTentPuYN",
                "RoomCancelledYN",
                "RoomClassList",
                "RoomDayUsePersonYN",
                "RoomDayUseRoomYN",
                "RoomDepPersonsYN",
                "RoomDepRoomsYN",
                "RoomInventoryRoomsYN",
                "RoomMaxAvailabilityExcludingOverbookingYN",
                "RoomMaxAvailabilityYN",
                "RoomMaxOccupancyYN",
                "RoomMinAvailabilityExcludingOverbookingYN",
                "RoomMinAvailabilityYN",
                "RoomOccupancyYN",
                "RoomOOOYN",
                "RoomOOSRoomsYN",
                "RoomOverBookingYN",
                "RoomPeopleInHouseYN",
                "RoomPhysicalRoomsYN",
                "RoomRestrictionsYN",
                "RoomRoomsSoldYN",
                "RoomSellLimitYN",
                "RoomTentRoomsExcludingOverbookingYN",
                "RoomTentRoomsYN",
                "RoomTentYN",
                "RoomTypeWildCardList"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Name of the parameter.",
            "name": "parameterName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Value of the parameter.",
            "name": "parameterValue",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the endDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Object that holds the details of inventory Statistics.",
            "schema": {
              "$ref": "#/definitions/inventoryStatistics"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": [
                {
                  "hotelName": "HOTEL1",
                  "reportCode": "RoomsAvailabilitySummary",
                  "statistics": [
                    {
                      "statCategoryCode": "HotelCode",
                      "statCode": "HOTEL1",
                      "statisticDate": [
                        {
                          "statisticDate": "2020-01-25",
                          "weekendDate": false
                        },
                        {
                          "statisticDate": "2020-01-26",
                          "weekendDate": false
                        }
                      ]
                    },
                    {
                      "description": "Component Room - Standard",
                      "statCategoryCode": "HotelRoomCode",
                      "statCode": "CSTND",
                      "statCodeClass": "STDCOMP",
                      "statisticDate": [
                        {
                          "inventory": [
                            {
                              "code": "SequenceId",
                              "value": "1"
                            }
                          ],
                          "statisticDate": "2020-01-25",
                          "weekendDate": false
                        },
                        {
                          "inventory": [
                            {
                              "code": "SequenceId",
                              "value": "1"
                            }
                          ],
                          "statisticDate": "2020-01-26",
                          "weekendDate": false
                        }
                      ]
                    },
                    {
                      "description": "Standard Room",
                      "statCategoryCode": "HotelRoomCode",
                      "statCode": "STD",
                      "statCodeClass": "ALL",
                      "statisticDate": [
                        {
                          "statisticDate": "2020-01-25",
                          "weekendDate": false
                        },
                        {
                          "statisticDate": "2020-01-26",
                          "weekendDate": false
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "204": {
            "description": "InventoryStatistics not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/itemInventory": {
      "get": {
        "description": "This will fetch a hotels Item inventory for a specified date range that you can provided in the request. <p><strong>OperationId:</strong>getItemInventory</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Inventory"
        ],
        "summary": "Get item inventory",
        "operationId": "getItemInventory",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where item inventory is searched.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "string",
            "description": "End Time of the Time window.",
            "name": "endTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Start Time of the Time window.",
            "name": "startTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Item Class to filter the Items/Item Pools in the response.",
            "name": "itemClass",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "itemPool",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "itemCode",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Define the default duration in days when booking the item.",
            "name": "defaultDuration",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true indicates that item has fixed charge when it is attached to a reservation.",
            "name": "fixedCharge",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true indicates that item could be held outside of the reservation stay days.",
            "name": "outsideStay",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true indicates that item is required for the reservation.",
            "name": "requiredForBooking",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true indicates that item can be sold in event.",
            "name": "sellInEvent",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true indicates that item can be sold in reservation.",
            "name": "sellInReservation",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true indicates that item is allowed to sell separately.",
            "name": "sellSeparate",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When set to true will only return items that are Welcome Offer Eligible.",
            "name": "welcomeOffer",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the endDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Return object to the request for information regarding items inventory/availability.",
            "schema": {
              "$ref": "#/definitions/itemInventory"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ItemInventory not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/itemInventoryHold": {
      "get": {
        "description": "Fetch item inventory that is currently being held. <p><strong>OperationId:</strong>getHoldItemsInventory</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Inventory"
        ],
        "summary": "Get items inventory that are held",
        "operationId": "getHoldItemsInventory",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where items inventory is held.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "ID of an Hold Item",
            "name": "itemHoldId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the endDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to fetch the item hold details.",
            "schema": {
              "$ref": "#/definitions/holdItemsInventory"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "HoldItemsInventory not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "You can update item inventory that is being held using this API. <p><strong>OperationId:</strong>putHoldItemsInventory</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Inventory"
        ],
        "summary": "update items inventory that are held",
        "operationId": "putHoldItemsInventory",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where items inventory that are held is updated.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to change the item hold details",
            "name": "holdItemInventory",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/holdItemInventory"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the endDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/holdItemInventory"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to hold Item Inventory. <p><strong>OperationId:</strong>postHoldItemInventory</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Inventory"
        ],
        "summary": "Hold item inventory",
        "operationId": "postHoldItemInventory",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where item inventory is held.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for holding an items inventory/availability.",
            "name": "holdItemInventory",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/holdItemInventory"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the endDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/sellLimits": {
      "put": {
        "description": "You can use this API to create sell limits in OPERA by date. <p><strong>OperationId:</strong>changeSellLimitByDate</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Inventory"
        ],
        "summary": "Set sell limits by date",
        "operationId": "changeSellLimitByDate",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where sell limit are created by date.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "A Request message that sets sell limit for a particular date for all the levels House, room type and room class. The request can contain the number type in which the sell limits is to be fetched for the different levels.",
            "name": "sellLimit",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/sellLimit"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the endDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/sellLimitResponse"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/sellLimitsByDateRange": {
      "put": {
        "description": "You can use this API to create sell limits in OPERA by date range. <p><strong>OperationId:</strong>changeSellLimitByDateRange</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Inventory"
        ],
        "summary": "Set sell limits by date range",
        "operationId": "changeSellLimitByDateRange",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel where sell limits are created by date range.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Contains the sell limits for a given date range to be set.",
            "name": "sellLimitByRange",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/sellLimitByRange"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the endDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/sellLimitByDateResponse"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/releasedItemInventory": {
      "put": {
        "description": "This API will release item inventory that has been held. <p><strong>OperationId:</strong>putItemInventoryHold</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Inventory"
        ],
        "summary": "Release item inventory held",
        "operationId": "putItemInventoryHold",
        "parameters": [
          {
            "description": "Request object for releasing a held item inventory/availability.",
            "name": "releaseItemInventoryHold",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/releaseItemInventoryHold"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the endDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/releasedItemInventoryHeld"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    }
  },
  "definitions": {
    "blockClassificationType": {
      "description": "Simple type for block instructions to be used in requests for fetching blocks. Valid status values are MASTER_BLOCK, MASTER_TOUR, FIT_MASTER, MASTER_ALLOCATION, MASTER_ITINERARY, LEAD_MASTER, REGULAR_BOOKING, SUB_BLOCK, SUB_TOUR, FIT_CONTRACT, SUB_ALLOCATION, SUB_ITINERARY, LEAD.",
      "type": "string",
      "enum": [
        "MasterBlock",
        "MasterTour",
        "MasterAllocation",
        "MasterItinerary",
        "LeadMaster",
        "RegularBooking",
        "SubBlock",
        "SubTour",
        "FitContract",
        "SubAllocation",
        "SubItinerary",
        "Lead",
        "FitMaster",
        "Opportunity"
      ]
    },
    "blockDetailStatisticType": {
      "description": "Information and statistic summary for a particular block.",
      "type": "object",
      "properties": {
        "blockInformation": {
          "description": "Contains information like Block Name, Account Name, Average Room Rate of the block.",
          "$ref": "#/definitions/blockInfoType"
        },
        "blockStatistics": {
          "description": "Statistic summary for the block.",
          "$ref": "#/definitions/blockStatusStatisticsType"
        }
      }
    },
    "blockDetailStatisticsType": {
      "description": "Compose of block information and statistic summary for a particular block.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockDetailStatisticType"
      }
    },
    "blockInfoType": {
      "description": "Contains information of the business block .",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The unique identifier of the Account Name.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountName": {
          "description": "Account name attached to the business block.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "averageRoomRate": {
          "description": "Average room rate of the business block.",
          "type": "number"
        },
        "blockClassification": {
          "description": "Indicate Block Classification.",
          "$ref": "#/definitions/blockClassificationType"
        },
        "blockCode": {
          "description": "Block code for the block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "blockId": {
          "description": "The unique identifier of the business block.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "blockName": {
          "description": "Name of the business block.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "blockStatus": {
          "description": "Code and Description used to define a status e.g. (INT, TENT, DEF, CXL) (initial, tentative, definite, cancelled).",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "blockStatusColor": {
          "description": "Color from block status configuration.",
          "$ref": "#/definitions/statusColorType"
        },
        "contactId": {
          "description": "The unique identifier of the Contact Name.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "contactName": {
          "description": "Contact name attached to the business block.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "conversionCode": {
          "description": "Indicates the likelihood of the block moving to the next active block status.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "Currency Code attached to the business block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cutOffDate": {
          "description": "Date after which unused block rooms should be returned to house.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "End date for this block.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "guaranteeCode": {
          "description": "Guarantee Code for the block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "The hotel code of the business block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nonCompeteDetails": {
          "description": "Indicates the non-competing industry details.",
          "$ref": "#/definitions/blockNonCompeteType"
        },
        "rankingCode": {
          "description": "Indicates the ranking of the block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateProtectionDetails": {
          "description": "Indicates the Rate Protection details for the block.",
          "$ref": "#/definitions/blockRateProtectionType"
        },
        "roomSalesManager": {
          "description": "Room Sales Manager Code and Name attached to the business block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "startDate": {
          "description": "Start date for this block.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "blockInventoryStatistic": {
      "description": "Response object for information regarding Block Inventory Statistics.",
      "type": "object",
      "properties": {
        "blockInventoryStatistics": {
          "description": "List of block inventory statistics that is grouped by statistic date.",
          "type": "object",
          "properties": {
            "allRowsFetched": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "blockInventoryStatistic": {
              "description": "Summary and Detail statistic for block inventory that is group by statistic date.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/blockInventoryStatisticType"
              }
            },
            "limit": {
              "description": "Indicates maximum number of records a Web Service should return.",
              "type": "integer"
            },
            "offset": {
              "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
              "type": "integer"
            },
            "totalPages": {
              "description": "Evaluated total page count based on the requested max fetch count.",
              "type": "integer"
            },
            "totalRows": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "blockInventoryStatisticType": {
      "description": "Summary and Detail statistics for block inventory.",
      "type": "object",
      "properties": {
        "blockDetailStatistics": {
          "description": "Detailed summary statistics for each block.",
          "$ref": "#/definitions/blockDetailStatisticsType"
        },
        "blockSummaryStatistics": {
          "description": "Summary statistic for all blocks.",
          "$ref": "#/definitions/blockSummaryStatisticsType"
        },
        "sellMessages": {
          "description": "Group Rooms Control Sell Messages configured for a particular date range.",
          "$ref": "#/definitions/sellMessagesType"
        }
      }
    },
    "blockNonCompeteType": {
      "description": "Block Non Compete code information.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Indicates the type of Non-Compete. 'All' means all dates are Non-Compete. 'None' specifies Non-Compete is disabled. 'Selected' specifies few dates are Non-Compete.",
          "$ref": "#/definitions/rateProtectionType"
        },
        "industry": {
          "description": "Specifies the Non-Compete Industry.>",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "industryDescription": {
          "description": "Specifies the Non-Compete Industry description.>",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "protectedDates": {
          "description": "Specifies all the Non-Compete dates in the selected date range.",
          "$ref": "#/definitions/datesType"
        }
      }
    },
    "blockRateProtectionType": {
      "description": "Block Rate Protection code information.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Indicates the type of rate protection. 'All' means all dates are rate protected. 'None' specifies no rate protection. 'Selected' specifies few dates are rate protected.",
          "$ref": "#/definitions/rateProtectionType"
        },
        "protectedDates": {
          "description": "Specifies all the Rate protected dates in the selected range.",
          "$ref": "#/definitions/datesType"
        }
      }
    },
    "blockStatusStatisticType": {
      "description": "Contains summary statistic for a block on a particular statistic date.",
      "type": "object",
      "properties": {
        "statisticDate": {
          "description": "Date of the statistic.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "statusSummaryStatistic": {
          "description": "Statistic summary for each status (Blocked, Pickup, Contract).",
          "$ref": "#/definitions/statisticUnitsType"
        }
      }
    },
    "blockStatusStatisticsType": {
      "description": "Summary statistics of a block for each date.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockStatusStatisticType"
      }
    },
    "blockSummaryStatisticType": {
      "description": "Statistic units group by status, booking and daily targets.",
      "type": "object",
      "properties": {
        "bookingSummaryStatistic": {
          "description": "List of Statistic Units for Booking types e.g. Sales Allowance, Total House Availability.",
          "$ref": "#/definitions/statisticUnitsType"
        },
        "dailyTargetsSummaryStatistic": {
          "description": "List of Statistic Units for Daily Targets types e.g. Room Nights, Room Rates, Room Revenue.",
          "$ref": "#/definitions/statisticUnitsType"
        },
        "statisticDate": {
          "description": "Date of the block inventory statistic.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "statusSummaryStatistic": {
          "description": "List of Statistic Units for Status Types e.g. Definite, Inquiry, Actual.",
          "$ref": "#/definitions/statusSummaryStatisticType"
        }
      }
    },
    "blockSummaryStatisticsType": {
      "description": "Statistic units group by status, booking and daily targets.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockSummaryStatisticType"
      }
    },
    "codeDescriptionType": {
      "description": "This contains a generic code and description information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "codeType": {
      "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
      "type": "string",
      "maxLength": 20,
      "minLength": 0
    },
    "dailyItemInventoryCountsListType": {
      "description": "Inventory counts for the given date.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dailyItemInventoryCountsType"
      }
    },
    "dailyItemInventoryCountsType": {
      "description": "Inventory counts for the given date.",
      "type": "object",
      "properties": {
        "available": {
          "description": "Available Item count.",
          "type": "integer"
        },
        "date": {
          "description": "Date of the item inventory.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "total": {
          "description": "Total Item count.",
          "type": "integer"
        }
      }
    },
    "datesType": {
      "description": "Specifies a single date.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "format": "date",
        "maxLength": 8
      }
    },
    "errorInstance": {
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "title": "Error Instance Details",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "exceptionDetailType": {
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "title": "Error Detail",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "heldByType": {
      "description": "Type of the entity that is requesting for the item hold.",
      "type": "string",
      "enum": [
        "Event",
        "Reservation",
        "Allotment"
      ]
    },
    "holdItemInfoListType": {
      "description": "Info of an item inventory that is requested for Hold.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/holdItemInfoType"
      }
    },
    "holdItemInfoType": {
      "description": "Information about an item inventory that is requested for hold.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Number of items to hold.",
          "type": "integer"
        },
        "itemCode": {
          "description": "Item Code to hold.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "itemId": {
          "description": "Item ID to hold.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "timeSpan": {
          "description": "Date Range to hold the requested item.",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "holdItemInventory": {
      "description": "Object containing the item hold details.",
      "type": "object",
      "properties": {
        "holdItemInfo": {
          "description": "Item information.",
          "$ref": "#/definitions/holdItemInventoryType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "holdItemInventoryType": {
      "description": "Request parameter for holding an Item Inventory.",
      "type": "object",
      "properties": {
        "heldBy": {
          "description": "Type of the entity that is requesting for the item hold.",
          "$ref": "#/definitions/heldByType"
        },
        "heldById": {
          "description": "Unique ID of the one requesting for the item hold.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "holdItemInfoList": {
          "description": "List of Item Info to hold.",
          "$ref": "#/definitions/holdItemInfoListType"
        },
        "hotelId": {
          "description": "Hotel Code whose Item Inventory is being requested.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "itemHoldId": {
          "description": "Unique ID of the one requesting for the item hold.",
          "type": "number"
        },
        "overrideInventory": {
          "description": "Flag to indicate if inventory check will be overriden.",
          "type": "boolean"
        }
      }
    },
    "holdItemsInventory": {
      "description": "Response object to fetch the item hold details.",
      "type": "object",
      "properties": {
        "itemsInventory": {
          "description": "Collection of Reservations returned/fetched as per the criteria in the fetch request.",
          "$ref": "#/definitions/poolItemInventoryCountsListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelInventory": {
      "description": "A response for Hotel Inventories meeting the search criteria. Returns inventory classified on room type, class and house level for a given property.",
      "type": "object",
      "properties": {
        "hotelInventories": {
          "description": "Refer to Inventory common types document.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hotelInventoryType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelInventoryType": {
      "description": "A collection of Reservation objects and Unique IDs of Reservation.",
      "type": "object",
      "properties": {
        "houseInventory": {
          "description": "Collection of House level Inventory counts for the date ranges.",
          "$ref": "#/definitions/inventoryCountsListType"
        },
        "roomClassInventories": {
          "description": "Collection of Room Class level Inventory counts for the date ranges.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/inventoryLevelCountsListType"
          }
        },
        "roomTypeInventories": {
          "description": "Collection of Room type level Inventory counts for the date ranges.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/inventoryLevelCountsListType"
          }
        }
      }
    },
    "houseSellLimitType": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number"
        },
        "date": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "flatOrPercentage": {
          "type": "string"
        }
      }
    },
    "instanceLink": {
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "type": "object",
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ],
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "inventoryCountsListType": {
      "description": "Collection of Inventory counts for the date ranges.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/inventoryCountsType"
      }
    },
    "inventoryCountsType": {
      "description": "Inventory counts for the given date range.",
      "type": "object",
      "properties": {
        "available": {
          "description": "Indicates whether enough inventory is available or not.",
          "type": "boolean"
        },
        "availableCount": {
          "description": "Available Inventory count.",
          "type": "integer"
        },
        "availableTentativeCount": {
          "description": "Available Tentative Inventory count.",
          "type": "integer"
        },
        "endDate": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "startDate": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "inventoryLevelCountsListType": {
      "description": "Collection of Inventory counts for the date ranges.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Inventory Group/Level code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inventoryCounts": {
          "description": "Collection of Inventory counts for the date ranges.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/inventoryCountsType"
          }
        },
        "sequence": {
          "description": "Integer Group/Level order sequence number.",
          "type": "integer"
        }
      }
    },
    "inventoryStatistics": {
      "description": "List of inventory statistics that is grouped by statistic date.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/statisticType"
      }
    },
    "itemInventory": {
      "description": "Return object to the request for information regarding items inventory/availability.",
      "type": "object",
      "properties": {
        "itemsInventory": {
          "description": "Collection of Reservations returned/fetched as per the criteria in the fetch request.",
          "$ref": "#/definitions/poolItemInventoryCountsListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "itemInventoryCountsListType": {
      "description": "Provides item's brief information and a collection of Inventory counts for the given dates for the item.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/itemInventoryCountsType"
      }
    },
    "itemInventoryCountsType": {
      "description": "Basic information regarding an Item.",
      "type": "object",
      "properties": {
        "availabilityPeriod": {
          "description": "Defines a Time period when the item is available.",
          "$ref": "#/definitions/timeWindowType"
        },
        "code": {
          "description": "Item Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "defaultDuration": {
          "description": "Define the default duration in days when booking the item.",
          "type": "integer"
        },
        "description": {
          "description": "Detail description of an item.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fixedCharge": {
          "description": "If true indicates that item has fixed charge when it is attached to a reservation.",
          "type": "boolean"
        },
        "inventories": {
          "description": "Collection of Inventory counts for the given dates.",
          "$ref": "#/definitions/dailyItemInventoryCountsListType"
        },
        "itemHoldId": {
          "description": "ID reference for the hold Item",
          "type": "number"
        },
        "itemPool": {
          "description": "Indicates if it is an item pool. Not applicable for Item within the Item Pool.",
          "type": "boolean"
        },
        "name": {
          "description": "Name of an item.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "outsideStay": {
          "description": "If true indicates that item could be held outside of the reservation stay days.",
          "type": "boolean"
        },
        "quantity": {
          "description": "Quantity of hold Item",
          "type": "integer"
        },
        "requiredForBooking": {
          "description": "If true indicates that item is required for the reservation.",
          "type": "boolean"
        },
        "sellInEvent": {
          "description": "If true indicates that item can be sold in event.",
          "type": "boolean"
        },
        "sellInReservation": {
          "description": "If true indicates that item can be sold in reservation.",
          "type": "boolean"
        },
        "sellSeparate": {
          "description": "If true indicates that item is allowed to sell separately.",
          "type": "boolean"
        },
        "timeSpan": {
          "description": "Date Range to get the inventories of the items.",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "numericCategorySummaryType": {
      "description": "This element has count data for each count category such as number of guests, rooms occupied, etc.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The representation of a numeric category such as Guests : Number of guests, RoomsOcc : Rooms occupied.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "value": {
          "description": "The total count for the category in NumericCategoryCode.",
          "type": "number"
        }
      }
    },
    "operaVersionNumberType": {
      "description": "Current Opera Version Number",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "poolItemInventoryCountsListType": {
      "description": "Items/Item pool with brief information and its Inventory counts for the given dates.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/poolItemInventoryCountsType"
      }
    },
    "poolItemInventoryCountsType": {
      "description": "Basic information regarding an Item.",
      "type": "object",
      "properties": {
        "availabilityPeriod": {
          "description": "Defines a Time period when the item is available.",
          "$ref": "#/definitions/timeWindowType"
        },
        "code": {
          "description": "Item Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "defaultDuration": {
          "description": "Define the default duration in days when booking the item.",
          "type": "integer"
        },
        "description": {
          "description": "Detail description of an item.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fixedCharge": {
          "description": "If true indicates that item has fixed charge when it is attached to a reservation.",
          "type": "boolean"
        },
        "inventories": {
          "description": "Collection of Inventory counts for the given dates.",
          "$ref": "#/definitions/dailyItemInventoryCountsListType"
        },
        "itemHoldId": {
          "description": "ID reference for the hold Item",
          "type": "number"
        },
        "itemPool": {
          "description": "Indicates if it is an item pool. Not applicable for Item within the Item Pool.",
          "type": "boolean"
        },
        "name": {
          "description": "Name of an item.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "outsideStay": {
          "description": "If true indicates that item could be held outside of the reservation stay days.",
          "type": "boolean"
        },
        "poolItems": {
          "description": "Collection of items in the pool with brief information and its Inventory counts for the given dates. It element is populated when the parent item is a pull(when ItemPool is true.). ItemPool flag for this item, which is an item in the pool, cannot not be true.",
          "$ref": "#/definitions/itemInventoryCountsListType"
        },
        "quantity": {
          "description": "Quantity of hold Item",
          "type": "integer"
        },
        "requiredForBooking": {
          "description": "If true indicates that item is required for the reservation.",
          "type": "boolean"
        },
        "sellInEvent": {
          "description": "If true indicates that item can be sold in event.",
          "type": "boolean"
        },
        "sellInReservation": {
          "description": "If true indicates that item can be sold in reservation.",
          "type": "boolean"
        },
        "sellSeparate": {
          "description": "If true indicates that item is allowed to sell separately.",
          "type": "boolean"
        },
        "timeSpan": {
          "description": "Date Range to get the inventories of the items.",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "propertyStatisticUnitType": {
      "description": "Unit type to hold statistic code and value pair e.g. [resort - value] [BHOTEL - 20] [MHOTEL - 30] and its sub units per property wise",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Unique ID of the hotel.",
          "type": "string"
        },
        "value": {
          "description": "Value of the statistic unit.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "rateProtectionType": {
      "description": "Simple type for specifying the block protection type.",
      "type": "string",
      "enum": [
        "All",
        "Selected",
        "None"
      ]
    },
    "releaseItemInventoryHold": {
      "description": "Request object for releasing a held item inventory/availability.",
      "type": "object",
      "properties": {
        "heldBy": {
          "description": "Type of the entity that is requesting for the item hold.",
          "$ref": "#/definitions/heldByType"
        },
        "heldById": {
          "description": "ID of the one holding the item to be released.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Hotel Code of the holding item to be released.",
          "$ref": "#/definitions/codeType"
        },
        "itemCode": {
          "description": "Item Code to be released.",
          "$ref": "#/definitions/codeType"
        },
        "itemHoldId": {
          "description": "ID reference for the one who hold the item. Used for releasing/reserving the item afterwards.",
          "type": "number"
        },
        "itemId": {
          "description": "ID of the item to be released. Passing null releases all held items by the passed holder.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "releaseItemsInventoryHoldInfo": {
          "description": "Information for releasing an Items Inventory hold.",
          "$ref": "#/definitions/releaseItemsInventoryHoldType"
        },
        "reserveDates": {
          "description": "Dates when item was reserved.",
          "$ref": "#/definitions/timeSpanType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "releaseItemInventoryHoldType": {
      "description": "Item information for releasing an Item Inventory hold.",
      "type": "object",
      "properties": {
        "heldBy": {
          "description": "Type of the entity that is requesting for the item hold.",
          "$ref": "#/definitions/heldByType"
        },
        "heldById": {
          "description": "ID of the one holding the item to be released.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Hotel Code of the holding item to be released.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "itemCode": {
          "description": "Item Code to be released.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "itemHoldId": {
          "description": "ID reference for the one who hold the item. Used for releasing/reserving the item afterwards.",
          "type": "number"
        },
        "itemId": {
          "description": "ID of the item to be released. Passing null releases all held items by the passed holder.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reserveDates": {
          "description": "Dates when item was reserved.",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "releaseItemsInventoryHoldType": {
      "description": "Collection of items for releasing an Items Inventory hold.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/releaseItemInventoryHoldType"
      }
    },
    "releasedItemInventoryHeld": {
      "description": "Response object for releasing item inventory hold.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "revenueCategorySummaryType": {
      "description": "This element has revenue amount data for its revenue category such as Room Revenue, Food and Beverage Revenue.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "code": {
          "description": "The representation of a revenue category.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        }
      }
    },
    "roomClassSellLimitType": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number"
        },
        "date": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "flatOrPercentage": {
          "type": "string"
        },
        "roomClass": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "roomCodeCategoryType": {
      "description": "Used for Room code type. eg. Code=\"RoomType\" or \"RoomClass\"",
      "type": "string",
      "enum": [
        "RoomType",
        "RoomClass"
      ]
    },
    "roomTypeSellLimitType": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number"
        },
        "date": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "flatOrPercentage": {
          "type": "string"
        },
        "roomType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "sellLimit": {
      "description": "A Request message that sets sell limit for a particular date for all the levels House, room type and room class. The request can contain the number type in which the sell limits is to be fetched for the different levels.",
      "type": "object",
      "properties": {
        "sellLimitsByDate": {
          "description": "Contains the sell limits that are being updated (Updates can be at House level, Room Class or Room Type levels).",
          "$ref": "#/definitions/sellLimitByDateType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "sellLimitByDateRangeType": {
      "description": "This type is used by sell limit request for date ranges.",
      "type": "object",
      "properties": {
        "codeCategory": {
          "$ref": "#/definitions/roomCodeCategoryType"
        },
        "codeValue": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sellLimitDateRanges": {
          "description": "Collection of date ranges and sell limit amount.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/sellLimitDateRangeType"
          }
        }
      }
    },
    "sellLimitByDateResponse": {
      "description": "A Response object for setting sell limit by date range.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "sellLimitByDateType": {
      "description": "This type is used by sell limit request.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Resort context.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "houseSellLimits": {
          "description": "Collection of House level sell limit by the date.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/houseSellLimitType"
          }
        },
        "roomClassSellLimits": {
          "description": "Collection of Room Class level sell limit by the date.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomClassSellLimitType"
          }
        },
        "roomTypeSellLimits": {
          "description": "Collection of Room type level sell limit by the date.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomTypeSellLimitType"
          }
        }
      }
    },
    "sellLimitByRange": {
      "description": "A Request message that sets sell limit for collection of date ranges for either of the levels House, room type or room class. You can specify the days of the week, number type group and the date range as part of the request.",
      "type": "object",
      "properties": {
        "sellLimitsByDateRange": {
          "description": "Contains the sell limits for a given date range to be set.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/sellLimitByDateRangeType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "sellLimitDateRangeType": {
      "type": "object",
      "properties": {
        "actionType": {
          "description": "It indicates the call is to update Available Rooms, Sell Limit or Sell Control Rooms.",
          "type": "string"
        },
        "amount": {
          "type": "number"
        },
        "endDate": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "flatOrPercentage": {
          "type": "string"
        },
        "friday": {
          "type": "boolean"
        },
        "monday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        },
        "startDate": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "sunday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        }
      }
    },
    "sellLimitResponse": {
      "description": "A Response object for setting sell limit by date.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "sellMessageType": {
      "description": "The SellMessagesType defines the standard attributes that will be retrieved with the sell message.",
      "type": "object",
      "properties": {
        "beginDate": {
          "description": "This is the Begin date for the configured SellMessage.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "chainCode": {
          "description": "This is the chain code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "croCode": {
          "description": "This is the Central Reservation office code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "This is the hotel code or resort.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "languageCode": {
          "description": "This is the language code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "message": {
          "description": "This is the message text.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "This represents the rate plan code of the room type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "This represents the room type code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "stickyFlagYn": {
          "description": "Flag which tells if this message is Sticky (Y/N).",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "usedInModule": {
          "description": "This represents the correct moduletype which should be used for fetching SellMessages.",
          "$ref": "#/definitions/usedInModuleType"
        }
      }
    },
    "sellMessagesType": {
      "description": "The SellMessagesType is the list of message and attributes returned by web service.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "sellMessage": {
          "description": "This is the message text.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/sellMessageType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "statisticCodeType": {
      "description": "Defines the codes and corresponding categories for which the data in the other elements has been gathered.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Statistic code description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "statCategoryCode": {
          "description": "Category Code category of StatCode attribute (e.g. Market Segment).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "statCode": {
          "description": "Actual code used by the system to collect the statistics (e.g. CORP, RACK if category is Market Segment).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "statCodeClass": {
          "description": "Class grouping of StatCode attribute.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "statisticDate": {
          "description": "Collection of statistic summary data.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/statisticSetType"
          }
        }
      }
    },
    "statisticSetType": {
      "description": "An instance of a statistic, which is a set containing revenue category and number category summaries.",
      "type": "object",
      "properties": {
        "inventory": {
          "description": "Collection of CountCategorySummary elements. Used if count values reported.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/numericCategorySummaryType"
          }
        },
        "revenue": {
          "description": "Collection of RevenueCategorySummary elements. Used if revenue values reported.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/revenueCategorySummaryType"
          }
        },
        "statisticDate": {
          "description": "Date of the statistic.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "weekendDate": {
          "description": "Determines whether statistic date is a weekend date.",
          "type": "boolean"
        }
      }
    },
    "statisticType": {
      "description": "Defines all details needed to create a statistical report.",
      "type": "object",
      "properties": {
        "description": {
          "description": "This element has revenue amount data for its revenue category such as Room Revenue, Food and Beverage Revenue.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelName": {
          "description": "A text field used to communicate the proper name of the hotel.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "reportCode": {
          "description": "Identifies the type of statistics collected. Each ReportCode corresponds to a set of category summaries based upon a predetermined agreement.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "statistics": {
          "description": "Statistic Codes.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/statisticCodeType"
          }
        }
      }
    },
    "statisticUnitType": {
      "description": "Unit type to hold statistic code and value pair e.g. [code - value] [Definite - 20] [Sales Allowance - 30] and its sub units.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the statistic unit.",
          "type": "string"
        },
        "propertyBookingSummaryStatistics": {
          "description": "Statistic summary for a particular status for a particular property",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/propertyStatisticUnitType"
          }
        },
        "value": {
          "description": "Value of the statistic unit.",
          "type": "string"
        }
      }
    },
    "statisticUnitsType": {
      "description": "Unit type to hold statistic code and value pair.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/statisticUnitType"
      }
    },
    "status": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "statusColorType": {
      "description": "Status code color configuration type.",
      "type": "string",
      "enum": [
        "White",
        "Red",
        "Blue",
        "Cyan",
        "Magenta",
        "Green",
        "Brown",
        "Black",
        "Yellow",
        "Gray"
      ]
    },
    "statusStatisticType": {
      "description": "List of statistic units for a particular status.",
      "type": "object",
      "properties": {
        "statisticUnit": {
          "description": "Unit type to hold statistic code and value pair.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/statisticUnitType"
          }
        },
        "status": {
          "description": "Status type of statistic, e.g. Definite.",
          "type": "string"
        }
      }
    },
    "statusSummaryStatisticType": {
      "description": "Statistic summary for a particular status.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/statusStatisticType"
      }
    },
    "timeSpanType": {
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield endDate date.",
      "type": "object",
      "properties": {
        "duration": {
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "timeWindowType": {
      "description": "Defines a Time period with startDate time and an endDate time.",
      "type": "object",
      "properties": {
        "endTime": {
          "description": "End Time of the Time window.",
          "type": "string"
        },
        "startTime": {
          "description": "Start Time of the Time window.",
          "type": "string"
        }
      }
    },
    "uniqueID_Type": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "usedInModuleType": {
      "description": "Simple type for indicating the module for which user wants to create the SellMessage. Valid module types are Look To Book Sales,Reservations,Blocks,Function Diary and Group Rooms Control.",
      "type": "string",
      "enum": [
        "Blocks",
        "Reservations",
        "FunctionDiary",
        "LookToBookSales",
        "GroupRoomsControl"
      ]
    },
    "warningType": {
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "type": "object",
      "properties": {
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "maxLength": 8,
          "minLength": 1
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "description": "Used in conjunction with the Success element to define a business error.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    }
  },
  "tags": [
    {
      "description": "The Inventory APIs provide the ability to fetch Hotel Room Type Inventory and manage overbooking/sell limits at different levels. It also contains operations to get item inventory for a property.",
      "name": "Inventory"
    },
    {
      "description": "The Inventory Statistics APIs provide the ability to fetch hotels inventory statistics or block inventory statistics for a specified date range provided in the request. It also contains operations to get block inventory statistics for multiple properties.",
      "name": "INVStats"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}